// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("google-gax/build/src/protobuf").protobufMinimal);

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots._google_cloud_monitoring_protos || ($protobuf.roots._google_cloud_monitoring_protos = {});
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.monitoring = (function() {
    
            /**
             * Namespace monitoring.
             * @memberof google
             * @namespace
             */
            var monitoring = {};
    
            monitoring.v3 = (function() {
    
                /**
                 * Namespace v3.
                 * @memberof google.monitoring
                 * @namespace
                 */
                var v3 = {};
    
                v3.AlertPolicy = (function() {
    
                    /**
                     * Properties of an AlertPolicy.
                     * @memberof google.monitoring.v3
                     * @interface IAlertPolicy
                     * @property {string|null} [name] AlertPolicy name
                     * @property {string|null} [displayName] AlertPolicy displayName
                     * @property {google.monitoring.v3.AlertPolicy.IDocumentation|null} [documentation] AlertPolicy documentation
                     * @property {Object.<string,string>|null} [userLabels] AlertPolicy userLabels
                     * @property {Array.<google.monitoring.v3.AlertPolicy.ICondition>|null} [conditions] AlertPolicy conditions
                     * @property {google.monitoring.v3.AlertPolicy.ConditionCombinerType|null} [combiner] AlertPolicy combiner
                     * @property {google.protobuf.IBoolValue|null} [enabled] AlertPolicy enabled
                     * @property {google.rpc.IStatus|null} [validity] AlertPolicy validity
                     * @property {Array.<string>|null} [notificationChannels] AlertPolicy notificationChannels
                     * @property {google.monitoring.v3.IMutationRecord|null} [creationRecord] AlertPolicy creationRecord
                     * @property {google.monitoring.v3.IMutationRecord|null} [mutationRecord] AlertPolicy mutationRecord
                     */
    
                    /**
                     * Constructs a new AlertPolicy.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents an AlertPolicy.
                     * @implements IAlertPolicy
                     * @constructor
                     * @param {google.monitoring.v3.IAlertPolicy=} [properties] Properties to set
                     */
                    function AlertPolicy(properties) {
                        this.userLabels = {};
                        this.conditions = [];
                        this.notificationChannels = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * AlertPolicy name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.AlertPolicy
                     * @instance
                     */
                    AlertPolicy.prototype.name = "";
    
                    /**
                     * AlertPolicy displayName.
                     * @member {string} displayName
                     * @memberof google.monitoring.v3.AlertPolicy
                     * @instance
                     */
                    AlertPolicy.prototype.displayName = "";
    
                    /**
                     * AlertPolicy documentation.
                     * @member {google.monitoring.v3.AlertPolicy.IDocumentation|null|undefined} documentation
                     * @memberof google.monitoring.v3.AlertPolicy
                     * @instance
                     */
                    AlertPolicy.prototype.documentation = null;
    
                    /**
                     * AlertPolicy userLabels.
                     * @member {Object.<string,string>} userLabels
                     * @memberof google.monitoring.v3.AlertPolicy
                     * @instance
                     */
                    AlertPolicy.prototype.userLabels = $util.emptyObject;
    
                    /**
                     * AlertPolicy conditions.
                     * @member {Array.<google.monitoring.v3.AlertPolicy.ICondition>} conditions
                     * @memberof google.monitoring.v3.AlertPolicy
                     * @instance
                     */
                    AlertPolicy.prototype.conditions = $util.emptyArray;
    
                    /**
                     * AlertPolicy combiner.
                     * @member {google.monitoring.v3.AlertPolicy.ConditionCombinerType} combiner
                     * @memberof google.monitoring.v3.AlertPolicy
                     * @instance
                     */
                    AlertPolicy.prototype.combiner = 0;
    
                    /**
                     * AlertPolicy enabled.
                     * @member {google.protobuf.IBoolValue|null|undefined} enabled
                     * @memberof google.monitoring.v3.AlertPolicy
                     * @instance
                     */
                    AlertPolicy.prototype.enabled = null;
    
                    /**
                     * AlertPolicy validity.
                     * @member {google.rpc.IStatus|null|undefined} validity
                     * @memberof google.monitoring.v3.AlertPolicy
                     * @instance
                     */
                    AlertPolicy.prototype.validity = null;
    
                    /**
                     * AlertPolicy notificationChannels.
                     * @member {Array.<string>} notificationChannels
                     * @memberof google.monitoring.v3.AlertPolicy
                     * @instance
                     */
                    AlertPolicy.prototype.notificationChannels = $util.emptyArray;
    
                    /**
                     * AlertPolicy creationRecord.
                     * @member {google.monitoring.v3.IMutationRecord|null|undefined} creationRecord
                     * @memberof google.monitoring.v3.AlertPolicy
                     * @instance
                     */
                    AlertPolicy.prototype.creationRecord = null;
    
                    /**
                     * AlertPolicy mutationRecord.
                     * @member {google.monitoring.v3.IMutationRecord|null|undefined} mutationRecord
                     * @memberof google.monitoring.v3.AlertPolicy
                     * @instance
                     */
                    AlertPolicy.prototype.mutationRecord = null;
    
                    /**
                     * Creates a new AlertPolicy instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.AlertPolicy
                     * @static
                     * @param {google.monitoring.v3.IAlertPolicy=} [properties] Properties to set
                     * @returns {google.monitoring.v3.AlertPolicy} AlertPolicy instance
                     */
                    AlertPolicy.create = function create(properties) {
                        return new AlertPolicy(properties);
                    };
    
                    /**
                     * Encodes the specified AlertPolicy message. Does not implicitly {@link google.monitoring.v3.AlertPolicy.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.AlertPolicy
                     * @static
                     * @param {google.monitoring.v3.IAlertPolicy} message AlertPolicy message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AlertPolicy.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                        if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.displayName);
                        if (message.combiner != null && Object.hasOwnProperty.call(message, "combiner"))
                            writer.uint32(/* id 6, wireType 0 =*/48).int32(message.combiner);
                        if (message.creationRecord != null && Object.hasOwnProperty.call(message, "creationRecord"))
                            $root.google.monitoring.v3.MutationRecord.encode(message.creationRecord, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                        if (message.mutationRecord != null && Object.hasOwnProperty.call(message, "mutationRecord"))
                            $root.google.monitoring.v3.MutationRecord.encode(message.mutationRecord, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                        if (message.conditions != null && message.conditions.length)
                            for (var i = 0; i < message.conditions.length; ++i)
                                $root.google.monitoring.v3.AlertPolicy.Condition.encode(message.conditions[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                        if (message.documentation != null && Object.hasOwnProperty.call(message, "documentation"))
                            $root.google.monitoring.v3.AlertPolicy.Documentation.encode(message.documentation, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                        if (message.notificationChannels != null && message.notificationChannels.length)
                            for (var i = 0; i < message.notificationChannels.length; ++i)
                                writer.uint32(/* id 14, wireType 2 =*/114).string(message.notificationChannels[i]);
                        if (message.userLabels != null && Object.hasOwnProperty.call(message, "userLabels"))
                            for (var keys = Object.keys(message.userLabels), i = 0; i < keys.length; ++i)
                                writer.uint32(/* id 16, wireType 2 =*/130).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.userLabels[keys[i]]).ldelim();
                        if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                            $root.google.protobuf.BoolValue.encode(message.enabled, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                        if (message.validity != null && Object.hasOwnProperty.call(message, "validity"))
                            $root.google.rpc.Status.encode(message.validity, writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified AlertPolicy message, length delimited. Does not implicitly {@link google.monitoring.v3.AlertPolicy.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.AlertPolicy
                     * @static
                     * @param {google.monitoring.v3.IAlertPolicy} message AlertPolicy message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AlertPolicy.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an AlertPolicy message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.AlertPolicy
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.AlertPolicy} AlertPolicy
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AlertPolicy.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.AlertPolicy(), key, value;
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.displayName = reader.string();
                                    break;
                                }
                            case 13: {
                                    message.documentation = $root.google.monitoring.v3.AlertPolicy.Documentation.decode(reader, reader.uint32());
                                    break;
                                }
                            case 16: {
                                    if (message.userLabels === $util.emptyObject)
                                        message.userLabels = {};
                                    var end2 = reader.uint32() + reader.pos;
                                    key = "";
                                    value = "";
                                    while (reader.pos < end2) {
                                        var tag2 = reader.uint32();
                                        switch (tag2 >>> 3) {
                                        case 1:
                                            key = reader.string();
                                            break;
                                        case 2:
                                            value = reader.string();
                                            break;
                                        default:
                                            reader.skipType(tag2 & 7);
                                            break;
                                        }
                                    }
                                    message.userLabels[key] = value;
                                    break;
                                }
                            case 12: {
                                    if (!(message.conditions && message.conditions.length))
                                        message.conditions = [];
                                    message.conditions.push($root.google.monitoring.v3.AlertPolicy.Condition.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 6: {
                                    message.combiner = reader.int32();
                                    break;
                                }
                            case 17: {
                                    message.enabled = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                    break;
                                }
                            case 18: {
                                    message.validity = $root.google.rpc.Status.decode(reader, reader.uint32());
                                    break;
                                }
                            case 14: {
                                    if (!(message.notificationChannels && message.notificationChannels.length))
                                        message.notificationChannels = [];
                                    message.notificationChannels.push(reader.string());
                                    break;
                                }
                            case 10: {
                                    message.creationRecord = $root.google.monitoring.v3.MutationRecord.decode(reader, reader.uint32());
                                    break;
                                }
                            case 11: {
                                    message.mutationRecord = $root.google.monitoring.v3.MutationRecord.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an AlertPolicy message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.AlertPolicy
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.AlertPolicy} AlertPolicy
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AlertPolicy.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an AlertPolicy message.
                     * @function verify
                     * @memberof google.monitoring.v3.AlertPolicy
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    AlertPolicy.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.displayName != null && message.hasOwnProperty("displayName"))
                            if (!$util.isString(message.displayName))
                                return "displayName: string expected";
                        if (message.documentation != null && message.hasOwnProperty("documentation")) {
                            var error = $root.google.monitoring.v3.AlertPolicy.Documentation.verify(message.documentation);
                            if (error)
                                return "documentation." + error;
                        }
                        if (message.userLabels != null && message.hasOwnProperty("userLabels")) {
                            if (!$util.isObject(message.userLabels))
                                return "userLabels: object expected";
                            var key = Object.keys(message.userLabels);
                            for (var i = 0; i < key.length; ++i)
                                if (!$util.isString(message.userLabels[key[i]]))
                                    return "userLabels: string{k:string} expected";
                        }
                        if (message.conditions != null && message.hasOwnProperty("conditions")) {
                            if (!Array.isArray(message.conditions))
                                return "conditions: array expected";
                            for (var i = 0; i < message.conditions.length; ++i) {
                                var error = $root.google.monitoring.v3.AlertPolicy.Condition.verify(message.conditions[i]);
                                if (error)
                                    return "conditions." + error;
                            }
                        }
                        if (message.combiner != null && message.hasOwnProperty("combiner"))
                            switch (message.combiner) {
                            default:
                                return "combiner: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                                break;
                            }
                        if (message.enabled != null && message.hasOwnProperty("enabled")) {
                            var error = $root.google.protobuf.BoolValue.verify(message.enabled);
                            if (error)
                                return "enabled." + error;
                        }
                        if (message.validity != null && message.hasOwnProperty("validity")) {
                            var error = $root.google.rpc.Status.verify(message.validity);
                            if (error)
                                return "validity." + error;
                        }
                        if (message.notificationChannels != null && message.hasOwnProperty("notificationChannels")) {
                            if (!Array.isArray(message.notificationChannels))
                                return "notificationChannels: array expected";
                            for (var i = 0; i < message.notificationChannels.length; ++i)
                                if (!$util.isString(message.notificationChannels[i]))
                                    return "notificationChannels: string[] expected";
                        }
                        if (message.creationRecord != null && message.hasOwnProperty("creationRecord")) {
                            var error = $root.google.monitoring.v3.MutationRecord.verify(message.creationRecord);
                            if (error)
                                return "creationRecord." + error;
                        }
                        if (message.mutationRecord != null && message.hasOwnProperty("mutationRecord")) {
                            var error = $root.google.monitoring.v3.MutationRecord.verify(message.mutationRecord);
                            if (error)
                                return "mutationRecord." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an AlertPolicy message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.AlertPolicy
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.AlertPolicy} AlertPolicy
                     */
                    AlertPolicy.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.AlertPolicy)
                            return object;
                        var message = new $root.google.monitoring.v3.AlertPolicy();
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.displayName != null)
                            message.displayName = String(object.displayName);
                        if (object.documentation != null) {
                            if (typeof object.documentation !== "object")
                                throw TypeError(".google.monitoring.v3.AlertPolicy.documentation: object expected");
                            message.documentation = $root.google.monitoring.v3.AlertPolicy.Documentation.fromObject(object.documentation);
                        }
                        if (object.userLabels) {
                            if (typeof object.userLabels !== "object")
                                throw TypeError(".google.monitoring.v3.AlertPolicy.userLabels: object expected");
                            message.userLabels = {};
                            for (var keys = Object.keys(object.userLabels), i = 0; i < keys.length; ++i)
                                message.userLabels[keys[i]] = String(object.userLabels[keys[i]]);
                        }
                        if (object.conditions) {
                            if (!Array.isArray(object.conditions))
                                throw TypeError(".google.monitoring.v3.AlertPolicy.conditions: array expected");
                            message.conditions = [];
                            for (var i = 0; i < object.conditions.length; ++i) {
                                if (typeof object.conditions[i] !== "object")
                                    throw TypeError(".google.monitoring.v3.AlertPolicy.conditions: object expected");
                                message.conditions[i] = $root.google.monitoring.v3.AlertPolicy.Condition.fromObject(object.conditions[i]);
                            }
                        }
                        switch (object.combiner) {
                        default:
                            if (typeof object.combiner === "number") {
                                message.combiner = object.combiner;
                                break;
                            }
                            break;
                        case "COMBINE_UNSPECIFIED":
                        case 0:
                            message.combiner = 0;
                            break;
                        case "AND":
                        case 1:
                            message.combiner = 1;
                            break;
                        case "OR":
                        case 2:
                            message.combiner = 2;
                            break;
                        case "AND_WITH_MATCHING_RESOURCE":
                        case 3:
                            message.combiner = 3;
                            break;
                        }
                        if (object.enabled != null) {
                            if (typeof object.enabled !== "object")
                                throw TypeError(".google.monitoring.v3.AlertPolicy.enabled: object expected");
                            message.enabled = $root.google.protobuf.BoolValue.fromObject(object.enabled);
                        }
                        if (object.validity != null) {
                            if (typeof object.validity !== "object")
                                throw TypeError(".google.monitoring.v3.AlertPolicy.validity: object expected");
                            message.validity = $root.google.rpc.Status.fromObject(object.validity);
                        }
                        if (object.notificationChannels) {
                            if (!Array.isArray(object.notificationChannels))
                                throw TypeError(".google.monitoring.v3.AlertPolicy.notificationChannels: array expected");
                            message.notificationChannels = [];
                            for (var i = 0; i < object.notificationChannels.length; ++i)
                                message.notificationChannels[i] = String(object.notificationChannels[i]);
                        }
                        if (object.creationRecord != null) {
                            if (typeof object.creationRecord !== "object")
                                throw TypeError(".google.monitoring.v3.AlertPolicy.creationRecord: object expected");
                            message.creationRecord = $root.google.monitoring.v3.MutationRecord.fromObject(object.creationRecord);
                        }
                        if (object.mutationRecord != null) {
                            if (typeof object.mutationRecord !== "object")
                                throw TypeError(".google.monitoring.v3.AlertPolicy.mutationRecord: object expected");
                            message.mutationRecord = $root.google.monitoring.v3.MutationRecord.fromObject(object.mutationRecord);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an AlertPolicy message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.AlertPolicy
                     * @static
                     * @param {google.monitoring.v3.AlertPolicy} message AlertPolicy
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    AlertPolicy.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.conditions = [];
                            object.notificationChannels = [];
                        }
                        if (options.objects || options.defaults)
                            object.userLabels = {};
                        if (options.defaults) {
                            object.name = "";
                            object.displayName = "";
                            object.combiner = options.enums === String ? "COMBINE_UNSPECIFIED" : 0;
                            object.creationRecord = null;
                            object.mutationRecord = null;
                            object.documentation = null;
                            object.enabled = null;
                            object.validity = null;
                        }
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        if (message.displayName != null && message.hasOwnProperty("displayName"))
                            object.displayName = message.displayName;
                        if (message.combiner != null && message.hasOwnProperty("combiner"))
                            object.combiner = options.enums === String ? $root.google.monitoring.v3.AlertPolicy.ConditionCombinerType[message.combiner] === undefined ? message.combiner : $root.google.monitoring.v3.AlertPolicy.ConditionCombinerType[message.combiner] : message.combiner;
                        if (message.creationRecord != null && message.hasOwnProperty("creationRecord"))
                            object.creationRecord = $root.google.monitoring.v3.MutationRecord.toObject(message.creationRecord, options);
                        if (message.mutationRecord != null && message.hasOwnProperty("mutationRecord"))
                            object.mutationRecord = $root.google.monitoring.v3.MutationRecord.toObject(message.mutationRecord, options);
                        if (message.conditions && message.conditions.length) {
                            object.conditions = [];
                            for (var j = 0; j < message.conditions.length; ++j)
                                object.conditions[j] = $root.google.monitoring.v3.AlertPolicy.Condition.toObject(message.conditions[j], options);
                        }
                        if (message.documentation != null && message.hasOwnProperty("documentation"))
                            object.documentation = $root.google.monitoring.v3.AlertPolicy.Documentation.toObject(message.documentation, options);
                        if (message.notificationChannels && message.notificationChannels.length) {
                            object.notificationChannels = [];
                            for (var j = 0; j < message.notificationChannels.length; ++j)
                                object.notificationChannels[j] = message.notificationChannels[j];
                        }
                        var keys2;
                        if (message.userLabels && (keys2 = Object.keys(message.userLabels)).length) {
                            object.userLabels = {};
                            for (var j = 0; j < keys2.length; ++j)
                                object.userLabels[keys2[j]] = message.userLabels[keys2[j]];
                        }
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            object.enabled = $root.google.protobuf.BoolValue.toObject(message.enabled, options);
                        if (message.validity != null && message.hasOwnProperty("validity"))
                            object.validity = $root.google.rpc.Status.toObject(message.validity, options);
                        return object;
                    };
    
                    /**
                     * Converts this AlertPolicy to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.AlertPolicy
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    AlertPolicy.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for AlertPolicy
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.AlertPolicy
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    AlertPolicy.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.AlertPolicy";
                    };
    
                    AlertPolicy.Documentation = (function() {
    
                        /**
                         * Properties of a Documentation.
                         * @memberof google.monitoring.v3.AlertPolicy
                         * @interface IDocumentation
                         * @property {string|null} [content] Documentation content
                         * @property {string|null} [mimeType] Documentation mimeType
                         */
    
                        /**
                         * Constructs a new Documentation.
                         * @memberof google.monitoring.v3.AlertPolicy
                         * @classdesc Represents a Documentation.
                         * @implements IDocumentation
                         * @constructor
                         * @param {google.monitoring.v3.AlertPolicy.IDocumentation=} [properties] Properties to set
                         */
                        function Documentation(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Documentation content.
                         * @member {string} content
                         * @memberof google.monitoring.v3.AlertPolicy.Documentation
                         * @instance
                         */
                        Documentation.prototype.content = "";
    
                        /**
                         * Documentation mimeType.
                         * @member {string} mimeType
                         * @memberof google.monitoring.v3.AlertPolicy.Documentation
                         * @instance
                         */
                        Documentation.prototype.mimeType = "";
    
                        /**
                         * Creates a new Documentation instance using the specified properties.
                         * @function create
                         * @memberof google.monitoring.v3.AlertPolicy.Documentation
                         * @static
                         * @param {google.monitoring.v3.AlertPolicy.IDocumentation=} [properties] Properties to set
                         * @returns {google.monitoring.v3.AlertPolicy.Documentation} Documentation instance
                         */
                        Documentation.create = function create(properties) {
                            return new Documentation(properties);
                        };
    
                        /**
                         * Encodes the specified Documentation message. Does not implicitly {@link google.monitoring.v3.AlertPolicy.Documentation.verify|verify} messages.
                         * @function encode
                         * @memberof google.monitoring.v3.AlertPolicy.Documentation
                         * @static
                         * @param {google.monitoring.v3.AlertPolicy.IDocumentation} message Documentation message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Documentation.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.content != null && Object.hasOwnProperty.call(message, "content"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.content);
                            if (message.mimeType != null && Object.hasOwnProperty.call(message, "mimeType"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.mimeType);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Documentation message, length delimited. Does not implicitly {@link google.monitoring.v3.AlertPolicy.Documentation.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.monitoring.v3.AlertPolicy.Documentation
                         * @static
                         * @param {google.monitoring.v3.AlertPolicy.IDocumentation} message Documentation message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Documentation.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Documentation message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.monitoring.v3.AlertPolicy.Documentation
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.monitoring.v3.AlertPolicy.Documentation} Documentation
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Documentation.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.AlertPolicy.Documentation();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.content = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.mimeType = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Documentation message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.monitoring.v3.AlertPolicy.Documentation
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.monitoring.v3.AlertPolicy.Documentation} Documentation
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Documentation.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Documentation message.
                         * @function verify
                         * @memberof google.monitoring.v3.AlertPolicy.Documentation
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Documentation.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.content != null && message.hasOwnProperty("content"))
                                if (!$util.isString(message.content))
                                    return "content: string expected";
                            if (message.mimeType != null && message.hasOwnProperty("mimeType"))
                                if (!$util.isString(message.mimeType))
                                    return "mimeType: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Documentation message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.monitoring.v3.AlertPolicy.Documentation
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.monitoring.v3.AlertPolicy.Documentation} Documentation
                         */
                        Documentation.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.monitoring.v3.AlertPolicy.Documentation)
                                return object;
                            var message = new $root.google.monitoring.v3.AlertPolicy.Documentation();
                            if (object.content != null)
                                message.content = String(object.content);
                            if (object.mimeType != null)
                                message.mimeType = String(object.mimeType);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Documentation message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.monitoring.v3.AlertPolicy.Documentation
                         * @static
                         * @param {google.monitoring.v3.AlertPolicy.Documentation} message Documentation
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Documentation.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.content = "";
                                object.mimeType = "";
                            }
                            if (message.content != null && message.hasOwnProperty("content"))
                                object.content = message.content;
                            if (message.mimeType != null && message.hasOwnProperty("mimeType"))
                                object.mimeType = message.mimeType;
                            return object;
                        };
    
                        /**
                         * Converts this Documentation to JSON.
                         * @function toJSON
                         * @memberof google.monitoring.v3.AlertPolicy.Documentation
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Documentation.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Documentation
                         * @function getTypeUrl
                         * @memberof google.monitoring.v3.AlertPolicy.Documentation
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Documentation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.monitoring.v3.AlertPolicy.Documentation";
                        };
    
                        return Documentation;
                    })();
    
                    AlertPolicy.Condition = (function() {
    
                        /**
                         * Properties of a Condition.
                         * @memberof google.monitoring.v3.AlertPolicy
                         * @interface ICondition
                         * @property {string|null} [name] Condition name
                         * @property {string|null} [displayName] Condition displayName
                         * @property {google.monitoring.v3.AlertPolicy.Condition.IMetricThreshold|null} [conditionThreshold] Condition conditionThreshold
                         * @property {google.monitoring.v3.AlertPolicy.Condition.IMetricAbsence|null} [conditionAbsent] Condition conditionAbsent
                         * @property {google.monitoring.v3.AlertPolicy.Condition.IMonitoringQueryLanguageCondition|null} [conditionMonitoringQueryLanguage] Condition conditionMonitoringQueryLanguage
                         */
    
                        /**
                         * Constructs a new Condition.
                         * @memberof google.monitoring.v3.AlertPolicy
                         * @classdesc Represents a Condition.
                         * @implements ICondition
                         * @constructor
                         * @param {google.monitoring.v3.AlertPolicy.ICondition=} [properties] Properties to set
                         */
                        function Condition(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Condition name.
                         * @member {string} name
                         * @memberof google.monitoring.v3.AlertPolicy.Condition
                         * @instance
                         */
                        Condition.prototype.name = "";
    
                        /**
                         * Condition displayName.
                         * @member {string} displayName
                         * @memberof google.monitoring.v3.AlertPolicy.Condition
                         * @instance
                         */
                        Condition.prototype.displayName = "";
    
                        /**
                         * Condition conditionThreshold.
                         * @member {google.monitoring.v3.AlertPolicy.Condition.IMetricThreshold|null|undefined} conditionThreshold
                         * @memberof google.monitoring.v3.AlertPolicy.Condition
                         * @instance
                         */
                        Condition.prototype.conditionThreshold = null;
    
                        /**
                         * Condition conditionAbsent.
                         * @member {google.monitoring.v3.AlertPolicy.Condition.IMetricAbsence|null|undefined} conditionAbsent
                         * @memberof google.monitoring.v3.AlertPolicy.Condition
                         * @instance
                         */
                        Condition.prototype.conditionAbsent = null;
    
                        /**
                         * Condition conditionMonitoringQueryLanguage.
                         * @member {google.monitoring.v3.AlertPolicy.Condition.IMonitoringQueryLanguageCondition|null|undefined} conditionMonitoringQueryLanguage
                         * @memberof google.monitoring.v3.AlertPolicy.Condition
                         * @instance
                         */
                        Condition.prototype.conditionMonitoringQueryLanguage = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Condition condition.
                         * @member {"conditionThreshold"|"conditionAbsent"|"conditionMonitoringQueryLanguage"|undefined} condition
                         * @memberof google.monitoring.v3.AlertPolicy.Condition
                         * @instance
                         */
                        Object.defineProperty(Condition.prototype, "condition", {
                            get: $util.oneOfGetter($oneOfFields = ["conditionThreshold", "conditionAbsent", "conditionMonitoringQueryLanguage"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Condition instance using the specified properties.
                         * @function create
                         * @memberof google.monitoring.v3.AlertPolicy.Condition
                         * @static
                         * @param {google.monitoring.v3.AlertPolicy.ICondition=} [properties] Properties to set
                         * @returns {google.monitoring.v3.AlertPolicy.Condition} Condition instance
                         */
                        Condition.create = function create(properties) {
                            return new Condition(properties);
                        };
    
                        /**
                         * Encodes the specified Condition message. Does not implicitly {@link google.monitoring.v3.AlertPolicy.Condition.verify|verify} messages.
                         * @function encode
                         * @memberof google.monitoring.v3.AlertPolicy.Condition
                         * @static
                         * @param {google.monitoring.v3.AlertPolicy.ICondition} message Condition message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Condition.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.conditionThreshold != null && Object.hasOwnProperty.call(message, "conditionThreshold"))
                                $root.google.monitoring.v3.AlertPolicy.Condition.MetricThreshold.encode(message.conditionThreshold, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.conditionAbsent != null && Object.hasOwnProperty.call(message, "conditionAbsent"))
                                $root.google.monitoring.v3.AlertPolicy.Condition.MetricAbsence.encode(message.conditionAbsent, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.displayName);
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 12, wireType 2 =*/98).string(message.name);
                            if (message.conditionMonitoringQueryLanguage != null && Object.hasOwnProperty.call(message, "conditionMonitoringQueryLanguage"))
                                $root.google.monitoring.v3.AlertPolicy.Condition.MonitoringQueryLanguageCondition.encode(message.conditionMonitoringQueryLanguage, writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Condition message, length delimited. Does not implicitly {@link google.monitoring.v3.AlertPolicy.Condition.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.monitoring.v3.AlertPolicy.Condition
                         * @static
                         * @param {google.monitoring.v3.AlertPolicy.ICondition} message Condition message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Condition.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Condition message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.monitoring.v3.AlertPolicy.Condition
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.monitoring.v3.AlertPolicy.Condition} Condition
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Condition.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.AlertPolicy.Condition();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 12: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 1: {
                                        message.conditionThreshold = $root.google.monitoring.v3.AlertPolicy.Condition.MetricThreshold.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.conditionAbsent = $root.google.monitoring.v3.AlertPolicy.Condition.MetricAbsence.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 19: {
                                        message.conditionMonitoringQueryLanguage = $root.google.monitoring.v3.AlertPolicy.Condition.MonitoringQueryLanguageCondition.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Condition message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.monitoring.v3.AlertPolicy.Condition
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.monitoring.v3.AlertPolicy.Condition} Condition
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Condition.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Condition message.
                         * @function verify
                         * @memberof google.monitoring.v3.AlertPolicy.Condition
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Condition.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.conditionThreshold != null && message.hasOwnProperty("conditionThreshold")) {
                                properties.condition = 1;
                                {
                                    var error = $root.google.monitoring.v3.AlertPolicy.Condition.MetricThreshold.verify(message.conditionThreshold);
                                    if (error)
                                        return "conditionThreshold." + error;
                                }
                            }
                            if (message.conditionAbsent != null && message.hasOwnProperty("conditionAbsent")) {
                                if (properties.condition === 1)
                                    return "condition: multiple values";
                                properties.condition = 1;
                                {
                                    var error = $root.google.monitoring.v3.AlertPolicy.Condition.MetricAbsence.verify(message.conditionAbsent);
                                    if (error)
                                        return "conditionAbsent." + error;
                                }
                            }
                            if (message.conditionMonitoringQueryLanguage != null && message.hasOwnProperty("conditionMonitoringQueryLanguage")) {
                                if (properties.condition === 1)
                                    return "condition: multiple values";
                                properties.condition = 1;
                                {
                                    var error = $root.google.monitoring.v3.AlertPolicy.Condition.MonitoringQueryLanguageCondition.verify(message.conditionMonitoringQueryLanguage);
                                    if (error)
                                        return "conditionMonitoringQueryLanguage." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Condition message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.monitoring.v3.AlertPolicy.Condition
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.monitoring.v3.AlertPolicy.Condition} Condition
                         */
                        Condition.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.monitoring.v3.AlertPolicy.Condition)
                                return object;
                            var message = new $root.google.monitoring.v3.AlertPolicy.Condition();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.conditionThreshold != null) {
                                if (typeof object.conditionThreshold !== "object")
                                    throw TypeError(".google.monitoring.v3.AlertPolicy.Condition.conditionThreshold: object expected");
                                message.conditionThreshold = $root.google.monitoring.v3.AlertPolicy.Condition.MetricThreshold.fromObject(object.conditionThreshold);
                            }
                            if (object.conditionAbsent != null) {
                                if (typeof object.conditionAbsent !== "object")
                                    throw TypeError(".google.monitoring.v3.AlertPolicy.Condition.conditionAbsent: object expected");
                                message.conditionAbsent = $root.google.monitoring.v3.AlertPolicy.Condition.MetricAbsence.fromObject(object.conditionAbsent);
                            }
                            if (object.conditionMonitoringQueryLanguage != null) {
                                if (typeof object.conditionMonitoringQueryLanguage !== "object")
                                    throw TypeError(".google.monitoring.v3.AlertPolicy.Condition.conditionMonitoringQueryLanguage: object expected");
                                message.conditionMonitoringQueryLanguage = $root.google.monitoring.v3.AlertPolicy.Condition.MonitoringQueryLanguageCondition.fromObject(object.conditionMonitoringQueryLanguage);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Condition message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.monitoring.v3.AlertPolicy.Condition
                         * @static
                         * @param {google.monitoring.v3.AlertPolicy.Condition} message Condition
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Condition.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.displayName = "";
                                object.name = "";
                            }
                            if (message.conditionThreshold != null && message.hasOwnProperty("conditionThreshold")) {
                                object.conditionThreshold = $root.google.monitoring.v3.AlertPolicy.Condition.MetricThreshold.toObject(message.conditionThreshold, options);
                                if (options.oneofs)
                                    object.condition = "conditionThreshold";
                            }
                            if (message.conditionAbsent != null && message.hasOwnProperty("conditionAbsent")) {
                                object.conditionAbsent = $root.google.monitoring.v3.AlertPolicy.Condition.MetricAbsence.toObject(message.conditionAbsent, options);
                                if (options.oneofs)
                                    object.condition = "conditionAbsent";
                            }
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.conditionMonitoringQueryLanguage != null && message.hasOwnProperty("conditionMonitoringQueryLanguage")) {
                                object.conditionMonitoringQueryLanguage = $root.google.monitoring.v3.AlertPolicy.Condition.MonitoringQueryLanguageCondition.toObject(message.conditionMonitoringQueryLanguage, options);
                                if (options.oneofs)
                                    object.condition = "conditionMonitoringQueryLanguage";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Condition to JSON.
                         * @function toJSON
                         * @memberof google.monitoring.v3.AlertPolicy.Condition
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Condition.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Condition
                         * @function getTypeUrl
                         * @memberof google.monitoring.v3.AlertPolicy.Condition
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Condition.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.monitoring.v3.AlertPolicy.Condition";
                        };
    
                        Condition.Trigger = (function() {
    
                            /**
                             * Properties of a Trigger.
                             * @memberof google.monitoring.v3.AlertPolicy.Condition
                             * @interface ITrigger
                             * @property {number|null} [count] Trigger count
                             * @property {number|null} [percent] Trigger percent
                             */
    
                            /**
                             * Constructs a new Trigger.
                             * @memberof google.monitoring.v3.AlertPolicy.Condition
                             * @classdesc Represents a Trigger.
                             * @implements ITrigger
                             * @constructor
                             * @param {google.monitoring.v3.AlertPolicy.Condition.ITrigger=} [properties] Properties to set
                             */
                            function Trigger(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Trigger count.
                             * @member {number|null|undefined} count
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.Trigger
                             * @instance
                             */
                            Trigger.prototype.count = null;
    
                            /**
                             * Trigger percent.
                             * @member {number|null|undefined} percent
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.Trigger
                             * @instance
                             */
                            Trigger.prototype.percent = null;
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * Trigger type.
                             * @member {"count"|"percent"|undefined} type
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.Trigger
                             * @instance
                             */
                            Object.defineProperty(Trigger.prototype, "type", {
                                get: $util.oneOfGetter($oneOfFields = ["count", "percent"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new Trigger instance using the specified properties.
                             * @function create
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.Trigger
                             * @static
                             * @param {google.monitoring.v3.AlertPolicy.Condition.ITrigger=} [properties] Properties to set
                             * @returns {google.monitoring.v3.AlertPolicy.Condition.Trigger} Trigger instance
                             */
                            Trigger.create = function create(properties) {
                                return new Trigger(properties);
                            };
    
                            /**
                             * Encodes the specified Trigger message. Does not implicitly {@link google.monitoring.v3.AlertPolicy.Condition.Trigger.verify|verify} messages.
                             * @function encode
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.Trigger
                             * @static
                             * @param {google.monitoring.v3.AlertPolicy.Condition.ITrigger} message Trigger message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Trigger.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.count != null && Object.hasOwnProperty.call(message, "count"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.count);
                                if (message.percent != null && Object.hasOwnProperty.call(message, "percent"))
                                    writer.uint32(/* id 2, wireType 1 =*/17).double(message.percent);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Trigger message, length delimited. Does not implicitly {@link google.monitoring.v3.AlertPolicy.Condition.Trigger.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.Trigger
                             * @static
                             * @param {google.monitoring.v3.AlertPolicy.Condition.ITrigger} message Trigger message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Trigger.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Trigger message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.Trigger
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.monitoring.v3.AlertPolicy.Condition.Trigger} Trigger
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Trigger.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.AlertPolicy.Condition.Trigger();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.count = reader.int32();
                                            break;
                                        }
                                    case 2: {
                                            message.percent = reader.double();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Trigger message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.Trigger
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.monitoring.v3.AlertPolicy.Condition.Trigger} Trigger
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Trigger.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Trigger message.
                             * @function verify
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.Trigger
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Trigger.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.count != null && message.hasOwnProperty("count")) {
                                    properties.type = 1;
                                    if (!$util.isInteger(message.count))
                                        return "count: integer expected";
                                }
                                if (message.percent != null && message.hasOwnProperty("percent")) {
                                    if (properties.type === 1)
                                        return "type: multiple values";
                                    properties.type = 1;
                                    if (typeof message.percent !== "number")
                                        return "percent: number expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a Trigger message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.Trigger
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.monitoring.v3.AlertPolicy.Condition.Trigger} Trigger
                             */
                            Trigger.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.monitoring.v3.AlertPolicy.Condition.Trigger)
                                    return object;
                                var message = new $root.google.monitoring.v3.AlertPolicy.Condition.Trigger();
                                if (object.count != null)
                                    message.count = object.count | 0;
                                if (object.percent != null)
                                    message.percent = Number(object.percent);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Trigger message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.Trigger
                             * @static
                             * @param {google.monitoring.v3.AlertPolicy.Condition.Trigger} message Trigger
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Trigger.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (message.count != null && message.hasOwnProperty("count")) {
                                    object.count = message.count;
                                    if (options.oneofs)
                                        object.type = "count";
                                }
                                if (message.percent != null && message.hasOwnProperty("percent")) {
                                    object.percent = options.json && !isFinite(message.percent) ? String(message.percent) : message.percent;
                                    if (options.oneofs)
                                        object.type = "percent";
                                }
                                return object;
                            };
    
                            /**
                             * Converts this Trigger to JSON.
                             * @function toJSON
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.Trigger
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Trigger.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Trigger
                             * @function getTypeUrl
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.Trigger
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Trigger.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.monitoring.v3.AlertPolicy.Condition.Trigger";
                            };
    
                            return Trigger;
                        })();
    
                        Condition.MetricThreshold = (function() {
    
                            /**
                             * Properties of a MetricThreshold.
                             * @memberof google.monitoring.v3.AlertPolicy.Condition
                             * @interface IMetricThreshold
                             * @property {string|null} [filter] MetricThreshold filter
                             * @property {Array.<google.monitoring.v3.IAggregation>|null} [aggregations] MetricThreshold aggregations
                             * @property {string|null} [denominatorFilter] MetricThreshold denominatorFilter
                             * @property {Array.<google.monitoring.v3.IAggregation>|null} [denominatorAggregations] MetricThreshold denominatorAggregations
                             * @property {google.monitoring.v3.ComparisonType|null} [comparison] MetricThreshold comparison
                             * @property {number|null} [thresholdValue] MetricThreshold thresholdValue
                             * @property {google.protobuf.IDuration|null} [duration] MetricThreshold duration
                             * @property {google.monitoring.v3.AlertPolicy.Condition.ITrigger|null} [trigger] MetricThreshold trigger
                             */
    
                            /**
                             * Constructs a new MetricThreshold.
                             * @memberof google.monitoring.v3.AlertPolicy.Condition
                             * @classdesc Represents a MetricThreshold.
                             * @implements IMetricThreshold
                             * @constructor
                             * @param {google.monitoring.v3.AlertPolicy.Condition.IMetricThreshold=} [properties] Properties to set
                             */
                            function MetricThreshold(properties) {
                                this.aggregations = [];
                                this.denominatorAggregations = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * MetricThreshold filter.
                             * @member {string} filter
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MetricThreshold
                             * @instance
                             */
                            MetricThreshold.prototype.filter = "";
    
                            /**
                             * MetricThreshold aggregations.
                             * @member {Array.<google.monitoring.v3.IAggregation>} aggregations
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MetricThreshold
                             * @instance
                             */
                            MetricThreshold.prototype.aggregations = $util.emptyArray;
    
                            /**
                             * MetricThreshold denominatorFilter.
                             * @member {string} denominatorFilter
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MetricThreshold
                             * @instance
                             */
                            MetricThreshold.prototype.denominatorFilter = "";
    
                            /**
                             * MetricThreshold denominatorAggregations.
                             * @member {Array.<google.monitoring.v3.IAggregation>} denominatorAggregations
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MetricThreshold
                             * @instance
                             */
                            MetricThreshold.prototype.denominatorAggregations = $util.emptyArray;
    
                            /**
                             * MetricThreshold comparison.
                             * @member {google.monitoring.v3.ComparisonType} comparison
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MetricThreshold
                             * @instance
                             */
                            MetricThreshold.prototype.comparison = 0;
    
                            /**
                             * MetricThreshold thresholdValue.
                             * @member {number} thresholdValue
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MetricThreshold
                             * @instance
                             */
                            MetricThreshold.prototype.thresholdValue = 0;
    
                            /**
                             * MetricThreshold duration.
                             * @member {google.protobuf.IDuration|null|undefined} duration
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MetricThreshold
                             * @instance
                             */
                            MetricThreshold.prototype.duration = null;
    
                            /**
                             * MetricThreshold trigger.
                             * @member {google.monitoring.v3.AlertPolicy.Condition.ITrigger|null|undefined} trigger
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MetricThreshold
                             * @instance
                             */
                            MetricThreshold.prototype.trigger = null;
    
                            /**
                             * Creates a new MetricThreshold instance using the specified properties.
                             * @function create
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MetricThreshold
                             * @static
                             * @param {google.monitoring.v3.AlertPolicy.Condition.IMetricThreshold=} [properties] Properties to set
                             * @returns {google.monitoring.v3.AlertPolicy.Condition.MetricThreshold} MetricThreshold instance
                             */
                            MetricThreshold.create = function create(properties) {
                                return new MetricThreshold(properties);
                            };
    
                            /**
                             * Encodes the specified MetricThreshold message. Does not implicitly {@link google.monitoring.v3.AlertPolicy.Condition.MetricThreshold.verify|verify} messages.
                             * @function encode
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MetricThreshold
                             * @static
                             * @param {google.monitoring.v3.AlertPolicy.Condition.IMetricThreshold} message MetricThreshold message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MetricThreshold.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.filter);
                                if (message.comparison != null && Object.hasOwnProperty.call(message, "comparison"))
                                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.comparison);
                                if (message.thresholdValue != null && Object.hasOwnProperty.call(message, "thresholdValue"))
                                    writer.uint32(/* id 5, wireType 1 =*/41).double(message.thresholdValue);
                                if (message.duration != null && Object.hasOwnProperty.call(message, "duration"))
                                    $root.google.protobuf.Duration.encode(message.duration, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                                if (message.trigger != null && Object.hasOwnProperty.call(message, "trigger"))
                                    $root.google.monitoring.v3.AlertPolicy.Condition.Trigger.encode(message.trigger, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                                if (message.aggregations != null && message.aggregations.length)
                                    for (var i = 0; i < message.aggregations.length; ++i)
                                        $root.google.monitoring.v3.Aggregation.encode(message.aggregations[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                                if (message.denominatorFilter != null && Object.hasOwnProperty.call(message, "denominatorFilter"))
                                    writer.uint32(/* id 9, wireType 2 =*/74).string(message.denominatorFilter);
                                if (message.denominatorAggregations != null && message.denominatorAggregations.length)
                                    for (var i = 0; i < message.denominatorAggregations.length; ++i)
                                        $root.google.monitoring.v3.Aggregation.encode(message.denominatorAggregations[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified MetricThreshold message, length delimited. Does not implicitly {@link google.monitoring.v3.AlertPolicy.Condition.MetricThreshold.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MetricThreshold
                             * @static
                             * @param {google.monitoring.v3.AlertPolicy.Condition.IMetricThreshold} message MetricThreshold message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MetricThreshold.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a MetricThreshold message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MetricThreshold
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.monitoring.v3.AlertPolicy.Condition.MetricThreshold} MetricThreshold
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MetricThreshold.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.AlertPolicy.Condition.MetricThreshold();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 2: {
                                            message.filter = reader.string();
                                            break;
                                        }
                                    case 8: {
                                            if (!(message.aggregations && message.aggregations.length))
                                                message.aggregations = [];
                                            message.aggregations.push($root.google.monitoring.v3.Aggregation.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 9: {
                                            message.denominatorFilter = reader.string();
                                            break;
                                        }
                                    case 10: {
                                            if (!(message.denominatorAggregations && message.denominatorAggregations.length))
                                                message.denominatorAggregations = [];
                                            message.denominatorAggregations.push($root.google.monitoring.v3.Aggregation.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 4: {
                                            message.comparison = reader.int32();
                                            break;
                                        }
                                    case 5: {
                                            message.thresholdValue = reader.double();
                                            break;
                                        }
                                    case 6: {
                                            message.duration = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 7: {
                                            message.trigger = $root.google.monitoring.v3.AlertPolicy.Condition.Trigger.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a MetricThreshold message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MetricThreshold
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.monitoring.v3.AlertPolicy.Condition.MetricThreshold} MetricThreshold
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MetricThreshold.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a MetricThreshold message.
                             * @function verify
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MetricThreshold
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            MetricThreshold.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.filter != null && message.hasOwnProperty("filter"))
                                    if (!$util.isString(message.filter))
                                        return "filter: string expected";
                                if (message.aggregations != null && message.hasOwnProperty("aggregations")) {
                                    if (!Array.isArray(message.aggregations))
                                        return "aggregations: array expected";
                                    for (var i = 0; i < message.aggregations.length; ++i) {
                                        var error = $root.google.monitoring.v3.Aggregation.verify(message.aggregations[i]);
                                        if (error)
                                            return "aggregations." + error;
                                    }
                                }
                                if (message.denominatorFilter != null && message.hasOwnProperty("denominatorFilter"))
                                    if (!$util.isString(message.denominatorFilter))
                                        return "denominatorFilter: string expected";
                                if (message.denominatorAggregations != null && message.hasOwnProperty("denominatorAggregations")) {
                                    if (!Array.isArray(message.denominatorAggregations))
                                        return "denominatorAggregations: array expected";
                                    for (var i = 0; i < message.denominatorAggregations.length; ++i) {
                                        var error = $root.google.monitoring.v3.Aggregation.verify(message.denominatorAggregations[i]);
                                        if (error)
                                            return "denominatorAggregations." + error;
                                    }
                                }
                                if (message.comparison != null && message.hasOwnProperty("comparison"))
                                    switch (message.comparison) {
                                    default:
                                        return "comparison: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                        break;
                                    }
                                if (message.thresholdValue != null && message.hasOwnProperty("thresholdValue"))
                                    if (typeof message.thresholdValue !== "number")
                                        return "thresholdValue: number expected";
                                if (message.duration != null && message.hasOwnProperty("duration")) {
                                    var error = $root.google.protobuf.Duration.verify(message.duration);
                                    if (error)
                                        return "duration." + error;
                                }
                                if (message.trigger != null && message.hasOwnProperty("trigger")) {
                                    var error = $root.google.monitoring.v3.AlertPolicy.Condition.Trigger.verify(message.trigger);
                                    if (error)
                                        return "trigger." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a MetricThreshold message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MetricThreshold
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.monitoring.v3.AlertPolicy.Condition.MetricThreshold} MetricThreshold
                             */
                            MetricThreshold.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.monitoring.v3.AlertPolicy.Condition.MetricThreshold)
                                    return object;
                                var message = new $root.google.monitoring.v3.AlertPolicy.Condition.MetricThreshold();
                                if (object.filter != null)
                                    message.filter = String(object.filter);
                                if (object.aggregations) {
                                    if (!Array.isArray(object.aggregations))
                                        throw TypeError(".google.monitoring.v3.AlertPolicy.Condition.MetricThreshold.aggregations: array expected");
                                    message.aggregations = [];
                                    for (var i = 0; i < object.aggregations.length; ++i) {
                                        if (typeof object.aggregations[i] !== "object")
                                            throw TypeError(".google.monitoring.v3.AlertPolicy.Condition.MetricThreshold.aggregations: object expected");
                                        message.aggregations[i] = $root.google.monitoring.v3.Aggregation.fromObject(object.aggregations[i]);
                                    }
                                }
                                if (object.denominatorFilter != null)
                                    message.denominatorFilter = String(object.denominatorFilter);
                                if (object.denominatorAggregations) {
                                    if (!Array.isArray(object.denominatorAggregations))
                                        throw TypeError(".google.monitoring.v3.AlertPolicy.Condition.MetricThreshold.denominatorAggregations: array expected");
                                    message.denominatorAggregations = [];
                                    for (var i = 0; i < object.denominatorAggregations.length; ++i) {
                                        if (typeof object.denominatorAggregations[i] !== "object")
                                            throw TypeError(".google.monitoring.v3.AlertPolicy.Condition.MetricThreshold.denominatorAggregations: object expected");
                                        message.denominatorAggregations[i] = $root.google.monitoring.v3.Aggregation.fromObject(object.denominatorAggregations[i]);
                                    }
                                }
                                switch (object.comparison) {
                                default:
                                    if (typeof object.comparison === "number") {
                                        message.comparison = object.comparison;
                                        break;
                                    }
                                    break;
                                case "COMPARISON_UNSPECIFIED":
                                case 0:
                                    message.comparison = 0;
                                    break;
                                case "COMPARISON_GT":
                                case 1:
                                    message.comparison = 1;
                                    break;
                                case "COMPARISON_GE":
                                case 2:
                                    message.comparison = 2;
                                    break;
                                case "COMPARISON_LT":
                                case 3:
                                    message.comparison = 3;
                                    break;
                                case "COMPARISON_LE":
                                case 4:
                                    message.comparison = 4;
                                    break;
                                case "COMPARISON_EQ":
                                case 5:
                                    message.comparison = 5;
                                    break;
                                case "COMPARISON_NE":
                                case 6:
                                    message.comparison = 6;
                                    break;
                                }
                                if (object.thresholdValue != null)
                                    message.thresholdValue = Number(object.thresholdValue);
                                if (object.duration != null) {
                                    if (typeof object.duration !== "object")
                                        throw TypeError(".google.monitoring.v3.AlertPolicy.Condition.MetricThreshold.duration: object expected");
                                    message.duration = $root.google.protobuf.Duration.fromObject(object.duration);
                                }
                                if (object.trigger != null) {
                                    if (typeof object.trigger !== "object")
                                        throw TypeError(".google.monitoring.v3.AlertPolicy.Condition.MetricThreshold.trigger: object expected");
                                    message.trigger = $root.google.monitoring.v3.AlertPolicy.Condition.Trigger.fromObject(object.trigger);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a MetricThreshold message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MetricThreshold
                             * @static
                             * @param {google.monitoring.v3.AlertPolicy.Condition.MetricThreshold} message MetricThreshold
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            MetricThreshold.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.aggregations = [];
                                    object.denominatorAggregations = [];
                                }
                                if (options.defaults) {
                                    object.filter = "";
                                    object.comparison = options.enums === String ? "COMPARISON_UNSPECIFIED" : 0;
                                    object.thresholdValue = 0;
                                    object.duration = null;
                                    object.trigger = null;
                                    object.denominatorFilter = "";
                                }
                                if (message.filter != null && message.hasOwnProperty("filter"))
                                    object.filter = message.filter;
                                if (message.comparison != null && message.hasOwnProperty("comparison"))
                                    object.comparison = options.enums === String ? $root.google.monitoring.v3.ComparisonType[message.comparison] === undefined ? message.comparison : $root.google.monitoring.v3.ComparisonType[message.comparison] : message.comparison;
                                if (message.thresholdValue != null && message.hasOwnProperty("thresholdValue"))
                                    object.thresholdValue = options.json && !isFinite(message.thresholdValue) ? String(message.thresholdValue) : message.thresholdValue;
                                if (message.duration != null && message.hasOwnProperty("duration"))
                                    object.duration = $root.google.protobuf.Duration.toObject(message.duration, options);
                                if (message.trigger != null && message.hasOwnProperty("trigger"))
                                    object.trigger = $root.google.monitoring.v3.AlertPolicy.Condition.Trigger.toObject(message.trigger, options);
                                if (message.aggregations && message.aggregations.length) {
                                    object.aggregations = [];
                                    for (var j = 0; j < message.aggregations.length; ++j)
                                        object.aggregations[j] = $root.google.monitoring.v3.Aggregation.toObject(message.aggregations[j], options);
                                }
                                if (message.denominatorFilter != null && message.hasOwnProperty("denominatorFilter"))
                                    object.denominatorFilter = message.denominatorFilter;
                                if (message.denominatorAggregations && message.denominatorAggregations.length) {
                                    object.denominatorAggregations = [];
                                    for (var j = 0; j < message.denominatorAggregations.length; ++j)
                                        object.denominatorAggregations[j] = $root.google.monitoring.v3.Aggregation.toObject(message.denominatorAggregations[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this MetricThreshold to JSON.
                             * @function toJSON
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MetricThreshold
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            MetricThreshold.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for MetricThreshold
                             * @function getTypeUrl
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MetricThreshold
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            MetricThreshold.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.monitoring.v3.AlertPolicy.Condition.MetricThreshold";
                            };
    
                            return MetricThreshold;
                        })();
    
                        Condition.MetricAbsence = (function() {
    
                            /**
                             * Properties of a MetricAbsence.
                             * @memberof google.monitoring.v3.AlertPolicy.Condition
                             * @interface IMetricAbsence
                             * @property {string|null} [filter] MetricAbsence filter
                             * @property {Array.<google.monitoring.v3.IAggregation>|null} [aggregations] MetricAbsence aggregations
                             * @property {google.protobuf.IDuration|null} [duration] MetricAbsence duration
                             * @property {google.monitoring.v3.AlertPolicy.Condition.ITrigger|null} [trigger] MetricAbsence trigger
                             */
    
                            /**
                             * Constructs a new MetricAbsence.
                             * @memberof google.monitoring.v3.AlertPolicy.Condition
                             * @classdesc Represents a MetricAbsence.
                             * @implements IMetricAbsence
                             * @constructor
                             * @param {google.monitoring.v3.AlertPolicy.Condition.IMetricAbsence=} [properties] Properties to set
                             */
                            function MetricAbsence(properties) {
                                this.aggregations = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * MetricAbsence filter.
                             * @member {string} filter
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MetricAbsence
                             * @instance
                             */
                            MetricAbsence.prototype.filter = "";
    
                            /**
                             * MetricAbsence aggregations.
                             * @member {Array.<google.monitoring.v3.IAggregation>} aggregations
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MetricAbsence
                             * @instance
                             */
                            MetricAbsence.prototype.aggregations = $util.emptyArray;
    
                            /**
                             * MetricAbsence duration.
                             * @member {google.protobuf.IDuration|null|undefined} duration
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MetricAbsence
                             * @instance
                             */
                            MetricAbsence.prototype.duration = null;
    
                            /**
                             * MetricAbsence trigger.
                             * @member {google.monitoring.v3.AlertPolicy.Condition.ITrigger|null|undefined} trigger
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MetricAbsence
                             * @instance
                             */
                            MetricAbsence.prototype.trigger = null;
    
                            /**
                             * Creates a new MetricAbsence instance using the specified properties.
                             * @function create
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MetricAbsence
                             * @static
                             * @param {google.monitoring.v3.AlertPolicy.Condition.IMetricAbsence=} [properties] Properties to set
                             * @returns {google.monitoring.v3.AlertPolicy.Condition.MetricAbsence} MetricAbsence instance
                             */
                            MetricAbsence.create = function create(properties) {
                                return new MetricAbsence(properties);
                            };
    
                            /**
                             * Encodes the specified MetricAbsence message. Does not implicitly {@link google.monitoring.v3.AlertPolicy.Condition.MetricAbsence.verify|verify} messages.
                             * @function encode
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MetricAbsence
                             * @static
                             * @param {google.monitoring.v3.AlertPolicy.Condition.IMetricAbsence} message MetricAbsence message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MetricAbsence.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.filter);
                                if (message.duration != null && Object.hasOwnProperty.call(message, "duration"))
                                    $root.google.protobuf.Duration.encode(message.duration, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.trigger != null && Object.hasOwnProperty.call(message, "trigger"))
                                    $root.google.monitoring.v3.AlertPolicy.Condition.Trigger.encode(message.trigger, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.aggregations != null && message.aggregations.length)
                                    for (var i = 0; i < message.aggregations.length; ++i)
                                        $root.google.monitoring.v3.Aggregation.encode(message.aggregations[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified MetricAbsence message, length delimited. Does not implicitly {@link google.monitoring.v3.AlertPolicy.Condition.MetricAbsence.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MetricAbsence
                             * @static
                             * @param {google.monitoring.v3.AlertPolicy.Condition.IMetricAbsence} message MetricAbsence message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MetricAbsence.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a MetricAbsence message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MetricAbsence
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.monitoring.v3.AlertPolicy.Condition.MetricAbsence} MetricAbsence
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MetricAbsence.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.AlertPolicy.Condition.MetricAbsence();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.filter = reader.string();
                                            break;
                                        }
                                    case 5: {
                                            if (!(message.aggregations && message.aggregations.length))
                                                message.aggregations = [];
                                            message.aggregations.push($root.google.monitoring.v3.Aggregation.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 2: {
                                            message.duration = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.trigger = $root.google.monitoring.v3.AlertPolicy.Condition.Trigger.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a MetricAbsence message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MetricAbsence
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.monitoring.v3.AlertPolicy.Condition.MetricAbsence} MetricAbsence
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MetricAbsence.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a MetricAbsence message.
                             * @function verify
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MetricAbsence
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            MetricAbsence.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.filter != null && message.hasOwnProperty("filter"))
                                    if (!$util.isString(message.filter))
                                        return "filter: string expected";
                                if (message.aggregations != null && message.hasOwnProperty("aggregations")) {
                                    if (!Array.isArray(message.aggregations))
                                        return "aggregations: array expected";
                                    for (var i = 0; i < message.aggregations.length; ++i) {
                                        var error = $root.google.monitoring.v3.Aggregation.verify(message.aggregations[i]);
                                        if (error)
                                            return "aggregations." + error;
                                    }
                                }
                                if (message.duration != null && message.hasOwnProperty("duration")) {
                                    var error = $root.google.protobuf.Duration.verify(message.duration);
                                    if (error)
                                        return "duration." + error;
                                }
                                if (message.trigger != null && message.hasOwnProperty("trigger")) {
                                    var error = $root.google.monitoring.v3.AlertPolicy.Condition.Trigger.verify(message.trigger);
                                    if (error)
                                        return "trigger." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a MetricAbsence message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MetricAbsence
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.monitoring.v3.AlertPolicy.Condition.MetricAbsence} MetricAbsence
                             */
                            MetricAbsence.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.monitoring.v3.AlertPolicy.Condition.MetricAbsence)
                                    return object;
                                var message = new $root.google.monitoring.v3.AlertPolicy.Condition.MetricAbsence();
                                if (object.filter != null)
                                    message.filter = String(object.filter);
                                if (object.aggregations) {
                                    if (!Array.isArray(object.aggregations))
                                        throw TypeError(".google.monitoring.v3.AlertPolicy.Condition.MetricAbsence.aggregations: array expected");
                                    message.aggregations = [];
                                    for (var i = 0; i < object.aggregations.length; ++i) {
                                        if (typeof object.aggregations[i] !== "object")
                                            throw TypeError(".google.monitoring.v3.AlertPolicy.Condition.MetricAbsence.aggregations: object expected");
                                        message.aggregations[i] = $root.google.monitoring.v3.Aggregation.fromObject(object.aggregations[i]);
                                    }
                                }
                                if (object.duration != null) {
                                    if (typeof object.duration !== "object")
                                        throw TypeError(".google.monitoring.v3.AlertPolicy.Condition.MetricAbsence.duration: object expected");
                                    message.duration = $root.google.protobuf.Duration.fromObject(object.duration);
                                }
                                if (object.trigger != null) {
                                    if (typeof object.trigger !== "object")
                                        throw TypeError(".google.monitoring.v3.AlertPolicy.Condition.MetricAbsence.trigger: object expected");
                                    message.trigger = $root.google.monitoring.v3.AlertPolicy.Condition.Trigger.fromObject(object.trigger);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a MetricAbsence message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MetricAbsence
                             * @static
                             * @param {google.monitoring.v3.AlertPolicy.Condition.MetricAbsence} message MetricAbsence
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            MetricAbsence.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.aggregations = [];
                                if (options.defaults) {
                                    object.filter = "";
                                    object.duration = null;
                                    object.trigger = null;
                                }
                                if (message.filter != null && message.hasOwnProperty("filter"))
                                    object.filter = message.filter;
                                if (message.duration != null && message.hasOwnProperty("duration"))
                                    object.duration = $root.google.protobuf.Duration.toObject(message.duration, options);
                                if (message.trigger != null && message.hasOwnProperty("trigger"))
                                    object.trigger = $root.google.monitoring.v3.AlertPolicy.Condition.Trigger.toObject(message.trigger, options);
                                if (message.aggregations && message.aggregations.length) {
                                    object.aggregations = [];
                                    for (var j = 0; j < message.aggregations.length; ++j)
                                        object.aggregations[j] = $root.google.monitoring.v3.Aggregation.toObject(message.aggregations[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this MetricAbsence to JSON.
                             * @function toJSON
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MetricAbsence
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            MetricAbsence.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for MetricAbsence
                             * @function getTypeUrl
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MetricAbsence
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            MetricAbsence.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.monitoring.v3.AlertPolicy.Condition.MetricAbsence";
                            };
    
                            return MetricAbsence;
                        })();
    
                        Condition.MonitoringQueryLanguageCondition = (function() {
    
                            /**
                             * Properties of a MonitoringQueryLanguageCondition.
                             * @memberof google.monitoring.v3.AlertPolicy.Condition
                             * @interface IMonitoringQueryLanguageCondition
                             * @property {string|null} [query] MonitoringQueryLanguageCondition query
                             * @property {google.protobuf.IDuration|null} [duration] MonitoringQueryLanguageCondition duration
                             * @property {google.monitoring.v3.AlertPolicy.Condition.ITrigger|null} [trigger] MonitoringQueryLanguageCondition trigger
                             */
    
                            /**
                             * Constructs a new MonitoringQueryLanguageCondition.
                             * @memberof google.monitoring.v3.AlertPolicy.Condition
                             * @classdesc Represents a MonitoringQueryLanguageCondition.
                             * @implements IMonitoringQueryLanguageCondition
                             * @constructor
                             * @param {google.monitoring.v3.AlertPolicy.Condition.IMonitoringQueryLanguageCondition=} [properties] Properties to set
                             */
                            function MonitoringQueryLanguageCondition(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * MonitoringQueryLanguageCondition query.
                             * @member {string} query
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MonitoringQueryLanguageCondition
                             * @instance
                             */
                            MonitoringQueryLanguageCondition.prototype.query = "";
    
                            /**
                             * MonitoringQueryLanguageCondition duration.
                             * @member {google.protobuf.IDuration|null|undefined} duration
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MonitoringQueryLanguageCondition
                             * @instance
                             */
                            MonitoringQueryLanguageCondition.prototype.duration = null;
    
                            /**
                             * MonitoringQueryLanguageCondition trigger.
                             * @member {google.monitoring.v3.AlertPolicy.Condition.ITrigger|null|undefined} trigger
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MonitoringQueryLanguageCondition
                             * @instance
                             */
                            MonitoringQueryLanguageCondition.prototype.trigger = null;
    
                            /**
                             * Creates a new MonitoringQueryLanguageCondition instance using the specified properties.
                             * @function create
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MonitoringQueryLanguageCondition
                             * @static
                             * @param {google.monitoring.v3.AlertPolicy.Condition.IMonitoringQueryLanguageCondition=} [properties] Properties to set
                             * @returns {google.monitoring.v3.AlertPolicy.Condition.MonitoringQueryLanguageCondition} MonitoringQueryLanguageCondition instance
                             */
                            MonitoringQueryLanguageCondition.create = function create(properties) {
                                return new MonitoringQueryLanguageCondition(properties);
                            };
    
                            /**
                             * Encodes the specified MonitoringQueryLanguageCondition message. Does not implicitly {@link google.monitoring.v3.AlertPolicy.Condition.MonitoringQueryLanguageCondition.verify|verify} messages.
                             * @function encode
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MonitoringQueryLanguageCondition
                             * @static
                             * @param {google.monitoring.v3.AlertPolicy.Condition.IMonitoringQueryLanguageCondition} message MonitoringQueryLanguageCondition message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MonitoringQueryLanguageCondition.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.query != null && Object.hasOwnProperty.call(message, "query"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.query);
                                if (message.duration != null && Object.hasOwnProperty.call(message, "duration"))
                                    $root.google.protobuf.Duration.encode(message.duration, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.trigger != null && Object.hasOwnProperty.call(message, "trigger"))
                                    $root.google.monitoring.v3.AlertPolicy.Condition.Trigger.encode(message.trigger, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified MonitoringQueryLanguageCondition message, length delimited. Does not implicitly {@link google.monitoring.v3.AlertPolicy.Condition.MonitoringQueryLanguageCondition.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MonitoringQueryLanguageCondition
                             * @static
                             * @param {google.monitoring.v3.AlertPolicy.Condition.IMonitoringQueryLanguageCondition} message MonitoringQueryLanguageCondition message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MonitoringQueryLanguageCondition.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a MonitoringQueryLanguageCondition message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MonitoringQueryLanguageCondition
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.monitoring.v3.AlertPolicy.Condition.MonitoringQueryLanguageCondition} MonitoringQueryLanguageCondition
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MonitoringQueryLanguageCondition.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.AlertPolicy.Condition.MonitoringQueryLanguageCondition();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.query = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.duration = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.trigger = $root.google.monitoring.v3.AlertPolicy.Condition.Trigger.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a MonitoringQueryLanguageCondition message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MonitoringQueryLanguageCondition
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.monitoring.v3.AlertPolicy.Condition.MonitoringQueryLanguageCondition} MonitoringQueryLanguageCondition
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MonitoringQueryLanguageCondition.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a MonitoringQueryLanguageCondition message.
                             * @function verify
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MonitoringQueryLanguageCondition
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            MonitoringQueryLanguageCondition.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.query != null && message.hasOwnProperty("query"))
                                    if (!$util.isString(message.query))
                                        return "query: string expected";
                                if (message.duration != null && message.hasOwnProperty("duration")) {
                                    var error = $root.google.protobuf.Duration.verify(message.duration);
                                    if (error)
                                        return "duration." + error;
                                }
                                if (message.trigger != null && message.hasOwnProperty("trigger")) {
                                    var error = $root.google.monitoring.v3.AlertPolicy.Condition.Trigger.verify(message.trigger);
                                    if (error)
                                        return "trigger." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a MonitoringQueryLanguageCondition message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MonitoringQueryLanguageCondition
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.monitoring.v3.AlertPolicy.Condition.MonitoringQueryLanguageCondition} MonitoringQueryLanguageCondition
                             */
                            MonitoringQueryLanguageCondition.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.monitoring.v3.AlertPolicy.Condition.MonitoringQueryLanguageCondition)
                                    return object;
                                var message = new $root.google.monitoring.v3.AlertPolicy.Condition.MonitoringQueryLanguageCondition();
                                if (object.query != null)
                                    message.query = String(object.query);
                                if (object.duration != null) {
                                    if (typeof object.duration !== "object")
                                        throw TypeError(".google.monitoring.v3.AlertPolicy.Condition.MonitoringQueryLanguageCondition.duration: object expected");
                                    message.duration = $root.google.protobuf.Duration.fromObject(object.duration);
                                }
                                if (object.trigger != null) {
                                    if (typeof object.trigger !== "object")
                                        throw TypeError(".google.monitoring.v3.AlertPolicy.Condition.MonitoringQueryLanguageCondition.trigger: object expected");
                                    message.trigger = $root.google.monitoring.v3.AlertPolicy.Condition.Trigger.fromObject(object.trigger);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a MonitoringQueryLanguageCondition message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MonitoringQueryLanguageCondition
                             * @static
                             * @param {google.monitoring.v3.AlertPolicy.Condition.MonitoringQueryLanguageCondition} message MonitoringQueryLanguageCondition
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            MonitoringQueryLanguageCondition.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.query = "";
                                    object.duration = null;
                                    object.trigger = null;
                                }
                                if (message.query != null && message.hasOwnProperty("query"))
                                    object.query = message.query;
                                if (message.duration != null && message.hasOwnProperty("duration"))
                                    object.duration = $root.google.protobuf.Duration.toObject(message.duration, options);
                                if (message.trigger != null && message.hasOwnProperty("trigger"))
                                    object.trigger = $root.google.monitoring.v3.AlertPolicy.Condition.Trigger.toObject(message.trigger, options);
                                return object;
                            };
    
                            /**
                             * Converts this MonitoringQueryLanguageCondition to JSON.
                             * @function toJSON
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MonitoringQueryLanguageCondition
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            MonitoringQueryLanguageCondition.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for MonitoringQueryLanguageCondition
                             * @function getTypeUrl
                             * @memberof google.monitoring.v3.AlertPolicy.Condition.MonitoringQueryLanguageCondition
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            MonitoringQueryLanguageCondition.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.monitoring.v3.AlertPolicy.Condition.MonitoringQueryLanguageCondition";
                            };
    
                            return MonitoringQueryLanguageCondition;
                        })();
    
                        return Condition;
                    })();
    
                    /**
                     * ConditionCombinerType enum.
                     * @name google.monitoring.v3.AlertPolicy.ConditionCombinerType
                     * @enum {number}
                     * @property {number} COMBINE_UNSPECIFIED=0 COMBINE_UNSPECIFIED value
                     * @property {number} AND=1 AND value
                     * @property {number} OR=2 OR value
                     * @property {number} AND_WITH_MATCHING_RESOURCE=3 AND_WITH_MATCHING_RESOURCE value
                     */
                    AlertPolicy.ConditionCombinerType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "COMBINE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "AND"] = 1;
                        values[valuesById[2] = "OR"] = 2;
                        values[valuesById[3] = "AND_WITH_MATCHING_RESOURCE"] = 3;
                        return values;
                    })();
    
                    return AlertPolicy;
                })();
    
                v3.TypedValue = (function() {
    
                    /**
                     * Properties of a TypedValue.
                     * @memberof google.monitoring.v3
                     * @interface ITypedValue
                     * @property {boolean|null} [boolValue] TypedValue boolValue
                     * @property {number|Long|null} [int64Value] TypedValue int64Value
                     * @property {number|null} [doubleValue] TypedValue doubleValue
                     * @property {string|null} [stringValue] TypedValue stringValue
                     * @property {google.api.IDistribution|null} [distributionValue] TypedValue distributionValue
                     */
    
                    /**
                     * Constructs a new TypedValue.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a TypedValue.
                     * @implements ITypedValue
                     * @constructor
                     * @param {google.monitoring.v3.ITypedValue=} [properties] Properties to set
                     */
                    function TypedValue(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * TypedValue boolValue.
                     * @member {boolean|null|undefined} boolValue
                     * @memberof google.monitoring.v3.TypedValue
                     * @instance
                     */
                    TypedValue.prototype.boolValue = null;
    
                    /**
                     * TypedValue int64Value.
                     * @member {number|Long|null|undefined} int64Value
                     * @memberof google.monitoring.v3.TypedValue
                     * @instance
                     */
                    TypedValue.prototype.int64Value = null;
    
                    /**
                     * TypedValue doubleValue.
                     * @member {number|null|undefined} doubleValue
                     * @memberof google.monitoring.v3.TypedValue
                     * @instance
                     */
                    TypedValue.prototype.doubleValue = null;
    
                    /**
                     * TypedValue stringValue.
                     * @member {string|null|undefined} stringValue
                     * @memberof google.monitoring.v3.TypedValue
                     * @instance
                     */
                    TypedValue.prototype.stringValue = null;
    
                    /**
                     * TypedValue distributionValue.
                     * @member {google.api.IDistribution|null|undefined} distributionValue
                     * @memberof google.monitoring.v3.TypedValue
                     * @instance
                     */
                    TypedValue.prototype.distributionValue = null;
    
                    // OneOf field names bound to virtual getters and setters
                    var $oneOfFields;
    
                    /**
                     * TypedValue value.
                     * @member {"boolValue"|"int64Value"|"doubleValue"|"stringValue"|"distributionValue"|undefined} value
                     * @memberof google.monitoring.v3.TypedValue
                     * @instance
                     */
                    Object.defineProperty(TypedValue.prototype, "value", {
                        get: $util.oneOfGetter($oneOfFields = ["boolValue", "int64Value", "doubleValue", "stringValue", "distributionValue"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });
    
                    /**
                     * Creates a new TypedValue instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.TypedValue
                     * @static
                     * @param {google.monitoring.v3.ITypedValue=} [properties] Properties to set
                     * @returns {google.monitoring.v3.TypedValue} TypedValue instance
                     */
                    TypedValue.create = function create(properties) {
                        return new TypedValue(properties);
                    };
    
                    /**
                     * Encodes the specified TypedValue message. Does not implicitly {@link google.monitoring.v3.TypedValue.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.TypedValue
                     * @static
                     * @param {google.monitoring.v3.ITypedValue} message TypedValue message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    TypedValue.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.boolValue != null && Object.hasOwnProperty.call(message, "boolValue"))
                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.boolValue);
                        if (message.int64Value != null && Object.hasOwnProperty.call(message, "int64Value"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int64(message.int64Value);
                        if (message.doubleValue != null && Object.hasOwnProperty.call(message, "doubleValue"))
                            writer.uint32(/* id 3, wireType 1 =*/25).double(message.doubleValue);
                        if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.stringValue);
                        if (message.distributionValue != null && Object.hasOwnProperty.call(message, "distributionValue"))
                            $root.google.api.Distribution.encode(message.distributionValue, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified TypedValue message, length delimited. Does not implicitly {@link google.monitoring.v3.TypedValue.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.TypedValue
                     * @static
                     * @param {google.monitoring.v3.ITypedValue} message TypedValue message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    TypedValue.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a TypedValue message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.TypedValue
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.TypedValue} TypedValue
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    TypedValue.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.TypedValue();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.boolValue = reader.bool();
                                    break;
                                }
                            case 2: {
                                    message.int64Value = reader.int64();
                                    break;
                                }
                            case 3: {
                                    message.doubleValue = reader.double();
                                    break;
                                }
                            case 4: {
                                    message.stringValue = reader.string();
                                    break;
                                }
                            case 5: {
                                    message.distributionValue = $root.google.api.Distribution.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a TypedValue message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.TypedValue
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.TypedValue} TypedValue
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    TypedValue.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a TypedValue message.
                     * @function verify
                     * @memberof google.monitoring.v3.TypedValue
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    TypedValue.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        var properties = {};
                        if (message.boolValue != null && message.hasOwnProperty("boolValue")) {
                            properties.value = 1;
                            if (typeof message.boolValue !== "boolean")
                                return "boolValue: boolean expected";
                        }
                        if (message.int64Value != null && message.hasOwnProperty("int64Value")) {
                            if (properties.value === 1)
                                return "value: multiple values";
                            properties.value = 1;
                            if (!$util.isInteger(message.int64Value) && !(message.int64Value && $util.isInteger(message.int64Value.low) && $util.isInteger(message.int64Value.high)))
                                return "int64Value: integer|Long expected";
                        }
                        if (message.doubleValue != null && message.hasOwnProperty("doubleValue")) {
                            if (properties.value === 1)
                                return "value: multiple values";
                            properties.value = 1;
                            if (typeof message.doubleValue !== "number")
                                return "doubleValue: number expected";
                        }
                        if (message.stringValue != null && message.hasOwnProperty("stringValue")) {
                            if (properties.value === 1)
                                return "value: multiple values";
                            properties.value = 1;
                            if (!$util.isString(message.stringValue))
                                return "stringValue: string expected";
                        }
                        if (message.distributionValue != null && message.hasOwnProperty("distributionValue")) {
                            if (properties.value === 1)
                                return "value: multiple values";
                            properties.value = 1;
                            {
                                var error = $root.google.api.Distribution.verify(message.distributionValue);
                                if (error)
                                    return "distributionValue." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates a TypedValue message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.TypedValue
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.TypedValue} TypedValue
                     */
                    TypedValue.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.TypedValue)
                            return object;
                        var message = new $root.google.monitoring.v3.TypedValue();
                        if (object.boolValue != null)
                            message.boolValue = Boolean(object.boolValue);
                        if (object.int64Value != null)
                            if ($util.Long)
                                (message.int64Value = $util.Long.fromValue(object.int64Value)).unsigned = false;
                            else if (typeof object.int64Value === "string")
                                message.int64Value = parseInt(object.int64Value, 10);
                            else if (typeof object.int64Value === "number")
                                message.int64Value = object.int64Value;
                            else if (typeof object.int64Value === "object")
                                message.int64Value = new $util.LongBits(object.int64Value.low >>> 0, object.int64Value.high >>> 0).toNumber();
                        if (object.doubleValue != null)
                            message.doubleValue = Number(object.doubleValue);
                        if (object.stringValue != null)
                            message.stringValue = String(object.stringValue);
                        if (object.distributionValue != null) {
                            if (typeof object.distributionValue !== "object")
                                throw TypeError(".google.monitoring.v3.TypedValue.distributionValue: object expected");
                            message.distributionValue = $root.google.api.Distribution.fromObject(object.distributionValue);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a TypedValue message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.TypedValue
                     * @static
                     * @param {google.monitoring.v3.TypedValue} message TypedValue
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    TypedValue.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (message.boolValue != null && message.hasOwnProperty("boolValue")) {
                            object.boolValue = message.boolValue;
                            if (options.oneofs)
                                object.value = "boolValue";
                        }
                        if (message.int64Value != null && message.hasOwnProperty("int64Value")) {
                            if (typeof message.int64Value === "number")
                                object.int64Value = options.longs === String ? String(message.int64Value) : message.int64Value;
                            else
                                object.int64Value = options.longs === String ? $util.Long.prototype.toString.call(message.int64Value) : options.longs === Number ? new $util.LongBits(message.int64Value.low >>> 0, message.int64Value.high >>> 0).toNumber() : message.int64Value;
                            if (options.oneofs)
                                object.value = "int64Value";
                        }
                        if (message.doubleValue != null && message.hasOwnProperty("doubleValue")) {
                            object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;
                            if (options.oneofs)
                                object.value = "doubleValue";
                        }
                        if (message.stringValue != null && message.hasOwnProperty("stringValue")) {
                            object.stringValue = message.stringValue;
                            if (options.oneofs)
                                object.value = "stringValue";
                        }
                        if (message.distributionValue != null && message.hasOwnProperty("distributionValue")) {
                            object.distributionValue = $root.google.api.Distribution.toObject(message.distributionValue, options);
                            if (options.oneofs)
                                object.value = "distributionValue";
                        }
                        return object;
                    };
    
                    /**
                     * Converts this TypedValue to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.TypedValue
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    TypedValue.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for TypedValue
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.TypedValue
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    TypedValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.TypedValue";
                    };
    
                    return TypedValue;
                })();
    
                v3.TimeInterval = (function() {
    
                    /**
                     * Properties of a TimeInterval.
                     * @memberof google.monitoring.v3
                     * @interface ITimeInterval
                     * @property {google.protobuf.ITimestamp|null} [endTime] TimeInterval endTime
                     * @property {google.protobuf.ITimestamp|null} [startTime] TimeInterval startTime
                     */
    
                    /**
                     * Constructs a new TimeInterval.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a TimeInterval.
                     * @implements ITimeInterval
                     * @constructor
                     * @param {google.monitoring.v3.ITimeInterval=} [properties] Properties to set
                     */
                    function TimeInterval(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * TimeInterval endTime.
                     * @member {google.protobuf.ITimestamp|null|undefined} endTime
                     * @memberof google.monitoring.v3.TimeInterval
                     * @instance
                     */
                    TimeInterval.prototype.endTime = null;
    
                    /**
                     * TimeInterval startTime.
                     * @member {google.protobuf.ITimestamp|null|undefined} startTime
                     * @memberof google.monitoring.v3.TimeInterval
                     * @instance
                     */
                    TimeInterval.prototype.startTime = null;
    
                    /**
                     * Creates a new TimeInterval instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.TimeInterval
                     * @static
                     * @param {google.monitoring.v3.ITimeInterval=} [properties] Properties to set
                     * @returns {google.monitoring.v3.TimeInterval} TimeInterval instance
                     */
                    TimeInterval.create = function create(properties) {
                        return new TimeInterval(properties);
                    };
    
                    /**
                     * Encodes the specified TimeInterval message. Does not implicitly {@link google.monitoring.v3.TimeInterval.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.TimeInterval
                     * @static
                     * @param {google.monitoring.v3.ITimeInterval} message TimeInterval message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    TimeInterval.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.startTime != null && Object.hasOwnProperty.call(message, "startTime"))
                            $root.google.protobuf.Timestamp.encode(message.startTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                            $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified TimeInterval message, length delimited. Does not implicitly {@link google.monitoring.v3.TimeInterval.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.TimeInterval
                     * @static
                     * @param {google.monitoring.v3.ITimeInterval} message TimeInterval message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    TimeInterval.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a TimeInterval message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.TimeInterval
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.TimeInterval} TimeInterval
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    TimeInterval.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.TimeInterval();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 2: {
                                    message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            case 1: {
                                    message.startTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a TimeInterval message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.TimeInterval
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.TimeInterval} TimeInterval
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    TimeInterval.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a TimeInterval message.
                     * @function verify
                     * @memberof google.monitoring.v3.TimeInterval
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    TimeInterval.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.endTime != null && message.hasOwnProperty("endTime")) {
                            var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                            if (error)
                                return "endTime." + error;
                        }
                        if (message.startTime != null && message.hasOwnProperty("startTime")) {
                            var error = $root.google.protobuf.Timestamp.verify(message.startTime);
                            if (error)
                                return "startTime." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a TimeInterval message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.TimeInterval
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.TimeInterval} TimeInterval
                     */
                    TimeInterval.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.TimeInterval)
                            return object;
                        var message = new $root.google.monitoring.v3.TimeInterval();
                        if (object.endTime != null) {
                            if (typeof object.endTime !== "object")
                                throw TypeError(".google.monitoring.v3.TimeInterval.endTime: object expected");
                            message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                        }
                        if (object.startTime != null) {
                            if (typeof object.startTime !== "object")
                                throw TypeError(".google.monitoring.v3.TimeInterval.startTime: object expected");
                            message.startTime = $root.google.protobuf.Timestamp.fromObject(object.startTime);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a TimeInterval message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.TimeInterval
                     * @static
                     * @param {google.monitoring.v3.TimeInterval} message TimeInterval
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    TimeInterval.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.startTime = null;
                            object.endTime = null;
                        }
                        if (message.startTime != null && message.hasOwnProperty("startTime"))
                            object.startTime = $root.google.protobuf.Timestamp.toObject(message.startTime, options);
                        if (message.endTime != null && message.hasOwnProperty("endTime"))
                            object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                        return object;
                    };
    
                    /**
                     * Converts this TimeInterval to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.TimeInterval
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    TimeInterval.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for TimeInterval
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.TimeInterval
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    TimeInterval.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.TimeInterval";
                    };
    
                    return TimeInterval;
                })();
    
                v3.Aggregation = (function() {
    
                    /**
                     * Properties of an Aggregation.
                     * @memberof google.monitoring.v3
                     * @interface IAggregation
                     * @property {google.protobuf.IDuration|null} [alignmentPeriod] Aggregation alignmentPeriod
                     * @property {google.monitoring.v3.Aggregation.Aligner|null} [perSeriesAligner] Aggregation perSeriesAligner
                     * @property {google.monitoring.v3.Aggregation.Reducer|null} [crossSeriesReducer] Aggregation crossSeriesReducer
                     * @property {Array.<string>|null} [groupByFields] Aggregation groupByFields
                     */
    
                    /**
                     * Constructs a new Aggregation.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents an Aggregation.
                     * @implements IAggregation
                     * @constructor
                     * @param {google.monitoring.v3.IAggregation=} [properties] Properties to set
                     */
                    function Aggregation(properties) {
                        this.groupByFields = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Aggregation alignmentPeriod.
                     * @member {google.protobuf.IDuration|null|undefined} alignmentPeriod
                     * @memberof google.monitoring.v3.Aggregation
                     * @instance
                     */
                    Aggregation.prototype.alignmentPeriod = null;
    
                    /**
                     * Aggregation perSeriesAligner.
                     * @member {google.monitoring.v3.Aggregation.Aligner} perSeriesAligner
                     * @memberof google.monitoring.v3.Aggregation
                     * @instance
                     */
                    Aggregation.prototype.perSeriesAligner = 0;
    
                    /**
                     * Aggregation crossSeriesReducer.
                     * @member {google.monitoring.v3.Aggregation.Reducer} crossSeriesReducer
                     * @memberof google.monitoring.v3.Aggregation
                     * @instance
                     */
                    Aggregation.prototype.crossSeriesReducer = 0;
    
                    /**
                     * Aggregation groupByFields.
                     * @member {Array.<string>} groupByFields
                     * @memberof google.monitoring.v3.Aggregation
                     * @instance
                     */
                    Aggregation.prototype.groupByFields = $util.emptyArray;
    
                    /**
                     * Creates a new Aggregation instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.Aggregation
                     * @static
                     * @param {google.monitoring.v3.IAggregation=} [properties] Properties to set
                     * @returns {google.monitoring.v3.Aggregation} Aggregation instance
                     */
                    Aggregation.create = function create(properties) {
                        return new Aggregation(properties);
                    };
    
                    /**
                     * Encodes the specified Aggregation message. Does not implicitly {@link google.monitoring.v3.Aggregation.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.Aggregation
                     * @static
                     * @param {google.monitoring.v3.IAggregation} message Aggregation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Aggregation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.alignmentPeriod != null && Object.hasOwnProperty.call(message, "alignmentPeriod"))
                            $root.google.protobuf.Duration.encode(message.alignmentPeriod, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.perSeriesAligner != null && Object.hasOwnProperty.call(message, "perSeriesAligner"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.perSeriesAligner);
                        if (message.crossSeriesReducer != null && Object.hasOwnProperty.call(message, "crossSeriesReducer"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.crossSeriesReducer);
                        if (message.groupByFields != null && message.groupByFields.length)
                            for (var i = 0; i < message.groupByFields.length; ++i)
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.groupByFields[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Aggregation message, length delimited. Does not implicitly {@link google.monitoring.v3.Aggregation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.Aggregation
                     * @static
                     * @param {google.monitoring.v3.IAggregation} message Aggregation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Aggregation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an Aggregation message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.Aggregation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.Aggregation} Aggregation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Aggregation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.Aggregation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.alignmentPeriod = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.perSeriesAligner = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.crossSeriesReducer = reader.int32();
                                    break;
                                }
                            case 5: {
                                    if (!(message.groupByFields && message.groupByFields.length))
                                        message.groupByFields = [];
                                    message.groupByFields.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an Aggregation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.Aggregation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.Aggregation} Aggregation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Aggregation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an Aggregation message.
                     * @function verify
                     * @memberof google.monitoring.v3.Aggregation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Aggregation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.alignmentPeriod != null && message.hasOwnProperty("alignmentPeriod")) {
                            var error = $root.google.protobuf.Duration.verify(message.alignmentPeriod);
                            if (error)
                                return "alignmentPeriod." + error;
                        }
                        if (message.perSeriesAligner != null && message.hasOwnProperty("perSeriesAligner"))
                            switch (message.perSeriesAligner) {
                            default:
                                return "perSeriesAligner: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 10:
                            case 11:
                            case 12:
                            case 13:
                            case 14:
                            case 15:
                            case 16:
                            case 24:
                            case 17:
                            case 18:
                            case 19:
                            case 20:
                            case 21:
                            case 23:
                                break;
                            }
                        if (message.crossSeriesReducer != null && message.hasOwnProperty("crossSeriesReducer"))
                            switch (message.crossSeriesReducer) {
                            default:
                                return "crossSeriesReducer: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                            case 15:
                            case 8:
                            case 9:
                            case 10:
                            case 11:
                            case 12:
                                break;
                            }
                        if (message.groupByFields != null && message.hasOwnProperty("groupByFields")) {
                            if (!Array.isArray(message.groupByFields))
                                return "groupByFields: array expected";
                            for (var i = 0; i < message.groupByFields.length; ++i)
                                if (!$util.isString(message.groupByFields[i]))
                                    return "groupByFields: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates an Aggregation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.Aggregation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.Aggregation} Aggregation
                     */
                    Aggregation.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.Aggregation)
                            return object;
                        var message = new $root.google.monitoring.v3.Aggregation();
                        if (object.alignmentPeriod != null) {
                            if (typeof object.alignmentPeriod !== "object")
                                throw TypeError(".google.monitoring.v3.Aggregation.alignmentPeriod: object expected");
                            message.alignmentPeriod = $root.google.protobuf.Duration.fromObject(object.alignmentPeriod);
                        }
                        switch (object.perSeriesAligner) {
                        default:
                            if (typeof object.perSeriesAligner === "number") {
                                message.perSeriesAligner = object.perSeriesAligner;
                                break;
                            }
                            break;
                        case "ALIGN_NONE":
                        case 0:
                            message.perSeriesAligner = 0;
                            break;
                        case "ALIGN_DELTA":
                        case 1:
                            message.perSeriesAligner = 1;
                            break;
                        case "ALIGN_RATE":
                        case 2:
                            message.perSeriesAligner = 2;
                            break;
                        case "ALIGN_INTERPOLATE":
                        case 3:
                            message.perSeriesAligner = 3;
                            break;
                        case "ALIGN_NEXT_OLDER":
                        case 4:
                            message.perSeriesAligner = 4;
                            break;
                        case "ALIGN_MIN":
                        case 10:
                            message.perSeriesAligner = 10;
                            break;
                        case "ALIGN_MAX":
                        case 11:
                            message.perSeriesAligner = 11;
                            break;
                        case "ALIGN_MEAN":
                        case 12:
                            message.perSeriesAligner = 12;
                            break;
                        case "ALIGN_COUNT":
                        case 13:
                            message.perSeriesAligner = 13;
                            break;
                        case "ALIGN_SUM":
                        case 14:
                            message.perSeriesAligner = 14;
                            break;
                        case "ALIGN_STDDEV":
                        case 15:
                            message.perSeriesAligner = 15;
                            break;
                        case "ALIGN_COUNT_TRUE":
                        case 16:
                            message.perSeriesAligner = 16;
                            break;
                        case "ALIGN_COUNT_FALSE":
                        case 24:
                            message.perSeriesAligner = 24;
                            break;
                        case "ALIGN_FRACTION_TRUE":
                        case 17:
                            message.perSeriesAligner = 17;
                            break;
                        case "ALIGN_PERCENTILE_99":
                        case 18:
                            message.perSeriesAligner = 18;
                            break;
                        case "ALIGN_PERCENTILE_95":
                        case 19:
                            message.perSeriesAligner = 19;
                            break;
                        case "ALIGN_PERCENTILE_50":
                        case 20:
                            message.perSeriesAligner = 20;
                            break;
                        case "ALIGN_PERCENTILE_05":
                        case 21:
                            message.perSeriesAligner = 21;
                            break;
                        case "ALIGN_PERCENT_CHANGE":
                        case 23:
                            message.perSeriesAligner = 23;
                            break;
                        }
                        switch (object.crossSeriesReducer) {
                        default:
                            if (typeof object.crossSeriesReducer === "number") {
                                message.crossSeriesReducer = object.crossSeriesReducer;
                                break;
                            }
                            break;
                        case "REDUCE_NONE":
                        case 0:
                            message.crossSeriesReducer = 0;
                            break;
                        case "REDUCE_MEAN":
                        case 1:
                            message.crossSeriesReducer = 1;
                            break;
                        case "REDUCE_MIN":
                        case 2:
                            message.crossSeriesReducer = 2;
                            break;
                        case "REDUCE_MAX":
                        case 3:
                            message.crossSeriesReducer = 3;
                            break;
                        case "REDUCE_SUM":
                        case 4:
                            message.crossSeriesReducer = 4;
                            break;
                        case "REDUCE_STDDEV":
                        case 5:
                            message.crossSeriesReducer = 5;
                            break;
                        case "REDUCE_COUNT":
                        case 6:
                            message.crossSeriesReducer = 6;
                            break;
                        case "REDUCE_COUNT_TRUE":
                        case 7:
                            message.crossSeriesReducer = 7;
                            break;
                        case "REDUCE_COUNT_FALSE":
                        case 15:
                            message.crossSeriesReducer = 15;
                            break;
                        case "REDUCE_FRACTION_TRUE":
                        case 8:
                            message.crossSeriesReducer = 8;
                            break;
                        case "REDUCE_PERCENTILE_99":
                        case 9:
                            message.crossSeriesReducer = 9;
                            break;
                        case "REDUCE_PERCENTILE_95":
                        case 10:
                            message.crossSeriesReducer = 10;
                            break;
                        case "REDUCE_PERCENTILE_50":
                        case 11:
                            message.crossSeriesReducer = 11;
                            break;
                        case "REDUCE_PERCENTILE_05":
                        case 12:
                            message.crossSeriesReducer = 12;
                            break;
                        }
                        if (object.groupByFields) {
                            if (!Array.isArray(object.groupByFields))
                                throw TypeError(".google.monitoring.v3.Aggregation.groupByFields: array expected");
                            message.groupByFields = [];
                            for (var i = 0; i < object.groupByFields.length; ++i)
                                message.groupByFields[i] = String(object.groupByFields[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an Aggregation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.Aggregation
                     * @static
                     * @param {google.monitoring.v3.Aggregation} message Aggregation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Aggregation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.groupByFields = [];
                        if (options.defaults) {
                            object.alignmentPeriod = null;
                            object.perSeriesAligner = options.enums === String ? "ALIGN_NONE" : 0;
                            object.crossSeriesReducer = options.enums === String ? "REDUCE_NONE" : 0;
                        }
                        if (message.alignmentPeriod != null && message.hasOwnProperty("alignmentPeriod"))
                            object.alignmentPeriod = $root.google.protobuf.Duration.toObject(message.alignmentPeriod, options);
                        if (message.perSeriesAligner != null && message.hasOwnProperty("perSeriesAligner"))
                            object.perSeriesAligner = options.enums === String ? $root.google.monitoring.v3.Aggregation.Aligner[message.perSeriesAligner] === undefined ? message.perSeriesAligner : $root.google.monitoring.v3.Aggregation.Aligner[message.perSeriesAligner] : message.perSeriesAligner;
                        if (message.crossSeriesReducer != null && message.hasOwnProperty("crossSeriesReducer"))
                            object.crossSeriesReducer = options.enums === String ? $root.google.monitoring.v3.Aggregation.Reducer[message.crossSeriesReducer] === undefined ? message.crossSeriesReducer : $root.google.monitoring.v3.Aggregation.Reducer[message.crossSeriesReducer] : message.crossSeriesReducer;
                        if (message.groupByFields && message.groupByFields.length) {
                            object.groupByFields = [];
                            for (var j = 0; j < message.groupByFields.length; ++j)
                                object.groupByFields[j] = message.groupByFields[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Aggregation to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.Aggregation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Aggregation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Aggregation
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.Aggregation
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Aggregation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.Aggregation";
                    };
    
                    /**
                     * Aligner enum.
                     * @name google.monitoring.v3.Aggregation.Aligner
                     * @enum {number}
                     * @property {number} ALIGN_NONE=0 ALIGN_NONE value
                     * @property {number} ALIGN_DELTA=1 ALIGN_DELTA value
                     * @property {number} ALIGN_RATE=2 ALIGN_RATE value
                     * @property {number} ALIGN_INTERPOLATE=3 ALIGN_INTERPOLATE value
                     * @property {number} ALIGN_NEXT_OLDER=4 ALIGN_NEXT_OLDER value
                     * @property {number} ALIGN_MIN=10 ALIGN_MIN value
                     * @property {number} ALIGN_MAX=11 ALIGN_MAX value
                     * @property {number} ALIGN_MEAN=12 ALIGN_MEAN value
                     * @property {number} ALIGN_COUNT=13 ALIGN_COUNT value
                     * @property {number} ALIGN_SUM=14 ALIGN_SUM value
                     * @property {number} ALIGN_STDDEV=15 ALIGN_STDDEV value
                     * @property {number} ALIGN_COUNT_TRUE=16 ALIGN_COUNT_TRUE value
                     * @property {number} ALIGN_COUNT_FALSE=24 ALIGN_COUNT_FALSE value
                     * @property {number} ALIGN_FRACTION_TRUE=17 ALIGN_FRACTION_TRUE value
                     * @property {number} ALIGN_PERCENTILE_99=18 ALIGN_PERCENTILE_99 value
                     * @property {number} ALIGN_PERCENTILE_95=19 ALIGN_PERCENTILE_95 value
                     * @property {number} ALIGN_PERCENTILE_50=20 ALIGN_PERCENTILE_50 value
                     * @property {number} ALIGN_PERCENTILE_05=21 ALIGN_PERCENTILE_05 value
                     * @property {number} ALIGN_PERCENT_CHANGE=23 ALIGN_PERCENT_CHANGE value
                     */
                    Aggregation.Aligner = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "ALIGN_NONE"] = 0;
                        values[valuesById[1] = "ALIGN_DELTA"] = 1;
                        values[valuesById[2] = "ALIGN_RATE"] = 2;
                        values[valuesById[3] = "ALIGN_INTERPOLATE"] = 3;
                        values[valuesById[4] = "ALIGN_NEXT_OLDER"] = 4;
                        values[valuesById[10] = "ALIGN_MIN"] = 10;
                        values[valuesById[11] = "ALIGN_MAX"] = 11;
                        values[valuesById[12] = "ALIGN_MEAN"] = 12;
                        values[valuesById[13] = "ALIGN_COUNT"] = 13;
                        values[valuesById[14] = "ALIGN_SUM"] = 14;
                        values[valuesById[15] = "ALIGN_STDDEV"] = 15;
                        values[valuesById[16] = "ALIGN_COUNT_TRUE"] = 16;
                        values[valuesById[24] = "ALIGN_COUNT_FALSE"] = 24;
                        values[valuesById[17] = "ALIGN_FRACTION_TRUE"] = 17;
                        values[valuesById[18] = "ALIGN_PERCENTILE_99"] = 18;
                        values[valuesById[19] = "ALIGN_PERCENTILE_95"] = 19;
                        values[valuesById[20] = "ALIGN_PERCENTILE_50"] = 20;
                        values[valuesById[21] = "ALIGN_PERCENTILE_05"] = 21;
                        values[valuesById[23] = "ALIGN_PERCENT_CHANGE"] = 23;
                        return values;
                    })();
    
                    /**
                     * Reducer enum.
                     * @name google.monitoring.v3.Aggregation.Reducer
                     * @enum {number}
                     * @property {number} REDUCE_NONE=0 REDUCE_NONE value
                     * @property {number} REDUCE_MEAN=1 REDUCE_MEAN value
                     * @property {number} REDUCE_MIN=2 REDUCE_MIN value
                     * @property {number} REDUCE_MAX=3 REDUCE_MAX value
                     * @property {number} REDUCE_SUM=4 REDUCE_SUM value
                     * @property {number} REDUCE_STDDEV=5 REDUCE_STDDEV value
                     * @property {number} REDUCE_COUNT=6 REDUCE_COUNT value
                     * @property {number} REDUCE_COUNT_TRUE=7 REDUCE_COUNT_TRUE value
                     * @property {number} REDUCE_COUNT_FALSE=15 REDUCE_COUNT_FALSE value
                     * @property {number} REDUCE_FRACTION_TRUE=8 REDUCE_FRACTION_TRUE value
                     * @property {number} REDUCE_PERCENTILE_99=9 REDUCE_PERCENTILE_99 value
                     * @property {number} REDUCE_PERCENTILE_95=10 REDUCE_PERCENTILE_95 value
                     * @property {number} REDUCE_PERCENTILE_50=11 REDUCE_PERCENTILE_50 value
                     * @property {number} REDUCE_PERCENTILE_05=12 REDUCE_PERCENTILE_05 value
                     */
                    Aggregation.Reducer = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "REDUCE_NONE"] = 0;
                        values[valuesById[1] = "REDUCE_MEAN"] = 1;
                        values[valuesById[2] = "REDUCE_MIN"] = 2;
                        values[valuesById[3] = "REDUCE_MAX"] = 3;
                        values[valuesById[4] = "REDUCE_SUM"] = 4;
                        values[valuesById[5] = "REDUCE_STDDEV"] = 5;
                        values[valuesById[6] = "REDUCE_COUNT"] = 6;
                        values[valuesById[7] = "REDUCE_COUNT_TRUE"] = 7;
                        values[valuesById[15] = "REDUCE_COUNT_FALSE"] = 15;
                        values[valuesById[8] = "REDUCE_FRACTION_TRUE"] = 8;
                        values[valuesById[9] = "REDUCE_PERCENTILE_99"] = 9;
                        values[valuesById[10] = "REDUCE_PERCENTILE_95"] = 10;
                        values[valuesById[11] = "REDUCE_PERCENTILE_50"] = 11;
                        values[valuesById[12] = "REDUCE_PERCENTILE_05"] = 12;
                        return values;
                    })();
    
                    return Aggregation;
                })();
    
                /**
                 * ComparisonType enum.
                 * @name google.monitoring.v3.ComparisonType
                 * @enum {number}
                 * @property {number} COMPARISON_UNSPECIFIED=0 COMPARISON_UNSPECIFIED value
                 * @property {number} COMPARISON_GT=1 COMPARISON_GT value
                 * @property {number} COMPARISON_GE=2 COMPARISON_GE value
                 * @property {number} COMPARISON_LT=3 COMPARISON_LT value
                 * @property {number} COMPARISON_LE=4 COMPARISON_LE value
                 * @property {number} COMPARISON_EQ=5 COMPARISON_EQ value
                 * @property {number} COMPARISON_NE=6 COMPARISON_NE value
                 */
                v3.ComparisonType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "COMPARISON_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "COMPARISON_GT"] = 1;
                    values[valuesById[2] = "COMPARISON_GE"] = 2;
                    values[valuesById[3] = "COMPARISON_LT"] = 3;
                    values[valuesById[4] = "COMPARISON_LE"] = 4;
                    values[valuesById[5] = "COMPARISON_EQ"] = 5;
                    values[valuesById[6] = "COMPARISON_NE"] = 6;
                    return values;
                })();
    
                /**
                 * ServiceTier enum.
                 * @name google.monitoring.v3.ServiceTier
                 * @enum {number}
                 * @property {number} SERVICE_TIER_UNSPECIFIED=0 SERVICE_TIER_UNSPECIFIED value
                 * @property {number} SERVICE_TIER_BASIC=1 SERVICE_TIER_BASIC value
                 * @property {number} SERVICE_TIER_PREMIUM=2 SERVICE_TIER_PREMIUM value
                 */
                v3.ServiceTier = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "SERVICE_TIER_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "SERVICE_TIER_BASIC"] = 1;
                    values[valuesById[2] = "SERVICE_TIER_PREMIUM"] = 2;
                    return values;
                })();
    
                v3.MutationRecord = (function() {
    
                    /**
                     * Properties of a MutationRecord.
                     * @memberof google.monitoring.v3
                     * @interface IMutationRecord
                     * @property {google.protobuf.ITimestamp|null} [mutateTime] MutationRecord mutateTime
                     * @property {string|null} [mutatedBy] MutationRecord mutatedBy
                     */
    
                    /**
                     * Constructs a new MutationRecord.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a MutationRecord.
                     * @implements IMutationRecord
                     * @constructor
                     * @param {google.monitoring.v3.IMutationRecord=} [properties] Properties to set
                     */
                    function MutationRecord(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * MutationRecord mutateTime.
                     * @member {google.protobuf.ITimestamp|null|undefined} mutateTime
                     * @memberof google.monitoring.v3.MutationRecord
                     * @instance
                     */
                    MutationRecord.prototype.mutateTime = null;
    
                    /**
                     * MutationRecord mutatedBy.
                     * @member {string} mutatedBy
                     * @memberof google.monitoring.v3.MutationRecord
                     * @instance
                     */
                    MutationRecord.prototype.mutatedBy = "";
    
                    /**
                     * Creates a new MutationRecord instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.MutationRecord
                     * @static
                     * @param {google.monitoring.v3.IMutationRecord=} [properties] Properties to set
                     * @returns {google.monitoring.v3.MutationRecord} MutationRecord instance
                     */
                    MutationRecord.create = function create(properties) {
                        return new MutationRecord(properties);
                    };
    
                    /**
                     * Encodes the specified MutationRecord message. Does not implicitly {@link google.monitoring.v3.MutationRecord.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.MutationRecord
                     * @static
                     * @param {google.monitoring.v3.IMutationRecord} message MutationRecord message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MutationRecord.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.mutateTime != null && Object.hasOwnProperty.call(message, "mutateTime"))
                            $root.google.protobuf.Timestamp.encode(message.mutateTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.mutatedBy != null && Object.hasOwnProperty.call(message, "mutatedBy"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.mutatedBy);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified MutationRecord message, length delimited. Does not implicitly {@link google.monitoring.v3.MutationRecord.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.MutationRecord
                     * @static
                     * @param {google.monitoring.v3.IMutationRecord} message MutationRecord message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MutationRecord.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a MutationRecord message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.MutationRecord
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.MutationRecord} MutationRecord
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MutationRecord.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.MutationRecord();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.mutateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.mutatedBy = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a MutationRecord message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.MutationRecord
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.MutationRecord} MutationRecord
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MutationRecord.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a MutationRecord message.
                     * @function verify
                     * @memberof google.monitoring.v3.MutationRecord
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    MutationRecord.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.mutateTime != null && message.hasOwnProperty("mutateTime")) {
                            var error = $root.google.protobuf.Timestamp.verify(message.mutateTime);
                            if (error)
                                return "mutateTime." + error;
                        }
                        if (message.mutatedBy != null && message.hasOwnProperty("mutatedBy"))
                            if (!$util.isString(message.mutatedBy))
                                return "mutatedBy: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a MutationRecord message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.MutationRecord
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.MutationRecord} MutationRecord
                     */
                    MutationRecord.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.MutationRecord)
                            return object;
                        var message = new $root.google.monitoring.v3.MutationRecord();
                        if (object.mutateTime != null) {
                            if (typeof object.mutateTime !== "object")
                                throw TypeError(".google.monitoring.v3.MutationRecord.mutateTime: object expected");
                            message.mutateTime = $root.google.protobuf.Timestamp.fromObject(object.mutateTime);
                        }
                        if (object.mutatedBy != null)
                            message.mutatedBy = String(object.mutatedBy);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a MutationRecord message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.MutationRecord
                     * @static
                     * @param {google.monitoring.v3.MutationRecord} message MutationRecord
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    MutationRecord.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.mutateTime = null;
                            object.mutatedBy = "";
                        }
                        if (message.mutateTime != null && message.hasOwnProperty("mutateTime"))
                            object.mutateTime = $root.google.protobuf.Timestamp.toObject(message.mutateTime, options);
                        if (message.mutatedBy != null && message.hasOwnProperty("mutatedBy"))
                            object.mutatedBy = message.mutatedBy;
                        return object;
                    };
    
                    /**
                     * Converts this MutationRecord to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.MutationRecord
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    MutationRecord.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for MutationRecord
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.MutationRecord
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    MutationRecord.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.MutationRecord";
                    };
    
                    return MutationRecord;
                })();
    
                v3.AlertPolicyService = (function() {
    
                    /**
                     * Constructs a new AlertPolicyService service.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents an AlertPolicyService
                     * @extends $protobuf.rpc.Service
                     * @constructor
                     * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                     * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                     * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                     */
                    function AlertPolicyService(rpcImpl, requestDelimited, responseDelimited) {
                        $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                    }
    
                    (AlertPolicyService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = AlertPolicyService;
    
                    /**
                     * Creates new AlertPolicyService service using the specified rpc implementation.
                     * @function create
                     * @memberof google.monitoring.v3.AlertPolicyService
                     * @static
                     * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                     * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                     * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                     * @returns {AlertPolicyService} RPC service. Useful where requests and/or responses are streamed.
                     */
                    AlertPolicyService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                        return new this(rpcImpl, requestDelimited, responseDelimited);
                    };
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.AlertPolicyService|listAlertPolicies}.
                     * @memberof google.monitoring.v3.AlertPolicyService
                     * @typedef ListAlertPoliciesCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.monitoring.v3.ListAlertPoliciesResponse} [response] ListAlertPoliciesResponse
                     */
    
                    /**
                     * Calls ListAlertPolicies.
                     * @function listAlertPolicies
                     * @memberof google.monitoring.v3.AlertPolicyService
                     * @instance
                     * @param {google.monitoring.v3.IListAlertPoliciesRequest} request ListAlertPoliciesRequest message or plain object
                     * @param {google.monitoring.v3.AlertPolicyService.ListAlertPoliciesCallback} callback Node-style callback called with the error, if any, and ListAlertPoliciesResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(AlertPolicyService.prototype.listAlertPolicies = function listAlertPolicies(request, callback) {
                        return this.rpcCall(listAlertPolicies, $root.google.monitoring.v3.ListAlertPoliciesRequest, $root.google.monitoring.v3.ListAlertPoliciesResponse, request, callback);
                    }, "name", { value: "ListAlertPolicies" });
    
                    /**
                     * Calls ListAlertPolicies.
                     * @function listAlertPolicies
                     * @memberof google.monitoring.v3.AlertPolicyService
                     * @instance
                     * @param {google.monitoring.v3.IListAlertPoliciesRequest} request ListAlertPoliciesRequest message or plain object
                     * @returns {Promise<google.monitoring.v3.ListAlertPoliciesResponse>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.AlertPolicyService|getAlertPolicy}.
                     * @memberof google.monitoring.v3.AlertPolicyService
                     * @typedef GetAlertPolicyCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.monitoring.v3.AlertPolicy} [response] AlertPolicy
                     */
    
                    /**
                     * Calls GetAlertPolicy.
                     * @function getAlertPolicy
                     * @memberof google.monitoring.v3.AlertPolicyService
                     * @instance
                     * @param {google.monitoring.v3.IGetAlertPolicyRequest} request GetAlertPolicyRequest message or plain object
                     * @param {google.monitoring.v3.AlertPolicyService.GetAlertPolicyCallback} callback Node-style callback called with the error, if any, and AlertPolicy
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(AlertPolicyService.prototype.getAlertPolicy = function getAlertPolicy(request, callback) {
                        return this.rpcCall(getAlertPolicy, $root.google.monitoring.v3.GetAlertPolicyRequest, $root.google.monitoring.v3.AlertPolicy, request, callback);
                    }, "name", { value: "GetAlertPolicy" });
    
                    /**
                     * Calls GetAlertPolicy.
                     * @function getAlertPolicy
                     * @memberof google.monitoring.v3.AlertPolicyService
                     * @instance
                     * @param {google.monitoring.v3.IGetAlertPolicyRequest} request GetAlertPolicyRequest message or plain object
                     * @returns {Promise<google.monitoring.v3.AlertPolicy>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.AlertPolicyService|createAlertPolicy}.
                     * @memberof google.monitoring.v3.AlertPolicyService
                     * @typedef CreateAlertPolicyCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.monitoring.v3.AlertPolicy} [response] AlertPolicy
                     */
    
                    /**
                     * Calls CreateAlertPolicy.
                     * @function createAlertPolicy
                     * @memberof google.monitoring.v3.AlertPolicyService
                     * @instance
                     * @param {google.monitoring.v3.ICreateAlertPolicyRequest} request CreateAlertPolicyRequest message or plain object
                     * @param {google.monitoring.v3.AlertPolicyService.CreateAlertPolicyCallback} callback Node-style callback called with the error, if any, and AlertPolicy
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(AlertPolicyService.prototype.createAlertPolicy = function createAlertPolicy(request, callback) {
                        return this.rpcCall(createAlertPolicy, $root.google.monitoring.v3.CreateAlertPolicyRequest, $root.google.monitoring.v3.AlertPolicy, request, callback);
                    }, "name", { value: "CreateAlertPolicy" });
    
                    /**
                     * Calls CreateAlertPolicy.
                     * @function createAlertPolicy
                     * @memberof google.monitoring.v3.AlertPolicyService
                     * @instance
                     * @param {google.monitoring.v3.ICreateAlertPolicyRequest} request CreateAlertPolicyRequest message or plain object
                     * @returns {Promise<google.monitoring.v3.AlertPolicy>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.AlertPolicyService|deleteAlertPolicy}.
                     * @memberof google.monitoring.v3.AlertPolicyService
                     * @typedef DeleteAlertPolicyCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.protobuf.Empty} [response] Empty
                     */
    
                    /**
                     * Calls DeleteAlertPolicy.
                     * @function deleteAlertPolicy
                     * @memberof google.monitoring.v3.AlertPolicyService
                     * @instance
                     * @param {google.monitoring.v3.IDeleteAlertPolicyRequest} request DeleteAlertPolicyRequest message or plain object
                     * @param {google.monitoring.v3.AlertPolicyService.DeleteAlertPolicyCallback} callback Node-style callback called with the error, if any, and Empty
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(AlertPolicyService.prototype.deleteAlertPolicy = function deleteAlertPolicy(request, callback) {
                        return this.rpcCall(deleteAlertPolicy, $root.google.monitoring.v3.DeleteAlertPolicyRequest, $root.google.protobuf.Empty, request, callback);
                    }, "name", { value: "DeleteAlertPolicy" });
    
                    /**
                     * Calls DeleteAlertPolicy.
                     * @function deleteAlertPolicy
                     * @memberof google.monitoring.v3.AlertPolicyService
                     * @instance
                     * @param {google.monitoring.v3.IDeleteAlertPolicyRequest} request DeleteAlertPolicyRequest message or plain object
                     * @returns {Promise<google.protobuf.Empty>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.AlertPolicyService|updateAlertPolicy}.
                     * @memberof google.monitoring.v3.AlertPolicyService
                     * @typedef UpdateAlertPolicyCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.monitoring.v3.AlertPolicy} [response] AlertPolicy
                     */
    
                    /**
                     * Calls UpdateAlertPolicy.
                     * @function updateAlertPolicy
                     * @memberof google.monitoring.v3.AlertPolicyService
                     * @instance
                     * @param {google.monitoring.v3.IUpdateAlertPolicyRequest} request UpdateAlertPolicyRequest message or plain object
                     * @param {google.monitoring.v3.AlertPolicyService.UpdateAlertPolicyCallback} callback Node-style callback called with the error, if any, and AlertPolicy
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(AlertPolicyService.prototype.updateAlertPolicy = function updateAlertPolicy(request, callback) {
                        return this.rpcCall(updateAlertPolicy, $root.google.monitoring.v3.UpdateAlertPolicyRequest, $root.google.monitoring.v3.AlertPolicy, request, callback);
                    }, "name", { value: "UpdateAlertPolicy" });
    
                    /**
                     * Calls UpdateAlertPolicy.
                     * @function updateAlertPolicy
                     * @memberof google.monitoring.v3.AlertPolicyService
                     * @instance
                     * @param {google.monitoring.v3.IUpdateAlertPolicyRequest} request UpdateAlertPolicyRequest message or plain object
                     * @returns {Promise<google.monitoring.v3.AlertPolicy>} Promise
                     * @variation 2
                     */
    
                    return AlertPolicyService;
                })();
    
                v3.CreateAlertPolicyRequest = (function() {
    
                    /**
                     * Properties of a CreateAlertPolicyRequest.
                     * @memberof google.monitoring.v3
                     * @interface ICreateAlertPolicyRequest
                     * @property {string|null} [name] CreateAlertPolicyRequest name
                     * @property {google.monitoring.v3.IAlertPolicy|null} [alertPolicy] CreateAlertPolicyRequest alertPolicy
                     */
    
                    /**
                     * Constructs a new CreateAlertPolicyRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a CreateAlertPolicyRequest.
                     * @implements ICreateAlertPolicyRequest
                     * @constructor
                     * @param {google.monitoring.v3.ICreateAlertPolicyRequest=} [properties] Properties to set
                     */
                    function CreateAlertPolicyRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * CreateAlertPolicyRequest name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.CreateAlertPolicyRequest
                     * @instance
                     */
                    CreateAlertPolicyRequest.prototype.name = "";
    
                    /**
                     * CreateAlertPolicyRequest alertPolicy.
                     * @member {google.monitoring.v3.IAlertPolicy|null|undefined} alertPolicy
                     * @memberof google.monitoring.v3.CreateAlertPolicyRequest
                     * @instance
                     */
                    CreateAlertPolicyRequest.prototype.alertPolicy = null;
    
                    /**
                     * Creates a new CreateAlertPolicyRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.CreateAlertPolicyRequest
                     * @static
                     * @param {google.monitoring.v3.ICreateAlertPolicyRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.CreateAlertPolicyRequest} CreateAlertPolicyRequest instance
                     */
                    CreateAlertPolicyRequest.create = function create(properties) {
                        return new CreateAlertPolicyRequest(properties);
                    };
    
                    /**
                     * Encodes the specified CreateAlertPolicyRequest message. Does not implicitly {@link google.monitoring.v3.CreateAlertPolicyRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.CreateAlertPolicyRequest
                     * @static
                     * @param {google.monitoring.v3.ICreateAlertPolicyRequest} message CreateAlertPolicyRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CreateAlertPolicyRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.alertPolicy != null && Object.hasOwnProperty.call(message, "alertPolicy"))
                            $root.google.monitoring.v3.AlertPolicy.encode(message.alertPolicy, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified CreateAlertPolicyRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.CreateAlertPolicyRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.CreateAlertPolicyRequest
                     * @static
                     * @param {google.monitoring.v3.ICreateAlertPolicyRequest} message CreateAlertPolicyRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CreateAlertPolicyRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a CreateAlertPolicyRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.CreateAlertPolicyRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.CreateAlertPolicyRequest} CreateAlertPolicyRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CreateAlertPolicyRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.CreateAlertPolicyRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 3: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.alertPolicy = $root.google.monitoring.v3.AlertPolicy.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a CreateAlertPolicyRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.CreateAlertPolicyRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.CreateAlertPolicyRequest} CreateAlertPolicyRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CreateAlertPolicyRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a CreateAlertPolicyRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.CreateAlertPolicyRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    CreateAlertPolicyRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.alertPolicy != null && message.hasOwnProperty("alertPolicy")) {
                            var error = $root.google.monitoring.v3.AlertPolicy.verify(message.alertPolicy);
                            if (error)
                                return "alertPolicy." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a CreateAlertPolicyRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.CreateAlertPolicyRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.CreateAlertPolicyRequest} CreateAlertPolicyRequest
                     */
                    CreateAlertPolicyRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.CreateAlertPolicyRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.CreateAlertPolicyRequest();
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.alertPolicy != null) {
                            if (typeof object.alertPolicy !== "object")
                                throw TypeError(".google.monitoring.v3.CreateAlertPolicyRequest.alertPolicy: object expected");
                            message.alertPolicy = $root.google.monitoring.v3.AlertPolicy.fromObject(object.alertPolicy);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a CreateAlertPolicyRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.CreateAlertPolicyRequest
                     * @static
                     * @param {google.monitoring.v3.CreateAlertPolicyRequest} message CreateAlertPolicyRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    CreateAlertPolicyRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.alertPolicy = null;
                            object.name = "";
                        }
                        if (message.alertPolicy != null && message.hasOwnProperty("alertPolicy"))
                            object.alertPolicy = $root.google.monitoring.v3.AlertPolicy.toObject(message.alertPolicy, options);
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this CreateAlertPolicyRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.CreateAlertPolicyRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    CreateAlertPolicyRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for CreateAlertPolicyRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.CreateAlertPolicyRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    CreateAlertPolicyRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.CreateAlertPolicyRequest";
                    };
    
                    return CreateAlertPolicyRequest;
                })();
    
                v3.GetAlertPolicyRequest = (function() {
    
                    /**
                     * Properties of a GetAlertPolicyRequest.
                     * @memberof google.monitoring.v3
                     * @interface IGetAlertPolicyRequest
                     * @property {string|null} [name] GetAlertPolicyRequest name
                     */
    
                    /**
                     * Constructs a new GetAlertPolicyRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a GetAlertPolicyRequest.
                     * @implements IGetAlertPolicyRequest
                     * @constructor
                     * @param {google.monitoring.v3.IGetAlertPolicyRequest=} [properties] Properties to set
                     */
                    function GetAlertPolicyRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * GetAlertPolicyRequest name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.GetAlertPolicyRequest
                     * @instance
                     */
                    GetAlertPolicyRequest.prototype.name = "";
    
                    /**
                     * Creates a new GetAlertPolicyRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.GetAlertPolicyRequest
                     * @static
                     * @param {google.monitoring.v3.IGetAlertPolicyRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.GetAlertPolicyRequest} GetAlertPolicyRequest instance
                     */
                    GetAlertPolicyRequest.create = function create(properties) {
                        return new GetAlertPolicyRequest(properties);
                    };
    
                    /**
                     * Encodes the specified GetAlertPolicyRequest message. Does not implicitly {@link google.monitoring.v3.GetAlertPolicyRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.GetAlertPolicyRequest
                     * @static
                     * @param {google.monitoring.v3.IGetAlertPolicyRequest} message GetAlertPolicyRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetAlertPolicyRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified GetAlertPolicyRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.GetAlertPolicyRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.GetAlertPolicyRequest
                     * @static
                     * @param {google.monitoring.v3.IGetAlertPolicyRequest} message GetAlertPolicyRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetAlertPolicyRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a GetAlertPolicyRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.GetAlertPolicyRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.GetAlertPolicyRequest} GetAlertPolicyRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetAlertPolicyRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.GetAlertPolicyRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 3: {
                                    message.name = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a GetAlertPolicyRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.GetAlertPolicyRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.GetAlertPolicyRequest} GetAlertPolicyRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetAlertPolicyRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a GetAlertPolicyRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.GetAlertPolicyRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    GetAlertPolicyRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a GetAlertPolicyRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.GetAlertPolicyRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.GetAlertPolicyRequest} GetAlertPolicyRequest
                     */
                    GetAlertPolicyRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.GetAlertPolicyRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.GetAlertPolicyRequest();
                        if (object.name != null)
                            message.name = String(object.name);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a GetAlertPolicyRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.GetAlertPolicyRequest
                     * @static
                     * @param {google.monitoring.v3.GetAlertPolicyRequest} message GetAlertPolicyRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    GetAlertPolicyRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.name = "";
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this GetAlertPolicyRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.GetAlertPolicyRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    GetAlertPolicyRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for GetAlertPolicyRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.GetAlertPolicyRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    GetAlertPolicyRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.GetAlertPolicyRequest";
                    };
    
                    return GetAlertPolicyRequest;
                })();
    
                v3.ListAlertPoliciesRequest = (function() {
    
                    /**
                     * Properties of a ListAlertPoliciesRequest.
                     * @memberof google.monitoring.v3
                     * @interface IListAlertPoliciesRequest
                     * @property {string|null} [name] ListAlertPoliciesRequest name
                     * @property {string|null} [filter] ListAlertPoliciesRequest filter
                     * @property {string|null} [orderBy] ListAlertPoliciesRequest orderBy
                     * @property {number|null} [pageSize] ListAlertPoliciesRequest pageSize
                     * @property {string|null} [pageToken] ListAlertPoliciesRequest pageToken
                     */
    
                    /**
                     * Constructs a new ListAlertPoliciesRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a ListAlertPoliciesRequest.
                     * @implements IListAlertPoliciesRequest
                     * @constructor
                     * @param {google.monitoring.v3.IListAlertPoliciesRequest=} [properties] Properties to set
                     */
                    function ListAlertPoliciesRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListAlertPoliciesRequest name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.ListAlertPoliciesRequest
                     * @instance
                     */
                    ListAlertPoliciesRequest.prototype.name = "";
    
                    /**
                     * ListAlertPoliciesRequest filter.
                     * @member {string} filter
                     * @memberof google.monitoring.v3.ListAlertPoliciesRequest
                     * @instance
                     */
                    ListAlertPoliciesRequest.prototype.filter = "";
    
                    /**
                     * ListAlertPoliciesRequest orderBy.
                     * @member {string} orderBy
                     * @memberof google.monitoring.v3.ListAlertPoliciesRequest
                     * @instance
                     */
                    ListAlertPoliciesRequest.prototype.orderBy = "";
    
                    /**
                     * ListAlertPoliciesRequest pageSize.
                     * @member {number} pageSize
                     * @memberof google.monitoring.v3.ListAlertPoliciesRequest
                     * @instance
                     */
                    ListAlertPoliciesRequest.prototype.pageSize = 0;
    
                    /**
                     * ListAlertPoliciesRequest pageToken.
                     * @member {string} pageToken
                     * @memberof google.monitoring.v3.ListAlertPoliciesRequest
                     * @instance
                     */
                    ListAlertPoliciesRequest.prototype.pageToken = "";
    
                    /**
                     * Creates a new ListAlertPoliciesRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.ListAlertPoliciesRequest
                     * @static
                     * @param {google.monitoring.v3.IListAlertPoliciesRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.ListAlertPoliciesRequest} ListAlertPoliciesRequest instance
                     */
                    ListAlertPoliciesRequest.create = function create(properties) {
                        return new ListAlertPoliciesRequest(properties);
                    };
    
                    /**
                     * Encodes the specified ListAlertPoliciesRequest message. Does not implicitly {@link google.monitoring.v3.ListAlertPoliciesRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.ListAlertPoliciesRequest
                     * @static
                     * @param {google.monitoring.v3.IListAlertPoliciesRequest} message ListAlertPoliciesRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListAlertPoliciesRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                        if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.name);
                        if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.filter);
                        if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                            writer.uint32(/* id 6, wireType 2 =*/50).string(message.orderBy);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ListAlertPoliciesRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.ListAlertPoliciesRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.ListAlertPoliciesRequest
                     * @static
                     * @param {google.monitoring.v3.IListAlertPoliciesRequest} message ListAlertPoliciesRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListAlertPoliciesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ListAlertPoliciesRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.ListAlertPoliciesRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.ListAlertPoliciesRequest} ListAlertPoliciesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListAlertPoliciesRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.ListAlertPoliciesRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 4: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 5: {
                                    message.filter = reader.string();
                                    break;
                                }
                            case 6: {
                                    message.orderBy = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.pageSize = reader.int32();
                                    break;
                                }
                            case 3: {
                                    message.pageToken = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ListAlertPoliciesRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.ListAlertPoliciesRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.ListAlertPoliciesRequest} ListAlertPoliciesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListAlertPoliciesRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ListAlertPoliciesRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.ListAlertPoliciesRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ListAlertPoliciesRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.filter != null && message.hasOwnProperty("filter"))
                            if (!$util.isString(message.filter))
                                return "filter: string expected";
                        if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                            if (!$util.isString(message.orderBy))
                                return "orderBy: string expected";
                        if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                            if (!$util.isInteger(message.pageSize))
                                return "pageSize: integer expected";
                        if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                            if (!$util.isString(message.pageToken))
                                return "pageToken: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a ListAlertPoliciesRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.ListAlertPoliciesRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.ListAlertPoliciesRequest} ListAlertPoliciesRequest
                     */
                    ListAlertPoliciesRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.ListAlertPoliciesRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.ListAlertPoliciesRequest();
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.filter != null)
                            message.filter = String(object.filter);
                        if (object.orderBy != null)
                            message.orderBy = String(object.orderBy);
                        if (object.pageSize != null)
                            message.pageSize = object.pageSize | 0;
                        if (object.pageToken != null)
                            message.pageToken = String(object.pageToken);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ListAlertPoliciesRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.ListAlertPoliciesRequest
                     * @static
                     * @param {google.monitoring.v3.ListAlertPoliciesRequest} message ListAlertPoliciesRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ListAlertPoliciesRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.pageSize = 0;
                            object.pageToken = "";
                            object.name = "";
                            object.filter = "";
                            object.orderBy = "";
                        }
                        if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                            object.pageSize = message.pageSize;
                        if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                            object.pageToken = message.pageToken;
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        if (message.filter != null && message.hasOwnProperty("filter"))
                            object.filter = message.filter;
                        if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                            object.orderBy = message.orderBy;
                        return object;
                    };
    
                    /**
                     * Converts this ListAlertPoliciesRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.ListAlertPoliciesRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ListAlertPoliciesRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ListAlertPoliciesRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.ListAlertPoliciesRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ListAlertPoliciesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.ListAlertPoliciesRequest";
                    };
    
                    return ListAlertPoliciesRequest;
                })();
    
                v3.ListAlertPoliciesResponse = (function() {
    
                    /**
                     * Properties of a ListAlertPoliciesResponse.
                     * @memberof google.monitoring.v3
                     * @interface IListAlertPoliciesResponse
                     * @property {Array.<google.monitoring.v3.IAlertPolicy>|null} [alertPolicies] ListAlertPoliciesResponse alertPolicies
                     * @property {string|null} [nextPageToken] ListAlertPoliciesResponse nextPageToken
                     * @property {number|null} [totalSize] ListAlertPoliciesResponse totalSize
                     */
    
                    /**
                     * Constructs a new ListAlertPoliciesResponse.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a ListAlertPoliciesResponse.
                     * @implements IListAlertPoliciesResponse
                     * @constructor
                     * @param {google.monitoring.v3.IListAlertPoliciesResponse=} [properties] Properties to set
                     */
                    function ListAlertPoliciesResponse(properties) {
                        this.alertPolicies = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListAlertPoliciesResponse alertPolicies.
                     * @member {Array.<google.monitoring.v3.IAlertPolicy>} alertPolicies
                     * @memberof google.monitoring.v3.ListAlertPoliciesResponse
                     * @instance
                     */
                    ListAlertPoliciesResponse.prototype.alertPolicies = $util.emptyArray;
    
                    /**
                     * ListAlertPoliciesResponse nextPageToken.
                     * @member {string} nextPageToken
                     * @memberof google.monitoring.v3.ListAlertPoliciesResponse
                     * @instance
                     */
                    ListAlertPoliciesResponse.prototype.nextPageToken = "";
    
                    /**
                     * ListAlertPoliciesResponse totalSize.
                     * @member {number} totalSize
                     * @memberof google.monitoring.v3.ListAlertPoliciesResponse
                     * @instance
                     */
                    ListAlertPoliciesResponse.prototype.totalSize = 0;
    
                    /**
                     * Creates a new ListAlertPoliciesResponse instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.ListAlertPoliciesResponse
                     * @static
                     * @param {google.monitoring.v3.IListAlertPoliciesResponse=} [properties] Properties to set
                     * @returns {google.monitoring.v3.ListAlertPoliciesResponse} ListAlertPoliciesResponse instance
                     */
                    ListAlertPoliciesResponse.create = function create(properties) {
                        return new ListAlertPoliciesResponse(properties);
                    };
    
                    /**
                     * Encodes the specified ListAlertPoliciesResponse message. Does not implicitly {@link google.monitoring.v3.ListAlertPoliciesResponse.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.ListAlertPoliciesResponse
                     * @static
                     * @param {google.monitoring.v3.IListAlertPoliciesResponse} message ListAlertPoliciesResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListAlertPoliciesResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                        if (message.alertPolicies != null && message.alertPolicies.length)
                            for (var i = 0; i < message.alertPolicies.length; ++i)
                                $root.google.monitoring.v3.AlertPolicy.encode(message.alertPolicies[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        if (message.totalSize != null && Object.hasOwnProperty.call(message, "totalSize"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.totalSize);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ListAlertPoliciesResponse message, length delimited. Does not implicitly {@link google.monitoring.v3.ListAlertPoliciesResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.ListAlertPoliciesResponse
                     * @static
                     * @param {google.monitoring.v3.IListAlertPoliciesResponse} message ListAlertPoliciesResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListAlertPoliciesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ListAlertPoliciesResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.ListAlertPoliciesResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.ListAlertPoliciesResponse} ListAlertPoliciesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListAlertPoliciesResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.ListAlertPoliciesResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 3: {
                                    if (!(message.alertPolicies && message.alertPolicies.length))
                                        message.alertPolicies = [];
                                    message.alertPolicies.push($root.google.monitoring.v3.AlertPolicy.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 2: {
                                    message.nextPageToken = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.totalSize = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ListAlertPoliciesResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.ListAlertPoliciesResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.ListAlertPoliciesResponse} ListAlertPoliciesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListAlertPoliciesResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ListAlertPoliciesResponse message.
                     * @function verify
                     * @memberof google.monitoring.v3.ListAlertPoliciesResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ListAlertPoliciesResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.alertPolicies != null && message.hasOwnProperty("alertPolicies")) {
                            if (!Array.isArray(message.alertPolicies))
                                return "alertPolicies: array expected";
                            for (var i = 0; i < message.alertPolicies.length; ++i) {
                                var error = $root.google.monitoring.v3.AlertPolicy.verify(message.alertPolicies[i]);
                                if (error)
                                    return "alertPolicies." + error;
                            }
                        }
                        if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                            if (!$util.isString(message.nextPageToken))
                                return "nextPageToken: string expected";
                        if (message.totalSize != null && message.hasOwnProperty("totalSize"))
                            if (!$util.isInteger(message.totalSize))
                                return "totalSize: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ListAlertPoliciesResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.ListAlertPoliciesResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.ListAlertPoliciesResponse} ListAlertPoliciesResponse
                     */
                    ListAlertPoliciesResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.ListAlertPoliciesResponse)
                            return object;
                        var message = new $root.google.monitoring.v3.ListAlertPoliciesResponse();
                        if (object.alertPolicies) {
                            if (!Array.isArray(object.alertPolicies))
                                throw TypeError(".google.monitoring.v3.ListAlertPoliciesResponse.alertPolicies: array expected");
                            message.alertPolicies = [];
                            for (var i = 0; i < object.alertPolicies.length; ++i) {
                                if (typeof object.alertPolicies[i] !== "object")
                                    throw TypeError(".google.monitoring.v3.ListAlertPoliciesResponse.alertPolicies: object expected");
                                message.alertPolicies[i] = $root.google.monitoring.v3.AlertPolicy.fromObject(object.alertPolicies[i]);
                            }
                        }
                        if (object.nextPageToken != null)
                            message.nextPageToken = String(object.nextPageToken);
                        if (object.totalSize != null)
                            message.totalSize = object.totalSize | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ListAlertPoliciesResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.ListAlertPoliciesResponse
                     * @static
                     * @param {google.monitoring.v3.ListAlertPoliciesResponse} message ListAlertPoliciesResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ListAlertPoliciesResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.alertPolicies = [];
                        if (options.defaults) {
                            object.nextPageToken = "";
                            object.totalSize = 0;
                        }
                        if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                            object.nextPageToken = message.nextPageToken;
                        if (message.alertPolicies && message.alertPolicies.length) {
                            object.alertPolicies = [];
                            for (var j = 0; j < message.alertPolicies.length; ++j)
                                object.alertPolicies[j] = $root.google.monitoring.v3.AlertPolicy.toObject(message.alertPolicies[j], options);
                        }
                        if (message.totalSize != null && message.hasOwnProperty("totalSize"))
                            object.totalSize = message.totalSize;
                        return object;
                    };
    
                    /**
                     * Converts this ListAlertPoliciesResponse to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.ListAlertPoliciesResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ListAlertPoliciesResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ListAlertPoliciesResponse
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.ListAlertPoliciesResponse
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ListAlertPoliciesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.ListAlertPoliciesResponse";
                    };
    
                    return ListAlertPoliciesResponse;
                })();
    
                v3.UpdateAlertPolicyRequest = (function() {
    
                    /**
                     * Properties of an UpdateAlertPolicyRequest.
                     * @memberof google.monitoring.v3
                     * @interface IUpdateAlertPolicyRequest
                     * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateAlertPolicyRequest updateMask
                     * @property {google.monitoring.v3.IAlertPolicy|null} [alertPolicy] UpdateAlertPolicyRequest alertPolicy
                     */
    
                    /**
                     * Constructs a new UpdateAlertPolicyRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents an UpdateAlertPolicyRequest.
                     * @implements IUpdateAlertPolicyRequest
                     * @constructor
                     * @param {google.monitoring.v3.IUpdateAlertPolicyRequest=} [properties] Properties to set
                     */
                    function UpdateAlertPolicyRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * UpdateAlertPolicyRequest updateMask.
                     * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                     * @memberof google.monitoring.v3.UpdateAlertPolicyRequest
                     * @instance
                     */
                    UpdateAlertPolicyRequest.prototype.updateMask = null;
    
                    /**
                     * UpdateAlertPolicyRequest alertPolicy.
                     * @member {google.monitoring.v3.IAlertPolicy|null|undefined} alertPolicy
                     * @memberof google.monitoring.v3.UpdateAlertPolicyRequest
                     * @instance
                     */
                    UpdateAlertPolicyRequest.prototype.alertPolicy = null;
    
                    /**
                     * Creates a new UpdateAlertPolicyRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.UpdateAlertPolicyRequest
                     * @static
                     * @param {google.monitoring.v3.IUpdateAlertPolicyRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.UpdateAlertPolicyRequest} UpdateAlertPolicyRequest instance
                     */
                    UpdateAlertPolicyRequest.create = function create(properties) {
                        return new UpdateAlertPolicyRequest(properties);
                    };
    
                    /**
                     * Encodes the specified UpdateAlertPolicyRequest message. Does not implicitly {@link google.monitoring.v3.UpdateAlertPolicyRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.UpdateAlertPolicyRequest
                     * @static
                     * @param {google.monitoring.v3.IUpdateAlertPolicyRequest} message UpdateAlertPolicyRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UpdateAlertPolicyRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                            $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.alertPolicy != null && Object.hasOwnProperty.call(message, "alertPolicy"))
                            $root.google.monitoring.v3.AlertPolicy.encode(message.alertPolicy, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified UpdateAlertPolicyRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.UpdateAlertPolicyRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.UpdateAlertPolicyRequest
                     * @static
                     * @param {google.monitoring.v3.IUpdateAlertPolicyRequest} message UpdateAlertPolicyRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UpdateAlertPolicyRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an UpdateAlertPolicyRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.UpdateAlertPolicyRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.UpdateAlertPolicyRequest} UpdateAlertPolicyRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UpdateAlertPolicyRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.UpdateAlertPolicyRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 2: {
                                    message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                    break;
                                }
                            case 3: {
                                    message.alertPolicy = $root.google.monitoring.v3.AlertPolicy.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an UpdateAlertPolicyRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.UpdateAlertPolicyRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.UpdateAlertPolicyRequest} UpdateAlertPolicyRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UpdateAlertPolicyRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an UpdateAlertPolicyRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.UpdateAlertPolicyRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    UpdateAlertPolicyRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                            var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                            if (error)
                                return "updateMask." + error;
                        }
                        if (message.alertPolicy != null && message.hasOwnProperty("alertPolicy")) {
                            var error = $root.google.monitoring.v3.AlertPolicy.verify(message.alertPolicy);
                            if (error)
                                return "alertPolicy." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an UpdateAlertPolicyRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.UpdateAlertPolicyRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.UpdateAlertPolicyRequest} UpdateAlertPolicyRequest
                     */
                    UpdateAlertPolicyRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.UpdateAlertPolicyRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.UpdateAlertPolicyRequest();
                        if (object.updateMask != null) {
                            if (typeof object.updateMask !== "object")
                                throw TypeError(".google.monitoring.v3.UpdateAlertPolicyRequest.updateMask: object expected");
                            message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                        }
                        if (object.alertPolicy != null) {
                            if (typeof object.alertPolicy !== "object")
                                throw TypeError(".google.monitoring.v3.UpdateAlertPolicyRequest.alertPolicy: object expected");
                            message.alertPolicy = $root.google.monitoring.v3.AlertPolicy.fromObject(object.alertPolicy);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an UpdateAlertPolicyRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.UpdateAlertPolicyRequest
                     * @static
                     * @param {google.monitoring.v3.UpdateAlertPolicyRequest} message UpdateAlertPolicyRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    UpdateAlertPolicyRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.updateMask = null;
                            object.alertPolicy = null;
                        }
                        if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                            object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                        if (message.alertPolicy != null && message.hasOwnProperty("alertPolicy"))
                            object.alertPolicy = $root.google.monitoring.v3.AlertPolicy.toObject(message.alertPolicy, options);
                        return object;
                    };
    
                    /**
                     * Converts this UpdateAlertPolicyRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.UpdateAlertPolicyRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    UpdateAlertPolicyRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for UpdateAlertPolicyRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.UpdateAlertPolicyRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    UpdateAlertPolicyRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.UpdateAlertPolicyRequest";
                    };
    
                    return UpdateAlertPolicyRequest;
                })();
    
                v3.DeleteAlertPolicyRequest = (function() {
    
                    /**
                     * Properties of a DeleteAlertPolicyRequest.
                     * @memberof google.monitoring.v3
                     * @interface IDeleteAlertPolicyRequest
                     * @property {string|null} [name] DeleteAlertPolicyRequest name
                     */
    
                    /**
                     * Constructs a new DeleteAlertPolicyRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a DeleteAlertPolicyRequest.
                     * @implements IDeleteAlertPolicyRequest
                     * @constructor
                     * @param {google.monitoring.v3.IDeleteAlertPolicyRequest=} [properties] Properties to set
                     */
                    function DeleteAlertPolicyRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * DeleteAlertPolicyRequest name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.DeleteAlertPolicyRequest
                     * @instance
                     */
                    DeleteAlertPolicyRequest.prototype.name = "";
    
                    /**
                     * Creates a new DeleteAlertPolicyRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.DeleteAlertPolicyRequest
                     * @static
                     * @param {google.monitoring.v3.IDeleteAlertPolicyRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.DeleteAlertPolicyRequest} DeleteAlertPolicyRequest instance
                     */
                    DeleteAlertPolicyRequest.create = function create(properties) {
                        return new DeleteAlertPolicyRequest(properties);
                    };
    
                    /**
                     * Encodes the specified DeleteAlertPolicyRequest message. Does not implicitly {@link google.monitoring.v3.DeleteAlertPolicyRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.DeleteAlertPolicyRequest
                     * @static
                     * @param {google.monitoring.v3.IDeleteAlertPolicyRequest} message DeleteAlertPolicyRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DeleteAlertPolicyRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified DeleteAlertPolicyRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.DeleteAlertPolicyRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.DeleteAlertPolicyRequest
                     * @static
                     * @param {google.monitoring.v3.IDeleteAlertPolicyRequest} message DeleteAlertPolicyRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DeleteAlertPolicyRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a DeleteAlertPolicyRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.DeleteAlertPolicyRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.DeleteAlertPolicyRequest} DeleteAlertPolicyRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DeleteAlertPolicyRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.DeleteAlertPolicyRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 3: {
                                    message.name = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a DeleteAlertPolicyRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.DeleteAlertPolicyRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.DeleteAlertPolicyRequest} DeleteAlertPolicyRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DeleteAlertPolicyRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a DeleteAlertPolicyRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.DeleteAlertPolicyRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    DeleteAlertPolicyRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a DeleteAlertPolicyRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.DeleteAlertPolicyRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.DeleteAlertPolicyRequest} DeleteAlertPolicyRequest
                     */
                    DeleteAlertPolicyRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.DeleteAlertPolicyRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.DeleteAlertPolicyRequest();
                        if (object.name != null)
                            message.name = String(object.name);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a DeleteAlertPolicyRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.DeleteAlertPolicyRequest
                     * @static
                     * @param {google.monitoring.v3.DeleteAlertPolicyRequest} message DeleteAlertPolicyRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    DeleteAlertPolicyRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.name = "";
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this DeleteAlertPolicyRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.DeleteAlertPolicyRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    DeleteAlertPolicyRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for DeleteAlertPolicyRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.DeleteAlertPolicyRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    DeleteAlertPolicyRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.DeleteAlertPolicyRequest";
                    };
    
                    return DeleteAlertPolicyRequest;
                })();
    
                v3.DroppedLabels = (function() {
    
                    /**
                     * Properties of a DroppedLabels.
                     * @memberof google.monitoring.v3
                     * @interface IDroppedLabels
                     * @property {Object.<string,string>|null} [label] DroppedLabels label
                     */
    
                    /**
                     * Constructs a new DroppedLabels.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a DroppedLabels.
                     * @implements IDroppedLabels
                     * @constructor
                     * @param {google.monitoring.v3.IDroppedLabels=} [properties] Properties to set
                     */
                    function DroppedLabels(properties) {
                        this.label = {};
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * DroppedLabels label.
                     * @member {Object.<string,string>} label
                     * @memberof google.monitoring.v3.DroppedLabels
                     * @instance
                     */
                    DroppedLabels.prototype.label = $util.emptyObject;
    
                    /**
                     * Creates a new DroppedLabels instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.DroppedLabels
                     * @static
                     * @param {google.monitoring.v3.IDroppedLabels=} [properties] Properties to set
                     * @returns {google.monitoring.v3.DroppedLabels} DroppedLabels instance
                     */
                    DroppedLabels.create = function create(properties) {
                        return new DroppedLabels(properties);
                    };
    
                    /**
                     * Encodes the specified DroppedLabels message. Does not implicitly {@link google.monitoring.v3.DroppedLabels.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.DroppedLabels
                     * @static
                     * @param {google.monitoring.v3.IDroppedLabels} message DroppedLabels message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DroppedLabels.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.label != null && Object.hasOwnProperty.call(message, "label"))
                            for (var keys = Object.keys(message.label), i = 0; i < keys.length; ++i)
                                writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.label[keys[i]]).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified DroppedLabels message, length delimited. Does not implicitly {@link google.monitoring.v3.DroppedLabels.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.DroppedLabels
                     * @static
                     * @param {google.monitoring.v3.IDroppedLabels} message DroppedLabels message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DroppedLabels.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a DroppedLabels message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.DroppedLabels
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.DroppedLabels} DroppedLabels
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DroppedLabels.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.DroppedLabels(), key, value;
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (message.label === $util.emptyObject)
                                        message.label = {};
                                    var end2 = reader.uint32() + reader.pos;
                                    key = "";
                                    value = "";
                                    while (reader.pos < end2) {
                                        var tag2 = reader.uint32();
                                        switch (tag2 >>> 3) {
                                        case 1:
                                            key = reader.string();
                                            break;
                                        case 2:
                                            value = reader.string();
                                            break;
                                        default:
                                            reader.skipType(tag2 & 7);
                                            break;
                                        }
                                    }
                                    message.label[key] = value;
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a DroppedLabels message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.DroppedLabels
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.DroppedLabels} DroppedLabels
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DroppedLabels.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a DroppedLabels message.
                     * @function verify
                     * @memberof google.monitoring.v3.DroppedLabels
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    DroppedLabels.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.label != null && message.hasOwnProperty("label")) {
                            if (!$util.isObject(message.label))
                                return "label: object expected";
                            var key = Object.keys(message.label);
                            for (var i = 0; i < key.length; ++i)
                                if (!$util.isString(message.label[key[i]]))
                                    return "label: string{k:string} expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a DroppedLabels message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.DroppedLabels
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.DroppedLabels} DroppedLabels
                     */
                    DroppedLabels.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.DroppedLabels)
                            return object;
                        var message = new $root.google.monitoring.v3.DroppedLabels();
                        if (object.label) {
                            if (typeof object.label !== "object")
                                throw TypeError(".google.monitoring.v3.DroppedLabels.label: object expected");
                            message.label = {};
                            for (var keys = Object.keys(object.label), i = 0; i < keys.length; ++i)
                                message.label[keys[i]] = String(object.label[keys[i]]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a DroppedLabels message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.DroppedLabels
                     * @static
                     * @param {google.monitoring.v3.DroppedLabels} message DroppedLabels
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    DroppedLabels.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.objects || options.defaults)
                            object.label = {};
                        var keys2;
                        if (message.label && (keys2 = Object.keys(message.label)).length) {
                            object.label = {};
                            for (var j = 0; j < keys2.length; ++j)
                                object.label[keys2[j]] = message.label[keys2[j]];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this DroppedLabels to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.DroppedLabels
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    DroppedLabels.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for DroppedLabels
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.DroppedLabels
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    DroppedLabels.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.DroppedLabels";
                    };
    
                    return DroppedLabels;
                })();
    
                v3.Group = (function() {
    
                    /**
                     * Properties of a Group.
                     * @memberof google.monitoring.v3
                     * @interface IGroup
                     * @property {string|null} [name] Group name
                     * @property {string|null} [displayName] Group displayName
                     * @property {string|null} [parentName] Group parentName
                     * @property {string|null} [filter] Group filter
                     * @property {boolean|null} [isCluster] Group isCluster
                     */
    
                    /**
                     * Constructs a new Group.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a Group.
                     * @implements IGroup
                     * @constructor
                     * @param {google.monitoring.v3.IGroup=} [properties] Properties to set
                     */
                    function Group(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Group name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.Group
                     * @instance
                     */
                    Group.prototype.name = "";
    
                    /**
                     * Group displayName.
                     * @member {string} displayName
                     * @memberof google.monitoring.v3.Group
                     * @instance
                     */
                    Group.prototype.displayName = "";
    
                    /**
                     * Group parentName.
                     * @member {string} parentName
                     * @memberof google.monitoring.v3.Group
                     * @instance
                     */
                    Group.prototype.parentName = "";
    
                    /**
                     * Group filter.
                     * @member {string} filter
                     * @memberof google.monitoring.v3.Group
                     * @instance
                     */
                    Group.prototype.filter = "";
    
                    /**
                     * Group isCluster.
                     * @member {boolean} isCluster
                     * @memberof google.monitoring.v3.Group
                     * @instance
                     */
                    Group.prototype.isCluster = false;
    
                    /**
                     * Creates a new Group instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.Group
                     * @static
                     * @param {google.monitoring.v3.IGroup=} [properties] Properties to set
                     * @returns {google.monitoring.v3.Group} Group instance
                     */
                    Group.create = function create(properties) {
                        return new Group(properties);
                    };
    
                    /**
                     * Encodes the specified Group message. Does not implicitly {@link google.monitoring.v3.Group.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.Group
                     * @static
                     * @param {google.monitoring.v3.IGroup} message Group message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Group.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                        if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.displayName);
                        if (message.parentName != null && Object.hasOwnProperty.call(message, "parentName"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.parentName);
                        if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.filter);
                        if (message.isCluster != null && Object.hasOwnProperty.call(message, "isCluster"))
                            writer.uint32(/* id 6, wireType 0 =*/48).bool(message.isCluster);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Group message, length delimited. Does not implicitly {@link google.monitoring.v3.Group.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.Group
                     * @static
                     * @param {google.monitoring.v3.IGroup} message Group message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Group.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Group message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.Group
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.Group} Group
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Group.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.Group();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.displayName = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.parentName = reader.string();
                                    break;
                                }
                            case 5: {
                                    message.filter = reader.string();
                                    break;
                                }
                            case 6: {
                                    message.isCluster = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Group message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.Group
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.Group} Group
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Group.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Group message.
                     * @function verify
                     * @memberof google.monitoring.v3.Group
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Group.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.displayName != null && message.hasOwnProperty("displayName"))
                            if (!$util.isString(message.displayName))
                                return "displayName: string expected";
                        if (message.parentName != null && message.hasOwnProperty("parentName"))
                            if (!$util.isString(message.parentName))
                                return "parentName: string expected";
                        if (message.filter != null && message.hasOwnProperty("filter"))
                            if (!$util.isString(message.filter))
                                return "filter: string expected";
                        if (message.isCluster != null && message.hasOwnProperty("isCluster"))
                            if (typeof message.isCluster !== "boolean")
                                return "isCluster: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a Group message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.Group
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.Group} Group
                     */
                    Group.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.Group)
                            return object;
                        var message = new $root.google.monitoring.v3.Group();
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.displayName != null)
                            message.displayName = String(object.displayName);
                        if (object.parentName != null)
                            message.parentName = String(object.parentName);
                        if (object.filter != null)
                            message.filter = String(object.filter);
                        if (object.isCluster != null)
                            message.isCluster = Boolean(object.isCluster);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Group message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.Group
                     * @static
                     * @param {google.monitoring.v3.Group} message Group
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Group.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.name = "";
                            object.displayName = "";
                            object.parentName = "";
                            object.filter = "";
                            object.isCluster = false;
                        }
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        if (message.displayName != null && message.hasOwnProperty("displayName"))
                            object.displayName = message.displayName;
                        if (message.parentName != null && message.hasOwnProperty("parentName"))
                            object.parentName = message.parentName;
                        if (message.filter != null && message.hasOwnProperty("filter"))
                            object.filter = message.filter;
                        if (message.isCluster != null && message.hasOwnProperty("isCluster"))
                            object.isCluster = message.isCluster;
                        return object;
                    };
    
                    /**
                     * Converts this Group to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.Group
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Group.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Group
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.Group
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Group.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.Group";
                    };
    
                    return Group;
                })();
    
                v3.GroupService = (function() {
    
                    /**
                     * Constructs a new GroupService service.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a GroupService
                     * @extends $protobuf.rpc.Service
                     * @constructor
                     * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                     * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                     * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                     */
                    function GroupService(rpcImpl, requestDelimited, responseDelimited) {
                        $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                    }
    
                    (GroupService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = GroupService;
    
                    /**
                     * Creates new GroupService service using the specified rpc implementation.
                     * @function create
                     * @memberof google.monitoring.v3.GroupService
                     * @static
                     * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                     * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                     * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                     * @returns {GroupService} RPC service. Useful where requests and/or responses are streamed.
                     */
                    GroupService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                        return new this(rpcImpl, requestDelimited, responseDelimited);
                    };
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.GroupService|listGroups}.
                     * @memberof google.monitoring.v3.GroupService
                     * @typedef ListGroupsCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.monitoring.v3.ListGroupsResponse} [response] ListGroupsResponse
                     */
    
                    /**
                     * Calls ListGroups.
                     * @function listGroups
                     * @memberof google.monitoring.v3.GroupService
                     * @instance
                     * @param {google.monitoring.v3.IListGroupsRequest} request ListGroupsRequest message or plain object
                     * @param {google.monitoring.v3.GroupService.ListGroupsCallback} callback Node-style callback called with the error, if any, and ListGroupsResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(GroupService.prototype.listGroups = function listGroups(request, callback) {
                        return this.rpcCall(listGroups, $root.google.monitoring.v3.ListGroupsRequest, $root.google.monitoring.v3.ListGroupsResponse, request, callback);
                    }, "name", { value: "ListGroups" });
    
                    /**
                     * Calls ListGroups.
                     * @function listGroups
                     * @memberof google.monitoring.v3.GroupService
                     * @instance
                     * @param {google.monitoring.v3.IListGroupsRequest} request ListGroupsRequest message or plain object
                     * @returns {Promise<google.monitoring.v3.ListGroupsResponse>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.GroupService|getGroup}.
                     * @memberof google.monitoring.v3.GroupService
                     * @typedef GetGroupCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.monitoring.v3.Group} [response] Group
                     */
    
                    /**
                     * Calls GetGroup.
                     * @function getGroup
                     * @memberof google.monitoring.v3.GroupService
                     * @instance
                     * @param {google.monitoring.v3.IGetGroupRequest} request GetGroupRequest message or plain object
                     * @param {google.monitoring.v3.GroupService.GetGroupCallback} callback Node-style callback called with the error, if any, and Group
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(GroupService.prototype.getGroup = function getGroup(request, callback) {
                        return this.rpcCall(getGroup, $root.google.monitoring.v3.GetGroupRequest, $root.google.monitoring.v3.Group, request, callback);
                    }, "name", { value: "GetGroup" });
    
                    /**
                     * Calls GetGroup.
                     * @function getGroup
                     * @memberof google.monitoring.v3.GroupService
                     * @instance
                     * @param {google.monitoring.v3.IGetGroupRequest} request GetGroupRequest message or plain object
                     * @returns {Promise<google.monitoring.v3.Group>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.GroupService|createGroup}.
                     * @memberof google.monitoring.v3.GroupService
                     * @typedef CreateGroupCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.monitoring.v3.Group} [response] Group
                     */
    
                    /**
                     * Calls CreateGroup.
                     * @function createGroup
                     * @memberof google.monitoring.v3.GroupService
                     * @instance
                     * @param {google.monitoring.v3.ICreateGroupRequest} request CreateGroupRequest message or plain object
                     * @param {google.monitoring.v3.GroupService.CreateGroupCallback} callback Node-style callback called with the error, if any, and Group
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(GroupService.prototype.createGroup = function createGroup(request, callback) {
                        return this.rpcCall(createGroup, $root.google.monitoring.v3.CreateGroupRequest, $root.google.monitoring.v3.Group, request, callback);
                    }, "name", { value: "CreateGroup" });
    
                    /**
                     * Calls CreateGroup.
                     * @function createGroup
                     * @memberof google.monitoring.v3.GroupService
                     * @instance
                     * @param {google.monitoring.v3.ICreateGroupRequest} request CreateGroupRequest message or plain object
                     * @returns {Promise<google.monitoring.v3.Group>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.GroupService|updateGroup}.
                     * @memberof google.monitoring.v3.GroupService
                     * @typedef UpdateGroupCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.monitoring.v3.Group} [response] Group
                     */
    
                    /**
                     * Calls UpdateGroup.
                     * @function updateGroup
                     * @memberof google.monitoring.v3.GroupService
                     * @instance
                     * @param {google.monitoring.v3.IUpdateGroupRequest} request UpdateGroupRequest message or plain object
                     * @param {google.monitoring.v3.GroupService.UpdateGroupCallback} callback Node-style callback called with the error, if any, and Group
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(GroupService.prototype.updateGroup = function updateGroup(request, callback) {
                        return this.rpcCall(updateGroup, $root.google.monitoring.v3.UpdateGroupRequest, $root.google.monitoring.v3.Group, request, callback);
                    }, "name", { value: "UpdateGroup" });
    
                    /**
                     * Calls UpdateGroup.
                     * @function updateGroup
                     * @memberof google.monitoring.v3.GroupService
                     * @instance
                     * @param {google.monitoring.v3.IUpdateGroupRequest} request UpdateGroupRequest message or plain object
                     * @returns {Promise<google.monitoring.v3.Group>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.GroupService|deleteGroup}.
                     * @memberof google.monitoring.v3.GroupService
                     * @typedef DeleteGroupCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.protobuf.Empty} [response] Empty
                     */
    
                    /**
                     * Calls DeleteGroup.
                     * @function deleteGroup
                     * @memberof google.monitoring.v3.GroupService
                     * @instance
                     * @param {google.monitoring.v3.IDeleteGroupRequest} request DeleteGroupRequest message or plain object
                     * @param {google.monitoring.v3.GroupService.DeleteGroupCallback} callback Node-style callback called with the error, if any, and Empty
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(GroupService.prototype.deleteGroup = function deleteGroup(request, callback) {
                        return this.rpcCall(deleteGroup, $root.google.monitoring.v3.DeleteGroupRequest, $root.google.protobuf.Empty, request, callback);
                    }, "name", { value: "DeleteGroup" });
    
                    /**
                     * Calls DeleteGroup.
                     * @function deleteGroup
                     * @memberof google.monitoring.v3.GroupService
                     * @instance
                     * @param {google.monitoring.v3.IDeleteGroupRequest} request DeleteGroupRequest message or plain object
                     * @returns {Promise<google.protobuf.Empty>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.GroupService|listGroupMembers}.
                     * @memberof google.monitoring.v3.GroupService
                     * @typedef ListGroupMembersCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.monitoring.v3.ListGroupMembersResponse} [response] ListGroupMembersResponse
                     */
    
                    /**
                     * Calls ListGroupMembers.
                     * @function listGroupMembers
                     * @memberof google.monitoring.v3.GroupService
                     * @instance
                     * @param {google.monitoring.v3.IListGroupMembersRequest} request ListGroupMembersRequest message or plain object
                     * @param {google.monitoring.v3.GroupService.ListGroupMembersCallback} callback Node-style callback called with the error, if any, and ListGroupMembersResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(GroupService.prototype.listGroupMembers = function listGroupMembers(request, callback) {
                        return this.rpcCall(listGroupMembers, $root.google.monitoring.v3.ListGroupMembersRequest, $root.google.monitoring.v3.ListGroupMembersResponse, request, callback);
                    }, "name", { value: "ListGroupMembers" });
    
                    /**
                     * Calls ListGroupMembers.
                     * @function listGroupMembers
                     * @memberof google.monitoring.v3.GroupService
                     * @instance
                     * @param {google.monitoring.v3.IListGroupMembersRequest} request ListGroupMembersRequest message or plain object
                     * @returns {Promise<google.monitoring.v3.ListGroupMembersResponse>} Promise
                     * @variation 2
                     */
    
                    return GroupService;
                })();
    
                v3.ListGroupsRequest = (function() {
    
                    /**
                     * Properties of a ListGroupsRequest.
                     * @memberof google.monitoring.v3
                     * @interface IListGroupsRequest
                     * @property {string|null} [name] ListGroupsRequest name
                     * @property {string|null} [childrenOfGroup] ListGroupsRequest childrenOfGroup
                     * @property {string|null} [ancestorsOfGroup] ListGroupsRequest ancestorsOfGroup
                     * @property {string|null} [descendantsOfGroup] ListGroupsRequest descendantsOfGroup
                     * @property {number|null} [pageSize] ListGroupsRequest pageSize
                     * @property {string|null} [pageToken] ListGroupsRequest pageToken
                     */
    
                    /**
                     * Constructs a new ListGroupsRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a ListGroupsRequest.
                     * @implements IListGroupsRequest
                     * @constructor
                     * @param {google.monitoring.v3.IListGroupsRequest=} [properties] Properties to set
                     */
                    function ListGroupsRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListGroupsRequest name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.ListGroupsRequest
                     * @instance
                     */
                    ListGroupsRequest.prototype.name = "";
    
                    /**
                     * ListGroupsRequest childrenOfGroup.
                     * @member {string|null|undefined} childrenOfGroup
                     * @memberof google.monitoring.v3.ListGroupsRequest
                     * @instance
                     */
                    ListGroupsRequest.prototype.childrenOfGroup = null;
    
                    /**
                     * ListGroupsRequest ancestorsOfGroup.
                     * @member {string|null|undefined} ancestorsOfGroup
                     * @memberof google.monitoring.v3.ListGroupsRequest
                     * @instance
                     */
                    ListGroupsRequest.prototype.ancestorsOfGroup = null;
    
                    /**
                     * ListGroupsRequest descendantsOfGroup.
                     * @member {string|null|undefined} descendantsOfGroup
                     * @memberof google.monitoring.v3.ListGroupsRequest
                     * @instance
                     */
                    ListGroupsRequest.prototype.descendantsOfGroup = null;
    
                    /**
                     * ListGroupsRequest pageSize.
                     * @member {number} pageSize
                     * @memberof google.monitoring.v3.ListGroupsRequest
                     * @instance
                     */
                    ListGroupsRequest.prototype.pageSize = 0;
    
                    /**
                     * ListGroupsRequest pageToken.
                     * @member {string} pageToken
                     * @memberof google.monitoring.v3.ListGroupsRequest
                     * @instance
                     */
                    ListGroupsRequest.prototype.pageToken = "";
    
                    // OneOf field names bound to virtual getters and setters
                    var $oneOfFields;
    
                    /**
                     * ListGroupsRequest filter.
                     * @member {"childrenOfGroup"|"ancestorsOfGroup"|"descendantsOfGroup"|undefined} filter
                     * @memberof google.monitoring.v3.ListGroupsRequest
                     * @instance
                     */
                    Object.defineProperty(ListGroupsRequest.prototype, "filter", {
                        get: $util.oneOfGetter($oneOfFields = ["childrenOfGroup", "ancestorsOfGroup", "descendantsOfGroup"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });
    
                    /**
                     * Creates a new ListGroupsRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.ListGroupsRequest
                     * @static
                     * @param {google.monitoring.v3.IListGroupsRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.ListGroupsRequest} ListGroupsRequest instance
                     */
                    ListGroupsRequest.create = function create(properties) {
                        return new ListGroupsRequest(properties);
                    };
    
                    /**
                     * Encodes the specified ListGroupsRequest message. Does not implicitly {@link google.monitoring.v3.ListGroupsRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.ListGroupsRequest
                     * @static
                     * @param {google.monitoring.v3.IListGroupsRequest} message ListGroupsRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListGroupsRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.childrenOfGroup != null && Object.hasOwnProperty.call(message, "childrenOfGroup"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.childrenOfGroup);
                        if (message.ancestorsOfGroup != null && Object.hasOwnProperty.call(message, "ancestorsOfGroup"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.ancestorsOfGroup);
                        if (message.descendantsOfGroup != null && Object.hasOwnProperty.call(message, "descendantsOfGroup"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.descendantsOfGroup);
                        if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.pageSize);
                        if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                            writer.uint32(/* id 6, wireType 2 =*/50).string(message.pageToken);
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 7, wireType 2 =*/58).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ListGroupsRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.ListGroupsRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.ListGroupsRequest
                     * @static
                     * @param {google.monitoring.v3.IListGroupsRequest} message ListGroupsRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListGroupsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ListGroupsRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.ListGroupsRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.ListGroupsRequest} ListGroupsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListGroupsRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.ListGroupsRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 7: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.childrenOfGroup = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.ancestorsOfGroup = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.descendantsOfGroup = reader.string();
                                    break;
                                }
                            case 5: {
                                    message.pageSize = reader.int32();
                                    break;
                                }
                            case 6: {
                                    message.pageToken = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ListGroupsRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.ListGroupsRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.ListGroupsRequest} ListGroupsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListGroupsRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ListGroupsRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.ListGroupsRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ListGroupsRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        var properties = {};
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.childrenOfGroup != null && message.hasOwnProperty("childrenOfGroup")) {
                            properties.filter = 1;
                            if (!$util.isString(message.childrenOfGroup))
                                return "childrenOfGroup: string expected";
                        }
                        if (message.ancestorsOfGroup != null && message.hasOwnProperty("ancestorsOfGroup")) {
                            if (properties.filter === 1)
                                return "filter: multiple values";
                            properties.filter = 1;
                            if (!$util.isString(message.ancestorsOfGroup))
                                return "ancestorsOfGroup: string expected";
                        }
                        if (message.descendantsOfGroup != null && message.hasOwnProperty("descendantsOfGroup")) {
                            if (properties.filter === 1)
                                return "filter: multiple values";
                            properties.filter = 1;
                            if (!$util.isString(message.descendantsOfGroup))
                                return "descendantsOfGroup: string expected";
                        }
                        if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                            if (!$util.isInteger(message.pageSize))
                                return "pageSize: integer expected";
                        if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                            if (!$util.isString(message.pageToken))
                                return "pageToken: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a ListGroupsRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.ListGroupsRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.ListGroupsRequest} ListGroupsRequest
                     */
                    ListGroupsRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.ListGroupsRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.ListGroupsRequest();
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.childrenOfGroup != null)
                            message.childrenOfGroup = String(object.childrenOfGroup);
                        if (object.ancestorsOfGroup != null)
                            message.ancestorsOfGroup = String(object.ancestorsOfGroup);
                        if (object.descendantsOfGroup != null)
                            message.descendantsOfGroup = String(object.descendantsOfGroup);
                        if (object.pageSize != null)
                            message.pageSize = object.pageSize | 0;
                        if (object.pageToken != null)
                            message.pageToken = String(object.pageToken);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ListGroupsRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.ListGroupsRequest
                     * @static
                     * @param {google.monitoring.v3.ListGroupsRequest} message ListGroupsRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ListGroupsRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.pageSize = 0;
                            object.pageToken = "";
                            object.name = "";
                        }
                        if (message.childrenOfGroup != null && message.hasOwnProperty("childrenOfGroup")) {
                            object.childrenOfGroup = message.childrenOfGroup;
                            if (options.oneofs)
                                object.filter = "childrenOfGroup";
                        }
                        if (message.ancestorsOfGroup != null && message.hasOwnProperty("ancestorsOfGroup")) {
                            object.ancestorsOfGroup = message.ancestorsOfGroup;
                            if (options.oneofs)
                                object.filter = "ancestorsOfGroup";
                        }
                        if (message.descendantsOfGroup != null && message.hasOwnProperty("descendantsOfGroup")) {
                            object.descendantsOfGroup = message.descendantsOfGroup;
                            if (options.oneofs)
                                object.filter = "descendantsOfGroup";
                        }
                        if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                            object.pageSize = message.pageSize;
                        if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                            object.pageToken = message.pageToken;
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this ListGroupsRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.ListGroupsRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ListGroupsRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ListGroupsRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.ListGroupsRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ListGroupsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.ListGroupsRequest";
                    };
    
                    return ListGroupsRequest;
                })();
    
                v3.ListGroupsResponse = (function() {
    
                    /**
                     * Properties of a ListGroupsResponse.
                     * @memberof google.monitoring.v3
                     * @interface IListGroupsResponse
                     * @property {Array.<google.monitoring.v3.IGroup>|null} [group] ListGroupsResponse group
                     * @property {string|null} [nextPageToken] ListGroupsResponse nextPageToken
                     */
    
                    /**
                     * Constructs a new ListGroupsResponse.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a ListGroupsResponse.
                     * @implements IListGroupsResponse
                     * @constructor
                     * @param {google.monitoring.v3.IListGroupsResponse=} [properties] Properties to set
                     */
                    function ListGroupsResponse(properties) {
                        this.group = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListGroupsResponse group.
                     * @member {Array.<google.monitoring.v3.IGroup>} group
                     * @memberof google.monitoring.v3.ListGroupsResponse
                     * @instance
                     */
                    ListGroupsResponse.prototype.group = $util.emptyArray;
    
                    /**
                     * ListGroupsResponse nextPageToken.
                     * @member {string} nextPageToken
                     * @memberof google.monitoring.v3.ListGroupsResponse
                     * @instance
                     */
                    ListGroupsResponse.prototype.nextPageToken = "";
    
                    /**
                     * Creates a new ListGroupsResponse instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.ListGroupsResponse
                     * @static
                     * @param {google.monitoring.v3.IListGroupsResponse=} [properties] Properties to set
                     * @returns {google.monitoring.v3.ListGroupsResponse} ListGroupsResponse instance
                     */
                    ListGroupsResponse.create = function create(properties) {
                        return new ListGroupsResponse(properties);
                    };
    
                    /**
                     * Encodes the specified ListGroupsResponse message. Does not implicitly {@link google.monitoring.v3.ListGroupsResponse.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.ListGroupsResponse
                     * @static
                     * @param {google.monitoring.v3.IListGroupsResponse} message ListGroupsResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListGroupsResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.group != null && message.group.length)
                            for (var i = 0; i < message.group.length; ++i)
                                $root.google.monitoring.v3.Group.encode(message.group[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ListGroupsResponse message, length delimited. Does not implicitly {@link google.monitoring.v3.ListGroupsResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.ListGroupsResponse
                     * @static
                     * @param {google.monitoring.v3.IListGroupsResponse} message ListGroupsResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListGroupsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ListGroupsResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.ListGroupsResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.ListGroupsResponse} ListGroupsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListGroupsResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.ListGroupsResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.group && message.group.length))
                                        message.group = [];
                                    message.group.push($root.google.monitoring.v3.Group.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 2: {
                                    message.nextPageToken = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ListGroupsResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.ListGroupsResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.ListGroupsResponse} ListGroupsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListGroupsResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ListGroupsResponse message.
                     * @function verify
                     * @memberof google.monitoring.v3.ListGroupsResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ListGroupsResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.group != null && message.hasOwnProperty("group")) {
                            if (!Array.isArray(message.group))
                                return "group: array expected";
                            for (var i = 0; i < message.group.length; ++i) {
                                var error = $root.google.monitoring.v3.Group.verify(message.group[i]);
                                if (error)
                                    return "group." + error;
                            }
                        }
                        if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                            if (!$util.isString(message.nextPageToken))
                                return "nextPageToken: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a ListGroupsResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.ListGroupsResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.ListGroupsResponse} ListGroupsResponse
                     */
                    ListGroupsResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.ListGroupsResponse)
                            return object;
                        var message = new $root.google.monitoring.v3.ListGroupsResponse();
                        if (object.group) {
                            if (!Array.isArray(object.group))
                                throw TypeError(".google.monitoring.v3.ListGroupsResponse.group: array expected");
                            message.group = [];
                            for (var i = 0; i < object.group.length; ++i) {
                                if (typeof object.group[i] !== "object")
                                    throw TypeError(".google.monitoring.v3.ListGroupsResponse.group: object expected");
                                message.group[i] = $root.google.monitoring.v3.Group.fromObject(object.group[i]);
                            }
                        }
                        if (object.nextPageToken != null)
                            message.nextPageToken = String(object.nextPageToken);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ListGroupsResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.ListGroupsResponse
                     * @static
                     * @param {google.monitoring.v3.ListGroupsResponse} message ListGroupsResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ListGroupsResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.group = [];
                        if (options.defaults)
                            object.nextPageToken = "";
                        if (message.group && message.group.length) {
                            object.group = [];
                            for (var j = 0; j < message.group.length; ++j)
                                object.group[j] = $root.google.monitoring.v3.Group.toObject(message.group[j], options);
                        }
                        if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                            object.nextPageToken = message.nextPageToken;
                        return object;
                    };
    
                    /**
                     * Converts this ListGroupsResponse to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.ListGroupsResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ListGroupsResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ListGroupsResponse
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.ListGroupsResponse
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ListGroupsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.ListGroupsResponse";
                    };
    
                    return ListGroupsResponse;
                })();
    
                v3.GetGroupRequest = (function() {
    
                    /**
                     * Properties of a GetGroupRequest.
                     * @memberof google.monitoring.v3
                     * @interface IGetGroupRequest
                     * @property {string|null} [name] GetGroupRequest name
                     */
    
                    /**
                     * Constructs a new GetGroupRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a GetGroupRequest.
                     * @implements IGetGroupRequest
                     * @constructor
                     * @param {google.monitoring.v3.IGetGroupRequest=} [properties] Properties to set
                     */
                    function GetGroupRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * GetGroupRequest name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.GetGroupRequest
                     * @instance
                     */
                    GetGroupRequest.prototype.name = "";
    
                    /**
                     * Creates a new GetGroupRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.GetGroupRequest
                     * @static
                     * @param {google.monitoring.v3.IGetGroupRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.GetGroupRequest} GetGroupRequest instance
                     */
                    GetGroupRequest.create = function create(properties) {
                        return new GetGroupRequest(properties);
                    };
    
                    /**
                     * Encodes the specified GetGroupRequest message. Does not implicitly {@link google.monitoring.v3.GetGroupRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.GetGroupRequest
                     * @static
                     * @param {google.monitoring.v3.IGetGroupRequest} message GetGroupRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetGroupRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified GetGroupRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.GetGroupRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.GetGroupRequest
                     * @static
                     * @param {google.monitoring.v3.IGetGroupRequest} message GetGroupRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetGroupRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a GetGroupRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.GetGroupRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.GetGroupRequest} GetGroupRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetGroupRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.GetGroupRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 3: {
                                    message.name = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a GetGroupRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.GetGroupRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.GetGroupRequest} GetGroupRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetGroupRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a GetGroupRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.GetGroupRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    GetGroupRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a GetGroupRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.GetGroupRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.GetGroupRequest} GetGroupRequest
                     */
                    GetGroupRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.GetGroupRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.GetGroupRequest();
                        if (object.name != null)
                            message.name = String(object.name);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a GetGroupRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.GetGroupRequest
                     * @static
                     * @param {google.monitoring.v3.GetGroupRequest} message GetGroupRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    GetGroupRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.name = "";
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this GetGroupRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.GetGroupRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    GetGroupRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for GetGroupRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.GetGroupRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    GetGroupRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.GetGroupRequest";
                    };
    
                    return GetGroupRequest;
                })();
    
                v3.CreateGroupRequest = (function() {
    
                    /**
                     * Properties of a CreateGroupRequest.
                     * @memberof google.monitoring.v3
                     * @interface ICreateGroupRequest
                     * @property {string|null} [name] CreateGroupRequest name
                     * @property {google.monitoring.v3.IGroup|null} [group] CreateGroupRequest group
                     * @property {boolean|null} [validateOnly] CreateGroupRequest validateOnly
                     */
    
                    /**
                     * Constructs a new CreateGroupRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a CreateGroupRequest.
                     * @implements ICreateGroupRequest
                     * @constructor
                     * @param {google.monitoring.v3.ICreateGroupRequest=} [properties] Properties to set
                     */
                    function CreateGroupRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * CreateGroupRequest name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.CreateGroupRequest
                     * @instance
                     */
                    CreateGroupRequest.prototype.name = "";
    
                    /**
                     * CreateGroupRequest group.
                     * @member {google.monitoring.v3.IGroup|null|undefined} group
                     * @memberof google.monitoring.v3.CreateGroupRequest
                     * @instance
                     */
                    CreateGroupRequest.prototype.group = null;
    
                    /**
                     * CreateGroupRequest validateOnly.
                     * @member {boolean} validateOnly
                     * @memberof google.monitoring.v3.CreateGroupRequest
                     * @instance
                     */
                    CreateGroupRequest.prototype.validateOnly = false;
    
                    /**
                     * Creates a new CreateGroupRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.CreateGroupRequest
                     * @static
                     * @param {google.monitoring.v3.ICreateGroupRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.CreateGroupRequest} CreateGroupRequest instance
                     */
                    CreateGroupRequest.create = function create(properties) {
                        return new CreateGroupRequest(properties);
                    };
    
                    /**
                     * Encodes the specified CreateGroupRequest message. Does not implicitly {@link google.monitoring.v3.CreateGroupRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.CreateGroupRequest
                     * @static
                     * @param {google.monitoring.v3.ICreateGroupRequest} message CreateGroupRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CreateGroupRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.group != null && Object.hasOwnProperty.call(message, "group"))
                            $root.google.monitoring.v3.Group.encode(message.group, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                            writer.uint32(/* id 3, wireType 0 =*/24).bool(message.validateOnly);
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified CreateGroupRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.CreateGroupRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.CreateGroupRequest
                     * @static
                     * @param {google.monitoring.v3.ICreateGroupRequest} message CreateGroupRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CreateGroupRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a CreateGroupRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.CreateGroupRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.CreateGroupRequest} CreateGroupRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CreateGroupRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.CreateGroupRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 4: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.group = $root.google.monitoring.v3.Group.decode(reader, reader.uint32());
                                    break;
                                }
                            case 3: {
                                    message.validateOnly = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a CreateGroupRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.CreateGroupRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.CreateGroupRequest} CreateGroupRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CreateGroupRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a CreateGroupRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.CreateGroupRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    CreateGroupRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.group != null && message.hasOwnProperty("group")) {
                            var error = $root.google.monitoring.v3.Group.verify(message.group);
                            if (error)
                                return "group." + error;
                        }
                        if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                            if (typeof message.validateOnly !== "boolean")
                                return "validateOnly: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a CreateGroupRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.CreateGroupRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.CreateGroupRequest} CreateGroupRequest
                     */
                    CreateGroupRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.CreateGroupRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.CreateGroupRequest();
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.group != null) {
                            if (typeof object.group !== "object")
                                throw TypeError(".google.monitoring.v3.CreateGroupRequest.group: object expected");
                            message.group = $root.google.monitoring.v3.Group.fromObject(object.group);
                        }
                        if (object.validateOnly != null)
                            message.validateOnly = Boolean(object.validateOnly);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a CreateGroupRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.CreateGroupRequest
                     * @static
                     * @param {google.monitoring.v3.CreateGroupRequest} message CreateGroupRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    CreateGroupRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.group = null;
                            object.validateOnly = false;
                            object.name = "";
                        }
                        if (message.group != null && message.hasOwnProperty("group"))
                            object.group = $root.google.monitoring.v3.Group.toObject(message.group, options);
                        if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                            object.validateOnly = message.validateOnly;
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this CreateGroupRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.CreateGroupRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    CreateGroupRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for CreateGroupRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.CreateGroupRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    CreateGroupRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.CreateGroupRequest";
                    };
    
                    return CreateGroupRequest;
                })();
    
                v3.UpdateGroupRequest = (function() {
    
                    /**
                     * Properties of an UpdateGroupRequest.
                     * @memberof google.monitoring.v3
                     * @interface IUpdateGroupRequest
                     * @property {google.monitoring.v3.IGroup|null} [group] UpdateGroupRequest group
                     * @property {boolean|null} [validateOnly] UpdateGroupRequest validateOnly
                     */
    
                    /**
                     * Constructs a new UpdateGroupRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents an UpdateGroupRequest.
                     * @implements IUpdateGroupRequest
                     * @constructor
                     * @param {google.monitoring.v3.IUpdateGroupRequest=} [properties] Properties to set
                     */
                    function UpdateGroupRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * UpdateGroupRequest group.
                     * @member {google.monitoring.v3.IGroup|null|undefined} group
                     * @memberof google.monitoring.v3.UpdateGroupRequest
                     * @instance
                     */
                    UpdateGroupRequest.prototype.group = null;
    
                    /**
                     * UpdateGroupRequest validateOnly.
                     * @member {boolean} validateOnly
                     * @memberof google.monitoring.v3.UpdateGroupRequest
                     * @instance
                     */
                    UpdateGroupRequest.prototype.validateOnly = false;
    
                    /**
                     * Creates a new UpdateGroupRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.UpdateGroupRequest
                     * @static
                     * @param {google.monitoring.v3.IUpdateGroupRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.UpdateGroupRequest} UpdateGroupRequest instance
                     */
                    UpdateGroupRequest.create = function create(properties) {
                        return new UpdateGroupRequest(properties);
                    };
    
                    /**
                     * Encodes the specified UpdateGroupRequest message. Does not implicitly {@link google.monitoring.v3.UpdateGroupRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.UpdateGroupRequest
                     * @static
                     * @param {google.monitoring.v3.IUpdateGroupRequest} message UpdateGroupRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UpdateGroupRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.group != null && Object.hasOwnProperty.call(message, "group"))
                            $root.google.monitoring.v3.Group.encode(message.group, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                            writer.uint32(/* id 3, wireType 0 =*/24).bool(message.validateOnly);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified UpdateGroupRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.UpdateGroupRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.UpdateGroupRequest
                     * @static
                     * @param {google.monitoring.v3.IUpdateGroupRequest} message UpdateGroupRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UpdateGroupRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an UpdateGroupRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.UpdateGroupRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.UpdateGroupRequest} UpdateGroupRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UpdateGroupRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.UpdateGroupRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 2: {
                                    message.group = $root.google.monitoring.v3.Group.decode(reader, reader.uint32());
                                    break;
                                }
                            case 3: {
                                    message.validateOnly = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an UpdateGroupRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.UpdateGroupRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.UpdateGroupRequest} UpdateGroupRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UpdateGroupRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an UpdateGroupRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.UpdateGroupRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    UpdateGroupRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.group != null && message.hasOwnProperty("group")) {
                            var error = $root.google.monitoring.v3.Group.verify(message.group);
                            if (error)
                                return "group." + error;
                        }
                        if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                            if (typeof message.validateOnly !== "boolean")
                                return "validateOnly: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates an UpdateGroupRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.UpdateGroupRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.UpdateGroupRequest} UpdateGroupRequest
                     */
                    UpdateGroupRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.UpdateGroupRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.UpdateGroupRequest();
                        if (object.group != null) {
                            if (typeof object.group !== "object")
                                throw TypeError(".google.monitoring.v3.UpdateGroupRequest.group: object expected");
                            message.group = $root.google.monitoring.v3.Group.fromObject(object.group);
                        }
                        if (object.validateOnly != null)
                            message.validateOnly = Boolean(object.validateOnly);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an UpdateGroupRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.UpdateGroupRequest
                     * @static
                     * @param {google.monitoring.v3.UpdateGroupRequest} message UpdateGroupRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    UpdateGroupRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.group = null;
                            object.validateOnly = false;
                        }
                        if (message.group != null && message.hasOwnProperty("group"))
                            object.group = $root.google.monitoring.v3.Group.toObject(message.group, options);
                        if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                            object.validateOnly = message.validateOnly;
                        return object;
                    };
    
                    /**
                     * Converts this UpdateGroupRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.UpdateGroupRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    UpdateGroupRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for UpdateGroupRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.UpdateGroupRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    UpdateGroupRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.UpdateGroupRequest";
                    };
    
                    return UpdateGroupRequest;
                })();
    
                v3.DeleteGroupRequest = (function() {
    
                    /**
                     * Properties of a DeleteGroupRequest.
                     * @memberof google.monitoring.v3
                     * @interface IDeleteGroupRequest
                     * @property {string|null} [name] DeleteGroupRequest name
                     * @property {boolean|null} [recursive] DeleteGroupRequest recursive
                     */
    
                    /**
                     * Constructs a new DeleteGroupRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a DeleteGroupRequest.
                     * @implements IDeleteGroupRequest
                     * @constructor
                     * @param {google.monitoring.v3.IDeleteGroupRequest=} [properties] Properties to set
                     */
                    function DeleteGroupRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * DeleteGroupRequest name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.DeleteGroupRequest
                     * @instance
                     */
                    DeleteGroupRequest.prototype.name = "";
    
                    /**
                     * DeleteGroupRequest recursive.
                     * @member {boolean} recursive
                     * @memberof google.monitoring.v3.DeleteGroupRequest
                     * @instance
                     */
                    DeleteGroupRequest.prototype.recursive = false;
    
                    /**
                     * Creates a new DeleteGroupRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.DeleteGroupRequest
                     * @static
                     * @param {google.monitoring.v3.IDeleteGroupRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.DeleteGroupRequest} DeleteGroupRequest instance
                     */
                    DeleteGroupRequest.create = function create(properties) {
                        return new DeleteGroupRequest(properties);
                    };
    
                    /**
                     * Encodes the specified DeleteGroupRequest message. Does not implicitly {@link google.monitoring.v3.DeleteGroupRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.DeleteGroupRequest
                     * @static
                     * @param {google.monitoring.v3.IDeleteGroupRequest} message DeleteGroupRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DeleteGroupRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                        if (message.recursive != null && Object.hasOwnProperty.call(message, "recursive"))
                            writer.uint32(/* id 4, wireType 0 =*/32).bool(message.recursive);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified DeleteGroupRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.DeleteGroupRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.DeleteGroupRequest
                     * @static
                     * @param {google.monitoring.v3.IDeleteGroupRequest} message DeleteGroupRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DeleteGroupRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a DeleteGroupRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.DeleteGroupRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.DeleteGroupRequest} DeleteGroupRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DeleteGroupRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.DeleteGroupRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 3: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.recursive = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a DeleteGroupRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.DeleteGroupRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.DeleteGroupRequest} DeleteGroupRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DeleteGroupRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a DeleteGroupRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.DeleteGroupRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    DeleteGroupRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.recursive != null && message.hasOwnProperty("recursive"))
                            if (typeof message.recursive !== "boolean")
                                return "recursive: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a DeleteGroupRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.DeleteGroupRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.DeleteGroupRequest} DeleteGroupRequest
                     */
                    DeleteGroupRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.DeleteGroupRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.DeleteGroupRequest();
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.recursive != null)
                            message.recursive = Boolean(object.recursive);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a DeleteGroupRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.DeleteGroupRequest
                     * @static
                     * @param {google.monitoring.v3.DeleteGroupRequest} message DeleteGroupRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    DeleteGroupRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.name = "";
                            object.recursive = false;
                        }
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        if (message.recursive != null && message.hasOwnProperty("recursive"))
                            object.recursive = message.recursive;
                        return object;
                    };
    
                    /**
                     * Converts this DeleteGroupRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.DeleteGroupRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    DeleteGroupRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for DeleteGroupRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.DeleteGroupRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    DeleteGroupRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.DeleteGroupRequest";
                    };
    
                    return DeleteGroupRequest;
                })();
    
                v3.ListGroupMembersRequest = (function() {
    
                    /**
                     * Properties of a ListGroupMembersRequest.
                     * @memberof google.monitoring.v3
                     * @interface IListGroupMembersRequest
                     * @property {string|null} [name] ListGroupMembersRequest name
                     * @property {number|null} [pageSize] ListGroupMembersRequest pageSize
                     * @property {string|null} [pageToken] ListGroupMembersRequest pageToken
                     * @property {string|null} [filter] ListGroupMembersRequest filter
                     * @property {google.monitoring.v3.ITimeInterval|null} [interval] ListGroupMembersRequest interval
                     */
    
                    /**
                     * Constructs a new ListGroupMembersRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a ListGroupMembersRequest.
                     * @implements IListGroupMembersRequest
                     * @constructor
                     * @param {google.monitoring.v3.IListGroupMembersRequest=} [properties] Properties to set
                     */
                    function ListGroupMembersRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListGroupMembersRequest name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.ListGroupMembersRequest
                     * @instance
                     */
                    ListGroupMembersRequest.prototype.name = "";
    
                    /**
                     * ListGroupMembersRequest pageSize.
                     * @member {number} pageSize
                     * @memberof google.monitoring.v3.ListGroupMembersRequest
                     * @instance
                     */
                    ListGroupMembersRequest.prototype.pageSize = 0;
    
                    /**
                     * ListGroupMembersRequest pageToken.
                     * @member {string} pageToken
                     * @memberof google.monitoring.v3.ListGroupMembersRequest
                     * @instance
                     */
                    ListGroupMembersRequest.prototype.pageToken = "";
    
                    /**
                     * ListGroupMembersRequest filter.
                     * @member {string} filter
                     * @memberof google.monitoring.v3.ListGroupMembersRequest
                     * @instance
                     */
                    ListGroupMembersRequest.prototype.filter = "";
    
                    /**
                     * ListGroupMembersRequest interval.
                     * @member {google.monitoring.v3.ITimeInterval|null|undefined} interval
                     * @memberof google.monitoring.v3.ListGroupMembersRequest
                     * @instance
                     */
                    ListGroupMembersRequest.prototype.interval = null;
    
                    /**
                     * Creates a new ListGroupMembersRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.ListGroupMembersRequest
                     * @static
                     * @param {google.monitoring.v3.IListGroupMembersRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.ListGroupMembersRequest} ListGroupMembersRequest instance
                     */
                    ListGroupMembersRequest.create = function create(properties) {
                        return new ListGroupMembersRequest(properties);
                    };
    
                    /**
                     * Encodes the specified ListGroupMembersRequest message. Does not implicitly {@link google.monitoring.v3.ListGroupMembersRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.ListGroupMembersRequest
                     * @static
                     * @param {google.monitoring.v3.IListGroupMembersRequest} message ListGroupMembersRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListGroupMembersRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.pageSize);
                        if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.pageToken);
                        if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.filter);
                        if (message.interval != null && Object.hasOwnProperty.call(message, "interval"))
                            $root.google.monitoring.v3.TimeInterval.encode(message.interval, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 7, wireType 2 =*/58).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ListGroupMembersRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.ListGroupMembersRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.ListGroupMembersRequest
                     * @static
                     * @param {google.monitoring.v3.IListGroupMembersRequest} message ListGroupMembersRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListGroupMembersRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ListGroupMembersRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.ListGroupMembersRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.ListGroupMembersRequest} ListGroupMembersRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListGroupMembersRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.ListGroupMembersRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 7: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.pageSize = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.pageToken = reader.string();
                                    break;
                                }
                            case 5: {
                                    message.filter = reader.string();
                                    break;
                                }
                            case 6: {
                                    message.interval = $root.google.monitoring.v3.TimeInterval.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ListGroupMembersRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.ListGroupMembersRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.ListGroupMembersRequest} ListGroupMembersRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListGroupMembersRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ListGroupMembersRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.ListGroupMembersRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ListGroupMembersRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                            if (!$util.isInteger(message.pageSize))
                                return "pageSize: integer expected";
                        if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                            if (!$util.isString(message.pageToken))
                                return "pageToken: string expected";
                        if (message.filter != null && message.hasOwnProperty("filter"))
                            if (!$util.isString(message.filter))
                                return "filter: string expected";
                        if (message.interval != null && message.hasOwnProperty("interval")) {
                            var error = $root.google.monitoring.v3.TimeInterval.verify(message.interval);
                            if (error)
                                return "interval." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a ListGroupMembersRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.ListGroupMembersRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.ListGroupMembersRequest} ListGroupMembersRequest
                     */
                    ListGroupMembersRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.ListGroupMembersRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.ListGroupMembersRequest();
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.pageSize != null)
                            message.pageSize = object.pageSize | 0;
                        if (object.pageToken != null)
                            message.pageToken = String(object.pageToken);
                        if (object.filter != null)
                            message.filter = String(object.filter);
                        if (object.interval != null) {
                            if (typeof object.interval !== "object")
                                throw TypeError(".google.monitoring.v3.ListGroupMembersRequest.interval: object expected");
                            message.interval = $root.google.monitoring.v3.TimeInterval.fromObject(object.interval);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ListGroupMembersRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.ListGroupMembersRequest
                     * @static
                     * @param {google.monitoring.v3.ListGroupMembersRequest} message ListGroupMembersRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ListGroupMembersRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.pageSize = 0;
                            object.pageToken = "";
                            object.filter = "";
                            object.interval = null;
                            object.name = "";
                        }
                        if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                            object.pageSize = message.pageSize;
                        if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                            object.pageToken = message.pageToken;
                        if (message.filter != null && message.hasOwnProperty("filter"))
                            object.filter = message.filter;
                        if (message.interval != null && message.hasOwnProperty("interval"))
                            object.interval = $root.google.monitoring.v3.TimeInterval.toObject(message.interval, options);
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this ListGroupMembersRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.ListGroupMembersRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ListGroupMembersRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ListGroupMembersRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.ListGroupMembersRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ListGroupMembersRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.ListGroupMembersRequest";
                    };
    
                    return ListGroupMembersRequest;
                })();
    
                v3.ListGroupMembersResponse = (function() {
    
                    /**
                     * Properties of a ListGroupMembersResponse.
                     * @memberof google.monitoring.v3
                     * @interface IListGroupMembersResponse
                     * @property {Array.<google.api.IMonitoredResource>|null} [members] ListGroupMembersResponse members
                     * @property {string|null} [nextPageToken] ListGroupMembersResponse nextPageToken
                     * @property {number|null} [totalSize] ListGroupMembersResponse totalSize
                     */
    
                    /**
                     * Constructs a new ListGroupMembersResponse.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a ListGroupMembersResponse.
                     * @implements IListGroupMembersResponse
                     * @constructor
                     * @param {google.monitoring.v3.IListGroupMembersResponse=} [properties] Properties to set
                     */
                    function ListGroupMembersResponse(properties) {
                        this.members = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListGroupMembersResponse members.
                     * @member {Array.<google.api.IMonitoredResource>} members
                     * @memberof google.monitoring.v3.ListGroupMembersResponse
                     * @instance
                     */
                    ListGroupMembersResponse.prototype.members = $util.emptyArray;
    
                    /**
                     * ListGroupMembersResponse nextPageToken.
                     * @member {string} nextPageToken
                     * @memberof google.monitoring.v3.ListGroupMembersResponse
                     * @instance
                     */
                    ListGroupMembersResponse.prototype.nextPageToken = "";
    
                    /**
                     * ListGroupMembersResponse totalSize.
                     * @member {number} totalSize
                     * @memberof google.monitoring.v3.ListGroupMembersResponse
                     * @instance
                     */
                    ListGroupMembersResponse.prototype.totalSize = 0;
    
                    /**
                     * Creates a new ListGroupMembersResponse instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.ListGroupMembersResponse
                     * @static
                     * @param {google.monitoring.v3.IListGroupMembersResponse=} [properties] Properties to set
                     * @returns {google.monitoring.v3.ListGroupMembersResponse} ListGroupMembersResponse instance
                     */
                    ListGroupMembersResponse.create = function create(properties) {
                        return new ListGroupMembersResponse(properties);
                    };
    
                    /**
                     * Encodes the specified ListGroupMembersResponse message. Does not implicitly {@link google.monitoring.v3.ListGroupMembersResponse.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.ListGroupMembersResponse
                     * @static
                     * @param {google.monitoring.v3.IListGroupMembersResponse} message ListGroupMembersResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListGroupMembersResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.members != null && message.members.length)
                            for (var i = 0; i < message.members.length; ++i)
                                $root.google.api.MonitoredResource.encode(message.members[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                        if (message.totalSize != null && Object.hasOwnProperty.call(message, "totalSize"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.totalSize);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ListGroupMembersResponse message, length delimited. Does not implicitly {@link google.monitoring.v3.ListGroupMembersResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.ListGroupMembersResponse
                     * @static
                     * @param {google.monitoring.v3.IListGroupMembersResponse} message ListGroupMembersResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListGroupMembersResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ListGroupMembersResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.ListGroupMembersResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.ListGroupMembersResponse} ListGroupMembersResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListGroupMembersResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.ListGroupMembersResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.members && message.members.length))
                                        message.members = [];
                                    message.members.push($root.google.api.MonitoredResource.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 2: {
                                    message.nextPageToken = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.totalSize = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ListGroupMembersResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.ListGroupMembersResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.ListGroupMembersResponse} ListGroupMembersResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListGroupMembersResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ListGroupMembersResponse message.
                     * @function verify
                     * @memberof google.monitoring.v3.ListGroupMembersResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ListGroupMembersResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.members != null && message.hasOwnProperty("members")) {
                            if (!Array.isArray(message.members))
                                return "members: array expected";
                            for (var i = 0; i < message.members.length; ++i) {
                                var error = $root.google.api.MonitoredResource.verify(message.members[i]);
                                if (error)
                                    return "members." + error;
                            }
                        }
                        if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                            if (!$util.isString(message.nextPageToken))
                                return "nextPageToken: string expected";
                        if (message.totalSize != null && message.hasOwnProperty("totalSize"))
                            if (!$util.isInteger(message.totalSize))
                                return "totalSize: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ListGroupMembersResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.ListGroupMembersResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.ListGroupMembersResponse} ListGroupMembersResponse
                     */
                    ListGroupMembersResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.ListGroupMembersResponse)
                            return object;
                        var message = new $root.google.monitoring.v3.ListGroupMembersResponse();
                        if (object.members) {
                            if (!Array.isArray(object.members))
                                throw TypeError(".google.monitoring.v3.ListGroupMembersResponse.members: array expected");
                            message.members = [];
                            for (var i = 0; i < object.members.length; ++i) {
                                if (typeof object.members[i] !== "object")
                                    throw TypeError(".google.monitoring.v3.ListGroupMembersResponse.members: object expected");
                                message.members[i] = $root.google.api.MonitoredResource.fromObject(object.members[i]);
                            }
                        }
                        if (object.nextPageToken != null)
                            message.nextPageToken = String(object.nextPageToken);
                        if (object.totalSize != null)
                            message.totalSize = object.totalSize | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ListGroupMembersResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.ListGroupMembersResponse
                     * @static
                     * @param {google.monitoring.v3.ListGroupMembersResponse} message ListGroupMembersResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ListGroupMembersResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.members = [];
                        if (options.defaults) {
                            object.nextPageToken = "";
                            object.totalSize = 0;
                        }
                        if (message.members && message.members.length) {
                            object.members = [];
                            for (var j = 0; j < message.members.length; ++j)
                                object.members[j] = $root.google.api.MonitoredResource.toObject(message.members[j], options);
                        }
                        if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                            object.nextPageToken = message.nextPageToken;
                        if (message.totalSize != null && message.hasOwnProperty("totalSize"))
                            object.totalSize = message.totalSize;
                        return object;
                    };
    
                    /**
                     * Converts this ListGroupMembersResponse to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.ListGroupMembersResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ListGroupMembersResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ListGroupMembersResponse
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.ListGroupMembersResponse
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ListGroupMembersResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.ListGroupMembersResponse";
                    };
    
                    return ListGroupMembersResponse;
                })();
    
                v3.Point = (function() {
    
                    /**
                     * Properties of a Point.
                     * @memberof google.monitoring.v3
                     * @interface IPoint
                     * @property {google.monitoring.v3.ITimeInterval|null} [interval] Point interval
                     * @property {google.monitoring.v3.ITypedValue|null} [value] Point value
                     */
    
                    /**
                     * Constructs a new Point.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a Point.
                     * @implements IPoint
                     * @constructor
                     * @param {google.monitoring.v3.IPoint=} [properties] Properties to set
                     */
                    function Point(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Point interval.
                     * @member {google.monitoring.v3.ITimeInterval|null|undefined} interval
                     * @memberof google.monitoring.v3.Point
                     * @instance
                     */
                    Point.prototype.interval = null;
    
                    /**
                     * Point value.
                     * @member {google.monitoring.v3.ITypedValue|null|undefined} value
                     * @memberof google.monitoring.v3.Point
                     * @instance
                     */
                    Point.prototype.value = null;
    
                    /**
                     * Creates a new Point instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.Point
                     * @static
                     * @param {google.monitoring.v3.IPoint=} [properties] Properties to set
                     * @returns {google.monitoring.v3.Point} Point instance
                     */
                    Point.create = function create(properties) {
                        return new Point(properties);
                    };
    
                    /**
                     * Encodes the specified Point message. Does not implicitly {@link google.monitoring.v3.Point.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.Point
                     * @static
                     * @param {google.monitoring.v3.IPoint} message Point message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Point.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.interval != null && Object.hasOwnProperty.call(message, "interval"))
                            $root.google.monitoring.v3.TimeInterval.encode(message.interval, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                            $root.google.monitoring.v3.TypedValue.encode(message.value, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Point message, length delimited. Does not implicitly {@link google.monitoring.v3.Point.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.Point
                     * @static
                     * @param {google.monitoring.v3.IPoint} message Point message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Point.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Point message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.Point
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.Point} Point
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Point.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.Point();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.interval = $root.google.monitoring.v3.TimeInterval.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.value = $root.google.monitoring.v3.TypedValue.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Point message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.Point
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.Point} Point
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Point.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Point message.
                     * @function verify
                     * @memberof google.monitoring.v3.Point
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Point.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.interval != null && message.hasOwnProperty("interval")) {
                            var error = $root.google.monitoring.v3.TimeInterval.verify(message.interval);
                            if (error)
                                return "interval." + error;
                        }
                        if (message.value != null && message.hasOwnProperty("value")) {
                            var error = $root.google.monitoring.v3.TypedValue.verify(message.value);
                            if (error)
                                return "value." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Point message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.Point
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.Point} Point
                     */
                    Point.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.Point)
                            return object;
                        var message = new $root.google.monitoring.v3.Point();
                        if (object.interval != null) {
                            if (typeof object.interval !== "object")
                                throw TypeError(".google.monitoring.v3.Point.interval: object expected");
                            message.interval = $root.google.monitoring.v3.TimeInterval.fromObject(object.interval);
                        }
                        if (object.value != null) {
                            if (typeof object.value !== "object")
                                throw TypeError(".google.monitoring.v3.Point.value: object expected");
                            message.value = $root.google.monitoring.v3.TypedValue.fromObject(object.value);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Point message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.Point
                     * @static
                     * @param {google.monitoring.v3.Point} message Point
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Point.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.interval = null;
                            object.value = null;
                        }
                        if (message.interval != null && message.hasOwnProperty("interval"))
                            object.interval = $root.google.monitoring.v3.TimeInterval.toObject(message.interval, options);
                        if (message.value != null && message.hasOwnProperty("value"))
                            object.value = $root.google.monitoring.v3.TypedValue.toObject(message.value, options);
                        return object;
                    };
    
                    /**
                     * Converts this Point to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.Point
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Point.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Point
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.Point
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Point.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.Point";
                    };
    
                    return Point;
                })();
    
                v3.TimeSeries = (function() {
    
                    /**
                     * Properties of a TimeSeries.
                     * @memberof google.monitoring.v3
                     * @interface ITimeSeries
                     * @property {google.api.IMetric|null} [metric] TimeSeries metric
                     * @property {google.api.IMonitoredResource|null} [resource] TimeSeries resource
                     * @property {google.api.IMonitoredResourceMetadata|null} [metadata] TimeSeries metadata
                     * @property {google.api.MetricDescriptor.MetricKind|null} [metricKind] TimeSeries metricKind
                     * @property {google.api.MetricDescriptor.ValueType|null} [valueType] TimeSeries valueType
                     * @property {Array.<google.monitoring.v3.IPoint>|null} [points] TimeSeries points
                     * @property {string|null} [unit] TimeSeries unit
                     */
    
                    /**
                     * Constructs a new TimeSeries.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a TimeSeries.
                     * @implements ITimeSeries
                     * @constructor
                     * @param {google.monitoring.v3.ITimeSeries=} [properties] Properties to set
                     */
                    function TimeSeries(properties) {
                        this.points = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * TimeSeries metric.
                     * @member {google.api.IMetric|null|undefined} metric
                     * @memberof google.monitoring.v3.TimeSeries
                     * @instance
                     */
                    TimeSeries.prototype.metric = null;
    
                    /**
                     * TimeSeries resource.
                     * @member {google.api.IMonitoredResource|null|undefined} resource
                     * @memberof google.monitoring.v3.TimeSeries
                     * @instance
                     */
                    TimeSeries.prototype.resource = null;
    
                    /**
                     * TimeSeries metadata.
                     * @member {google.api.IMonitoredResourceMetadata|null|undefined} metadata
                     * @memberof google.monitoring.v3.TimeSeries
                     * @instance
                     */
                    TimeSeries.prototype.metadata = null;
    
                    /**
                     * TimeSeries metricKind.
                     * @member {google.api.MetricDescriptor.MetricKind} metricKind
                     * @memberof google.monitoring.v3.TimeSeries
                     * @instance
                     */
                    TimeSeries.prototype.metricKind = 0;
    
                    /**
                     * TimeSeries valueType.
                     * @member {google.api.MetricDescriptor.ValueType} valueType
                     * @memberof google.monitoring.v3.TimeSeries
                     * @instance
                     */
                    TimeSeries.prototype.valueType = 0;
    
                    /**
                     * TimeSeries points.
                     * @member {Array.<google.monitoring.v3.IPoint>} points
                     * @memberof google.monitoring.v3.TimeSeries
                     * @instance
                     */
                    TimeSeries.prototype.points = $util.emptyArray;
    
                    /**
                     * TimeSeries unit.
                     * @member {string} unit
                     * @memberof google.monitoring.v3.TimeSeries
                     * @instance
                     */
                    TimeSeries.prototype.unit = "";
    
                    /**
                     * Creates a new TimeSeries instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.TimeSeries
                     * @static
                     * @param {google.monitoring.v3.ITimeSeries=} [properties] Properties to set
                     * @returns {google.monitoring.v3.TimeSeries} TimeSeries instance
                     */
                    TimeSeries.create = function create(properties) {
                        return new TimeSeries(properties);
                    };
    
                    /**
                     * Encodes the specified TimeSeries message. Does not implicitly {@link google.monitoring.v3.TimeSeries.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.TimeSeries
                     * @static
                     * @param {google.monitoring.v3.ITimeSeries} message TimeSeries message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    TimeSeries.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.metric != null && Object.hasOwnProperty.call(message, "metric"))
                            $root.google.api.Metric.encode(message.metric, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.resource != null && Object.hasOwnProperty.call(message, "resource"))
                            $root.google.api.MonitoredResource.encode(message.resource, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.metricKind != null && Object.hasOwnProperty.call(message, "metricKind"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.metricKind);
                        if (message.valueType != null && Object.hasOwnProperty.call(message, "valueType"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.valueType);
                        if (message.points != null && message.points.length)
                            for (var i = 0; i < message.points.length; ++i)
                                $root.google.monitoring.v3.Point.encode(message.points[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                        if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                            $root.google.api.MonitoredResourceMetadata.encode(message.metadata, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                        if (message.unit != null && Object.hasOwnProperty.call(message, "unit"))
                            writer.uint32(/* id 8, wireType 2 =*/66).string(message.unit);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified TimeSeries message, length delimited. Does not implicitly {@link google.monitoring.v3.TimeSeries.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.TimeSeries
                     * @static
                     * @param {google.monitoring.v3.ITimeSeries} message TimeSeries message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    TimeSeries.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a TimeSeries message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.TimeSeries
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.TimeSeries} TimeSeries
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    TimeSeries.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.TimeSeries();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.metric = $root.google.api.Metric.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.resource = $root.google.api.MonitoredResource.decode(reader, reader.uint32());
                                    break;
                                }
                            case 7: {
                                    message.metadata = $root.google.api.MonitoredResourceMetadata.decode(reader, reader.uint32());
                                    break;
                                }
                            case 3: {
                                    message.metricKind = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.valueType = reader.int32();
                                    break;
                                }
                            case 5: {
                                    if (!(message.points && message.points.length))
                                        message.points = [];
                                    message.points.push($root.google.monitoring.v3.Point.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 8: {
                                    message.unit = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a TimeSeries message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.TimeSeries
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.TimeSeries} TimeSeries
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    TimeSeries.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a TimeSeries message.
                     * @function verify
                     * @memberof google.monitoring.v3.TimeSeries
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    TimeSeries.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.metric != null && message.hasOwnProperty("metric")) {
                            var error = $root.google.api.Metric.verify(message.metric);
                            if (error)
                                return "metric." + error;
                        }
                        if (message.resource != null && message.hasOwnProperty("resource")) {
                            var error = $root.google.api.MonitoredResource.verify(message.resource);
                            if (error)
                                return "resource." + error;
                        }
                        if (message.metadata != null && message.hasOwnProperty("metadata")) {
                            var error = $root.google.api.MonitoredResourceMetadata.verify(message.metadata);
                            if (error)
                                return "metadata." + error;
                        }
                        if (message.metricKind != null && message.hasOwnProperty("metricKind"))
                            switch (message.metricKind) {
                            default:
                                return "metricKind: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                                break;
                            }
                        if (message.valueType != null && message.hasOwnProperty("valueType"))
                            switch (message.valueType) {
                            default:
                                return "valueType: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                                break;
                            }
                        if (message.points != null && message.hasOwnProperty("points")) {
                            if (!Array.isArray(message.points))
                                return "points: array expected";
                            for (var i = 0; i < message.points.length; ++i) {
                                var error = $root.google.monitoring.v3.Point.verify(message.points[i]);
                                if (error)
                                    return "points." + error;
                            }
                        }
                        if (message.unit != null && message.hasOwnProperty("unit"))
                            if (!$util.isString(message.unit))
                                return "unit: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a TimeSeries message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.TimeSeries
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.TimeSeries} TimeSeries
                     */
                    TimeSeries.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.TimeSeries)
                            return object;
                        var message = new $root.google.monitoring.v3.TimeSeries();
                        if (object.metric != null) {
                            if (typeof object.metric !== "object")
                                throw TypeError(".google.monitoring.v3.TimeSeries.metric: object expected");
                            message.metric = $root.google.api.Metric.fromObject(object.metric);
                        }
                        if (object.resource != null) {
                            if (typeof object.resource !== "object")
                                throw TypeError(".google.monitoring.v3.TimeSeries.resource: object expected");
                            message.resource = $root.google.api.MonitoredResource.fromObject(object.resource);
                        }
                        if (object.metadata != null) {
                            if (typeof object.metadata !== "object")
                                throw TypeError(".google.monitoring.v3.TimeSeries.metadata: object expected");
                            message.metadata = $root.google.api.MonitoredResourceMetadata.fromObject(object.metadata);
                        }
                        switch (object.metricKind) {
                        default:
                            if (typeof object.metricKind === "number") {
                                message.metricKind = object.metricKind;
                                break;
                            }
                            break;
                        case "METRIC_KIND_UNSPECIFIED":
                        case 0:
                            message.metricKind = 0;
                            break;
                        case "GAUGE":
                        case 1:
                            message.metricKind = 1;
                            break;
                        case "DELTA":
                        case 2:
                            message.metricKind = 2;
                            break;
                        case "CUMULATIVE":
                        case 3:
                            message.metricKind = 3;
                            break;
                        }
                        switch (object.valueType) {
                        default:
                            if (typeof object.valueType === "number") {
                                message.valueType = object.valueType;
                                break;
                            }
                            break;
                        case "VALUE_TYPE_UNSPECIFIED":
                        case 0:
                            message.valueType = 0;
                            break;
                        case "BOOL":
                        case 1:
                            message.valueType = 1;
                            break;
                        case "INT64":
                        case 2:
                            message.valueType = 2;
                            break;
                        case "DOUBLE":
                        case 3:
                            message.valueType = 3;
                            break;
                        case "STRING":
                        case 4:
                            message.valueType = 4;
                            break;
                        case "DISTRIBUTION":
                        case 5:
                            message.valueType = 5;
                            break;
                        case "MONEY":
                        case 6:
                            message.valueType = 6;
                            break;
                        }
                        if (object.points) {
                            if (!Array.isArray(object.points))
                                throw TypeError(".google.monitoring.v3.TimeSeries.points: array expected");
                            message.points = [];
                            for (var i = 0; i < object.points.length; ++i) {
                                if (typeof object.points[i] !== "object")
                                    throw TypeError(".google.monitoring.v3.TimeSeries.points: object expected");
                                message.points[i] = $root.google.monitoring.v3.Point.fromObject(object.points[i]);
                            }
                        }
                        if (object.unit != null)
                            message.unit = String(object.unit);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a TimeSeries message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.TimeSeries
                     * @static
                     * @param {google.monitoring.v3.TimeSeries} message TimeSeries
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    TimeSeries.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.points = [];
                        if (options.defaults) {
                            object.metric = null;
                            object.resource = null;
                            object.metricKind = options.enums === String ? "METRIC_KIND_UNSPECIFIED" : 0;
                            object.valueType = options.enums === String ? "VALUE_TYPE_UNSPECIFIED" : 0;
                            object.metadata = null;
                            object.unit = "";
                        }
                        if (message.metric != null && message.hasOwnProperty("metric"))
                            object.metric = $root.google.api.Metric.toObject(message.metric, options);
                        if (message.resource != null && message.hasOwnProperty("resource"))
                            object.resource = $root.google.api.MonitoredResource.toObject(message.resource, options);
                        if (message.metricKind != null && message.hasOwnProperty("metricKind"))
                            object.metricKind = options.enums === String ? $root.google.api.MetricDescriptor.MetricKind[message.metricKind] === undefined ? message.metricKind : $root.google.api.MetricDescriptor.MetricKind[message.metricKind] : message.metricKind;
                        if (message.valueType != null && message.hasOwnProperty("valueType"))
                            object.valueType = options.enums === String ? $root.google.api.MetricDescriptor.ValueType[message.valueType] === undefined ? message.valueType : $root.google.api.MetricDescriptor.ValueType[message.valueType] : message.valueType;
                        if (message.points && message.points.length) {
                            object.points = [];
                            for (var j = 0; j < message.points.length; ++j)
                                object.points[j] = $root.google.monitoring.v3.Point.toObject(message.points[j], options);
                        }
                        if (message.metadata != null && message.hasOwnProperty("metadata"))
                            object.metadata = $root.google.api.MonitoredResourceMetadata.toObject(message.metadata, options);
                        if (message.unit != null && message.hasOwnProperty("unit"))
                            object.unit = message.unit;
                        return object;
                    };
    
                    /**
                     * Converts this TimeSeries to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.TimeSeries
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    TimeSeries.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for TimeSeries
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.TimeSeries
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    TimeSeries.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.TimeSeries";
                    };
    
                    return TimeSeries;
                })();
    
                v3.TimeSeriesDescriptor = (function() {
    
                    /**
                     * Properties of a TimeSeriesDescriptor.
                     * @memberof google.monitoring.v3
                     * @interface ITimeSeriesDescriptor
                     * @property {Array.<google.api.ILabelDescriptor>|null} [labelDescriptors] TimeSeriesDescriptor labelDescriptors
                     * @property {Array.<google.monitoring.v3.TimeSeriesDescriptor.IValueDescriptor>|null} [pointDescriptors] TimeSeriesDescriptor pointDescriptors
                     */
    
                    /**
                     * Constructs a new TimeSeriesDescriptor.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a TimeSeriesDescriptor.
                     * @implements ITimeSeriesDescriptor
                     * @constructor
                     * @param {google.monitoring.v3.ITimeSeriesDescriptor=} [properties] Properties to set
                     */
                    function TimeSeriesDescriptor(properties) {
                        this.labelDescriptors = [];
                        this.pointDescriptors = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * TimeSeriesDescriptor labelDescriptors.
                     * @member {Array.<google.api.ILabelDescriptor>} labelDescriptors
                     * @memberof google.monitoring.v3.TimeSeriesDescriptor
                     * @instance
                     */
                    TimeSeriesDescriptor.prototype.labelDescriptors = $util.emptyArray;
    
                    /**
                     * TimeSeriesDescriptor pointDescriptors.
                     * @member {Array.<google.monitoring.v3.TimeSeriesDescriptor.IValueDescriptor>} pointDescriptors
                     * @memberof google.monitoring.v3.TimeSeriesDescriptor
                     * @instance
                     */
                    TimeSeriesDescriptor.prototype.pointDescriptors = $util.emptyArray;
    
                    /**
                     * Creates a new TimeSeriesDescriptor instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.TimeSeriesDescriptor
                     * @static
                     * @param {google.monitoring.v3.ITimeSeriesDescriptor=} [properties] Properties to set
                     * @returns {google.monitoring.v3.TimeSeriesDescriptor} TimeSeriesDescriptor instance
                     */
                    TimeSeriesDescriptor.create = function create(properties) {
                        return new TimeSeriesDescriptor(properties);
                    };
    
                    /**
                     * Encodes the specified TimeSeriesDescriptor message. Does not implicitly {@link google.monitoring.v3.TimeSeriesDescriptor.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.TimeSeriesDescriptor
                     * @static
                     * @param {google.monitoring.v3.ITimeSeriesDescriptor} message TimeSeriesDescriptor message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    TimeSeriesDescriptor.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.labelDescriptors != null && message.labelDescriptors.length)
                            for (var i = 0; i < message.labelDescriptors.length; ++i)
                                $root.google.api.LabelDescriptor.encode(message.labelDescriptors[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.pointDescriptors != null && message.pointDescriptors.length)
                            for (var i = 0; i < message.pointDescriptors.length; ++i)
                                $root.google.monitoring.v3.TimeSeriesDescriptor.ValueDescriptor.encode(message.pointDescriptors[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified TimeSeriesDescriptor message, length delimited. Does not implicitly {@link google.monitoring.v3.TimeSeriesDescriptor.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.TimeSeriesDescriptor
                     * @static
                     * @param {google.monitoring.v3.ITimeSeriesDescriptor} message TimeSeriesDescriptor message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    TimeSeriesDescriptor.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a TimeSeriesDescriptor message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.TimeSeriesDescriptor
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.TimeSeriesDescriptor} TimeSeriesDescriptor
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    TimeSeriesDescriptor.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.TimeSeriesDescriptor();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.labelDescriptors && message.labelDescriptors.length))
                                        message.labelDescriptors = [];
                                    message.labelDescriptors.push($root.google.api.LabelDescriptor.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 5: {
                                    if (!(message.pointDescriptors && message.pointDescriptors.length))
                                        message.pointDescriptors = [];
                                    message.pointDescriptors.push($root.google.monitoring.v3.TimeSeriesDescriptor.ValueDescriptor.decode(reader, reader.uint32()));
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a TimeSeriesDescriptor message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.TimeSeriesDescriptor
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.TimeSeriesDescriptor} TimeSeriesDescriptor
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    TimeSeriesDescriptor.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a TimeSeriesDescriptor message.
                     * @function verify
                     * @memberof google.monitoring.v3.TimeSeriesDescriptor
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    TimeSeriesDescriptor.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.labelDescriptors != null && message.hasOwnProperty("labelDescriptors")) {
                            if (!Array.isArray(message.labelDescriptors))
                                return "labelDescriptors: array expected";
                            for (var i = 0; i < message.labelDescriptors.length; ++i) {
                                var error = $root.google.api.LabelDescriptor.verify(message.labelDescriptors[i]);
                                if (error)
                                    return "labelDescriptors." + error;
                            }
                        }
                        if (message.pointDescriptors != null && message.hasOwnProperty("pointDescriptors")) {
                            if (!Array.isArray(message.pointDescriptors))
                                return "pointDescriptors: array expected";
                            for (var i = 0; i < message.pointDescriptors.length; ++i) {
                                var error = $root.google.monitoring.v3.TimeSeriesDescriptor.ValueDescriptor.verify(message.pointDescriptors[i]);
                                if (error)
                                    return "pointDescriptors." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates a TimeSeriesDescriptor message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.TimeSeriesDescriptor
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.TimeSeriesDescriptor} TimeSeriesDescriptor
                     */
                    TimeSeriesDescriptor.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.TimeSeriesDescriptor)
                            return object;
                        var message = new $root.google.monitoring.v3.TimeSeriesDescriptor();
                        if (object.labelDescriptors) {
                            if (!Array.isArray(object.labelDescriptors))
                                throw TypeError(".google.monitoring.v3.TimeSeriesDescriptor.labelDescriptors: array expected");
                            message.labelDescriptors = [];
                            for (var i = 0; i < object.labelDescriptors.length; ++i) {
                                if (typeof object.labelDescriptors[i] !== "object")
                                    throw TypeError(".google.monitoring.v3.TimeSeriesDescriptor.labelDescriptors: object expected");
                                message.labelDescriptors[i] = $root.google.api.LabelDescriptor.fromObject(object.labelDescriptors[i]);
                            }
                        }
                        if (object.pointDescriptors) {
                            if (!Array.isArray(object.pointDescriptors))
                                throw TypeError(".google.monitoring.v3.TimeSeriesDescriptor.pointDescriptors: array expected");
                            message.pointDescriptors = [];
                            for (var i = 0; i < object.pointDescriptors.length; ++i) {
                                if (typeof object.pointDescriptors[i] !== "object")
                                    throw TypeError(".google.monitoring.v3.TimeSeriesDescriptor.pointDescriptors: object expected");
                                message.pointDescriptors[i] = $root.google.monitoring.v3.TimeSeriesDescriptor.ValueDescriptor.fromObject(object.pointDescriptors[i]);
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a TimeSeriesDescriptor message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.TimeSeriesDescriptor
                     * @static
                     * @param {google.monitoring.v3.TimeSeriesDescriptor} message TimeSeriesDescriptor
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    TimeSeriesDescriptor.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.labelDescriptors = [];
                            object.pointDescriptors = [];
                        }
                        if (message.labelDescriptors && message.labelDescriptors.length) {
                            object.labelDescriptors = [];
                            for (var j = 0; j < message.labelDescriptors.length; ++j)
                                object.labelDescriptors[j] = $root.google.api.LabelDescriptor.toObject(message.labelDescriptors[j], options);
                        }
                        if (message.pointDescriptors && message.pointDescriptors.length) {
                            object.pointDescriptors = [];
                            for (var j = 0; j < message.pointDescriptors.length; ++j)
                                object.pointDescriptors[j] = $root.google.monitoring.v3.TimeSeriesDescriptor.ValueDescriptor.toObject(message.pointDescriptors[j], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this TimeSeriesDescriptor to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.TimeSeriesDescriptor
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    TimeSeriesDescriptor.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for TimeSeriesDescriptor
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.TimeSeriesDescriptor
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    TimeSeriesDescriptor.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.TimeSeriesDescriptor";
                    };
    
                    TimeSeriesDescriptor.ValueDescriptor = (function() {
    
                        /**
                         * Properties of a ValueDescriptor.
                         * @memberof google.monitoring.v3.TimeSeriesDescriptor
                         * @interface IValueDescriptor
                         * @property {string|null} [key] ValueDescriptor key
                         * @property {google.api.MetricDescriptor.ValueType|null} [valueType] ValueDescriptor valueType
                         * @property {google.api.MetricDescriptor.MetricKind|null} [metricKind] ValueDescriptor metricKind
                         * @property {string|null} [unit] ValueDescriptor unit
                         */
    
                        /**
                         * Constructs a new ValueDescriptor.
                         * @memberof google.monitoring.v3.TimeSeriesDescriptor
                         * @classdesc Represents a ValueDescriptor.
                         * @implements IValueDescriptor
                         * @constructor
                         * @param {google.monitoring.v3.TimeSeriesDescriptor.IValueDescriptor=} [properties] Properties to set
                         */
                        function ValueDescriptor(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ValueDescriptor key.
                         * @member {string} key
                         * @memberof google.monitoring.v3.TimeSeriesDescriptor.ValueDescriptor
                         * @instance
                         */
                        ValueDescriptor.prototype.key = "";
    
                        /**
                         * ValueDescriptor valueType.
                         * @member {google.api.MetricDescriptor.ValueType} valueType
                         * @memberof google.monitoring.v3.TimeSeriesDescriptor.ValueDescriptor
                         * @instance
                         */
                        ValueDescriptor.prototype.valueType = 0;
    
                        /**
                         * ValueDescriptor metricKind.
                         * @member {google.api.MetricDescriptor.MetricKind} metricKind
                         * @memberof google.monitoring.v3.TimeSeriesDescriptor.ValueDescriptor
                         * @instance
                         */
                        ValueDescriptor.prototype.metricKind = 0;
    
                        /**
                         * ValueDescriptor unit.
                         * @member {string} unit
                         * @memberof google.monitoring.v3.TimeSeriesDescriptor.ValueDescriptor
                         * @instance
                         */
                        ValueDescriptor.prototype.unit = "";
    
                        /**
                         * Creates a new ValueDescriptor instance using the specified properties.
                         * @function create
                         * @memberof google.monitoring.v3.TimeSeriesDescriptor.ValueDescriptor
                         * @static
                         * @param {google.monitoring.v3.TimeSeriesDescriptor.IValueDescriptor=} [properties] Properties to set
                         * @returns {google.monitoring.v3.TimeSeriesDescriptor.ValueDescriptor} ValueDescriptor instance
                         */
                        ValueDescriptor.create = function create(properties) {
                            return new ValueDescriptor(properties);
                        };
    
                        /**
                         * Encodes the specified ValueDescriptor message. Does not implicitly {@link google.monitoring.v3.TimeSeriesDescriptor.ValueDescriptor.verify|verify} messages.
                         * @function encode
                         * @memberof google.monitoring.v3.TimeSeriesDescriptor.ValueDescriptor
                         * @static
                         * @param {google.monitoring.v3.TimeSeriesDescriptor.IValueDescriptor} message ValueDescriptor message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ValueDescriptor.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.key != null && Object.hasOwnProperty.call(message, "key"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);
                            if (message.valueType != null && Object.hasOwnProperty.call(message, "valueType"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.valueType);
                            if (message.metricKind != null && Object.hasOwnProperty.call(message, "metricKind"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.metricKind);
                            if (message.unit != null && Object.hasOwnProperty.call(message, "unit"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.unit);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ValueDescriptor message, length delimited. Does not implicitly {@link google.monitoring.v3.TimeSeriesDescriptor.ValueDescriptor.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.monitoring.v3.TimeSeriesDescriptor.ValueDescriptor
                         * @static
                         * @param {google.monitoring.v3.TimeSeriesDescriptor.IValueDescriptor} message ValueDescriptor message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ValueDescriptor.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ValueDescriptor message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.monitoring.v3.TimeSeriesDescriptor.ValueDescriptor
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.monitoring.v3.TimeSeriesDescriptor.ValueDescriptor} ValueDescriptor
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ValueDescriptor.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.TimeSeriesDescriptor.ValueDescriptor();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.key = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.valueType = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.metricKind = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.unit = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ValueDescriptor message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.monitoring.v3.TimeSeriesDescriptor.ValueDescriptor
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.monitoring.v3.TimeSeriesDescriptor.ValueDescriptor} ValueDescriptor
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ValueDescriptor.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ValueDescriptor message.
                         * @function verify
                         * @memberof google.monitoring.v3.TimeSeriesDescriptor.ValueDescriptor
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ValueDescriptor.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.key != null && message.hasOwnProperty("key"))
                                if (!$util.isString(message.key))
                                    return "key: string expected";
                            if (message.valueType != null && message.hasOwnProperty("valueType"))
                                switch (message.valueType) {
                                default:
                                    return "valueType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                    break;
                                }
                            if (message.metricKind != null && message.hasOwnProperty("metricKind"))
                                switch (message.metricKind) {
                                default:
                                    return "metricKind: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.unit != null && message.hasOwnProperty("unit"))
                                if (!$util.isString(message.unit))
                                    return "unit: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ValueDescriptor message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.monitoring.v3.TimeSeriesDescriptor.ValueDescriptor
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.monitoring.v3.TimeSeriesDescriptor.ValueDescriptor} ValueDescriptor
                         */
                        ValueDescriptor.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.monitoring.v3.TimeSeriesDescriptor.ValueDescriptor)
                                return object;
                            var message = new $root.google.monitoring.v3.TimeSeriesDescriptor.ValueDescriptor();
                            if (object.key != null)
                                message.key = String(object.key);
                            switch (object.valueType) {
                            default:
                                if (typeof object.valueType === "number") {
                                    message.valueType = object.valueType;
                                    break;
                                }
                                break;
                            case "VALUE_TYPE_UNSPECIFIED":
                            case 0:
                                message.valueType = 0;
                                break;
                            case "BOOL":
                            case 1:
                                message.valueType = 1;
                                break;
                            case "INT64":
                            case 2:
                                message.valueType = 2;
                                break;
                            case "DOUBLE":
                            case 3:
                                message.valueType = 3;
                                break;
                            case "STRING":
                            case 4:
                                message.valueType = 4;
                                break;
                            case "DISTRIBUTION":
                            case 5:
                                message.valueType = 5;
                                break;
                            case "MONEY":
                            case 6:
                                message.valueType = 6;
                                break;
                            }
                            switch (object.metricKind) {
                            default:
                                if (typeof object.metricKind === "number") {
                                    message.metricKind = object.metricKind;
                                    break;
                                }
                                break;
                            case "METRIC_KIND_UNSPECIFIED":
                            case 0:
                                message.metricKind = 0;
                                break;
                            case "GAUGE":
                            case 1:
                                message.metricKind = 1;
                                break;
                            case "DELTA":
                            case 2:
                                message.metricKind = 2;
                                break;
                            case "CUMULATIVE":
                            case 3:
                                message.metricKind = 3;
                                break;
                            }
                            if (object.unit != null)
                                message.unit = String(object.unit);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ValueDescriptor message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.monitoring.v3.TimeSeriesDescriptor.ValueDescriptor
                         * @static
                         * @param {google.monitoring.v3.TimeSeriesDescriptor.ValueDescriptor} message ValueDescriptor
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ValueDescriptor.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.key = "";
                                object.valueType = options.enums === String ? "VALUE_TYPE_UNSPECIFIED" : 0;
                                object.metricKind = options.enums === String ? "METRIC_KIND_UNSPECIFIED" : 0;
                                object.unit = "";
                            }
                            if (message.key != null && message.hasOwnProperty("key"))
                                object.key = message.key;
                            if (message.valueType != null && message.hasOwnProperty("valueType"))
                                object.valueType = options.enums === String ? $root.google.api.MetricDescriptor.ValueType[message.valueType] === undefined ? message.valueType : $root.google.api.MetricDescriptor.ValueType[message.valueType] : message.valueType;
                            if (message.metricKind != null && message.hasOwnProperty("metricKind"))
                                object.metricKind = options.enums === String ? $root.google.api.MetricDescriptor.MetricKind[message.metricKind] === undefined ? message.metricKind : $root.google.api.MetricDescriptor.MetricKind[message.metricKind] : message.metricKind;
                            if (message.unit != null && message.hasOwnProperty("unit"))
                                object.unit = message.unit;
                            return object;
                        };
    
                        /**
                         * Converts this ValueDescriptor to JSON.
                         * @function toJSON
                         * @memberof google.monitoring.v3.TimeSeriesDescriptor.ValueDescriptor
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ValueDescriptor.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ValueDescriptor
                         * @function getTypeUrl
                         * @memberof google.monitoring.v3.TimeSeriesDescriptor.ValueDescriptor
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ValueDescriptor.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.monitoring.v3.TimeSeriesDescriptor.ValueDescriptor";
                        };
    
                        return ValueDescriptor;
                    })();
    
                    return TimeSeriesDescriptor;
                })();
    
                v3.TimeSeriesData = (function() {
    
                    /**
                     * Properties of a TimeSeriesData.
                     * @memberof google.monitoring.v3
                     * @interface ITimeSeriesData
                     * @property {Array.<google.monitoring.v3.ILabelValue>|null} [labelValues] TimeSeriesData labelValues
                     * @property {Array.<google.monitoring.v3.TimeSeriesData.IPointData>|null} [pointData] TimeSeriesData pointData
                     */
    
                    /**
                     * Constructs a new TimeSeriesData.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a TimeSeriesData.
                     * @implements ITimeSeriesData
                     * @constructor
                     * @param {google.monitoring.v3.ITimeSeriesData=} [properties] Properties to set
                     */
                    function TimeSeriesData(properties) {
                        this.labelValues = [];
                        this.pointData = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * TimeSeriesData labelValues.
                     * @member {Array.<google.monitoring.v3.ILabelValue>} labelValues
                     * @memberof google.monitoring.v3.TimeSeriesData
                     * @instance
                     */
                    TimeSeriesData.prototype.labelValues = $util.emptyArray;
    
                    /**
                     * TimeSeriesData pointData.
                     * @member {Array.<google.monitoring.v3.TimeSeriesData.IPointData>} pointData
                     * @memberof google.monitoring.v3.TimeSeriesData
                     * @instance
                     */
                    TimeSeriesData.prototype.pointData = $util.emptyArray;
    
                    /**
                     * Creates a new TimeSeriesData instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.TimeSeriesData
                     * @static
                     * @param {google.monitoring.v3.ITimeSeriesData=} [properties] Properties to set
                     * @returns {google.monitoring.v3.TimeSeriesData} TimeSeriesData instance
                     */
                    TimeSeriesData.create = function create(properties) {
                        return new TimeSeriesData(properties);
                    };
    
                    /**
                     * Encodes the specified TimeSeriesData message. Does not implicitly {@link google.monitoring.v3.TimeSeriesData.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.TimeSeriesData
                     * @static
                     * @param {google.monitoring.v3.ITimeSeriesData} message TimeSeriesData message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    TimeSeriesData.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.labelValues != null && message.labelValues.length)
                            for (var i = 0; i < message.labelValues.length; ++i)
                                $root.google.monitoring.v3.LabelValue.encode(message.labelValues[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.pointData != null && message.pointData.length)
                            for (var i = 0; i < message.pointData.length; ++i)
                                $root.google.monitoring.v3.TimeSeriesData.PointData.encode(message.pointData[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified TimeSeriesData message, length delimited. Does not implicitly {@link google.monitoring.v3.TimeSeriesData.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.TimeSeriesData
                     * @static
                     * @param {google.monitoring.v3.ITimeSeriesData} message TimeSeriesData message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    TimeSeriesData.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a TimeSeriesData message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.TimeSeriesData
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.TimeSeriesData} TimeSeriesData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    TimeSeriesData.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.TimeSeriesData();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.labelValues && message.labelValues.length))
                                        message.labelValues = [];
                                    message.labelValues.push($root.google.monitoring.v3.LabelValue.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 2: {
                                    if (!(message.pointData && message.pointData.length))
                                        message.pointData = [];
                                    message.pointData.push($root.google.monitoring.v3.TimeSeriesData.PointData.decode(reader, reader.uint32()));
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a TimeSeriesData message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.TimeSeriesData
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.TimeSeriesData} TimeSeriesData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    TimeSeriesData.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a TimeSeriesData message.
                     * @function verify
                     * @memberof google.monitoring.v3.TimeSeriesData
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    TimeSeriesData.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.labelValues != null && message.hasOwnProperty("labelValues")) {
                            if (!Array.isArray(message.labelValues))
                                return "labelValues: array expected";
                            for (var i = 0; i < message.labelValues.length; ++i) {
                                var error = $root.google.monitoring.v3.LabelValue.verify(message.labelValues[i]);
                                if (error)
                                    return "labelValues." + error;
                            }
                        }
                        if (message.pointData != null && message.hasOwnProperty("pointData")) {
                            if (!Array.isArray(message.pointData))
                                return "pointData: array expected";
                            for (var i = 0; i < message.pointData.length; ++i) {
                                var error = $root.google.monitoring.v3.TimeSeriesData.PointData.verify(message.pointData[i]);
                                if (error)
                                    return "pointData." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates a TimeSeriesData message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.TimeSeriesData
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.TimeSeriesData} TimeSeriesData
                     */
                    TimeSeriesData.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.TimeSeriesData)
                            return object;
                        var message = new $root.google.monitoring.v3.TimeSeriesData();
                        if (object.labelValues) {
                            if (!Array.isArray(object.labelValues))
                                throw TypeError(".google.monitoring.v3.TimeSeriesData.labelValues: array expected");
                            message.labelValues = [];
                            for (var i = 0; i < object.labelValues.length; ++i) {
                                if (typeof object.labelValues[i] !== "object")
                                    throw TypeError(".google.monitoring.v3.TimeSeriesData.labelValues: object expected");
                                message.labelValues[i] = $root.google.monitoring.v3.LabelValue.fromObject(object.labelValues[i]);
                            }
                        }
                        if (object.pointData) {
                            if (!Array.isArray(object.pointData))
                                throw TypeError(".google.monitoring.v3.TimeSeriesData.pointData: array expected");
                            message.pointData = [];
                            for (var i = 0; i < object.pointData.length; ++i) {
                                if (typeof object.pointData[i] !== "object")
                                    throw TypeError(".google.monitoring.v3.TimeSeriesData.pointData: object expected");
                                message.pointData[i] = $root.google.monitoring.v3.TimeSeriesData.PointData.fromObject(object.pointData[i]);
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a TimeSeriesData message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.TimeSeriesData
                     * @static
                     * @param {google.monitoring.v3.TimeSeriesData} message TimeSeriesData
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    TimeSeriesData.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.labelValues = [];
                            object.pointData = [];
                        }
                        if (message.labelValues && message.labelValues.length) {
                            object.labelValues = [];
                            for (var j = 0; j < message.labelValues.length; ++j)
                                object.labelValues[j] = $root.google.monitoring.v3.LabelValue.toObject(message.labelValues[j], options);
                        }
                        if (message.pointData && message.pointData.length) {
                            object.pointData = [];
                            for (var j = 0; j < message.pointData.length; ++j)
                                object.pointData[j] = $root.google.monitoring.v3.TimeSeriesData.PointData.toObject(message.pointData[j], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this TimeSeriesData to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.TimeSeriesData
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    TimeSeriesData.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for TimeSeriesData
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.TimeSeriesData
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    TimeSeriesData.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.TimeSeriesData";
                    };
    
                    TimeSeriesData.PointData = (function() {
    
                        /**
                         * Properties of a PointData.
                         * @memberof google.monitoring.v3.TimeSeriesData
                         * @interface IPointData
                         * @property {Array.<google.monitoring.v3.ITypedValue>|null} [values] PointData values
                         * @property {google.monitoring.v3.ITimeInterval|null} [timeInterval] PointData timeInterval
                         */
    
                        /**
                         * Constructs a new PointData.
                         * @memberof google.monitoring.v3.TimeSeriesData
                         * @classdesc Represents a PointData.
                         * @implements IPointData
                         * @constructor
                         * @param {google.monitoring.v3.TimeSeriesData.IPointData=} [properties] Properties to set
                         */
                        function PointData(properties) {
                            this.values = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PointData values.
                         * @member {Array.<google.monitoring.v3.ITypedValue>} values
                         * @memberof google.monitoring.v3.TimeSeriesData.PointData
                         * @instance
                         */
                        PointData.prototype.values = $util.emptyArray;
    
                        /**
                         * PointData timeInterval.
                         * @member {google.monitoring.v3.ITimeInterval|null|undefined} timeInterval
                         * @memberof google.monitoring.v3.TimeSeriesData.PointData
                         * @instance
                         */
                        PointData.prototype.timeInterval = null;
    
                        /**
                         * Creates a new PointData instance using the specified properties.
                         * @function create
                         * @memberof google.monitoring.v3.TimeSeriesData.PointData
                         * @static
                         * @param {google.monitoring.v3.TimeSeriesData.IPointData=} [properties] Properties to set
                         * @returns {google.monitoring.v3.TimeSeriesData.PointData} PointData instance
                         */
                        PointData.create = function create(properties) {
                            return new PointData(properties);
                        };
    
                        /**
                         * Encodes the specified PointData message. Does not implicitly {@link google.monitoring.v3.TimeSeriesData.PointData.verify|verify} messages.
                         * @function encode
                         * @memberof google.monitoring.v3.TimeSeriesData.PointData
                         * @static
                         * @param {google.monitoring.v3.TimeSeriesData.IPointData} message PointData message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PointData.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.values != null && message.values.length)
                                for (var i = 0; i < message.values.length; ++i)
                                    $root.google.monitoring.v3.TypedValue.encode(message.values[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.timeInterval != null && Object.hasOwnProperty.call(message, "timeInterval"))
                                $root.google.monitoring.v3.TimeInterval.encode(message.timeInterval, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PointData message, length delimited. Does not implicitly {@link google.monitoring.v3.TimeSeriesData.PointData.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.monitoring.v3.TimeSeriesData.PointData
                         * @static
                         * @param {google.monitoring.v3.TimeSeriesData.IPointData} message PointData message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PointData.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PointData message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.monitoring.v3.TimeSeriesData.PointData
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.monitoring.v3.TimeSeriesData.PointData} PointData
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PointData.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.TimeSeriesData.PointData();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.values && message.values.length))
                                            message.values = [];
                                        message.values.push($root.google.monitoring.v3.TypedValue.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.timeInterval = $root.google.monitoring.v3.TimeInterval.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PointData message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.monitoring.v3.TimeSeriesData.PointData
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.monitoring.v3.TimeSeriesData.PointData} PointData
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PointData.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PointData message.
                         * @function verify
                         * @memberof google.monitoring.v3.TimeSeriesData.PointData
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PointData.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.values != null && message.hasOwnProperty("values")) {
                                if (!Array.isArray(message.values))
                                    return "values: array expected";
                                for (var i = 0; i < message.values.length; ++i) {
                                    var error = $root.google.monitoring.v3.TypedValue.verify(message.values[i]);
                                    if (error)
                                        return "values." + error;
                                }
                            }
                            if (message.timeInterval != null && message.hasOwnProperty("timeInterval")) {
                                var error = $root.google.monitoring.v3.TimeInterval.verify(message.timeInterval);
                                if (error)
                                    return "timeInterval." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a PointData message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.monitoring.v3.TimeSeriesData.PointData
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.monitoring.v3.TimeSeriesData.PointData} PointData
                         */
                        PointData.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.monitoring.v3.TimeSeriesData.PointData)
                                return object;
                            var message = new $root.google.monitoring.v3.TimeSeriesData.PointData();
                            if (object.values) {
                                if (!Array.isArray(object.values))
                                    throw TypeError(".google.monitoring.v3.TimeSeriesData.PointData.values: array expected");
                                message.values = [];
                                for (var i = 0; i < object.values.length; ++i) {
                                    if (typeof object.values[i] !== "object")
                                        throw TypeError(".google.monitoring.v3.TimeSeriesData.PointData.values: object expected");
                                    message.values[i] = $root.google.monitoring.v3.TypedValue.fromObject(object.values[i]);
                                }
                            }
                            if (object.timeInterval != null) {
                                if (typeof object.timeInterval !== "object")
                                    throw TypeError(".google.monitoring.v3.TimeSeriesData.PointData.timeInterval: object expected");
                                message.timeInterval = $root.google.monitoring.v3.TimeInterval.fromObject(object.timeInterval);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PointData message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.monitoring.v3.TimeSeriesData.PointData
                         * @static
                         * @param {google.monitoring.v3.TimeSeriesData.PointData} message PointData
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PointData.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.values = [];
                            if (options.defaults)
                                object.timeInterval = null;
                            if (message.values && message.values.length) {
                                object.values = [];
                                for (var j = 0; j < message.values.length; ++j)
                                    object.values[j] = $root.google.monitoring.v3.TypedValue.toObject(message.values[j], options);
                            }
                            if (message.timeInterval != null && message.hasOwnProperty("timeInterval"))
                                object.timeInterval = $root.google.monitoring.v3.TimeInterval.toObject(message.timeInterval, options);
                            return object;
                        };
    
                        /**
                         * Converts this PointData to JSON.
                         * @function toJSON
                         * @memberof google.monitoring.v3.TimeSeriesData.PointData
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PointData.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PointData
                         * @function getTypeUrl
                         * @memberof google.monitoring.v3.TimeSeriesData.PointData
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PointData.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.monitoring.v3.TimeSeriesData.PointData";
                        };
    
                        return PointData;
                    })();
    
                    return TimeSeriesData;
                })();
    
                v3.LabelValue = (function() {
    
                    /**
                     * Properties of a LabelValue.
                     * @memberof google.monitoring.v3
                     * @interface ILabelValue
                     * @property {boolean|null} [boolValue] LabelValue boolValue
                     * @property {number|Long|null} [int64Value] LabelValue int64Value
                     * @property {string|null} [stringValue] LabelValue stringValue
                     */
    
                    /**
                     * Constructs a new LabelValue.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a LabelValue.
                     * @implements ILabelValue
                     * @constructor
                     * @param {google.monitoring.v3.ILabelValue=} [properties] Properties to set
                     */
                    function LabelValue(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * LabelValue boolValue.
                     * @member {boolean|null|undefined} boolValue
                     * @memberof google.monitoring.v3.LabelValue
                     * @instance
                     */
                    LabelValue.prototype.boolValue = null;
    
                    /**
                     * LabelValue int64Value.
                     * @member {number|Long|null|undefined} int64Value
                     * @memberof google.monitoring.v3.LabelValue
                     * @instance
                     */
                    LabelValue.prototype.int64Value = null;
    
                    /**
                     * LabelValue stringValue.
                     * @member {string|null|undefined} stringValue
                     * @memberof google.monitoring.v3.LabelValue
                     * @instance
                     */
                    LabelValue.prototype.stringValue = null;
    
                    // OneOf field names bound to virtual getters and setters
                    var $oneOfFields;
    
                    /**
                     * LabelValue value.
                     * @member {"boolValue"|"int64Value"|"stringValue"|undefined} value
                     * @memberof google.monitoring.v3.LabelValue
                     * @instance
                     */
                    Object.defineProperty(LabelValue.prototype, "value", {
                        get: $util.oneOfGetter($oneOfFields = ["boolValue", "int64Value", "stringValue"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });
    
                    /**
                     * Creates a new LabelValue instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.LabelValue
                     * @static
                     * @param {google.monitoring.v3.ILabelValue=} [properties] Properties to set
                     * @returns {google.monitoring.v3.LabelValue} LabelValue instance
                     */
                    LabelValue.create = function create(properties) {
                        return new LabelValue(properties);
                    };
    
                    /**
                     * Encodes the specified LabelValue message. Does not implicitly {@link google.monitoring.v3.LabelValue.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.LabelValue
                     * @static
                     * @param {google.monitoring.v3.ILabelValue} message LabelValue message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    LabelValue.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.boolValue != null && Object.hasOwnProperty.call(message, "boolValue"))
                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.boolValue);
                        if (message.int64Value != null && Object.hasOwnProperty.call(message, "int64Value"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int64(message.int64Value);
                        if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.stringValue);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified LabelValue message, length delimited. Does not implicitly {@link google.monitoring.v3.LabelValue.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.LabelValue
                     * @static
                     * @param {google.monitoring.v3.ILabelValue} message LabelValue message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    LabelValue.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a LabelValue message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.LabelValue
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.LabelValue} LabelValue
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    LabelValue.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.LabelValue();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.boolValue = reader.bool();
                                    break;
                                }
                            case 2: {
                                    message.int64Value = reader.int64();
                                    break;
                                }
                            case 3: {
                                    message.stringValue = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a LabelValue message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.LabelValue
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.LabelValue} LabelValue
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    LabelValue.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a LabelValue message.
                     * @function verify
                     * @memberof google.monitoring.v3.LabelValue
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    LabelValue.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        var properties = {};
                        if (message.boolValue != null && message.hasOwnProperty("boolValue")) {
                            properties.value = 1;
                            if (typeof message.boolValue !== "boolean")
                                return "boolValue: boolean expected";
                        }
                        if (message.int64Value != null && message.hasOwnProperty("int64Value")) {
                            if (properties.value === 1)
                                return "value: multiple values";
                            properties.value = 1;
                            if (!$util.isInteger(message.int64Value) && !(message.int64Value && $util.isInteger(message.int64Value.low) && $util.isInteger(message.int64Value.high)))
                                return "int64Value: integer|Long expected";
                        }
                        if (message.stringValue != null && message.hasOwnProperty("stringValue")) {
                            if (properties.value === 1)
                                return "value: multiple values";
                            properties.value = 1;
                            if (!$util.isString(message.stringValue))
                                return "stringValue: string expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a LabelValue message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.LabelValue
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.LabelValue} LabelValue
                     */
                    LabelValue.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.LabelValue)
                            return object;
                        var message = new $root.google.monitoring.v3.LabelValue();
                        if (object.boolValue != null)
                            message.boolValue = Boolean(object.boolValue);
                        if (object.int64Value != null)
                            if ($util.Long)
                                (message.int64Value = $util.Long.fromValue(object.int64Value)).unsigned = false;
                            else if (typeof object.int64Value === "string")
                                message.int64Value = parseInt(object.int64Value, 10);
                            else if (typeof object.int64Value === "number")
                                message.int64Value = object.int64Value;
                            else if (typeof object.int64Value === "object")
                                message.int64Value = new $util.LongBits(object.int64Value.low >>> 0, object.int64Value.high >>> 0).toNumber();
                        if (object.stringValue != null)
                            message.stringValue = String(object.stringValue);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a LabelValue message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.LabelValue
                     * @static
                     * @param {google.monitoring.v3.LabelValue} message LabelValue
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    LabelValue.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (message.boolValue != null && message.hasOwnProperty("boolValue")) {
                            object.boolValue = message.boolValue;
                            if (options.oneofs)
                                object.value = "boolValue";
                        }
                        if (message.int64Value != null && message.hasOwnProperty("int64Value")) {
                            if (typeof message.int64Value === "number")
                                object.int64Value = options.longs === String ? String(message.int64Value) : message.int64Value;
                            else
                                object.int64Value = options.longs === String ? $util.Long.prototype.toString.call(message.int64Value) : options.longs === Number ? new $util.LongBits(message.int64Value.low >>> 0, message.int64Value.high >>> 0).toNumber() : message.int64Value;
                            if (options.oneofs)
                                object.value = "int64Value";
                        }
                        if (message.stringValue != null && message.hasOwnProperty("stringValue")) {
                            object.stringValue = message.stringValue;
                            if (options.oneofs)
                                object.value = "stringValue";
                        }
                        return object;
                    };
    
                    /**
                     * Converts this LabelValue to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.LabelValue
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    LabelValue.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for LabelValue
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.LabelValue
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    LabelValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.LabelValue";
                    };
    
                    return LabelValue;
                })();
    
                v3.QueryError = (function() {
    
                    /**
                     * Properties of a QueryError.
                     * @memberof google.monitoring.v3
                     * @interface IQueryError
                     * @property {google.monitoring.v3.ITextLocator|null} [locator] QueryError locator
                     * @property {string|null} [message] QueryError message
                     */
    
                    /**
                     * Constructs a new QueryError.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a QueryError.
                     * @implements IQueryError
                     * @constructor
                     * @param {google.monitoring.v3.IQueryError=} [properties] Properties to set
                     */
                    function QueryError(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * QueryError locator.
                     * @member {google.monitoring.v3.ITextLocator|null|undefined} locator
                     * @memberof google.monitoring.v3.QueryError
                     * @instance
                     */
                    QueryError.prototype.locator = null;
    
                    /**
                     * QueryError message.
                     * @member {string} message
                     * @memberof google.monitoring.v3.QueryError
                     * @instance
                     */
                    QueryError.prototype.message = "";
    
                    /**
                     * Creates a new QueryError instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.QueryError
                     * @static
                     * @param {google.monitoring.v3.IQueryError=} [properties] Properties to set
                     * @returns {google.monitoring.v3.QueryError} QueryError instance
                     */
                    QueryError.create = function create(properties) {
                        return new QueryError(properties);
                    };
    
                    /**
                     * Encodes the specified QueryError message. Does not implicitly {@link google.monitoring.v3.QueryError.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.QueryError
                     * @static
                     * @param {google.monitoring.v3.IQueryError} message QueryError message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryError.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.locator != null && Object.hasOwnProperty.call(message, "locator"))
                            $root.google.monitoring.v3.TextLocator.encode(message.locator, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.message);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified QueryError message, length delimited. Does not implicitly {@link google.monitoring.v3.QueryError.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.QueryError
                     * @static
                     * @param {google.monitoring.v3.IQueryError} message QueryError message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryError.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a QueryError message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.QueryError
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.QueryError} QueryError
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryError.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.QueryError();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.locator = $root.google.monitoring.v3.TextLocator.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.message = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a QueryError message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.QueryError
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.QueryError} QueryError
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryError.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a QueryError message.
                     * @function verify
                     * @memberof google.monitoring.v3.QueryError
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    QueryError.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.locator != null && message.hasOwnProperty("locator")) {
                            var error = $root.google.monitoring.v3.TextLocator.verify(message.locator);
                            if (error)
                                return "locator." + error;
                        }
                        if (message.message != null && message.hasOwnProperty("message"))
                            if (!$util.isString(message.message))
                                return "message: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a QueryError message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.QueryError
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.QueryError} QueryError
                     */
                    QueryError.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.QueryError)
                            return object;
                        var message = new $root.google.monitoring.v3.QueryError();
                        if (object.locator != null) {
                            if (typeof object.locator !== "object")
                                throw TypeError(".google.monitoring.v3.QueryError.locator: object expected");
                            message.locator = $root.google.monitoring.v3.TextLocator.fromObject(object.locator);
                        }
                        if (object.message != null)
                            message.message = String(object.message);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a QueryError message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.QueryError
                     * @static
                     * @param {google.monitoring.v3.QueryError} message QueryError
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    QueryError.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.locator = null;
                            object.message = "";
                        }
                        if (message.locator != null && message.hasOwnProperty("locator"))
                            object.locator = $root.google.monitoring.v3.TextLocator.toObject(message.locator, options);
                        if (message.message != null && message.hasOwnProperty("message"))
                            object.message = message.message;
                        return object;
                    };
    
                    /**
                     * Converts this QueryError to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.QueryError
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    QueryError.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for QueryError
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.QueryError
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    QueryError.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.QueryError";
                    };
    
                    return QueryError;
                })();
    
                v3.TextLocator = (function() {
    
                    /**
                     * Properties of a TextLocator.
                     * @memberof google.monitoring.v3
                     * @interface ITextLocator
                     * @property {string|null} [source] TextLocator source
                     * @property {google.monitoring.v3.TextLocator.IPosition|null} [startPosition] TextLocator startPosition
                     * @property {google.monitoring.v3.TextLocator.IPosition|null} [endPosition] TextLocator endPosition
                     * @property {google.monitoring.v3.ITextLocator|null} [nestedLocator] TextLocator nestedLocator
                     * @property {string|null} [nestingReason] TextLocator nestingReason
                     */
    
                    /**
                     * Constructs a new TextLocator.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a TextLocator.
                     * @implements ITextLocator
                     * @constructor
                     * @param {google.monitoring.v3.ITextLocator=} [properties] Properties to set
                     */
                    function TextLocator(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * TextLocator source.
                     * @member {string} source
                     * @memberof google.monitoring.v3.TextLocator
                     * @instance
                     */
                    TextLocator.prototype.source = "";
    
                    /**
                     * TextLocator startPosition.
                     * @member {google.monitoring.v3.TextLocator.IPosition|null|undefined} startPosition
                     * @memberof google.monitoring.v3.TextLocator
                     * @instance
                     */
                    TextLocator.prototype.startPosition = null;
    
                    /**
                     * TextLocator endPosition.
                     * @member {google.monitoring.v3.TextLocator.IPosition|null|undefined} endPosition
                     * @memberof google.monitoring.v3.TextLocator
                     * @instance
                     */
                    TextLocator.prototype.endPosition = null;
    
                    /**
                     * TextLocator nestedLocator.
                     * @member {google.monitoring.v3.ITextLocator|null|undefined} nestedLocator
                     * @memberof google.monitoring.v3.TextLocator
                     * @instance
                     */
                    TextLocator.prototype.nestedLocator = null;
    
                    /**
                     * TextLocator nestingReason.
                     * @member {string} nestingReason
                     * @memberof google.monitoring.v3.TextLocator
                     * @instance
                     */
                    TextLocator.prototype.nestingReason = "";
    
                    /**
                     * Creates a new TextLocator instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.TextLocator
                     * @static
                     * @param {google.monitoring.v3.ITextLocator=} [properties] Properties to set
                     * @returns {google.monitoring.v3.TextLocator} TextLocator instance
                     */
                    TextLocator.create = function create(properties) {
                        return new TextLocator(properties);
                    };
    
                    /**
                     * Encodes the specified TextLocator message. Does not implicitly {@link google.monitoring.v3.TextLocator.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.TextLocator
                     * @static
                     * @param {google.monitoring.v3.ITextLocator} message TextLocator message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    TextLocator.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.source != null && Object.hasOwnProperty.call(message, "source"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.source);
                        if (message.startPosition != null && Object.hasOwnProperty.call(message, "startPosition"))
                            $root.google.monitoring.v3.TextLocator.Position.encode(message.startPosition, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.endPosition != null && Object.hasOwnProperty.call(message, "endPosition"))
                            $root.google.monitoring.v3.TextLocator.Position.encode(message.endPosition, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        if (message.nestedLocator != null && Object.hasOwnProperty.call(message, "nestedLocator"))
                            $root.google.monitoring.v3.TextLocator.encode(message.nestedLocator, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        if (message.nestingReason != null && Object.hasOwnProperty.call(message, "nestingReason"))
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.nestingReason);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified TextLocator message, length delimited. Does not implicitly {@link google.monitoring.v3.TextLocator.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.TextLocator
                     * @static
                     * @param {google.monitoring.v3.ITextLocator} message TextLocator message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    TextLocator.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a TextLocator message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.TextLocator
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.TextLocator} TextLocator
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    TextLocator.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.TextLocator();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.source = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.startPosition = $root.google.monitoring.v3.TextLocator.Position.decode(reader, reader.uint32());
                                    break;
                                }
                            case 3: {
                                    message.endPosition = $root.google.monitoring.v3.TextLocator.Position.decode(reader, reader.uint32());
                                    break;
                                }
                            case 4: {
                                    message.nestedLocator = $root.google.monitoring.v3.TextLocator.decode(reader, reader.uint32());
                                    break;
                                }
                            case 5: {
                                    message.nestingReason = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a TextLocator message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.TextLocator
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.TextLocator} TextLocator
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    TextLocator.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a TextLocator message.
                     * @function verify
                     * @memberof google.monitoring.v3.TextLocator
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    TextLocator.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.source != null && message.hasOwnProperty("source"))
                            if (!$util.isString(message.source))
                                return "source: string expected";
                        if (message.startPosition != null && message.hasOwnProperty("startPosition")) {
                            var error = $root.google.monitoring.v3.TextLocator.Position.verify(message.startPosition);
                            if (error)
                                return "startPosition." + error;
                        }
                        if (message.endPosition != null && message.hasOwnProperty("endPosition")) {
                            var error = $root.google.monitoring.v3.TextLocator.Position.verify(message.endPosition);
                            if (error)
                                return "endPosition." + error;
                        }
                        if (message.nestedLocator != null && message.hasOwnProperty("nestedLocator")) {
                            var error = $root.google.monitoring.v3.TextLocator.verify(message.nestedLocator);
                            if (error)
                                return "nestedLocator." + error;
                        }
                        if (message.nestingReason != null && message.hasOwnProperty("nestingReason"))
                            if (!$util.isString(message.nestingReason))
                                return "nestingReason: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a TextLocator message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.TextLocator
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.TextLocator} TextLocator
                     */
                    TextLocator.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.TextLocator)
                            return object;
                        var message = new $root.google.monitoring.v3.TextLocator();
                        if (object.source != null)
                            message.source = String(object.source);
                        if (object.startPosition != null) {
                            if (typeof object.startPosition !== "object")
                                throw TypeError(".google.monitoring.v3.TextLocator.startPosition: object expected");
                            message.startPosition = $root.google.monitoring.v3.TextLocator.Position.fromObject(object.startPosition);
                        }
                        if (object.endPosition != null) {
                            if (typeof object.endPosition !== "object")
                                throw TypeError(".google.monitoring.v3.TextLocator.endPosition: object expected");
                            message.endPosition = $root.google.monitoring.v3.TextLocator.Position.fromObject(object.endPosition);
                        }
                        if (object.nestedLocator != null) {
                            if (typeof object.nestedLocator !== "object")
                                throw TypeError(".google.monitoring.v3.TextLocator.nestedLocator: object expected");
                            message.nestedLocator = $root.google.monitoring.v3.TextLocator.fromObject(object.nestedLocator);
                        }
                        if (object.nestingReason != null)
                            message.nestingReason = String(object.nestingReason);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a TextLocator message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.TextLocator
                     * @static
                     * @param {google.monitoring.v3.TextLocator} message TextLocator
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    TextLocator.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.source = "";
                            object.startPosition = null;
                            object.endPosition = null;
                            object.nestedLocator = null;
                            object.nestingReason = "";
                        }
                        if (message.source != null && message.hasOwnProperty("source"))
                            object.source = message.source;
                        if (message.startPosition != null && message.hasOwnProperty("startPosition"))
                            object.startPosition = $root.google.monitoring.v3.TextLocator.Position.toObject(message.startPosition, options);
                        if (message.endPosition != null && message.hasOwnProperty("endPosition"))
                            object.endPosition = $root.google.monitoring.v3.TextLocator.Position.toObject(message.endPosition, options);
                        if (message.nestedLocator != null && message.hasOwnProperty("nestedLocator"))
                            object.nestedLocator = $root.google.monitoring.v3.TextLocator.toObject(message.nestedLocator, options);
                        if (message.nestingReason != null && message.hasOwnProperty("nestingReason"))
                            object.nestingReason = message.nestingReason;
                        return object;
                    };
    
                    /**
                     * Converts this TextLocator to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.TextLocator
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    TextLocator.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for TextLocator
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.TextLocator
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    TextLocator.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.TextLocator";
                    };
    
                    TextLocator.Position = (function() {
    
                        /**
                         * Properties of a Position.
                         * @memberof google.monitoring.v3.TextLocator
                         * @interface IPosition
                         * @property {number|null} [line] Position line
                         * @property {number|null} [column] Position column
                         */
    
                        /**
                         * Constructs a new Position.
                         * @memberof google.monitoring.v3.TextLocator
                         * @classdesc Represents a Position.
                         * @implements IPosition
                         * @constructor
                         * @param {google.monitoring.v3.TextLocator.IPosition=} [properties] Properties to set
                         */
                        function Position(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Position line.
                         * @member {number} line
                         * @memberof google.monitoring.v3.TextLocator.Position
                         * @instance
                         */
                        Position.prototype.line = 0;
    
                        /**
                         * Position column.
                         * @member {number} column
                         * @memberof google.monitoring.v3.TextLocator.Position
                         * @instance
                         */
                        Position.prototype.column = 0;
    
                        /**
                         * Creates a new Position instance using the specified properties.
                         * @function create
                         * @memberof google.monitoring.v3.TextLocator.Position
                         * @static
                         * @param {google.monitoring.v3.TextLocator.IPosition=} [properties] Properties to set
                         * @returns {google.monitoring.v3.TextLocator.Position} Position instance
                         */
                        Position.create = function create(properties) {
                            return new Position(properties);
                        };
    
                        /**
                         * Encodes the specified Position message. Does not implicitly {@link google.monitoring.v3.TextLocator.Position.verify|verify} messages.
                         * @function encode
                         * @memberof google.monitoring.v3.TextLocator.Position
                         * @static
                         * @param {google.monitoring.v3.TextLocator.IPosition} message Position message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Position.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.line != null && Object.hasOwnProperty.call(message, "line"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.line);
                            if (message.column != null && Object.hasOwnProperty.call(message, "column"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.column);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Position message, length delimited. Does not implicitly {@link google.monitoring.v3.TextLocator.Position.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.monitoring.v3.TextLocator.Position
                         * @static
                         * @param {google.monitoring.v3.TextLocator.IPosition} message Position message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Position.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Position message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.monitoring.v3.TextLocator.Position
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.monitoring.v3.TextLocator.Position} Position
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Position.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.TextLocator.Position();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.line = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.column = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Position message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.monitoring.v3.TextLocator.Position
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.monitoring.v3.TextLocator.Position} Position
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Position.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Position message.
                         * @function verify
                         * @memberof google.monitoring.v3.TextLocator.Position
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Position.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.line != null && message.hasOwnProperty("line"))
                                if (!$util.isInteger(message.line))
                                    return "line: integer expected";
                            if (message.column != null && message.hasOwnProperty("column"))
                                if (!$util.isInteger(message.column))
                                    return "column: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a Position message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.monitoring.v3.TextLocator.Position
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.monitoring.v3.TextLocator.Position} Position
                         */
                        Position.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.monitoring.v3.TextLocator.Position)
                                return object;
                            var message = new $root.google.monitoring.v3.TextLocator.Position();
                            if (object.line != null)
                                message.line = object.line | 0;
                            if (object.column != null)
                                message.column = object.column | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Position message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.monitoring.v3.TextLocator.Position
                         * @static
                         * @param {google.monitoring.v3.TextLocator.Position} message Position
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Position.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.line = 0;
                                object.column = 0;
                            }
                            if (message.line != null && message.hasOwnProperty("line"))
                                object.line = message.line;
                            if (message.column != null && message.hasOwnProperty("column"))
                                object.column = message.column;
                            return object;
                        };
    
                        /**
                         * Converts this Position to JSON.
                         * @function toJSON
                         * @memberof google.monitoring.v3.TextLocator.Position
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Position.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Position
                         * @function getTypeUrl
                         * @memberof google.monitoring.v3.TextLocator.Position
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Position.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.monitoring.v3.TextLocator.Position";
                        };
    
                        return Position;
                    })();
    
                    return TextLocator;
                })();
    
                v3.MetricService = (function() {
    
                    /**
                     * Constructs a new MetricService service.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a MetricService
                     * @extends $protobuf.rpc.Service
                     * @constructor
                     * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                     * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                     * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                     */
                    function MetricService(rpcImpl, requestDelimited, responseDelimited) {
                        $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                    }
    
                    (MetricService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = MetricService;
    
                    /**
                     * Creates new MetricService service using the specified rpc implementation.
                     * @function create
                     * @memberof google.monitoring.v3.MetricService
                     * @static
                     * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                     * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                     * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                     * @returns {MetricService} RPC service. Useful where requests and/or responses are streamed.
                     */
                    MetricService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                        return new this(rpcImpl, requestDelimited, responseDelimited);
                    };
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.MetricService|listMonitoredResourceDescriptors}.
                     * @memberof google.monitoring.v3.MetricService
                     * @typedef ListMonitoredResourceDescriptorsCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.monitoring.v3.ListMonitoredResourceDescriptorsResponse} [response] ListMonitoredResourceDescriptorsResponse
                     */
    
                    /**
                     * Calls ListMonitoredResourceDescriptors.
                     * @function listMonitoredResourceDescriptors
                     * @memberof google.monitoring.v3.MetricService
                     * @instance
                     * @param {google.monitoring.v3.IListMonitoredResourceDescriptorsRequest} request ListMonitoredResourceDescriptorsRequest message or plain object
                     * @param {google.monitoring.v3.MetricService.ListMonitoredResourceDescriptorsCallback} callback Node-style callback called with the error, if any, and ListMonitoredResourceDescriptorsResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(MetricService.prototype.listMonitoredResourceDescriptors = function listMonitoredResourceDescriptors(request, callback) {
                        return this.rpcCall(listMonitoredResourceDescriptors, $root.google.monitoring.v3.ListMonitoredResourceDescriptorsRequest, $root.google.monitoring.v3.ListMonitoredResourceDescriptorsResponse, request, callback);
                    }, "name", { value: "ListMonitoredResourceDescriptors" });
    
                    /**
                     * Calls ListMonitoredResourceDescriptors.
                     * @function listMonitoredResourceDescriptors
                     * @memberof google.monitoring.v3.MetricService
                     * @instance
                     * @param {google.monitoring.v3.IListMonitoredResourceDescriptorsRequest} request ListMonitoredResourceDescriptorsRequest message or plain object
                     * @returns {Promise<google.monitoring.v3.ListMonitoredResourceDescriptorsResponse>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.MetricService|getMonitoredResourceDescriptor}.
                     * @memberof google.monitoring.v3.MetricService
                     * @typedef GetMonitoredResourceDescriptorCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.api.MonitoredResourceDescriptor} [response] MonitoredResourceDescriptor
                     */
    
                    /**
                     * Calls GetMonitoredResourceDescriptor.
                     * @function getMonitoredResourceDescriptor
                     * @memberof google.monitoring.v3.MetricService
                     * @instance
                     * @param {google.monitoring.v3.IGetMonitoredResourceDescriptorRequest} request GetMonitoredResourceDescriptorRequest message or plain object
                     * @param {google.monitoring.v3.MetricService.GetMonitoredResourceDescriptorCallback} callback Node-style callback called with the error, if any, and MonitoredResourceDescriptor
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(MetricService.prototype.getMonitoredResourceDescriptor = function getMonitoredResourceDescriptor(request, callback) {
                        return this.rpcCall(getMonitoredResourceDescriptor, $root.google.monitoring.v3.GetMonitoredResourceDescriptorRequest, $root.google.api.MonitoredResourceDescriptor, request, callback);
                    }, "name", { value: "GetMonitoredResourceDescriptor" });
    
                    /**
                     * Calls GetMonitoredResourceDescriptor.
                     * @function getMonitoredResourceDescriptor
                     * @memberof google.monitoring.v3.MetricService
                     * @instance
                     * @param {google.monitoring.v3.IGetMonitoredResourceDescriptorRequest} request GetMonitoredResourceDescriptorRequest message or plain object
                     * @returns {Promise<google.api.MonitoredResourceDescriptor>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.MetricService|listMetricDescriptors}.
                     * @memberof google.monitoring.v3.MetricService
                     * @typedef ListMetricDescriptorsCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.monitoring.v3.ListMetricDescriptorsResponse} [response] ListMetricDescriptorsResponse
                     */
    
                    /**
                     * Calls ListMetricDescriptors.
                     * @function listMetricDescriptors
                     * @memberof google.monitoring.v3.MetricService
                     * @instance
                     * @param {google.monitoring.v3.IListMetricDescriptorsRequest} request ListMetricDescriptorsRequest message or plain object
                     * @param {google.monitoring.v3.MetricService.ListMetricDescriptorsCallback} callback Node-style callback called with the error, if any, and ListMetricDescriptorsResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(MetricService.prototype.listMetricDescriptors = function listMetricDescriptors(request, callback) {
                        return this.rpcCall(listMetricDescriptors, $root.google.monitoring.v3.ListMetricDescriptorsRequest, $root.google.monitoring.v3.ListMetricDescriptorsResponse, request, callback);
                    }, "name", { value: "ListMetricDescriptors" });
    
                    /**
                     * Calls ListMetricDescriptors.
                     * @function listMetricDescriptors
                     * @memberof google.monitoring.v3.MetricService
                     * @instance
                     * @param {google.monitoring.v3.IListMetricDescriptorsRequest} request ListMetricDescriptorsRequest message or plain object
                     * @returns {Promise<google.monitoring.v3.ListMetricDescriptorsResponse>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.MetricService|getMetricDescriptor}.
                     * @memberof google.monitoring.v3.MetricService
                     * @typedef GetMetricDescriptorCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.api.MetricDescriptor} [response] MetricDescriptor
                     */
    
                    /**
                     * Calls GetMetricDescriptor.
                     * @function getMetricDescriptor
                     * @memberof google.monitoring.v3.MetricService
                     * @instance
                     * @param {google.monitoring.v3.IGetMetricDescriptorRequest} request GetMetricDescriptorRequest message or plain object
                     * @param {google.monitoring.v3.MetricService.GetMetricDescriptorCallback} callback Node-style callback called with the error, if any, and MetricDescriptor
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(MetricService.prototype.getMetricDescriptor = function getMetricDescriptor(request, callback) {
                        return this.rpcCall(getMetricDescriptor, $root.google.monitoring.v3.GetMetricDescriptorRequest, $root.google.api.MetricDescriptor, request, callback);
                    }, "name", { value: "GetMetricDescriptor" });
    
                    /**
                     * Calls GetMetricDescriptor.
                     * @function getMetricDescriptor
                     * @memberof google.monitoring.v3.MetricService
                     * @instance
                     * @param {google.monitoring.v3.IGetMetricDescriptorRequest} request GetMetricDescriptorRequest message or plain object
                     * @returns {Promise<google.api.MetricDescriptor>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.MetricService|createMetricDescriptor}.
                     * @memberof google.monitoring.v3.MetricService
                     * @typedef CreateMetricDescriptorCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.api.MetricDescriptor} [response] MetricDescriptor
                     */
    
                    /**
                     * Calls CreateMetricDescriptor.
                     * @function createMetricDescriptor
                     * @memberof google.monitoring.v3.MetricService
                     * @instance
                     * @param {google.monitoring.v3.ICreateMetricDescriptorRequest} request CreateMetricDescriptorRequest message or plain object
                     * @param {google.monitoring.v3.MetricService.CreateMetricDescriptorCallback} callback Node-style callback called with the error, if any, and MetricDescriptor
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(MetricService.prototype.createMetricDescriptor = function createMetricDescriptor(request, callback) {
                        return this.rpcCall(createMetricDescriptor, $root.google.monitoring.v3.CreateMetricDescriptorRequest, $root.google.api.MetricDescriptor, request, callback);
                    }, "name", { value: "CreateMetricDescriptor" });
    
                    /**
                     * Calls CreateMetricDescriptor.
                     * @function createMetricDescriptor
                     * @memberof google.monitoring.v3.MetricService
                     * @instance
                     * @param {google.monitoring.v3.ICreateMetricDescriptorRequest} request CreateMetricDescriptorRequest message or plain object
                     * @returns {Promise<google.api.MetricDescriptor>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.MetricService|deleteMetricDescriptor}.
                     * @memberof google.monitoring.v3.MetricService
                     * @typedef DeleteMetricDescriptorCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.protobuf.Empty} [response] Empty
                     */
    
                    /**
                     * Calls DeleteMetricDescriptor.
                     * @function deleteMetricDescriptor
                     * @memberof google.monitoring.v3.MetricService
                     * @instance
                     * @param {google.monitoring.v3.IDeleteMetricDescriptorRequest} request DeleteMetricDescriptorRequest message or plain object
                     * @param {google.monitoring.v3.MetricService.DeleteMetricDescriptorCallback} callback Node-style callback called with the error, if any, and Empty
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(MetricService.prototype.deleteMetricDescriptor = function deleteMetricDescriptor(request, callback) {
                        return this.rpcCall(deleteMetricDescriptor, $root.google.monitoring.v3.DeleteMetricDescriptorRequest, $root.google.protobuf.Empty, request, callback);
                    }, "name", { value: "DeleteMetricDescriptor" });
    
                    /**
                     * Calls DeleteMetricDescriptor.
                     * @function deleteMetricDescriptor
                     * @memberof google.monitoring.v3.MetricService
                     * @instance
                     * @param {google.monitoring.v3.IDeleteMetricDescriptorRequest} request DeleteMetricDescriptorRequest message or plain object
                     * @returns {Promise<google.protobuf.Empty>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.MetricService|listTimeSeries}.
                     * @memberof google.monitoring.v3.MetricService
                     * @typedef ListTimeSeriesCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.monitoring.v3.ListTimeSeriesResponse} [response] ListTimeSeriesResponse
                     */
    
                    /**
                     * Calls ListTimeSeries.
                     * @function listTimeSeries
                     * @memberof google.monitoring.v3.MetricService
                     * @instance
                     * @param {google.monitoring.v3.IListTimeSeriesRequest} request ListTimeSeriesRequest message or plain object
                     * @param {google.monitoring.v3.MetricService.ListTimeSeriesCallback} callback Node-style callback called with the error, if any, and ListTimeSeriesResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(MetricService.prototype.listTimeSeries = function listTimeSeries(request, callback) {
                        return this.rpcCall(listTimeSeries, $root.google.monitoring.v3.ListTimeSeriesRequest, $root.google.monitoring.v3.ListTimeSeriesResponse, request, callback);
                    }, "name", { value: "ListTimeSeries" });
    
                    /**
                     * Calls ListTimeSeries.
                     * @function listTimeSeries
                     * @memberof google.monitoring.v3.MetricService
                     * @instance
                     * @param {google.monitoring.v3.IListTimeSeriesRequest} request ListTimeSeriesRequest message or plain object
                     * @returns {Promise<google.monitoring.v3.ListTimeSeriesResponse>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.MetricService|createTimeSeries}.
                     * @memberof google.monitoring.v3.MetricService
                     * @typedef CreateTimeSeriesCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.protobuf.Empty} [response] Empty
                     */
    
                    /**
                     * Calls CreateTimeSeries.
                     * @function createTimeSeries
                     * @memberof google.monitoring.v3.MetricService
                     * @instance
                     * @param {google.monitoring.v3.ICreateTimeSeriesRequest} request CreateTimeSeriesRequest message or plain object
                     * @param {google.monitoring.v3.MetricService.CreateTimeSeriesCallback} callback Node-style callback called with the error, if any, and Empty
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(MetricService.prototype.createTimeSeries = function createTimeSeries(request, callback) {
                        return this.rpcCall(createTimeSeries, $root.google.monitoring.v3.CreateTimeSeriesRequest, $root.google.protobuf.Empty, request, callback);
                    }, "name", { value: "CreateTimeSeries" });
    
                    /**
                     * Calls CreateTimeSeries.
                     * @function createTimeSeries
                     * @memberof google.monitoring.v3.MetricService
                     * @instance
                     * @param {google.monitoring.v3.ICreateTimeSeriesRequest} request CreateTimeSeriesRequest message or plain object
                     * @returns {Promise<google.protobuf.Empty>} Promise
                     * @variation 2
                     */
    
                    return MetricService;
                })();
    
                v3.ListMonitoredResourceDescriptorsRequest = (function() {
    
                    /**
                     * Properties of a ListMonitoredResourceDescriptorsRequest.
                     * @memberof google.monitoring.v3
                     * @interface IListMonitoredResourceDescriptorsRequest
                     * @property {string|null} [name] ListMonitoredResourceDescriptorsRequest name
                     * @property {string|null} [filter] ListMonitoredResourceDescriptorsRequest filter
                     * @property {number|null} [pageSize] ListMonitoredResourceDescriptorsRequest pageSize
                     * @property {string|null} [pageToken] ListMonitoredResourceDescriptorsRequest pageToken
                     */
    
                    /**
                     * Constructs a new ListMonitoredResourceDescriptorsRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a ListMonitoredResourceDescriptorsRequest.
                     * @implements IListMonitoredResourceDescriptorsRequest
                     * @constructor
                     * @param {google.monitoring.v3.IListMonitoredResourceDescriptorsRequest=} [properties] Properties to set
                     */
                    function ListMonitoredResourceDescriptorsRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListMonitoredResourceDescriptorsRequest name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.ListMonitoredResourceDescriptorsRequest
                     * @instance
                     */
                    ListMonitoredResourceDescriptorsRequest.prototype.name = "";
    
                    /**
                     * ListMonitoredResourceDescriptorsRequest filter.
                     * @member {string} filter
                     * @memberof google.monitoring.v3.ListMonitoredResourceDescriptorsRequest
                     * @instance
                     */
                    ListMonitoredResourceDescriptorsRequest.prototype.filter = "";
    
                    /**
                     * ListMonitoredResourceDescriptorsRequest pageSize.
                     * @member {number} pageSize
                     * @memberof google.monitoring.v3.ListMonitoredResourceDescriptorsRequest
                     * @instance
                     */
                    ListMonitoredResourceDescriptorsRequest.prototype.pageSize = 0;
    
                    /**
                     * ListMonitoredResourceDescriptorsRequest pageToken.
                     * @member {string} pageToken
                     * @memberof google.monitoring.v3.ListMonitoredResourceDescriptorsRequest
                     * @instance
                     */
                    ListMonitoredResourceDescriptorsRequest.prototype.pageToken = "";
    
                    /**
                     * Creates a new ListMonitoredResourceDescriptorsRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.ListMonitoredResourceDescriptorsRequest
                     * @static
                     * @param {google.monitoring.v3.IListMonitoredResourceDescriptorsRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.ListMonitoredResourceDescriptorsRequest} ListMonitoredResourceDescriptorsRequest instance
                     */
                    ListMonitoredResourceDescriptorsRequest.create = function create(properties) {
                        return new ListMonitoredResourceDescriptorsRequest(properties);
                    };
    
                    /**
                     * Encodes the specified ListMonitoredResourceDescriptorsRequest message. Does not implicitly {@link google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.ListMonitoredResourceDescriptorsRequest
                     * @static
                     * @param {google.monitoring.v3.IListMonitoredResourceDescriptorsRequest} message ListMonitoredResourceDescriptorsRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListMonitoredResourceDescriptorsRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.filter);
                        if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.pageSize);
                        if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.pageToken);
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ListMonitoredResourceDescriptorsRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.ListMonitoredResourceDescriptorsRequest
                     * @static
                     * @param {google.monitoring.v3.IListMonitoredResourceDescriptorsRequest} message ListMonitoredResourceDescriptorsRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListMonitoredResourceDescriptorsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ListMonitoredResourceDescriptorsRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.ListMonitoredResourceDescriptorsRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.ListMonitoredResourceDescriptorsRequest} ListMonitoredResourceDescriptorsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListMonitoredResourceDescriptorsRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.ListMonitoredResourceDescriptorsRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 5: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.filter = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.pageSize = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.pageToken = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ListMonitoredResourceDescriptorsRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.ListMonitoredResourceDescriptorsRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.ListMonitoredResourceDescriptorsRequest} ListMonitoredResourceDescriptorsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListMonitoredResourceDescriptorsRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ListMonitoredResourceDescriptorsRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.ListMonitoredResourceDescriptorsRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ListMonitoredResourceDescriptorsRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.filter != null && message.hasOwnProperty("filter"))
                            if (!$util.isString(message.filter))
                                return "filter: string expected";
                        if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                            if (!$util.isInteger(message.pageSize))
                                return "pageSize: integer expected";
                        if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                            if (!$util.isString(message.pageToken))
                                return "pageToken: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a ListMonitoredResourceDescriptorsRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.ListMonitoredResourceDescriptorsRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.ListMonitoredResourceDescriptorsRequest} ListMonitoredResourceDescriptorsRequest
                     */
                    ListMonitoredResourceDescriptorsRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.ListMonitoredResourceDescriptorsRequest();
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.filter != null)
                            message.filter = String(object.filter);
                        if (object.pageSize != null)
                            message.pageSize = object.pageSize | 0;
                        if (object.pageToken != null)
                            message.pageToken = String(object.pageToken);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ListMonitoredResourceDescriptorsRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.ListMonitoredResourceDescriptorsRequest
                     * @static
                     * @param {google.monitoring.v3.ListMonitoredResourceDescriptorsRequest} message ListMonitoredResourceDescriptorsRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ListMonitoredResourceDescriptorsRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.filter = "";
                            object.pageSize = 0;
                            object.pageToken = "";
                            object.name = "";
                        }
                        if (message.filter != null && message.hasOwnProperty("filter"))
                            object.filter = message.filter;
                        if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                            object.pageSize = message.pageSize;
                        if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                            object.pageToken = message.pageToken;
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this ListMonitoredResourceDescriptorsRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.ListMonitoredResourceDescriptorsRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ListMonitoredResourceDescriptorsRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ListMonitoredResourceDescriptorsRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.ListMonitoredResourceDescriptorsRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ListMonitoredResourceDescriptorsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.ListMonitoredResourceDescriptorsRequest";
                    };
    
                    return ListMonitoredResourceDescriptorsRequest;
                })();
    
                v3.ListMonitoredResourceDescriptorsResponse = (function() {
    
                    /**
                     * Properties of a ListMonitoredResourceDescriptorsResponse.
                     * @memberof google.monitoring.v3
                     * @interface IListMonitoredResourceDescriptorsResponse
                     * @property {Array.<google.api.IMonitoredResourceDescriptor>|null} [resourceDescriptors] ListMonitoredResourceDescriptorsResponse resourceDescriptors
                     * @property {string|null} [nextPageToken] ListMonitoredResourceDescriptorsResponse nextPageToken
                     */
    
                    /**
                     * Constructs a new ListMonitoredResourceDescriptorsResponse.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a ListMonitoredResourceDescriptorsResponse.
                     * @implements IListMonitoredResourceDescriptorsResponse
                     * @constructor
                     * @param {google.monitoring.v3.IListMonitoredResourceDescriptorsResponse=} [properties] Properties to set
                     */
                    function ListMonitoredResourceDescriptorsResponse(properties) {
                        this.resourceDescriptors = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListMonitoredResourceDescriptorsResponse resourceDescriptors.
                     * @member {Array.<google.api.IMonitoredResourceDescriptor>} resourceDescriptors
                     * @memberof google.monitoring.v3.ListMonitoredResourceDescriptorsResponse
                     * @instance
                     */
                    ListMonitoredResourceDescriptorsResponse.prototype.resourceDescriptors = $util.emptyArray;
    
                    /**
                     * ListMonitoredResourceDescriptorsResponse nextPageToken.
                     * @member {string} nextPageToken
                     * @memberof google.monitoring.v3.ListMonitoredResourceDescriptorsResponse
                     * @instance
                     */
                    ListMonitoredResourceDescriptorsResponse.prototype.nextPageToken = "";
    
                    /**
                     * Creates a new ListMonitoredResourceDescriptorsResponse instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.ListMonitoredResourceDescriptorsResponse
                     * @static
                     * @param {google.monitoring.v3.IListMonitoredResourceDescriptorsResponse=} [properties] Properties to set
                     * @returns {google.monitoring.v3.ListMonitoredResourceDescriptorsResponse} ListMonitoredResourceDescriptorsResponse instance
                     */
                    ListMonitoredResourceDescriptorsResponse.create = function create(properties) {
                        return new ListMonitoredResourceDescriptorsResponse(properties);
                    };
    
                    /**
                     * Encodes the specified ListMonitoredResourceDescriptorsResponse message. Does not implicitly {@link google.monitoring.v3.ListMonitoredResourceDescriptorsResponse.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.ListMonitoredResourceDescriptorsResponse
                     * @static
                     * @param {google.monitoring.v3.IListMonitoredResourceDescriptorsResponse} message ListMonitoredResourceDescriptorsResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListMonitoredResourceDescriptorsResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.resourceDescriptors != null && message.resourceDescriptors.length)
                            for (var i = 0; i < message.resourceDescriptors.length; ++i)
                                $root.google.api.MonitoredResourceDescriptor.encode(message.resourceDescriptors[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ListMonitoredResourceDescriptorsResponse message, length delimited. Does not implicitly {@link google.monitoring.v3.ListMonitoredResourceDescriptorsResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.ListMonitoredResourceDescriptorsResponse
                     * @static
                     * @param {google.monitoring.v3.IListMonitoredResourceDescriptorsResponse} message ListMonitoredResourceDescriptorsResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListMonitoredResourceDescriptorsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ListMonitoredResourceDescriptorsResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.ListMonitoredResourceDescriptorsResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.ListMonitoredResourceDescriptorsResponse} ListMonitoredResourceDescriptorsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListMonitoredResourceDescriptorsResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.ListMonitoredResourceDescriptorsResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.resourceDescriptors && message.resourceDescriptors.length))
                                        message.resourceDescriptors = [];
                                    message.resourceDescriptors.push($root.google.api.MonitoredResourceDescriptor.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 2: {
                                    message.nextPageToken = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ListMonitoredResourceDescriptorsResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.ListMonitoredResourceDescriptorsResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.ListMonitoredResourceDescriptorsResponse} ListMonitoredResourceDescriptorsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListMonitoredResourceDescriptorsResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ListMonitoredResourceDescriptorsResponse message.
                     * @function verify
                     * @memberof google.monitoring.v3.ListMonitoredResourceDescriptorsResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ListMonitoredResourceDescriptorsResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.resourceDescriptors != null && message.hasOwnProperty("resourceDescriptors")) {
                            if (!Array.isArray(message.resourceDescriptors))
                                return "resourceDescriptors: array expected";
                            for (var i = 0; i < message.resourceDescriptors.length; ++i) {
                                var error = $root.google.api.MonitoredResourceDescriptor.verify(message.resourceDescriptors[i]);
                                if (error)
                                    return "resourceDescriptors." + error;
                            }
                        }
                        if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                            if (!$util.isString(message.nextPageToken))
                                return "nextPageToken: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a ListMonitoredResourceDescriptorsResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.ListMonitoredResourceDescriptorsResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.ListMonitoredResourceDescriptorsResponse} ListMonitoredResourceDescriptorsResponse
                     */
                    ListMonitoredResourceDescriptorsResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
                            return object;
                        var message = new $root.google.monitoring.v3.ListMonitoredResourceDescriptorsResponse();
                        if (object.resourceDescriptors) {
                            if (!Array.isArray(object.resourceDescriptors))
                                throw TypeError(".google.monitoring.v3.ListMonitoredResourceDescriptorsResponse.resourceDescriptors: array expected");
                            message.resourceDescriptors = [];
                            for (var i = 0; i < object.resourceDescriptors.length; ++i) {
                                if (typeof object.resourceDescriptors[i] !== "object")
                                    throw TypeError(".google.monitoring.v3.ListMonitoredResourceDescriptorsResponse.resourceDescriptors: object expected");
                                message.resourceDescriptors[i] = $root.google.api.MonitoredResourceDescriptor.fromObject(object.resourceDescriptors[i]);
                            }
                        }
                        if (object.nextPageToken != null)
                            message.nextPageToken = String(object.nextPageToken);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ListMonitoredResourceDescriptorsResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.ListMonitoredResourceDescriptorsResponse
                     * @static
                     * @param {google.monitoring.v3.ListMonitoredResourceDescriptorsResponse} message ListMonitoredResourceDescriptorsResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ListMonitoredResourceDescriptorsResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.resourceDescriptors = [];
                        if (options.defaults)
                            object.nextPageToken = "";
                        if (message.resourceDescriptors && message.resourceDescriptors.length) {
                            object.resourceDescriptors = [];
                            for (var j = 0; j < message.resourceDescriptors.length; ++j)
                                object.resourceDescriptors[j] = $root.google.api.MonitoredResourceDescriptor.toObject(message.resourceDescriptors[j], options);
                        }
                        if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                            object.nextPageToken = message.nextPageToken;
                        return object;
                    };
    
                    /**
                     * Converts this ListMonitoredResourceDescriptorsResponse to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.ListMonitoredResourceDescriptorsResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ListMonitoredResourceDescriptorsResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ListMonitoredResourceDescriptorsResponse
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.ListMonitoredResourceDescriptorsResponse
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ListMonitoredResourceDescriptorsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.ListMonitoredResourceDescriptorsResponse";
                    };
    
                    return ListMonitoredResourceDescriptorsResponse;
                })();
    
                v3.GetMonitoredResourceDescriptorRequest = (function() {
    
                    /**
                     * Properties of a GetMonitoredResourceDescriptorRequest.
                     * @memberof google.monitoring.v3
                     * @interface IGetMonitoredResourceDescriptorRequest
                     * @property {string|null} [name] GetMonitoredResourceDescriptorRequest name
                     */
    
                    /**
                     * Constructs a new GetMonitoredResourceDescriptorRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a GetMonitoredResourceDescriptorRequest.
                     * @implements IGetMonitoredResourceDescriptorRequest
                     * @constructor
                     * @param {google.monitoring.v3.IGetMonitoredResourceDescriptorRequest=} [properties] Properties to set
                     */
                    function GetMonitoredResourceDescriptorRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * GetMonitoredResourceDescriptorRequest name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.GetMonitoredResourceDescriptorRequest
                     * @instance
                     */
                    GetMonitoredResourceDescriptorRequest.prototype.name = "";
    
                    /**
                     * Creates a new GetMonitoredResourceDescriptorRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.GetMonitoredResourceDescriptorRequest
                     * @static
                     * @param {google.monitoring.v3.IGetMonitoredResourceDescriptorRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.GetMonitoredResourceDescriptorRequest} GetMonitoredResourceDescriptorRequest instance
                     */
                    GetMonitoredResourceDescriptorRequest.create = function create(properties) {
                        return new GetMonitoredResourceDescriptorRequest(properties);
                    };
    
                    /**
                     * Encodes the specified GetMonitoredResourceDescriptorRequest message. Does not implicitly {@link google.monitoring.v3.GetMonitoredResourceDescriptorRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.GetMonitoredResourceDescriptorRequest
                     * @static
                     * @param {google.monitoring.v3.IGetMonitoredResourceDescriptorRequest} message GetMonitoredResourceDescriptorRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetMonitoredResourceDescriptorRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified GetMonitoredResourceDescriptorRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.GetMonitoredResourceDescriptorRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.GetMonitoredResourceDescriptorRequest
                     * @static
                     * @param {google.monitoring.v3.IGetMonitoredResourceDescriptorRequest} message GetMonitoredResourceDescriptorRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetMonitoredResourceDescriptorRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a GetMonitoredResourceDescriptorRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.GetMonitoredResourceDescriptorRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.GetMonitoredResourceDescriptorRequest} GetMonitoredResourceDescriptorRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetMonitoredResourceDescriptorRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.GetMonitoredResourceDescriptorRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 3: {
                                    message.name = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a GetMonitoredResourceDescriptorRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.GetMonitoredResourceDescriptorRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.GetMonitoredResourceDescriptorRequest} GetMonitoredResourceDescriptorRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetMonitoredResourceDescriptorRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a GetMonitoredResourceDescriptorRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.GetMonitoredResourceDescriptorRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    GetMonitoredResourceDescriptorRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a GetMonitoredResourceDescriptorRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.GetMonitoredResourceDescriptorRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.GetMonitoredResourceDescriptorRequest} GetMonitoredResourceDescriptorRequest
                     */
                    GetMonitoredResourceDescriptorRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.GetMonitoredResourceDescriptorRequest();
                        if (object.name != null)
                            message.name = String(object.name);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a GetMonitoredResourceDescriptorRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.GetMonitoredResourceDescriptorRequest
                     * @static
                     * @param {google.monitoring.v3.GetMonitoredResourceDescriptorRequest} message GetMonitoredResourceDescriptorRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    GetMonitoredResourceDescriptorRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.name = "";
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this GetMonitoredResourceDescriptorRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.GetMonitoredResourceDescriptorRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    GetMonitoredResourceDescriptorRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for GetMonitoredResourceDescriptorRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.GetMonitoredResourceDescriptorRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    GetMonitoredResourceDescriptorRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.GetMonitoredResourceDescriptorRequest";
                    };
    
                    return GetMonitoredResourceDescriptorRequest;
                })();
    
                v3.ListMetricDescriptorsRequest = (function() {
    
                    /**
                     * Properties of a ListMetricDescriptorsRequest.
                     * @memberof google.monitoring.v3
                     * @interface IListMetricDescriptorsRequest
                     * @property {string|null} [name] ListMetricDescriptorsRequest name
                     * @property {string|null} [filter] ListMetricDescriptorsRequest filter
                     * @property {number|null} [pageSize] ListMetricDescriptorsRequest pageSize
                     * @property {string|null} [pageToken] ListMetricDescriptorsRequest pageToken
                     */
    
                    /**
                     * Constructs a new ListMetricDescriptorsRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a ListMetricDescriptorsRequest.
                     * @implements IListMetricDescriptorsRequest
                     * @constructor
                     * @param {google.monitoring.v3.IListMetricDescriptorsRequest=} [properties] Properties to set
                     */
                    function ListMetricDescriptorsRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListMetricDescriptorsRequest name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.ListMetricDescriptorsRequest
                     * @instance
                     */
                    ListMetricDescriptorsRequest.prototype.name = "";
    
                    /**
                     * ListMetricDescriptorsRequest filter.
                     * @member {string} filter
                     * @memberof google.monitoring.v3.ListMetricDescriptorsRequest
                     * @instance
                     */
                    ListMetricDescriptorsRequest.prototype.filter = "";
    
                    /**
                     * ListMetricDescriptorsRequest pageSize.
                     * @member {number} pageSize
                     * @memberof google.monitoring.v3.ListMetricDescriptorsRequest
                     * @instance
                     */
                    ListMetricDescriptorsRequest.prototype.pageSize = 0;
    
                    /**
                     * ListMetricDescriptorsRequest pageToken.
                     * @member {string} pageToken
                     * @memberof google.monitoring.v3.ListMetricDescriptorsRequest
                     * @instance
                     */
                    ListMetricDescriptorsRequest.prototype.pageToken = "";
    
                    /**
                     * Creates a new ListMetricDescriptorsRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.ListMetricDescriptorsRequest
                     * @static
                     * @param {google.monitoring.v3.IListMetricDescriptorsRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.ListMetricDescriptorsRequest} ListMetricDescriptorsRequest instance
                     */
                    ListMetricDescriptorsRequest.create = function create(properties) {
                        return new ListMetricDescriptorsRequest(properties);
                    };
    
                    /**
                     * Encodes the specified ListMetricDescriptorsRequest message. Does not implicitly {@link google.monitoring.v3.ListMetricDescriptorsRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.ListMetricDescriptorsRequest
                     * @static
                     * @param {google.monitoring.v3.IListMetricDescriptorsRequest} message ListMetricDescriptorsRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListMetricDescriptorsRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.filter);
                        if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.pageSize);
                        if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.pageToken);
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ListMetricDescriptorsRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.ListMetricDescriptorsRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.ListMetricDescriptorsRequest
                     * @static
                     * @param {google.monitoring.v3.IListMetricDescriptorsRequest} message ListMetricDescriptorsRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListMetricDescriptorsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ListMetricDescriptorsRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.ListMetricDescriptorsRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.ListMetricDescriptorsRequest} ListMetricDescriptorsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListMetricDescriptorsRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.ListMetricDescriptorsRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 5: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.filter = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.pageSize = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.pageToken = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ListMetricDescriptorsRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.ListMetricDescriptorsRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.ListMetricDescriptorsRequest} ListMetricDescriptorsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListMetricDescriptorsRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ListMetricDescriptorsRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.ListMetricDescriptorsRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ListMetricDescriptorsRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.filter != null && message.hasOwnProperty("filter"))
                            if (!$util.isString(message.filter))
                                return "filter: string expected";
                        if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                            if (!$util.isInteger(message.pageSize))
                                return "pageSize: integer expected";
                        if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                            if (!$util.isString(message.pageToken))
                                return "pageToken: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a ListMetricDescriptorsRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.ListMetricDescriptorsRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.ListMetricDescriptorsRequest} ListMetricDescriptorsRequest
                     */
                    ListMetricDescriptorsRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.ListMetricDescriptorsRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.ListMetricDescriptorsRequest();
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.filter != null)
                            message.filter = String(object.filter);
                        if (object.pageSize != null)
                            message.pageSize = object.pageSize | 0;
                        if (object.pageToken != null)
                            message.pageToken = String(object.pageToken);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ListMetricDescriptorsRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.ListMetricDescriptorsRequest
                     * @static
                     * @param {google.monitoring.v3.ListMetricDescriptorsRequest} message ListMetricDescriptorsRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ListMetricDescriptorsRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.filter = "";
                            object.pageSize = 0;
                            object.pageToken = "";
                            object.name = "";
                        }
                        if (message.filter != null && message.hasOwnProperty("filter"))
                            object.filter = message.filter;
                        if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                            object.pageSize = message.pageSize;
                        if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                            object.pageToken = message.pageToken;
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this ListMetricDescriptorsRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.ListMetricDescriptorsRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ListMetricDescriptorsRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ListMetricDescriptorsRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.ListMetricDescriptorsRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ListMetricDescriptorsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.ListMetricDescriptorsRequest";
                    };
    
                    return ListMetricDescriptorsRequest;
                })();
    
                v3.ListMetricDescriptorsResponse = (function() {
    
                    /**
                     * Properties of a ListMetricDescriptorsResponse.
                     * @memberof google.monitoring.v3
                     * @interface IListMetricDescriptorsResponse
                     * @property {Array.<google.api.IMetricDescriptor>|null} [metricDescriptors] ListMetricDescriptorsResponse metricDescriptors
                     * @property {string|null} [nextPageToken] ListMetricDescriptorsResponse nextPageToken
                     */
    
                    /**
                     * Constructs a new ListMetricDescriptorsResponse.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a ListMetricDescriptorsResponse.
                     * @implements IListMetricDescriptorsResponse
                     * @constructor
                     * @param {google.monitoring.v3.IListMetricDescriptorsResponse=} [properties] Properties to set
                     */
                    function ListMetricDescriptorsResponse(properties) {
                        this.metricDescriptors = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListMetricDescriptorsResponse metricDescriptors.
                     * @member {Array.<google.api.IMetricDescriptor>} metricDescriptors
                     * @memberof google.monitoring.v3.ListMetricDescriptorsResponse
                     * @instance
                     */
                    ListMetricDescriptorsResponse.prototype.metricDescriptors = $util.emptyArray;
    
                    /**
                     * ListMetricDescriptorsResponse nextPageToken.
                     * @member {string} nextPageToken
                     * @memberof google.monitoring.v3.ListMetricDescriptorsResponse
                     * @instance
                     */
                    ListMetricDescriptorsResponse.prototype.nextPageToken = "";
    
                    /**
                     * Creates a new ListMetricDescriptorsResponse instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.ListMetricDescriptorsResponse
                     * @static
                     * @param {google.monitoring.v3.IListMetricDescriptorsResponse=} [properties] Properties to set
                     * @returns {google.monitoring.v3.ListMetricDescriptorsResponse} ListMetricDescriptorsResponse instance
                     */
                    ListMetricDescriptorsResponse.create = function create(properties) {
                        return new ListMetricDescriptorsResponse(properties);
                    };
    
                    /**
                     * Encodes the specified ListMetricDescriptorsResponse message. Does not implicitly {@link google.monitoring.v3.ListMetricDescriptorsResponse.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.ListMetricDescriptorsResponse
                     * @static
                     * @param {google.monitoring.v3.IListMetricDescriptorsResponse} message ListMetricDescriptorsResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListMetricDescriptorsResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.metricDescriptors != null && message.metricDescriptors.length)
                            for (var i = 0; i < message.metricDescriptors.length; ++i)
                                $root.google.api.MetricDescriptor.encode(message.metricDescriptors[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ListMetricDescriptorsResponse message, length delimited. Does not implicitly {@link google.monitoring.v3.ListMetricDescriptorsResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.ListMetricDescriptorsResponse
                     * @static
                     * @param {google.monitoring.v3.IListMetricDescriptorsResponse} message ListMetricDescriptorsResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListMetricDescriptorsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ListMetricDescriptorsResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.ListMetricDescriptorsResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.ListMetricDescriptorsResponse} ListMetricDescriptorsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListMetricDescriptorsResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.ListMetricDescriptorsResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.metricDescriptors && message.metricDescriptors.length))
                                        message.metricDescriptors = [];
                                    message.metricDescriptors.push($root.google.api.MetricDescriptor.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 2: {
                                    message.nextPageToken = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ListMetricDescriptorsResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.ListMetricDescriptorsResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.ListMetricDescriptorsResponse} ListMetricDescriptorsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListMetricDescriptorsResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ListMetricDescriptorsResponse message.
                     * @function verify
                     * @memberof google.monitoring.v3.ListMetricDescriptorsResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ListMetricDescriptorsResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.metricDescriptors != null && message.hasOwnProperty("metricDescriptors")) {
                            if (!Array.isArray(message.metricDescriptors))
                                return "metricDescriptors: array expected";
                            for (var i = 0; i < message.metricDescriptors.length; ++i) {
                                var error = $root.google.api.MetricDescriptor.verify(message.metricDescriptors[i]);
                                if (error)
                                    return "metricDescriptors." + error;
                            }
                        }
                        if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                            if (!$util.isString(message.nextPageToken))
                                return "nextPageToken: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a ListMetricDescriptorsResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.ListMetricDescriptorsResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.ListMetricDescriptorsResponse} ListMetricDescriptorsResponse
                     */
                    ListMetricDescriptorsResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.ListMetricDescriptorsResponse)
                            return object;
                        var message = new $root.google.monitoring.v3.ListMetricDescriptorsResponse();
                        if (object.metricDescriptors) {
                            if (!Array.isArray(object.metricDescriptors))
                                throw TypeError(".google.monitoring.v3.ListMetricDescriptorsResponse.metricDescriptors: array expected");
                            message.metricDescriptors = [];
                            for (var i = 0; i < object.metricDescriptors.length; ++i) {
                                if (typeof object.metricDescriptors[i] !== "object")
                                    throw TypeError(".google.monitoring.v3.ListMetricDescriptorsResponse.metricDescriptors: object expected");
                                message.metricDescriptors[i] = $root.google.api.MetricDescriptor.fromObject(object.metricDescriptors[i]);
                            }
                        }
                        if (object.nextPageToken != null)
                            message.nextPageToken = String(object.nextPageToken);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ListMetricDescriptorsResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.ListMetricDescriptorsResponse
                     * @static
                     * @param {google.monitoring.v3.ListMetricDescriptorsResponse} message ListMetricDescriptorsResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ListMetricDescriptorsResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.metricDescriptors = [];
                        if (options.defaults)
                            object.nextPageToken = "";
                        if (message.metricDescriptors && message.metricDescriptors.length) {
                            object.metricDescriptors = [];
                            for (var j = 0; j < message.metricDescriptors.length; ++j)
                                object.metricDescriptors[j] = $root.google.api.MetricDescriptor.toObject(message.metricDescriptors[j], options);
                        }
                        if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                            object.nextPageToken = message.nextPageToken;
                        return object;
                    };
    
                    /**
                     * Converts this ListMetricDescriptorsResponse to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.ListMetricDescriptorsResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ListMetricDescriptorsResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ListMetricDescriptorsResponse
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.ListMetricDescriptorsResponse
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ListMetricDescriptorsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.ListMetricDescriptorsResponse";
                    };
    
                    return ListMetricDescriptorsResponse;
                })();
    
                v3.GetMetricDescriptorRequest = (function() {
    
                    /**
                     * Properties of a GetMetricDescriptorRequest.
                     * @memberof google.monitoring.v3
                     * @interface IGetMetricDescriptorRequest
                     * @property {string|null} [name] GetMetricDescriptorRequest name
                     */
    
                    /**
                     * Constructs a new GetMetricDescriptorRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a GetMetricDescriptorRequest.
                     * @implements IGetMetricDescriptorRequest
                     * @constructor
                     * @param {google.monitoring.v3.IGetMetricDescriptorRequest=} [properties] Properties to set
                     */
                    function GetMetricDescriptorRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * GetMetricDescriptorRequest name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.GetMetricDescriptorRequest
                     * @instance
                     */
                    GetMetricDescriptorRequest.prototype.name = "";
    
                    /**
                     * Creates a new GetMetricDescriptorRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.GetMetricDescriptorRequest
                     * @static
                     * @param {google.monitoring.v3.IGetMetricDescriptorRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.GetMetricDescriptorRequest} GetMetricDescriptorRequest instance
                     */
                    GetMetricDescriptorRequest.create = function create(properties) {
                        return new GetMetricDescriptorRequest(properties);
                    };
    
                    /**
                     * Encodes the specified GetMetricDescriptorRequest message. Does not implicitly {@link google.monitoring.v3.GetMetricDescriptorRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.GetMetricDescriptorRequest
                     * @static
                     * @param {google.monitoring.v3.IGetMetricDescriptorRequest} message GetMetricDescriptorRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetMetricDescriptorRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified GetMetricDescriptorRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.GetMetricDescriptorRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.GetMetricDescriptorRequest
                     * @static
                     * @param {google.monitoring.v3.IGetMetricDescriptorRequest} message GetMetricDescriptorRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetMetricDescriptorRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a GetMetricDescriptorRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.GetMetricDescriptorRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.GetMetricDescriptorRequest} GetMetricDescriptorRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetMetricDescriptorRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.GetMetricDescriptorRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 3: {
                                    message.name = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a GetMetricDescriptorRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.GetMetricDescriptorRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.GetMetricDescriptorRequest} GetMetricDescriptorRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetMetricDescriptorRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a GetMetricDescriptorRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.GetMetricDescriptorRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    GetMetricDescriptorRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a GetMetricDescriptorRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.GetMetricDescriptorRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.GetMetricDescriptorRequest} GetMetricDescriptorRequest
                     */
                    GetMetricDescriptorRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.GetMetricDescriptorRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.GetMetricDescriptorRequest();
                        if (object.name != null)
                            message.name = String(object.name);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a GetMetricDescriptorRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.GetMetricDescriptorRequest
                     * @static
                     * @param {google.monitoring.v3.GetMetricDescriptorRequest} message GetMetricDescriptorRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    GetMetricDescriptorRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.name = "";
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this GetMetricDescriptorRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.GetMetricDescriptorRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    GetMetricDescriptorRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for GetMetricDescriptorRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.GetMetricDescriptorRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    GetMetricDescriptorRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.GetMetricDescriptorRequest";
                    };
    
                    return GetMetricDescriptorRequest;
                })();
    
                v3.CreateMetricDescriptorRequest = (function() {
    
                    /**
                     * Properties of a CreateMetricDescriptorRequest.
                     * @memberof google.monitoring.v3
                     * @interface ICreateMetricDescriptorRequest
                     * @property {string|null} [name] CreateMetricDescriptorRequest name
                     * @property {google.api.IMetricDescriptor|null} [metricDescriptor] CreateMetricDescriptorRequest metricDescriptor
                     */
    
                    /**
                     * Constructs a new CreateMetricDescriptorRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a CreateMetricDescriptorRequest.
                     * @implements ICreateMetricDescriptorRequest
                     * @constructor
                     * @param {google.monitoring.v3.ICreateMetricDescriptorRequest=} [properties] Properties to set
                     */
                    function CreateMetricDescriptorRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * CreateMetricDescriptorRequest name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.CreateMetricDescriptorRequest
                     * @instance
                     */
                    CreateMetricDescriptorRequest.prototype.name = "";
    
                    /**
                     * CreateMetricDescriptorRequest metricDescriptor.
                     * @member {google.api.IMetricDescriptor|null|undefined} metricDescriptor
                     * @memberof google.monitoring.v3.CreateMetricDescriptorRequest
                     * @instance
                     */
                    CreateMetricDescriptorRequest.prototype.metricDescriptor = null;
    
                    /**
                     * Creates a new CreateMetricDescriptorRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.CreateMetricDescriptorRequest
                     * @static
                     * @param {google.monitoring.v3.ICreateMetricDescriptorRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.CreateMetricDescriptorRequest} CreateMetricDescriptorRequest instance
                     */
                    CreateMetricDescriptorRequest.create = function create(properties) {
                        return new CreateMetricDescriptorRequest(properties);
                    };
    
                    /**
                     * Encodes the specified CreateMetricDescriptorRequest message. Does not implicitly {@link google.monitoring.v3.CreateMetricDescriptorRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.CreateMetricDescriptorRequest
                     * @static
                     * @param {google.monitoring.v3.ICreateMetricDescriptorRequest} message CreateMetricDescriptorRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CreateMetricDescriptorRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.metricDescriptor != null && Object.hasOwnProperty.call(message, "metricDescriptor"))
                            $root.google.api.MetricDescriptor.encode(message.metricDescriptor, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified CreateMetricDescriptorRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.CreateMetricDescriptorRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.CreateMetricDescriptorRequest
                     * @static
                     * @param {google.monitoring.v3.ICreateMetricDescriptorRequest} message CreateMetricDescriptorRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CreateMetricDescriptorRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a CreateMetricDescriptorRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.CreateMetricDescriptorRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.CreateMetricDescriptorRequest} CreateMetricDescriptorRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CreateMetricDescriptorRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.CreateMetricDescriptorRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 3: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.metricDescriptor = $root.google.api.MetricDescriptor.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a CreateMetricDescriptorRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.CreateMetricDescriptorRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.CreateMetricDescriptorRequest} CreateMetricDescriptorRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CreateMetricDescriptorRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a CreateMetricDescriptorRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.CreateMetricDescriptorRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    CreateMetricDescriptorRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.metricDescriptor != null && message.hasOwnProperty("metricDescriptor")) {
                            var error = $root.google.api.MetricDescriptor.verify(message.metricDescriptor);
                            if (error)
                                return "metricDescriptor." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a CreateMetricDescriptorRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.CreateMetricDescriptorRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.CreateMetricDescriptorRequest} CreateMetricDescriptorRequest
                     */
                    CreateMetricDescriptorRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.CreateMetricDescriptorRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.CreateMetricDescriptorRequest();
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.metricDescriptor != null) {
                            if (typeof object.metricDescriptor !== "object")
                                throw TypeError(".google.monitoring.v3.CreateMetricDescriptorRequest.metricDescriptor: object expected");
                            message.metricDescriptor = $root.google.api.MetricDescriptor.fromObject(object.metricDescriptor);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a CreateMetricDescriptorRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.CreateMetricDescriptorRequest
                     * @static
                     * @param {google.monitoring.v3.CreateMetricDescriptorRequest} message CreateMetricDescriptorRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    CreateMetricDescriptorRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.metricDescriptor = null;
                            object.name = "";
                        }
                        if (message.metricDescriptor != null && message.hasOwnProperty("metricDescriptor"))
                            object.metricDescriptor = $root.google.api.MetricDescriptor.toObject(message.metricDescriptor, options);
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this CreateMetricDescriptorRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.CreateMetricDescriptorRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    CreateMetricDescriptorRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for CreateMetricDescriptorRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.CreateMetricDescriptorRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    CreateMetricDescriptorRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.CreateMetricDescriptorRequest";
                    };
    
                    return CreateMetricDescriptorRequest;
                })();
    
                v3.DeleteMetricDescriptorRequest = (function() {
    
                    /**
                     * Properties of a DeleteMetricDescriptorRequest.
                     * @memberof google.monitoring.v3
                     * @interface IDeleteMetricDescriptorRequest
                     * @property {string|null} [name] DeleteMetricDescriptorRequest name
                     */
    
                    /**
                     * Constructs a new DeleteMetricDescriptorRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a DeleteMetricDescriptorRequest.
                     * @implements IDeleteMetricDescriptorRequest
                     * @constructor
                     * @param {google.monitoring.v3.IDeleteMetricDescriptorRequest=} [properties] Properties to set
                     */
                    function DeleteMetricDescriptorRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * DeleteMetricDescriptorRequest name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.DeleteMetricDescriptorRequest
                     * @instance
                     */
                    DeleteMetricDescriptorRequest.prototype.name = "";
    
                    /**
                     * Creates a new DeleteMetricDescriptorRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.DeleteMetricDescriptorRequest
                     * @static
                     * @param {google.monitoring.v3.IDeleteMetricDescriptorRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.DeleteMetricDescriptorRequest} DeleteMetricDescriptorRequest instance
                     */
                    DeleteMetricDescriptorRequest.create = function create(properties) {
                        return new DeleteMetricDescriptorRequest(properties);
                    };
    
                    /**
                     * Encodes the specified DeleteMetricDescriptorRequest message. Does not implicitly {@link google.monitoring.v3.DeleteMetricDescriptorRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.DeleteMetricDescriptorRequest
                     * @static
                     * @param {google.monitoring.v3.IDeleteMetricDescriptorRequest} message DeleteMetricDescriptorRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DeleteMetricDescriptorRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified DeleteMetricDescriptorRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.DeleteMetricDescriptorRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.DeleteMetricDescriptorRequest
                     * @static
                     * @param {google.monitoring.v3.IDeleteMetricDescriptorRequest} message DeleteMetricDescriptorRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DeleteMetricDescriptorRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a DeleteMetricDescriptorRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.DeleteMetricDescriptorRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.DeleteMetricDescriptorRequest} DeleteMetricDescriptorRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DeleteMetricDescriptorRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.DeleteMetricDescriptorRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 3: {
                                    message.name = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a DeleteMetricDescriptorRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.DeleteMetricDescriptorRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.DeleteMetricDescriptorRequest} DeleteMetricDescriptorRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DeleteMetricDescriptorRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a DeleteMetricDescriptorRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.DeleteMetricDescriptorRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    DeleteMetricDescriptorRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a DeleteMetricDescriptorRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.DeleteMetricDescriptorRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.DeleteMetricDescriptorRequest} DeleteMetricDescriptorRequest
                     */
                    DeleteMetricDescriptorRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.DeleteMetricDescriptorRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.DeleteMetricDescriptorRequest();
                        if (object.name != null)
                            message.name = String(object.name);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a DeleteMetricDescriptorRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.DeleteMetricDescriptorRequest
                     * @static
                     * @param {google.monitoring.v3.DeleteMetricDescriptorRequest} message DeleteMetricDescriptorRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    DeleteMetricDescriptorRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.name = "";
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this DeleteMetricDescriptorRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.DeleteMetricDescriptorRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    DeleteMetricDescriptorRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for DeleteMetricDescriptorRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.DeleteMetricDescriptorRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    DeleteMetricDescriptorRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.DeleteMetricDescriptorRequest";
                    };
    
                    return DeleteMetricDescriptorRequest;
                })();
    
                v3.ListTimeSeriesRequest = (function() {
    
                    /**
                     * Properties of a ListTimeSeriesRequest.
                     * @memberof google.monitoring.v3
                     * @interface IListTimeSeriesRequest
                     * @property {string|null} [name] ListTimeSeriesRequest name
                     * @property {string|null} [filter] ListTimeSeriesRequest filter
                     * @property {google.monitoring.v3.ITimeInterval|null} [interval] ListTimeSeriesRequest interval
                     * @property {google.monitoring.v3.IAggregation|null} [aggregation] ListTimeSeriesRequest aggregation
                     * @property {google.monitoring.v3.IAggregation|null} [secondaryAggregation] ListTimeSeriesRequest secondaryAggregation
                     * @property {string|null} [orderBy] ListTimeSeriesRequest orderBy
                     * @property {google.monitoring.v3.ListTimeSeriesRequest.TimeSeriesView|null} [view] ListTimeSeriesRequest view
                     * @property {number|null} [pageSize] ListTimeSeriesRequest pageSize
                     * @property {string|null} [pageToken] ListTimeSeriesRequest pageToken
                     */
    
                    /**
                     * Constructs a new ListTimeSeriesRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a ListTimeSeriesRequest.
                     * @implements IListTimeSeriesRequest
                     * @constructor
                     * @param {google.monitoring.v3.IListTimeSeriesRequest=} [properties] Properties to set
                     */
                    function ListTimeSeriesRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListTimeSeriesRequest name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.ListTimeSeriesRequest
                     * @instance
                     */
                    ListTimeSeriesRequest.prototype.name = "";
    
                    /**
                     * ListTimeSeriesRequest filter.
                     * @member {string} filter
                     * @memberof google.monitoring.v3.ListTimeSeriesRequest
                     * @instance
                     */
                    ListTimeSeriesRequest.prototype.filter = "";
    
                    /**
                     * ListTimeSeriesRequest interval.
                     * @member {google.monitoring.v3.ITimeInterval|null|undefined} interval
                     * @memberof google.monitoring.v3.ListTimeSeriesRequest
                     * @instance
                     */
                    ListTimeSeriesRequest.prototype.interval = null;
    
                    /**
                     * ListTimeSeriesRequest aggregation.
                     * @member {google.monitoring.v3.IAggregation|null|undefined} aggregation
                     * @memberof google.monitoring.v3.ListTimeSeriesRequest
                     * @instance
                     */
                    ListTimeSeriesRequest.prototype.aggregation = null;
    
                    /**
                     * ListTimeSeriesRequest secondaryAggregation.
                     * @member {google.monitoring.v3.IAggregation|null|undefined} secondaryAggregation
                     * @memberof google.monitoring.v3.ListTimeSeriesRequest
                     * @instance
                     */
                    ListTimeSeriesRequest.prototype.secondaryAggregation = null;
    
                    /**
                     * ListTimeSeriesRequest orderBy.
                     * @member {string} orderBy
                     * @memberof google.monitoring.v3.ListTimeSeriesRequest
                     * @instance
                     */
                    ListTimeSeriesRequest.prototype.orderBy = "";
    
                    /**
                     * ListTimeSeriesRequest view.
                     * @member {google.monitoring.v3.ListTimeSeriesRequest.TimeSeriesView} view
                     * @memberof google.monitoring.v3.ListTimeSeriesRequest
                     * @instance
                     */
                    ListTimeSeriesRequest.prototype.view = 0;
    
                    /**
                     * ListTimeSeriesRequest pageSize.
                     * @member {number} pageSize
                     * @memberof google.monitoring.v3.ListTimeSeriesRequest
                     * @instance
                     */
                    ListTimeSeriesRequest.prototype.pageSize = 0;
    
                    /**
                     * ListTimeSeriesRequest pageToken.
                     * @member {string} pageToken
                     * @memberof google.monitoring.v3.ListTimeSeriesRequest
                     * @instance
                     */
                    ListTimeSeriesRequest.prototype.pageToken = "";
    
                    /**
                     * Creates a new ListTimeSeriesRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.ListTimeSeriesRequest
                     * @static
                     * @param {google.monitoring.v3.IListTimeSeriesRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.ListTimeSeriesRequest} ListTimeSeriesRequest instance
                     */
                    ListTimeSeriesRequest.create = function create(properties) {
                        return new ListTimeSeriesRequest(properties);
                    };
    
                    /**
                     * Encodes the specified ListTimeSeriesRequest message. Does not implicitly {@link google.monitoring.v3.ListTimeSeriesRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.ListTimeSeriesRequest
                     * @static
                     * @param {google.monitoring.v3.IListTimeSeriesRequest} message ListTimeSeriesRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListTimeSeriesRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.filter);
                        if (message.interval != null && Object.hasOwnProperty.call(message, "interval"))
                            $root.google.monitoring.v3.TimeInterval.encode(message.interval, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        if (message.aggregation != null && Object.hasOwnProperty.call(message, "aggregation"))
                            $root.google.monitoring.v3.Aggregation.encode(message.aggregation, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                        if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                            writer.uint32(/* id 6, wireType 2 =*/50).string(message.orderBy);
                        if (message.view != null && Object.hasOwnProperty.call(message, "view"))
                            writer.uint32(/* id 7, wireType 0 =*/56).int32(message.view);
                        if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                            writer.uint32(/* id 8, wireType 0 =*/64).int32(message.pageSize);
                        if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                            writer.uint32(/* id 9, wireType 2 =*/74).string(message.pageToken);
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.name);
                        if (message.secondaryAggregation != null && Object.hasOwnProperty.call(message, "secondaryAggregation"))
                            $root.google.monitoring.v3.Aggregation.encode(message.secondaryAggregation, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ListTimeSeriesRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.ListTimeSeriesRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.ListTimeSeriesRequest
                     * @static
                     * @param {google.monitoring.v3.IListTimeSeriesRequest} message ListTimeSeriesRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListTimeSeriesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ListTimeSeriesRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.ListTimeSeriesRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.ListTimeSeriesRequest} ListTimeSeriesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListTimeSeriesRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.ListTimeSeriesRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 10: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.filter = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.interval = $root.google.monitoring.v3.TimeInterval.decode(reader, reader.uint32());
                                    break;
                                }
                            case 5: {
                                    message.aggregation = $root.google.monitoring.v3.Aggregation.decode(reader, reader.uint32());
                                    break;
                                }
                            case 11: {
                                    message.secondaryAggregation = $root.google.monitoring.v3.Aggregation.decode(reader, reader.uint32());
                                    break;
                                }
                            case 6: {
                                    message.orderBy = reader.string();
                                    break;
                                }
                            case 7: {
                                    message.view = reader.int32();
                                    break;
                                }
                            case 8: {
                                    message.pageSize = reader.int32();
                                    break;
                                }
                            case 9: {
                                    message.pageToken = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ListTimeSeriesRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.ListTimeSeriesRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.ListTimeSeriesRequest} ListTimeSeriesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListTimeSeriesRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ListTimeSeriesRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.ListTimeSeriesRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ListTimeSeriesRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.filter != null && message.hasOwnProperty("filter"))
                            if (!$util.isString(message.filter))
                                return "filter: string expected";
                        if (message.interval != null && message.hasOwnProperty("interval")) {
                            var error = $root.google.monitoring.v3.TimeInterval.verify(message.interval);
                            if (error)
                                return "interval." + error;
                        }
                        if (message.aggregation != null && message.hasOwnProperty("aggregation")) {
                            var error = $root.google.monitoring.v3.Aggregation.verify(message.aggregation);
                            if (error)
                                return "aggregation." + error;
                        }
                        if (message.secondaryAggregation != null && message.hasOwnProperty("secondaryAggregation")) {
                            var error = $root.google.monitoring.v3.Aggregation.verify(message.secondaryAggregation);
                            if (error)
                                return "secondaryAggregation." + error;
                        }
                        if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                            if (!$util.isString(message.orderBy))
                                return "orderBy: string expected";
                        if (message.view != null && message.hasOwnProperty("view"))
                            switch (message.view) {
                            default:
                                return "view: enum value expected";
                            case 0:
                            case 1:
                                break;
                            }
                        if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                            if (!$util.isInteger(message.pageSize))
                                return "pageSize: integer expected";
                        if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                            if (!$util.isString(message.pageToken))
                                return "pageToken: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a ListTimeSeriesRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.ListTimeSeriesRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.ListTimeSeriesRequest} ListTimeSeriesRequest
                     */
                    ListTimeSeriesRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.ListTimeSeriesRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.ListTimeSeriesRequest();
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.filter != null)
                            message.filter = String(object.filter);
                        if (object.interval != null) {
                            if (typeof object.interval !== "object")
                                throw TypeError(".google.monitoring.v3.ListTimeSeriesRequest.interval: object expected");
                            message.interval = $root.google.monitoring.v3.TimeInterval.fromObject(object.interval);
                        }
                        if (object.aggregation != null) {
                            if (typeof object.aggregation !== "object")
                                throw TypeError(".google.monitoring.v3.ListTimeSeriesRequest.aggregation: object expected");
                            message.aggregation = $root.google.monitoring.v3.Aggregation.fromObject(object.aggregation);
                        }
                        if (object.secondaryAggregation != null) {
                            if (typeof object.secondaryAggregation !== "object")
                                throw TypeError(".google.monitoring.v3.ListTimeSeriesRequest.secondaryAggregation: object expected");
                            message.secondaryAggregation = $root.google.monitoring.v3.Aggregation.fromObject(object.secondaryAggregation);
                        }
                        if (object.orderBy != null)
                            message.orderBy = String(object.orderBy);
                        switch (object.view) {
                        default:
                            if (typeof object.view === "number") {
                                message.view = object.view;
                                break;
                            }
                            break;
                        case "FULL":
                        case 0:
                            message.view = 0;
                            break;
                        case "HEADERS":
                        case 1:
                            message.view = 1;
                            break;
                        }
                        if (object.pageSize != null)
                            message.pageSize = object.pageSize | 0;
                        if (object.pageToken != null)
                            message.pageToken = String(object.pageToken);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ListTimeSeriesRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.ListTimeSeriesRequest
                     * @static
                     * @param {google.monitoring.v3.ListTimeSeriesRequest} message ListTimeSeriesRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ListTimeSeriesRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.filter = "";
                            object.interval = null;
                            object.aggregation = null;
                            object.orderBy = "";
                            object.view = options.enums === String ? "FULL" : 0;
                            object.pageSize = 0;
                            object.pageToken = "";
                            object.name = "";
                            object.secondaryAggregation = null;
                        }
                        if (message.filter != null && message.hasOwnProperty("filter"))
                            object.filter = message.filter;
                        if (message.interval != null && message.hasOwnProperty("interval"))
                            object.interval = $root.google.monitoring.v3.TimeInterval.toObject(message.interval, options);
                        if (message.aggregation != null && message.hasOwnProperty("aggregation"))
                            object.aggregation = $root.google.monitoring.v3.Aggregation.toObject(message.aggregation, options);
                        if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                            object.orderBy = message.orderBy;
                        if (message.view != null && message.hasOwnProperty("view"))
                            object.view = options.enums === String ? $root.google.monitoring.v3.ListTimeSeriesRequest.TimeSeriesView[message.view] === undefined ? message.view : $root.google.monitoring.v3.ListTimeSeriesRequest.TimeSeriesView[message.view] : message.view;
                        if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                            object.pageSize = message.pageSize;
                        if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                            object.pageToken = message.pageToken;
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        if (message.secondaryAggregation != null && message.hasOwnProperty("secondaryAggregation"))
                            object.secondaryAggregation = $root.google.monitoring.v3.Aggregation.toObject(message.secondaryAggregation, options);
                        return object;
                    };
    
                    /**
                     * Converts this ListTimeSeriesRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.ListTimeSeriesRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ListTimeSeriesRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ListTimeSeriesRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.ListTimeSeriesRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ListTimeSeriesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.ListTimeSeriesRequest";
                    };
    
                    /**
                     * TimeSeriesView enum.
                     * @name google.monitoring.v3.ListTimeSeriesRequest.TimeSeriesView
                     * @enum {number}
                     * @property {number} FULL=0 FULL value
                     * @property {number} HEADERS=1 HEADERS value
                     */
                    ListTimeSeriesRequest.TimeSeriesView = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "FULL"] = 0;
                        values[valuesById[1] = "HEADERS"] = 1;
                        return values;
                    })();
    
                    return ListTimeSeriesRequest;
                })();
    
                v3.ListTimeSeriesResponse = (function() {
    
                    /**
                     * Properties of a ListTimeSeriesResponse.
                     * @memberof google.monitoring.v3
                     * @interface IListTimeSeriesResponse
                     * @property {Array.<google.monitoring.v3.ITimeSeries>|null} [timeSeries] ListTimeSeriesResponse timeSeries
                     * @property {string|null} [nextPageToken] ListTimeSeriesResponse nextPageToken
                     * @property {Array.<google.rpc.IStatus>|null} [executionErrors] ListTimeSeriesResponse executionErrors
                     * @property {string|null} [unit] ListTimeSeriesResponse unit
                     */
    
                    /**
                     * Constructs a new ListTimeSeriesResponse.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a ListTimeSeriesResponse.
                     * @implements IListTimeSeriesResponse
                     * @constructor
                     * @param {google.monitoring.v3.IListTimeSeriesResponse=} [properties] Properties to set
                     */
                    function ListTimeSeriesResponse(properties) {
                        this.timeSeries = [];
                        this.executionErrors = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListTimeSeriesResponse timeSeries.
                     * @member {Array.<google.monitoring.v3.ITimeSeries>} timeSeries
                     * @memberof google.monitoring.v3.ListTimeSeriesResponse
                     * @instance
                     */
                    ListTimeSeriesResponse.prototype.timeSeries = $util.emptyArray;
    
                    /**
                     * ListTimeSeriesResponse nextPageToken.
                     * @member {string} nextPageToken
                     * @memberof google.monitoring.v3.ListTimeSeriesResponse
                     * @instance
                     */
                    ListTimeSeriesResponse.prototype.nextPageToken = "";
    
                    /**
                     * ListTimeSeriesResponse executionErrors.
                     * @member {Array.<google.rpc.IStatus>} executionErrors
                     * @memberof google.monitoring.v3.ListTimeSeriesResponse
                     * @instance
                     */
                    ListTimeSeriesResponse.prototype.executionErrors = $util.emptyArray;
    
                    /**
                     * ListTimeSeriesResponse unit.
                     * @member {string} unit
                     * @memberof google.monitoring.v3.ListTimeSeriesResponse
                     * @instance
                     */
                    ListTimeSeriesResponse.prototype.unit = "";
    
                    /**
                     * Creates a new ListTimeSeriesResponse instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.ListTimeSeriesResponse
                     * @static
                     * @param {google.monitoring.v3.IListTimeSeriesResponse=} [properties] Properties to set
                     * @returns {google.monitoring.v3.ListTimeSeriesResponse} ListTimeSeriesResponse instance
                     */
                    ListTimeSeriesResponse.create = function create(properties) {
                        return new ListTimeSeriesResponse(properties);
                    };
    
                    /**
                     * Encodes the specified ListTimeSeriesResponse message. Does not implicitly {@link google.monitoring.v3.ListTimeSeriesResponse.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.ListTimeSeriesResponse
                     * @static
                     * @param {google.monitoring.v3.IListTimeSeriesResponse} message ListTimeSeriesResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListTimeSeriesResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.timeSeries != null && message.timeSeries.length)
                            for (var i = 0; i < message.timeSeries.length; ++i)
                                $root.google.monitoring.v3.TimeSeries.encode(message.timeSeries[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                        if (message.executionErrors != null && message.executionErrors.length)
                            for (var i = 0; i < message.executionErrors.length; ++i)
                                $root.google.rpc.Status.encode(message.executionErrors[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        if (message.unit != null && Object.hasOwnProperty.call(message, "unit"))
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.unit);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ListTimeSeriesResponse message, length delimited. Does not implicitly {@link google.monitoring.v3.ListTimeSeriesResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.ListTimeSeriesResponse
                     * @static
                     * @param {google.monitoring.v3.IListTimeSeriesResponse} message ListTimeSeriesResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListTimeSeriesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ListTimeSeriesResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.ListTimeSeriesResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.ListTimeSeriesResponse} ListTimeSeriesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListTimeSeriesResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.ListTimeSeriesResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.timeSeries && message.timeSeries.length))
                                        message.timeSeries = [];
                                    message.timeSeries.push($root.google.monitoring.v3.TimeSeries.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 2: {
                                    message.nextPageToken = reader.string();
                                    break;
                                }
                            case 3: {
                                    if (!(message.executionErrors && message.executionErrors.length))
                                        message.executionErrors = [];
                                    message.executionErrors.push($root.google.rpc.Status.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 5: {
                                    message.unit = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ListTimeSeriesResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.ListTimeSeriesResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.ListTimeSeriesResponse} ListTimeSeriesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListTimeSeriesResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ListTimeSeriesResponse message.
                     * @function verify
                     * @memberof google.monitoring.v3.ListTimeSeriesResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ListTimeSeriesResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.timeSeries != null && message.hasOwnProperty("timeSeries")) {
                            if (!Array.isArray(message.timeSeries))
                                return "timeSeries: array expected";
                            for (var i = 0; i < message.timeSeries.length; ++i) {
                                var error = $root.google.monitoring.v3.TimeSeries.verify(message.timeSeries[i]);
                                if (error)
                                    return "timeSeries." + error;
                            }
                        }
                        if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                            if (!$util.isString(message.nextPageToken))
                                return "nextPageToken: string expected";
                        if (message.executionErrors != null && message.hasOwnProperty("executionErrors")) {
                            if (!Array.isArray(message.executionErrors))
                                return "executionErrors: array expected";
                            for (var i = 0; i < message.executionErrors.length; ++i) {
                                var error = $root.google.rpc.Status.verify(message.executionErrors[i]);
                                if (error)
                                    return "executionErrors." + error;
                            }
                        }
                        if (message.unit != null && message.hasOwnProperty("unit"))
                            if (!$util.isString(message.unit))
                                return "unit: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a ListTimeSeriesResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.ListTimeSeriesResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.ListTimeSeriesResponse} ListTimeSeriesResponse
                     */
                    ListTimeSeriesResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.ListTimeSeriesResponse)
                            return object;
                        var message = new $root.google.monitoring.v3.ListTimeSeriesResponse();
                        if (object.timeSeries) {
                            if (!Array.isArray(object.timeSeries))
                                throw TypeError(".google.monitoring.v3.ListTimeSeriesResponse.timeSeries: array expected");
                            message.timeSeries = [];
                            for (var i = 0; i < object.timeSeries.length; ++i) {
                                if (typeof object.timeSeries[i] !== "object")
                                    throw TypeError(".google.monitoring.v3.ListTimeSeriesResponse.timeSeries: object expected");
                                message.timeSeries[i] = $root.google.monitoring.v3.TimeSeries.fromObject(object.timeSeries[i]);
                            }
                        }
                        if (object.nextPageToken != null)
                            message.nextPageToken = String(object.nextPageToken);
                        if (object.executionErrors) {
                            if (!Array.isArray(object.executionErrors))
                                throw TypeError(".google.monitoring.v3.ListTimeSeriesResponse.executionErrors: array expected");
                            message.executionErrors = [];
                            for (var i = 0; i < object.executionErrors.length; ++i) {
                                if (typeof object.executionErrors[i] !== "object")
                                    throw TypeError(".google.monitoring.v3.ListTimeSeriesResponse.executionErrors: object expected");
                                message.executionErrors[i] = $root.google.rpc.Status.fromObject(object.executionErrors[i]);
                            }
                        }
                        if (object.unit != null)
                            message.unit = String(object.unit);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ListTimeSeriesResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.ListTimeSeriesResponse
                     * @static
                     * @param {google.monitoring.v3.ListTimeSeriesResponse} message ListTimeSeriesResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ListTimeSeriesResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.timeSeries = [];
                            object.executionErrors = [];
                        }
                        if (options.defaults) {
                            object.nextPageToken = "";
                            object.unit = "";
                        }
                        if (message.timeSeries && message.timeSeries.length) {
                            object.timeSeries = [];
                            for (var j = 0; j < message.timeSeries.length; ++j)
                                object.timeSeries[j] = $root.google.monitoring.v3.TimeSeries.toObject(message.timeSeries[j], options);
                        }
                        if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                            object.nextPageToken = message.nextPageToken;
                        if (message.executionErrors && message.executionErrors.length) {
                            object.executionErrors = [];
                            for (var j = 0; j < message.executionErrors.length; ++j)
                                object.executionErrors[j] = $root.google.rpc.Status.toObject(message.executionErrors[j], options);
                        }
                        if (message.unit != null && message.hasOwnProperty("unit"))
                            object.unit = message.unit;
                        return object;
                    };
    
                    /**
                     * Converts this ListTimeSeriesResponse to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.ListTimeSeriesResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ListTimeSeriesResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ListTimeSeriesResponse
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.ListTimeSeriesResponse
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ListTimeSeriesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.ListTimeSeriesResponse";
                    };
    
                    return ListTimeSeriesResponse;
                })();
    
                v3.CreateTimeSeriesRequest = (function() {
    
                    /**
                     * Properties of a CreateTimeSeriesRequest.
                     * @memberof google.monitoring.v3
                     * @interface ICreateTimeSeriesRequest
                     * @property {string|null} [name] CreateTimeSeriesRequest name
                     * @property {Array.<google.monitoring.v3.ITimeSeries>|null} [timeSeries] CreateTimeSeriesRequest timeSeries
                     */
    
                    /**
                     * Constructs a new CreateTimeSeriesRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a CreateTimeSeriesRequest.
                     * @implements ICreateTimeSeriesRequest
                     * @constructor
                     * @param {google.monitoring.v3.ICreateTimeSeriesRequest=} [properties] Properties to set
                     */
                    function CreateTimeSeriesRequest(properties) {
                        this.timeSeries = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * CreateTimeSeriesRequest name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.CreateTimeSeriesRequest
                     * @instance
                     */
                    CreateTimeSeriesRequest.prototype.name = "";
    
                    /**
                     * CreateTimeSeriesRequest timeSeries.
                     * @member {Array.<google.monitoring.v3.ITimeSeries>} timeSeries
                     * @memberof google.monitoring.v3.CreateTimeSeriesRequest
                     * @instance
                     */
                    CreateTimeSeriesRequest.prototype.timeSeries = $util.emptyArray;
    
                    /**
                     * Creates a new CreateTimeSeriesRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.CreateTimeSeriesRequest
                     * @static
                     * @param {google.monitoring.v3.ICreateTimeSeriesRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.CreateTimeSeriesRequest} CreateTimeSeriesRequest instance
                     */
                    CreateTimeSeriesRequest.create = function create(properties) {
                        return new CreateTimeSeriesRequest(properties);
                    };
    
                    /**
                     * Encodes the specified CreateTimeSeriesRequest message. Does not implicitly {@link google.monitoring.v3.CreateTimeSeriesRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.CreateTimeSeriesRequest
                     * @static
                     * @param {google.monitoring.v3.ICreateTimeSeriesRequest} message CreateTimeSeriesRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CreateTimeSeriesRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.timeSeries != null && message.timeSeries.length)
                            for (var i = 0; i < message.timeSeries.length; ++i)
                                $root.google.monitoring.v3.TimeSeries.encode(message.timeSeries[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified CreateTimeSeriesRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.CreateTimeSeriesRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.CreateTimeSeriesRequest
                     * @static
                     * @param {google.monitoring.v3.ICreateTimeSeriesRequest} message CreateTimeSeriesRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CreateTimeSeriesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a CreateTimeSeriesRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.CreateTimeSeriesRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.CreateTimeSeriesRequest} CreateTimeSeriesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CreateTimeSeriesRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.CreateTimeSeriesRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 3: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 2: {
                                    if (!(message.timeSeries && message.timeSeries.length))
                                        message.timeSeries = [];
                                    message.timeSeries.push($root.google.monitoring.v3.TimeSeries.decode(reader, reader.uint32()));
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a CreateTimeSeriesRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.CreateTimeSeriesRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.CreateTimeSeriesRequest} CreateTimeSeriesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CreateTimeSeriesRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a CreateTimeSeriesRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.CreateTimeSeriesRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    CreateTimeSeriesRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.timeSeries != null && message.hasOwnProperty("timeSeries")) {
                            if (!Array.isArray(message.timeSeries))
                                return "timeSeries: array expected";
                            for (var i = 0; i < message.timeSeries.length; ++i) {
                                var error = $root.google.monitoring.v3.TimeSeries.verify(message.timeSeries[i]);
                                if (error)
                                    return "timeSeries." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates a CreateTimeSeriesRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.CreateTimeSeriesRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.CreateTimeSeriesRequest} CreateTimeSeriesRequest
                     */
                    CreateTimeSeriesRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.CreateTimeSeriesRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.CreateTimeSeriesRequest();
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.timeSeries) {
                            if (!Array.isArray(object.timeSeries))
                                throw TypeError(".google.monitoring.v3.CreateTimeSeriesRequest.timeSeries: array expected");
                            message.timeSeries = [];
                            for (var i = 0; i < object.timeSeries.length; ++i) {
                                if (typeof object.timeSeries[i] !== "object")
                                    throw TypeError(".google.monitoring.v3.CreateTimeSeriesRequest.timeSeries: object expected");
                                message.timeSeries[i] = $root.google.monitoring.v3.TimeSeries.fromObject(object.timeSeries[i]);
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a CreateTimeSeriesRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.CreateTimeSeriesRequest
                     * @static
                     * @param {google.monitoring.v3.CreateTimeSeriesRequest} message CreateTimeSeriesRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    CreateTimeSeriesRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.timeSeries = [];
                        if (options.defaults)
                            object.name = "";
                        if (message.timeSeries && message.timeSeries.length) {
                            object.timeSeries = [];
                            for (var j = 0; j < message.timeSeries.length; ++j)
                                object.timeSeries[j] = $root.google.monitoring.v3.TimeSeries.toObject(message.timeSeries[j], options);
                        }
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this CreateTimeSeriesRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.CreateTimeSeriesRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    CreateTimeSeriesRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for CreateTimeSeriesRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.CreateTimeSeriesRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    CreateTimeSeriesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.CreateTimeSeriesRequest";
                    };
    
                    return CreateTimeSeriesRequest;
                })();
    
                v3.CreateTimeSeriesError = (function() {
    
                    /**
                     * Properties of a CreateTimeSeriesError.
                     * @memberof google.monitoring.v3
                     * @interface ICreateTimeSeriesError
                     * @property {google.monitoring.v3.ITimeSeries|null} [timeSeries] CreateTimeSeriesError timeSeries
                     * @property {google.rpc.IStatus|null} [status] CreateTimeSeriesError status
                     */
    
                    /**
                     * Constructs a new CreateTimeSeriesError.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a CreateTimeSeriesError.
                     * @implements ICreateTimeSeriesError
                     * @constructor
                     * @param {google.monitoring.v3.ICreateTimeSeriesError=} [properties] Properties to set
                     */
                    function CreateTimeSeriesError(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * CreateTimeSeriesError timeSeries.
                     * @member {google.monitoring.v3.ITimeSeries|null|undefined} timeSeries
                     * @memberof google.monitoring.v3.CreateTimeSeriesError
                     * @instance
                     */
                    CreateTimeSeriesError.prototype.timeSeries = null;
    
                    /**
                     * CreateTimeSeriesError status.
                     * @member {google.rpc.IStatus|null|undefined} status
                     * @memberof google.monitoring.v3.CreateTimeSeriesError
                     * @instance
                     */
                    CreateTimeSeriesError.prototype.status = null;
    
                    /**
                     * Creates a new CreateTimeSeriesError instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.CreateTimeSeriesError
                     * @static
                     * @param {google.monitoring.v3.ICreateTimeSeriesError=} [properties] Properties to set
                     * @returns {google.monitoring.v3.CreateTimeSeriesError} CreateTimeSeriesError instance
                     */
                    CreateTimeSeriesError.create = function create(properties) {
                        return new CreateTimeSeriesError(properties);
                    };
    
                    /**
                     * Encodes the specified CreateTimeSeriesError message. Does not implicitly {@link google.monitoring.v3.CreateTimeSeriesError.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.CreateTimeSeriesError
                     * @static
                     * @param {google.monitoring.v3.ICreateTimeSeriesError} message CreateTimeSeriesError message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CreateTimeSeriesError.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.timeSeries != null && Object.hasOwnProperty.call(message, "timeSeries"))
                            $root.google.monitoring.v3.TimeSeries.encode(message.timeSeries, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.status != null && Object.hasOwnProperty.call(message, "status"))
                            $root.google.rpc.Status.encode(message.status, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified CreateTimeSeriesError message, length delimited. Does not implicitly {@link google.monitoring.v3.CreateTimeSeriesError.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.CreateTimeSeriesError
                     * @static
                     * @param {google.monitoring.v3.ICreateTimeSeriesError} message CreateTimeSeriesError message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CreateTimeSeriesError.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a CreateTimeSeriesError message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.CreateTimeSeriesError
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.CreateTimeSeriesError} CreateTimeSeriesError
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CreateTimeSeriesError.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.CreateTimeSeriesError();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.timeSeries = $root.google.monitoring.v3.TimeSeries.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.status = $root.google.rpc.Status.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a CreateTimeSeriesError message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.CreateTimeSeriesError
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.CreateTimeSeriesError} CreateTimeSeriesError
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CreateTimeSeriesError.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a CreateTimeSeriesError message.
                     * @function verify
                     * @memberof google.monitoring.v3.CreateTimeSeriesError
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    CreateTimeSeriesError.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.timeSeries != null && message.hasOwnProperty("timeSeries")) {
                            var error = $root.google.monitoring.v3.TimeSeries.verify(message.timeSeries);
                            if (error)
                                return "timeSeries." + error;
                        }
                        if (message.status != null && message.hasOwnProperty("status")) {
                            var error = $root.google.rpc.Status.verify(message.status);
                            if (error)
                                return "status." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a CreateTimeSeriesError message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.CreateTimeSeriesError
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.CreateTimeSeriesError} CreateTimeSeriesError
                     */
                    CreateTimeSeriesError.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.CreateTimeSeriesError)
                            return object;
                        var message = new $root.google.monitoring.v3.CreateTimeSeriesError();
                        if (object.timeSeries != null) {
                            if (typeof object.timeSeries !== "object")
                                throw TypeError(".google.monitoring.v3.CreateTimeSeriesError.timeSeries: object expected");
                            message.timeSeries = $root.google.monitoring.v3.TimeSeries.fromObject(object.timeSeries);
                        }
                        if (object.status != null) {
                            if (typeof object.status !== "object")
                                throw TypeError(".google.monitoring.v3.CreateTimeSeriesError.status: object expected");
                            message.status = $root.google.rpc.Status.fromObject(object.status);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a CreateTimeSeriesError message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.CreateTimeSeriesError
                     * @static
                     * @param {google.monitoring.v3.CreateTimeSeriesError} message CreateTimeSeriesError
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    CreateTimeSeriesError.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.timeSeries = null;
                            object.status = null;
                        }
                        if (message.timeSeries != null && message.hasOwnProperty("timeSeries"))
                            object.timeSeries = $root.google.monitoring.v3.TimeSeries.toObject(message.timeSeries, options);
                        if (message.status != null && message.hasOwnProperty("status"))
                            object.status = $root.google.rpc.Status.toObject(message.status, options);
                        return object;
                    };
    
                    /**
                     * Converts this CreateTimeSeriesError to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.CreateTimeSeriesError
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    CreateTimeSeriesError.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for CreateTimeSeriesError
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.CreateTimeSeriesError
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    CreateTimeSeriesError.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.CreateTimeSeriesError";
                    };
    
                    return CreateTimeSeriesError;
                })();
    
                v3.CreateTimeSeriesSummary = (function() {
    
                    /**
                     * Properties of a CreateTimeSeriesSummary.
                     * @memberof google.monitoring.v3
                     * @interface ICreateTimeSeriesSummary
                     * @property {number|null} [totalPointCount] CreateTimeSeriesSummary totalPointCount
                     * @property {number|null} [successPointCount] CreateTimeSeriesSummary successPointCount
                     * @property {Array.<google.monitoring.v3.CreateTimeSeriesSummary.IError>|null} [errors] CreateTimeSeriesSummary errors
                     */
    
                    /**
                     * Constructs a new CreateTimeSeriesSummary.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a CreateTimeSeriesSummary.
                     * @implements ICreateTimeSeriesSummary
                     * @constructor
                     * @param {google.monitoring.v3.ICreateTimeSeriesSummary=} [properties] Properties to set
                     */
                    function CreateTimeSeriesSummary(properties) {
                        this.errors = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * CreateTimeSeriesSummary totalPointCount.
                     * @member {number} totalPointCount
                     * @memberof google.monitoring.v3.CreateTimeSeriesSummary
                     * @instance
                     */
                    CreateTimeSeriesSummary.prototype.totalPointCount = 0;
    
                    /**
                     * CreateTimeSeriesSummary successPointCount.
                     * @member {number} successPointCount
                     * @memberof google.monitoring.v3.CreateTimeSeriesSummary
                     * @instance
                     */
                    CreateTimeSeriesSummary.prototype.successPointCount = 0;
    
                    /**
                     * CreateTimeSeriesSummary errors.
                     * @member {Array.<google.monitoring.v3.CreateTimeSeriesSummary.IError>} errors
                     * @memberof google.monitoring.v3.CreateTimeSeriesSummary
                     * @instance
                     */
                    CreateTimeSeriesSummary.prototype.errors = $util.emptyArray;
    
                    /**
                     * Creates a new CreateTimeSeriesSummary instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.CreateTimeSeriesSummary
                     * @static
                     * @param {google.monitoring.v3.ICreateTimeSeriesSummary=} [properties] Properties to set
                     * @returns {google.monitoring.v3.CreateTimeSeriesSummary} CreateTimeSeriesSummary instance
                     */
                    CreateTimeSeriesSummary.create = function create(properties) {
                        return new CreateTimeSeriesSummary(properties);
                    };
    
                    /**
                     * Encodes the specified CreateTimeSeriesSummary message. Does not implicitly {@link google.monitoring.v3.CreateTimeSeriesSummary.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.CreateTimeSeriesSummary
                     * @static
                     * @param {google.monitoring.v3.ICreateTimeSeriesSummary} message CreateTimeSeriesSummary message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CreateTimeSeriesSummary.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.totalPointCount != null && Object.hasOwnProperty.call(message, "totalPointCount"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.totalPointCount);
                        if (message.successPointCount != null && Object.hasOwnProperty.call(message, "successPointCount"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.successPointCount);
                        if (message.errors != null && message.errors.length)
                            for (var i = 0; i < message.errors.length; ++i)
                                $root.google.monitoring.v3.CreateTimeSeriesSummary.Error.encode(message.errors[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified CreateTimeSeriesSummary message, length delimited. Does not implicitly {@link google.monitoring.v3.CreateTimeSeriesSummary.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.CreateTimeSeriesSummary
                     * @static
                     * @param {google.monitoring.v3.ICreateTimeSeriesSummary} message CreateTimeSeriesSummary message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CreateTimeSeriesSummary.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a CreateTimeSeriesSummary message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.CreateTimeSeriesSummary
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.CreateTimeSeriesSummary} CreateTimeSeriesSummary
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CreateTimeSeriesSummary.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.CreateTimeSeriesSummary();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.totalPointCount = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.successPointCount = reader.int32();
                                    break;
                                }
                            case 3: {
                                    if (!(message.errors && message.errors.length))
                                        message.errors = [];
                                    message.errors.push($root.google.monitoring.v3.CreateTimeSeriesSummary.Error.decode(reader, reader.uint32()));
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a CreateTimeSeriesSummary message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.CreateTimeSeriesSummary
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.CreateTimeSeriesSummary} CreateTimeSeriesSummary
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CreateTimeSeriesSummary.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a CreateTimeSeriesSummary message.
                     * @function verify
                     * @memberof google.monitoring.v3.CreateTimeSeriesSummary
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    CreateTimeSeriesSummary.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.totalPointCount != null && message.hasOwnProperty("totalPointCount"))
                            if (!$util.isInteger(message.totalPointCount))
                                return "totalPointCount: integer expected";
                        if (message.successPointCount != null && message.hasOwnProperty("successPointCount"))
                            if (!$util.isInteger(message.successPointCount))
                                return "successPointCount: integer expected";
                        if (message.errors != null && message.hasOwnProperty("errors")) {
                            if (!Array.isArray(message.errors))
                                return "errors: array expected";
                            for (var i = 0; i < message.errors.length; ++i) {
                                var error = $root.google.monitoring.v3.CreateTimeSeriesSummary.Error.verify(message.errors[i]);
                                if (error)
                                    return "errors." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates a CreateTimeSeriesSummary message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.CreateTimeSeriesSummary
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.CreateTimeSeriesSummary} CreateTimeSeriesSummary
                     */
                    CreateTimeSeriesSummary.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.CreateTimeSeriesSummary)
                            return object;
                        var message = new $root.google.monitoring.v3.CreateTimeSeriesSummary();
                        if (object.totalPointCount != null)
                            message.totalPointCount = object.totalPointCount | 0;
                        if (object.successPointCount != null)
                            message.successPointCount = object.successPointCount | 0;
                        if (object.errors) {
                            if (!Array.isArray(object.errors))
                                throw TypeError(".google.monitoring.v3.CreateTimeSeriesSummary.errors: array expected");
                            message.errors = [];
                            for (var i = 0; i < object.errors.length; ++i) {
                                if (typeof object.errors[i] !== "object")
                                    throw TypeError(".google.monitoring.v3.CreateTimeSeriesSummary.errors: object expected");
                                message.errors[i] = $root.google.monitoring.v3.CreateTimeSeriesSummary.Error.fromObject(object.errors[i]);
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a CreateTimeSeriesSummary message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.CreateTimeSeriesSummary
                     * @static
                     * @param {google.monitoring.v3.CreateTimeSeriesSummary} message CreateTimeSeriesSummary
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    CreateTimeSeriesSummary.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.errors = [];
                        if (options.defaults) {
                            object.totalPointCount = 0;
                            object.successPointCount = 0;
                        }
                        if (message.totalPointCount != null && message.hasOwnProperty("totalPointCount"))
                            object.totalPointCount = message.totalPointCount;
                        if (message.successPointCount != null && message.hasOwnProperty("successPointCount"))
                            object.successPointCount = message.successPointCount;
                        if (message.errors && message.errors.length) {
                            object.errors = [];
                            for (var j = 0; j < message.errors.length; ++j)
                                object.errors[j] = $root.google.monitoring.v3.CreateTimeSeriesSummary.Error.toObject(message.errors[j], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this CreateTimeSeriesSummary to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.CreateTimeSeriesSummary
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    CreateTimeSeriesSummary.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for CreateTimeSeriesSummary
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.CreateTimeSeriesSummary
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    CreateTimeSeriesSummary.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.CreateTimeSeriesSummary";
                    };
    
                    CreateTimeSeriesSummary.Error = (function() {
    
                        /**
                         * Properties of an Error.
                         * @memberof google.monitoring.v3.CreateTimeSeriesSummary
                         * @interface IError
                         * @property {google.rpc.IStatus|null} [status] Error status
                         * @property {number|null} [pointCount] Error pointCount
                         */
    
                        /**
                         * Constructs a new Error.
                         * @memberof google.monitoring.v3.CreateTimeSeriesSummary
                         * @classdesc Represents an Error.
                         * @implements IError
                         * @constructor
                         * @param {google.monitoring.v3.CreateTimeSeriesSummary.IError=} [properties] Properties to set
                         */
                        function Error(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Error status.
                         * @member {google.rpc.IStatus|null|undefined} status
                         * @memberof google.monitoring.v3.CreateTimeSeriesSummary.Error
                         * @instance
                         */
                        Error.prototype.status = null;
    
                        /**
                         * Error pointCount.
                         * @member {number} pointCount
                         * @memberof google.monitoring.v3.CreateTimeSeriesSummary.Error
                         * @instance
                         */
                        Error.prototype.pointCount = 0;
    
                        /**
                         * Creates a new Error instance using the specified properties.
                         * @function create
                         * @memberof google.monitoring.v3.CreateTimeSeriesSummary.Error
                         * @static
                         * @param {google.monitoring.v3.CreateTimeSeriesSummary.IError=} [properties] Properties to set
                         * @returns {google.monitoring.v3.CreateTimeSeriesSummary.Error} Error instance
                         */
                        Error.create = function create(properties) {
                            return new Error(properties);
                        };
    
                        /**
                         * Encodes the specified Error message. Does not implicitly {@link google.monitoring.v3.CreateTimeSeriesSummary.Error.verify|verify} messages.
                         * @function encode
                         * @memberof google.monitoring.v3.CreateTimeSeriesSummary.Error
                         * @static
                         * @param {google.monitoring.v3.CreateTimeSeriesSummary.IError} message Error message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Error.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.status != null && Object.hasOwnProperty.call(message, "status"))
                                $root.google.rpc.Status.encode(message.status, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.pointCount != null && Object.hasOwnProperty.call(message, "pointCount"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pointCount);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Error message, length delimited. Does not implicitly {@link google.monitoring.v3.CreateTimeSeriesSummary.Error.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.monitoring.v3.CreateTimeSeriesSummary.Error
                         * @static
                         * @param {google.monitoring.v3.CreateTimeSeriesSummary.IError} message Error message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Error.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Error message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.monitoring.v3.CreateTimeSeriesSummary.Error
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.monitoring.v3.CreateTimeSeriesSummary.Error} Error
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Error.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.CreateTimeSeriesSummary.Error();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.status = $root.google.rpc.Status.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.pointCount = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Error message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.monitoring.v3.CreateTimeSeriesSummary.Error
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.monitoring.v3.CreateTimeSeriesSummary.Error} Error
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Error.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Error message.
                         * @function verify
                         * @memberof google.monitoring.v3.CreateTimeSeriesSummary.Error
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Error.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.status != null && message.hasOwnProperty("status")) {
                                var error = $root.google.rpc.Status.verify(message.status);
                                if (error)
                                    return "status." + error;
                            }
                            if (message.pointCount != null && message.hasOwnProperty("pointCount"))
                                if (!$util.isInteger(message.pointCount))
                                    return "pointCount: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates an Error message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.monitoring.v3.CreateTimeSeriesSummary.Error
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.monitoring.v3.CreateTimeSeriesSummary.Error} Error
                         */
                        Error.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.monitoring.v3.CreateTimeSeriesSummary.Error)
                                return object;
                            var message = new $root.google.monitoring.v3.CreateTimeSeriesSummary.Error();
                            if (object.status != null) {
                                if (typeof object.status !== "object")
                                    throw TypeError(".google.monitoring.v3.CreateTimeSeriesSummary.Error.status: object expected");
                                message.status = $root.google.rpc.Status.fromObject(object.status);
                            }
                            if (object.pointCount != null)
                                message.pointCount = object.pointCount | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Error message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.monitoring.v3.CreateTimeSeriesSummary.Error
                         * @static
                         * @param {google.monitoring.v3.CreateTimeSeriesSummary.Error} message Error
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Error.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.status = null;
                                object.pointCount = 0;
                            }
                            if (message.status != null && message.hasOwnProperty("status"))
                                object.status = $root.google.rpc.Status.toObject(message.status, options);
                            if (message.pointCount != null && message.hasOwnProperty("pointCount"))
                                object.pointCount = message.pointCount;
                            return object;
                        };
    
                        /**
                         * Converts this Error to JSON.
                         * @function toJSON
                         * @memberof google.monitoring.v3.CreateTimeSeriesSummary.Error
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Error.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Error
                         * @function getTypeUrl
                         * @memberof google.monitoring.v3.CreateTimeSeriesSummary.Error
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Error.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.monitoring.v3.CreateTimeSeriesSummary.Error";
                        };
    
                        return Error;
                    })();
    
                    return CreateTimeSeriesSummary;
                })();
    
                v3.QueryTimeSeriesRequest = (function() {
    
                    /**
                     * Properties of a QueryTimeSeriesRequest.
                     * @memberof google.monitoring.v3
                     * @interface IQueryTimeSeriesRequest
                     * @property {string|null} [name] QueryTimeSeriesRequest name
                     * @property {string|null} [query] QueryTimeSeriesRequest query
                     * @property {number|null} [pageSize] QueryTimeSeriesRequest pageSize
                     * @property {string|null} [pageToken] QueryTimeSeriesRequest pageToken
                     */
    
                    /**
                     * Constructs a new QueryTimeSeriesRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a QueryTimeSeriesRequest.
                     * @implements IQueryTimeSeriesRequest
                     * @constructor
                     * @param {google.monitoring.v3.IQueryTimeSeriesRequest=} [properties] Properties to set
                     */
                    function QueryTimeSeriesRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * QueryTimeSeriesRequest name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.QueryTimeSeriesRequest
                     * @instance
                     */
                    QueryTimeSeriesRequest.prototype.name = "";
    
                    /**
                     * QueryTimeSeriesRequest query.
                     * @member {string} query
                     * @memberof google.monitoring.v3.QueryTimeSeriesRequest
                     * @instance
                     */
                    QueryTimeSeriesRequest.prototype.query = "";
    
                    /**
                     * QueryTimeSeriesRequest pageSize.
                     * @member {number} pageSize
                     * @memberof google.monitoring.v3.QueryTimeSeriesRequest
                     * @instance
                     */
                    QueryTimeSeriesRequest.prototype.pageSize = 0;
    
                    /**
                     * QueryTimeSeriesRequest pageToken.
                     * @member {string} pageToken
                     * @memberof google.monitoring.v3.QueryTimeSeriesRequest
                     * @instance
                     */
                    QueryTimeSeriesRequest.prototype.pageToken = "";
    
                    /**
                     * Creates a new QueryTimeSeriesRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.QueryTimeSeriesRequest
                     * @static
                     * @param {google.monitoring.v3.IQueryTimeSeriesRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.QueryTimeSeriesRequest} QueryTimeSeriesRequest instance
                     */
                    QueryTimeSeriesRequest.create = function create(properties) {
                        return new QueryTimeSeriesRequest(properties);
                    };
    
                    /**
                     * Encodes the specified QueryTimeSeriesRequest message. Does not implicitly {@link google.monitoring.v3.QueryTimeSeriesRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.QueryTimeSeriesRequest
                     * @static
                     * @param {google.monitoring.v3.IQueryTimeSeriesRequest} message QueryTimeSeriesRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryTimeSeriesRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                        if (message.query != null && Object.hasOwnProperty.call(message, "query"))
                            writer.uint32(/* id 7, wireType 2 =*/58).string(message.query);
                        if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                            writer.uint32(/* id 9, wireType 0 =*/72).int32(message.pageSize);
                        if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.pageToken);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified QueryTimeSeriesRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.QueryTimeSeriesRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.QueryTimeSeriesRequest
                     * @static
                     * @param {google.monitoring.v3.IQueryTimeSeriesRequest} message QueryTimeSeriesRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryTimeSeriesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a QueryTimeSeriesRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.QueryTimeSeriesRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.QueryTimeSeriesRequest} QueryTimeSeriesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryTimeSeriesRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.QueryTimeSeriesRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 7: {
                                    message.query = reader.string();
                                    break;
                                }
                            case 9: {
                                    message.pageSize = reader.int32();
                                    break;
                                }
                            case 10: {
                                    message.pageToken = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a QueryTimeSeriesRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.QueryTimeSeriesRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.QueryTimeSeriesRequest} QueryTimeSeriesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryTimeSeriesRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a QueryTimeSeriesRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.QueryTimeSeriesRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    QueryTimeSeriesRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.query != null && message.hasOwnProperty("query"))
                            if (!$util.isString(message.query))
                                return "query: string expected";
                        if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                            if (!$util.isInteger(message.pageSize))
                                return "pageSize: integer expected";
                        if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                            if (!$util.isString(message.pageToken))
                                return "pageToken: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a QueryTimeSeriesRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.QueryTimeSeriesRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.QueryTimeSeriesRequest} QueryTimeSeriesRequest
                     */
                    QueryTimeSeriesRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.QueryTimeSeriesRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.QueryTimeSeriesRequest();
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.query != null)
                            message.query = String(object.query);
                        if (object.pageSize != null)
                            message.pageSize = object.pageSize | 0;
                        if (object.pageToken != null)
                            message.pageToken = String(object.pageToken);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a QueryTimeSeriesRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.QueryTimeSeriesRequest
                     * @static
                     * @param {google.monitoring.v3.QueryTimeSeriesRequest} message QueryTimeSeriesRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    QueryTimeSeriesRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.name = "";
                            object.query = "";
                            object.pageSize = 0;
                            object.pageToken = "";
                        }
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        if (message.query != null && message.hasOwnProperty("query"))
                            object.query = message.query;
                        if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                            object.pageSize = message.pageSize;
                        if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                            object.pageToken = message.pageToken;
                        return object;
                    };
    
                    /**
                     * Converts this QueryTimeSeriesRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.QueryTimeSeriesRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    QueryTimeSeriesRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for QueryTimeSeriesRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.QueryTimeSeriesRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    QueryTimeSeriesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.QueryTimeSeriesRequest";
                    };
    
                    return QueryTimeSeriesRequest;
                })();
    
                v3.QueryTimeSeriesResponse = (function() {
    
                    /**
                     * Properties of a QueryTimeSeriesResponse.
                     * @memberof google.monitoring.v3
                     * @interface IQueryTimeSeriesResponse
                     * @property {google.monitoring.v3.ITimeSeriesDescriptor|null} [timeSeriesDescriptor] QueryTimeSeriesResponse timeSeriesDescriptor
                     * @property {Array.<google.monitoring.v3.ITimeSeriesData>|null} [timeSeriesData] QueryTimeSeriesResponse timeSeriesData
                     * @property {string|null} [nextPageToken] QueryTimeSeriesResponse nextPageToken
                     * @property {Array.<google.rpc.IStatus>|null} [partialErrors] QueryTimeSeriesResponse partialErrors
                     */
    
                    /**
                     * Constructs a new QueryTimeSeriesResponse.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a QueryTimeSeriesResponse.
                     * @implements IQueryTimeSeriesResponse
                     * @constructor
                     * @param {google.monitoring.v3.IQueryTimeSeriesResponse=} [properties] Properties to set
                     */
                    function QueryTimeSeriesResponse(properties) {
                        this.timeSeriesData = [];
                        this.partialErrors = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * QueryTimeSeriesResponse timeSeriesDescriptor.
                     * @member {google.monitoring.v3.ITimeSeriesDescriptor|null|undefined} timeSeriesDescriptor
                     * @memberof google.monitoring.v3.QueryTimeSeriesResponse
                     * @instance
                     */
                    QueryTimeSeriesResponse.prototype.timeSeriesDescriptor = null;
    
                    /**
                     * QueryTimeSeriesResponse timeSeriesData.
                     * @member {Array.<google.monitoring.v3.ITimeSeriesData>} timeSeriesData
                     * @memberof google.monitoring.v3.QueryTimeSeriesResponse
                     * @instance
                     */
                    QueryTimeSeriesResponse.prototype.timeSeriesData = $util.emptyArray;
    
                    /**
                     * QueryTimeSeriesResponse nextPageToken.
                     * @member {string} nextPageToken
                     * @memberof google.monitoring.v3.QueryTimeSeriesResponse
                     * @instance
                     */
                    QueryTimeSeriesResponse.prototype.nextPageToken = "";
    
                    /**
                     * QueryTimeSeriesResponse partialErrors.
                     * @member {Array.<google.rpc.IStatus>} partialErrors
                     * @memberof google.monitoring.v3.QueryTimeSeriesResponse
                     * @instance
                     */
                    QueryTimeSeriesResponse.prototype.partialErrors = $util.emptyArray;
    
                    /**
                     * Creates a new QueryTimeSeriesResponse instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.QueryTimeSeriesResponse
                     * @static
                     * @param {google.monitoring.v3.IQueryTimeSeriesResponse=} [properties] Properties to set
                     * @returns {google.monitoring.v3.QueryTimeSeriesResponse} QueryTimeSeriesResponse instance
                     */
                    QueryTimeSeriesResponse.create = function create(properties) {
                        return new QueryTimeSeriesResponse(properties);
                    };
    
                    /**
                     * Encodes the specified QueryTimeSeriesResponse message. Does not implicitly {@link google.monitoring.v3.QueryTimeSeriesResponse.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.QueryTimeSeriesResponse
                     * @static
                     * @param {google.monitoring.v3.IQueryTimeSeriesResponse} message QueryTimeSeriesResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryTimeSeriesResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.timeSeriesDescriptor != null && Object.hasOwnProperty.call(message, "timeSeriesDescriptor"))
                            $root.google.monitoring.v3.TimeSeriesDescriptor.encode(message.timeSeriesDescriptor, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                        if (message.timeSeriesData != null && message.timeSeriesData.length)
                            for (var i = 0; i < message.timeSeriesData.length; ++i)
                                $root.google.monitoring.v3.TimeSeriesData.encode(message.timeSeriesData[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                        if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.nextPageToken);
                        if (message.partialErrors != null && message.partialErrors.length)
                            for (var i = 0; i < message.partialErrors.length; ++i)
                                $root.google.rpc.Status.encode(message.partialErrors[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified QueryTimeSeriesResponse message, length delimited. Does not implicitly {@link google.monitoring.v3.QueryTimeSeriesResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.QueryTimeSeriesResponse
                     * @static
                     * @param {google.monitoring.v3.IQueryTimeSeriesResponse} message QueryTimeSeriesResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryTimeSeriesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a QueryTimeSeriesResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.QueryTimeSeriesResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.QueryTimeSeriesResponse} QueryTimeSeriesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryTimeSeriesResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.QueryTimeSeriesResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 8: {
                                    message.timeSeriesDescriptor = $root.google.monitoring.v3.TimeSeriesDescriptor.decode(reader, reader.uint32());
                                    break;
                                }
                            case 9: {
                                    if (!(message.timeSeriesData && message.timeSeriesData.length))
                                        message.timeSeriesData = [];
                                    message.timeSeriesData.push($root.google.monitoring.v3.TimeSeriesData.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 10: {
                                    message.nextPageToken = reader.string();
                                    break;
                                }
                            case 11: {
                                    if (!(message.partialErrors && message.partialErrors.length))
                                        message.partialErrors = [];
                                    message.partialErrors.push($root.google.rpc.Status.decode(reader, reader.uint32()));
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a QueryTimeSeriesResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.QueryTimeSeriesResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.QueryTimeSeriesResponse} QueryTimeSeriesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryTimeSeriesResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a QueryTimeSeriesResponse message.
                     * @function verify
                     * @memberof google.monitoring.v3.QueryTimeSeriesResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    QueryTimeSeriesResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.timeSeriesDescriptor != null && message.hasOwnProperty("timeSeriesDescriptor")) {
                            var error = $root.google.monitoring.v3.TimeSeriesDescriptor.verify(message.timeSeriesDescriptor);
                            if (error)
                                return "timeSeriesDescriptor." + error;
                        }
                        if (message.timeSeriesData != null && message.hasOwnProperty("timeSeriesData")) {
                            if (!Array.isArray(message.timeSeriesData))
                                return "timeSeriesData: array expected";
                            for (var i = 0; i < message.timeSeriesData.length; ++i) {
                                var error = $root.google.monitoring.v3.TimeSeriesData.verify(message.timeSeriesData[i]);
                                if (error)
                                    return "timeSeriesData." + error;
                            }
                        }
                        if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                            if (!$util.isString(message.nextPageToken))
                                return "nextPageToken: string expected";
                        if (message.partialErrors != null && message.hasOwnProperty("partialErrors")) {
                            if (!Array.isArray(message.partialErrors))
                                return "partialErrors: array expected";
                            for (var i = 0; i < message.partialErrors.length; ++i) {
                                var error = $root.google.rpc.Status.verify(message.partialErrors[i]);
                                if (error)
                                    return "partialErrors." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates a QueryTimeSeriesResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.QueryTimeSeriesResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.QueryTimeSeriesResponse} QueryTimeSeriesResponse
                     */
                    QueryTimeSeriesResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.QueryTimeSeriesResponse)
                            return object;
                        var message = new $root.google.monitoring.v3.QueryTimeSeriesResponse();
                        if (object.timeSeriesDescriptor != null) {
                            if (typeof object.timeSeriesDescriptor !== "object")
                                throw TypeError(".google.monitoring.v3.QueryTimeSeriesResponse.timeSeriesDescriptor: object expected");
                            message.timeSeriesDescriptor = $root.google.monitoring.v3.TimeSeriesDescriptor.fromObject(object.timeSeriesDescriptor);
                        }
                        if (object.timeSeriesData) {
                            if (!Array.isArray(object.timeSeriesData))
                                throw TypeError(".google.monitoring.v3.QueryTimeSeriesResponse.timeSeriesData: array expected");
                            message.timeSeriesData = [];
                            for (var i = 0; i < object.timeSeriesData.length; ++i) {
                                if (typeof object.timeSeriesData[i] !== "object")
                                    throw TypeError(".google.monitoring.v3.QueryTimeSeriesResponse.timeSeriesData: object expected");
                                message.timeSeriesData[i] = $root.google.monitoring.v3.TimeSeriesData.fromObject(object.timeSeriesData[i]);
                            }
                        }
                        if (object.nextPageToken != null)
                            message.nextPageToken = String(object.nextPageToken);
                        if (object.partialErrors) {
                            if (!Array.isArray(object.partialErrors))
                                throw TypeError(".google.monitoring.v3.QueryTimeSeriesResponse.partialErrors: array expected");
                            message.partialErrors = [];
                            for (var i = 0; i < object.partialErrors.length; ++i) {
                                if (typeof object.partialErrors[i] !== "object")
                                    throw TypeError(".google.monitoring.v3.QueryTimeSeriesResponse.partialErrors: object expected");
                                message.partialErrors[i] = $root.google.rpc.Status.fromObject(object.partialErrors[i]);
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a QueryTimeSeriesResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.QueryTimeSeriesResponse
                     * @static
                     * @param {google.monitoring.v3.QueryTimeSeriesResponse} message QueryTimeSeriesResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    QueryTimeSeriesResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.timeSeriesData = [];
                            object.partialErrors = [];
                        }
                        if (options.defaults) {
                            object.timeSeriesDescriptor = null;
                            object.nextPageToken = "";
                        }
                        if (message.timeSeriesDescriptor != null && message.hasOwnProperty("timeSeriesDescriptor"))
                            object.timeSeriesDescriptor = $root.google.monitoring.v3.TimeSeriesDescriptor.toObject(message.timeSeriesDescriptor, options);
                        if (message.timeSeriesData && message.timeSeriesData.length) {
                            object.timeSeriesData = [];
                            for (var j = 0; j < message.timeSeriesData.length; ++j)
                                object.timeSeriesData[j] = $root.google.monitoring.v3.TimeSeriesData.toObject(message.timeSeriesData[j], options);
                        }
                        if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                            object.nextPageToken = message.nextPageToken;
                        if (message.partialErrors && message.partialErrors.length) {
                            object.partialErrors = [];
                            for (var j = 0; j < message.partialErrors.length; ++j)
                                object.partialErrors[j] = $root.google.rpc.Status.toObject(message.partialErrors[j], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this QueryTimeSeriesResponse to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.QueryTimeSeriesResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    QueryTimeSeriesResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for QueryTimeSeriesResponse
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.QueryTimeSeriesResponse
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    QueryTimeSeriesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.QueryTimeSeriesResponse";
                    };
    
                    return QueryTimeSeriesResponse;
                })();
    
                v3.QueryErrorList = (function() {
    
                    /**
                     * Properties of a QueryErrorList.
                     * @memberof google.monitoring.v3
                     * @interface IQueryErrorList
                     * @property {Array.<google.monitoring.v3.IQueryError>|null} [errors] QueryErrorList errors
                     * @property {string|null} [errorSummary] QueryErrorList errorSummary
                     */
    
                    /**
                     * Constructs a new QueryErrorList.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a QueryErrorList.
                     * @implements IQueryErrorList
                     * @constructor
                     * @param {google.monitoring.v3.IQueryErrorList=} [properties] Properties to set
                     */
                    function QueryErrorList(properties) {
                        this.errors = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * QueryErrorList errors.
                     * @member {Array.<google.monitoring.v3.IQueryError>} errors
                     * @memberof google.monitoring.v3.QueryErrorList
                     * @instance
                     */
                    QueryErrorList.prototype.errors = $util.emptyArray;
    
                    /**
                     * QueryErrorList errorSummary.
                     * @member {string} errorSummary
                     * @memberof google.monitoring.v3.QueryErrorList
                     * @instance
                     */
                    QueryErrorList.prototype.errorSummary = "";
    
                    /**
                     * Creates a new QueryErrorList instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.QueryErrorList
                     * @static
                     * @param {google.monitoring.v3.IQueryErrorList=} [properties] Properties to set
                     * @returns {google.monitoring.v3.QueryErrorList} QueryErrorList instance
                     */
                    QueryErrorList.create = function create(properties) {
                        return new QueryErrorList(properties);
                    };
    
                    /**
                     * Encodes the specified QueryErrorList message. Does not implicitly {@link google.monitoring.v3.QueryErrorList.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.QueryErrorList
                     * @static
                     * @param {google.monitoring.v3.IQueryErrorList} message QueryErrorList message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryErrorList.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.errors != null && message.errors.length)
                            for (var i = 0; i < message.errors.length; ++i)
                                $root.google.monitoring.v3.QueryError.encode(message.errors[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.errorSummary != null && Object.hasOwnProperty.call(message, "errorSummary"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.errorSummary);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified QueryErrorList message, length delimited. Does not implicitly {@link google.monitoring.v3.QueryErrorList.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.QueryErrorList
                     * @static
                     * @param {google.monitoring.v3.IQueryErrorList} message QueryErrorList message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryErrorList.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a QueryErrorList message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.QueryErrorList
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.QueryErrorList} QueryErrorList
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryErrorList.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.QueryErrorList();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.errors && message.errors.length))
                                        message.errors = [];
                                    message.errors.push($root.google.monitoring.v3.QueryError.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 2: {
                                    message.errorSummary = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a QueryErrorList message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.QueryErrorList
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.QueryErrorList} QueryErrorList
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryErrorList.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a QueryErrorList message.
                     * @function verify
                     * @memberof google.monitoring.v3.QueryErrorList
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    QueryErrorList.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.errors != null && message.hasOwnProperty("errors")) {
                            if (!Array.isArray(message.errors))
                                return "errors: array expected";
                            for (var i = 0; i < message.errors.length; ++i) {
                                var error = $root.google.monitoring.v3.QueryError.verify(message.errors[i]);
                                if (error)
                                    return "errors." + error;
                            }
                        }
                        if (message.errorSummary != null && message.hasOwnProperty("errorSummary"))
                            if (!$util.isString(message.errorSummary))
                                return "errorSummary: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a QueryErrorList message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.QueryErrorList
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.QueryErrorList} QueryErrorList
                     */
                    QueryErrorList.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.QueryErrorList)
                            return object;
                        var message = new $root.google.monitoring.v3.QueryErrorList();
                        if (object.errors) {
                            if (!Array.isArray(object.errors))
                                throw TypeError(".google.monitoring.v3.QueryErrorList.errors: array expected");
                            message.errors = [];
                            for (var i = 0; i < object.errors.length; ++i) {
                                if (typeof object.errors[i] !== "object")
                                    throw TypeError(".google.monitoring.v3.QueryErrorList.errors: object expected");
                                message.errors[i] = $root.google.monitoring.v3.QueryError.fromObject(object.errors[i]);
                            }
                        }
                        if (object.errorSummary != null)
                            message.errorSummary = String(object.errorSummary);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a QueryErrorList message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.QueryErrorList
                     * @static
                     * @param {google.monitoring.v3.QueryErrorList} message QueryErrorList
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    QueryErrorList.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.errors = [];
                        if (options.defaults)
                            object.errorSummary = "";
                        if (message.errors && message.errors.length) {
                            object.errors = [];
                            for (var j = 0; j < message.errors.length; ++j)
                                object.errors[j] = $root.google.monitoring.v3.QueryError.toObject(message.errors[j], options);
                        }
                        if (message.errorSummary != null && message.hasOwnProperty("errorSummary"))
                            object.errorSummary = message.errorSummary;
                        return object;
                    };
    
                    /**
                     * Converts this QueryErrorList to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.QueryErrorList
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    QueryErrorList.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for QueryErrorList
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.QueryErrorList
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    QueryErrorList.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.QueryErrorList";
                    };
    
                    return QueryErrorList;
                })();
    
                v3.NotificationChannelDescriptor = (function() {
    
                    /**
                     * Properties of a NotificationChannelDescriptor.
                     * @memberof google.monitoring.v3
                     * @interface INotificationChannelDescriptor
                     * @property {string|null} [name] NotificationChannelDescriptor name
                     * @property {string|null} [type] NotificationChannelDescriptor type
                     * @property {string|null} [displayName] NotificationChannelDescriptor displayName
                     * @property {string|null} [description] NotificationChannelDescriptor description
                     * @property {Array.<google.api.ILabelDescriptor>|null} [labels] NotificationChannelDescriptor labels
                     * @property {Array.<google.monitoring.v3.ServiceTier>|null} [supportedTiers] NotificationChannelDescriptor supportedTiers
                     * @property {google.api.LaunchStage|null} [launchStage] NotificationChannelDescriptor launchStage
                     */
    
                    /**
                     * Constructs a new NotificationChannelDescriptor.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a NotificationChannelDescriptor.
                     * @implements INotificationChannelDescriptor
                     * @constructor
                     * @param {google.monitoring.v3.INotificationChannelDescriptor=} [properties] Properties to set
                     */
                    function NotificationChannelDescriptor(properties) {
                        this.labels = [];
                        this.supportedTiers = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NotificationChannelDescriptor name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.NotificationChannelDescriptor
                     * @instance
                     */
                    NotificationChannelDescriptor.prototype.name = "";
    
                    /**
                     * NotificationChannelDescriptor type.
                     * @member {string} type
                     * @memberof google.monitoring.v3.NotificationChannelDescriptor
                     * @instance
                     */
                    NotificationChannelDescriptor.prototype.type = "";
    
                    /**
                     * NotificationChannelDescriptor displayName.
                     * @member {string} displayName
                     * @memberof google.monitoring.v3.NotificationChannelDescriptor
                     * @instance
                     */
                    NotificationChannelDescriptor.prototype.displayName = "";
    
                    /**
                     * NotificationChannelDescriptor description.
                     * @member {string} description
                     * @memberof google.monitoring.v3.NotificationChannelDescriptor
                     * @instance
                     */
                    NotificationChannelDescriptor.prototype.description = "";
    
                    /**
                     * NotificationChannelDescriptor labels.
                     * @member {Array.<google.api.ILabelDescriptor>} labels
                     * @memberof google.monitoring.v3.NotificationChannelDescriptor
                     * @instance
                     */
                    NotificationChannelDescriptor.prototype.labels = $util.emptyArray;
    
                    /**
                     * NotificationChannelDescriptor supportedTiers.
                     * @member {Array.<google.monitoring.v3.ServiceTier>} supportedTiers
                     * @memberof google.monitoring.v3.NotificationChannelDescriptor
                     * @instance
                     */
                    NotificationChannelDescriptor.prototype.supportedTiers = $util.emptyArray;
    
                    /**
                     * NotificationChannelDescriptor launchStage.
                     * @member {google.api.LaunchStage} launchStage
                     * @memberof google.monitoring.v3.NotificationChannelDescriptor
                     * @instance
                     */
                    NotificationChannelDescriptor.prototype.launchStage = 0;
    
                    /**
                     * Creates a new NotificationChannelDescriptor instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.NotificationChannelDescriptor
                     * @static
                     * @param {google.monitoring.v3.INotificationChannelDescriptor=} [properties] Properties to set
                     * @returns {google.monitoring.v3.NotificationChannelDescriptor} NotificationChannelDescriptor instance
                     */
                    NotificationChannelDescriptor.create = function create(properties) {
                        return new NotificationChannelDescriptor(properties);
                    };
    
                    /**
                     * Encodes the specified NotificationChannelDescriptor message. Does not implicitly {@link google.monitoring.v3.NotificationChannelDescriptor.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.NotificationChannelDescriptor
                     * @static
                     * @param {google.monitoring.v3.INotificationChannelDescriptor} message NotificationChannelDescriptor message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NotificationChannelDescriptor.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                        if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.displayName);
                        if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.description);
                        if (message.labels != null && message.labels.length)
                            for (var i = 0; i < message.labels.length; ++i)
                                $root.google.api.LabelDescriptor.encode(message.labels[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        if (message.supportedTiers != null && message.supportedTiers.length) {
                            writer.uint32(/* id 5, wireType 2 =*/42).fork();
                            for (var i = 0; i < message.supportedTiers.length; ++i)
                                writer.int32(message.supportedTiers[i]);
                            writer.ldelim();
                        }
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 6, wireType 2 =*/50).string(message.name);
                        if (message.launchStage != null && Object.hasOwnProperty.call(message, "launchStage"))
                            writer.uint32(/* id 7, wireType 0 =*/56).int32(message.launchStage);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NotificationChannelDescriptor message, length delimited. Does not implicitly {@link google.monitoring.v3.NotificationChannelDescriptor.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.NotificationChannelDescriptor
                     * @static
                     * @param {google.monitoring.v3.INotificationChannelDescriptor} message NotificationChannelDescriptor message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NotificationChannelDescriptor.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NotificationChannelDescriptor message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.NotificationChannelDescriptor
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.NotificationChannelDescriptor} NotificationChannelDescriptor
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NotificationChannelDescriptor.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.NotificationChannelDescriptor();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 6: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 1: {
                                    message.type = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.displayName = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.description = reader.string();
                                    break;
                                }
                            case 4: {
                                    if (!(message.labels && message.labels.length))
                                        message.labels = [];
                                    message.labels.push($root.google.api.LabelDescriptor.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 5: {
                                    if (!(message.supportedTiers && message.supportedTiers.length))
                                        message.supportedTiers = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.supportedTiers.push(reader.int32());
                                    } else
                                        message.supportedTiers.push(reader.int32());
                                    break;
                                }
                            case 7: {
                                    message.launchStage = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a NotificationChannelDescriptor message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.NotificationChannelDescriptor
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.NotificationChannelDescriptor} NotificationChannelDescriptor
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NotificationChannelDescriptor.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NotificationChannelDescriptor message.
                     * @function verify
                     * @memberof google.monitoring.v3.NotificationChannelDescriptor
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NotificationChannelDescriptor.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.type != null && message.hasOwnProperty("type"))
                            if (!$util.isString(message.type))
                                return "type: string expected";
                        if (message.displayName != null && message.hasOwnProperty("displayName"))
                            if (!$util.isString(message.displayName))
                                return "displayName: string expected";
                        if (message.description != null && message.hasOwnProperty("description"))
                            if (!$util.isString(message.description))
                                return "description: string expected";
                        if (message.labels != null && message.hasOwnProperty("labels")) {
                            if (!Array.isArray(message.labels))
                                return "labels: array expected";
                            for (var i = 0; i < message.labels.length; ++i) {
                                var error = $root.google.api.LabelDescriptor.verify(message.labels[i]);
                                if (error)
                                    return "labels." + error;
                            }
                        }
                        if (message.supportedTiers != null && message.hasOwnProperty("supportedTiers")) {
                            if (!Array.isArray(message.supportedTiers))
                                return "supportedTiers: array expected";
                            for (var i = 0; i < message.supportedTiers.length; ++i)
                                switch (message.supportedTiers[i]) {
                                default:
                                    return "supportedTiers: enum value[] expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                        }
                        if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                            switch (message.launchStage) {
                            default:
                                return "launchStage: enum value expected";
                            case 0:
                            case 6:
                            case 7:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates a NotificationChannelDescriptor message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.NotificationChannelDescriptor
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.NotificationChannelDescriptor} NotificationChannelDescriptor
                     */
                    NotificationChannelDescriptor.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.NotificationChannelDescriptor)
                            return object;
                        var message = new $root.google.monitoring.v3.NotificationChannelDescriptor();
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.type != null)
                            message.type = String(object.type);
                        if (object.displayName != null)
                            message.displayName = String(object.displayName);
                        if (object.description != null)
                            message.description = String(object.description);
                        if (object.labels) {
                            if (!Array.isArray(object.labels))
                                throw TypeError(".google.monitoring.v3.NotificationChannelDescriptor.labels: array expected");
                            message.labels = [];
                            for (var i = 0; i < object.labels.length; ++i) {
                                if (typeof object.labels[i] !== "object")
                                    throw TypeError(".google.monitoring.v3.NotificationChannelDescriptor.labels: object expected");
                                message.labels[i] = $root.google.api.LabelDescriptor.fromObject(object.labels[i]);
                            }
                        }
                        if (object.supportedTiers) {
                            if (!Array.isArray(object.supportedTiers))
                                throw TypeError(".google.monitoring.v3.NotificationChannelDescriptor.supportedTiers: array expected");
                            message.supportedTiers = [];
                            for (var i = 0; i < object.supportedTiers.length; ++i)
                                switch (object.supportedTiers[i]) {
                                default:
                                    if (typeof object.supportedTiers[i] === "number") {
                                        message.supportedTiers[i] = object.supportedTiers[i];
                                        break;
                                    }
                                case "SERVICE_TIER_UNSPECIFIED":
                                case 0:
                                    message.supportedTiers[i] = 0;
                                    break;
                                case "SERVICE_TIER_BASIC":
                                case 1:
                                    message.supportedTiers[i] = 1;
                                    break;
                                case "SERVICE_TIER_PREMIUM":
                                case 2:
                                    message.supportedTiers[i] = 2;
                                    break;
                                }
                        }
                        switch (object.launchStage) {
                        default:
                            if (typeof object.launchStage === "number") {
                                message.launchStage = object.launchStage;
                                break;
                            }
                            break;
                        case "LAUNCH_STAGE_UNSPECIFIED":
                        case 0:
                            message.launchStage = 0;
                            break;
                        case "UNIMPLEMENTED":
                        case 6:
                            message.launchStage = 6;
                            break;
                        case "PRELAUNCH":
                        case 7:
                            message.launchStage = 7;
                            break;
                        case "EARLY_ACCESS":
                        case 1:
                            message.launchStage = 1;
                            break;
                        case "ALPHA":
                        case 2:
                            message.launchStage = 2;
                            break;
                        case "BETA":
                        case 3:
                            message.launchStage = 3;
                            break;
                        case "GA":
                        case 4:
                            message.launchStage = 4;
                            break;
                        case "DEPRECATED":
                        case 5:
                            message.launchStage = 5;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NotificationChannelDescriptor message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.NotificationChannelDescriptor
                     * @static
                     * @param {google.monitoring.v3.NotificationChannelDescriptor} message NotificationChannelDescriptor
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NotificationChannelDescriptor.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.labels = [];
                            object.supportedTiers = [];
                        }
                        if (options.defaults) {
                            object.type = "";
                            object.displayName = "";
                            object.description = "";
                            object.name = "";
                            object.launchStage = options.enums === String ? "LAUNCH_STAGE_UNSPECIFIED" : 0;
                        }
                        if (message.type != null && message.hasOwnProperty("type"))
                            object.type = message.type;
                        if (message.displayName != null && message.hasOwnProperty("displayName"))
                            object.displayName = message.displayName;
                        if (message.description != null && message.hasOwnProperty("description"))
                            object.description = message.description;
                        if (message.labels && message.labels.length) {
                            object.labels = [];
                            for (var j = 0; j < message.labels.length; ++j)
                                object.labels[j] = $root.google.api.LabelDescriptor.toObject(message.labels[j], options);
                        }
                        if (message.supportedTiers && message.supportedTiers.length) {
                            object.supportedTiers = [];
                            for (var j = 0; j < message.supportedTiers.length; ++j)
                                object.supportedTiers[j] = options.enums === String ? $root.google.monitoring.v3.ServiceTier[message.supportedTiers[j]] === undefined ? message.supportedTiers[j] : $root.google.monitoring.v3.ServiceTier[message.supportedTiers[j]] : message.supportedTiers[j];
                        }
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                            object.launchStage = options.enums === String ? $root.google.api.LaunchStage[message.launchStage] === undefined ? message.launchStage : $root.google.api.LaunchStage[message.launchStage] : message.launchStage;
                        return object;
                    };
    
                    /**
                     * Converts this NotificationChannelDescriptor to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.NotificationChannelDescriptor
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NotificationChannelDescriptor.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NotificationChannelDescriptor
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.NotificationChannelDescriptor
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NotificationChannelDescriptor.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.NotificationChannelDescriptor";
                    };
    
                    return NotificationChannelDescriptor;
                })();
    
                v3.NotificationChannel = (function() {
    
                    /**
                     * Properties of a NotificationChannel.
                     * @memberof google.monitoring.v3
                     * @interface INotificationChannel
                     * @property {string|null} [type] NotificationChannel type
                     * @property {string|null} [name] NotificationChannel name
                     * @property {string|null} [displayName] NotificationChannel displayName
                     * @property {string|null} [description] NotificationChannel description
                     * @property {Object.<string,string>|null} [labels] NotificationChannel labels
                     * @property {Object.<string,string>|null} [userLabels] NotificationChannel userLabels
                     * @property {google.monitoring.v3.NotificationChannel.VerificationStatus|null} [verificationStatus] NotificationChannel verificationStatus
                     * @property {google.protobuf.IBoolValue|null} [enabled] NotificationChannel enabled
                     * @property {google.monitoring.v3.IMutationRecord|null} [creationRecord] NotificationChannel creationRecord
                     * @property {Array.<google.monitoring.v3.IMutationRecord>|null} [mutationRecords] NotificationChannel mutationRecords
                     */
    
                    /**
                     * Constructs a new NotificationChannel.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a NotificationChannel.
                     * @implements INotificationChannel
                     * @constructor
                     * @param {google.monitoring.v3.INotificationChannel=} [properties] Properties to set
                     */
                    function NotificationChannel(properties) {
                        this.labels = {};
                        this.userLabels = {};
                        this.mutationRecords = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NotificationChannel type.
                     * @member {string} type
                     * @memberof google.monitoring.v3.NotificationChannel
                     * @instance
                     */
                    NotificationChannel.prototype.type = "";
    
                    /**
                     * NotificationChannel name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.NotificationChannel
                     * @instance
                     */
                    NotificationChannel.prototype.name = "";
    
                    /**
                     * NotificationChannel displayName.
                     * @member {string} displayName
                     * @memberof google.monitoring.v3.NotificationChannel
                     * @instance
                     */
                    NotificationChannel.prototype.displayName = "";
    
                    /**
                     * NotificationChannel description.
                     * @member {string} description
                     * @memberof google.monitoring.v3.NotificationChannel
                     * @instance
                     */
                    NotificationChannel.prototype.description = "";
    
                    /**
                     * NotificationChannel labels.
                     * @member {Object.<string,string>} labels
                     * @memberof google.monitoring.v3.NotificationChannel
                     * @instance
                     */
                    NotificationChannel.prototype.labels = $util.emptyObject;
    
                    /**
                     * NotificationChannel userLabels.
                     * @member {Object.<string,string>} userLabels
                     * @memberof google.monitoring.v3.NotificationChannel
                     * @instance
                     */
                    NotificationChannel.prototype.userLabels = $util.emptyObject;
    
                    /**
                     * NotificationChannel verificationStatus.
                     * @member {google.monitoring.v3.NotificationChannel.VerificationStatus} verificationStatus
                     * @memberof google.monitoring.v3.NotificationChannel
                     * @instance
                     */
                    NotificationChannel.prototype.verificationStatus = 0;
    
                    /**
                     * NotificationChannel enabled.
                     * @member {google.protobuf.IBoolValue|null|undefined} enabled
                     * @memberof google.monitoring.v3.NotificationChannel
                     * @instance
                     */
                    NotificationChannel.prototype.enabled = null;
    
                    /**
                     * NotificationChannel creationRecord.
                     * @member {google.monitoring.v3.IMutationRecord|null|undefined} creationRecord
                     * @memberof google.monitoring.v3.NotificationChannel
                     * @instance
                     */
                    NotificationChannel.prototype.creationRecord = null;
    
                    /**
                     * NotificationChannel mutationRecords.
                     * @member {Array.<google.monitoring.v3.IMutationRecord>} mutationRecords
                     * @memberof google.monitoring.v3.NotificationChannel
                     * @instance
                     */
                    NotificationChannel.prototype.mutationRecords = $util.emptyArray;
    
                    /**
                     * Creates a new NotificationChannel instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.NotificationChannel
                     * @static
                     * @param {google.monitoring.v3.INotificationChannel=} [properties] Properties to set
                     * @returns {google.monitoring.v3.NotificationChannel} NotificationChannel instance
                     */
                    NotificationChannel.create = function create(properties) {
                        return new NotificationChannel(properties);
                    };
    
                    /**
                     * Encodes the specified NotificationChannel message. Does not implicitly {@link google.monitoring.v3.NotificationChannel.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.NotificationChannel
                     * @static
                     * @param {google.monitoring.v3.INotificationChannel} message NotificationChannel message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NotificationChannel.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                        if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.displayName);
                        if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.description);
                        if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                            for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                writer.uint32(/* id 5, wireType 2 =*/42).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 6, wireType 2 =*/50).string(message.name);
                        if (message.userLabels != null && Object.hasOwnProperty.call(message, "userLabels"))
                            for (var keys = Object.keys(message.userLabels), i = 0; i < keys.length; ++i)
                                writer.uint32(/* id 8, wireType 2 =*/66).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.userLabels[keys[i]]).ldelim();
                        if (message.verificationStatus != null && Object.hasOwnProperty.call(message, "verificationStatus"))
                            writer.uint32(/* id 9, wireType 0 =*/72).int32(message.verificationStatus);
                        if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                            $root.google.protobuf.BoolValue.encode(message.enabled, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                        if (message.creationRecord != null && Object.hasOwnProperty.call(message, "creationRecord"))
                            $root.google.monitoring.v3.MutationRecord.encode(message.creationRecord, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                        if (message.mutationRecords != null && message.mutationRecords.length)
                            for (var i = 0; i < message.mutationRecords.length; ++i)
                                $root.google.monitoring.v3.MutationRecord.encode(message.mutationRecords[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NotificationChannel message, length delimited. Does not implicitly {@link google.monitoring.v3.NotificationChannel.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.NotificationChannel
                     * @static
                     * @param {google.monitoring.v3.INotificationChannel} message NotificationChannel message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NotificationChannel.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NotificationChannel message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.NotificationChannel
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.NotificationChannel} NotificationChannel
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NotificationChannel.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.NotificationChannel(), key, value;
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.type = reader.string();
                                    break;
                                }
                            case 6: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.displayName = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.description = reader.string();
                                    break;
                                }
                            case 5: {
                                    if (message.labels === $util.emptyObject)
                                        message.labels = {};
                                    var end2 = reader.uint32() + reader.pos;
                                    key = "";
                                    value = "";
                                    while (reader.pos < end2) {
                                        var tag2 = reader.uint32();
                                        switch (tag2 >>> 3) {
                                        case 1:
                                            key = reader.string();
                                            break;
                                        case 2:
                                            value = reader.string();
                                            break;
                                        default:
                                            reader.skipType(tag2 & 7);
                                            break;
                                        }
                                    }
                                    message.labels[key] = value;
                                    break;
                                }
                            case 8: {
                                    if (message.userLabels === $util.emptyObject)
                                        message.userLabels = {};
                                    var end2 = reader.uint32() + reader.pos;
                                    key = "";
                                    value = "";
                                    while (reader.pos < end2) {
                                        var tag2 = reader.uint32();
                                        switch (tag2 >>> 3) {
                                        case 1:
                                            key = reader.string();
                                            break;
                                        case 2:
                                            value = reader.string();
                                            break;
                                        default:
                                            reader.skipType(tag2 & 7);
                                            break;
                                        }
                                    }
                                    message.userLabels[key] = value;
                                    break;
                                }
                            case 9: {
                                    message.verificationStatus = reader.int32();
                                    break;
                                }
                            case 11: {
                                    message.enabled = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                    break;
                                }
                            case 12: {
                                    message.creationRecord = $root.google.monitoring.v3.MutationRecord.decode(reader, reader.uint32());
                                    break;
                                }
                            case 13: {
                                    if (!(message.mutationRecords && message.mutationRecords.length))
                                        message.mutationRecords = [];
                                    message.mutationRecords.push($root.google.monitoring.v3.MutationRecord.decode(reader, reader.uint32()));
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a NotificationChannel message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.NotificationChannel
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.NotificationChannel} NotificationChannel
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NotificationChannel.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NotificationChannel message.
                     * @function verify
                     * @memberof google.monitoring.v3.NotificationChannel
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NotificationChannel.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.type != null && message.hasOwnProperty("type"))
                            if (!$util.isString(message.type))
                                return "type: string expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.displayName != null && message.hasOwnProperty("displayName"))
                            if (!$util.isString(message.displayName))
                                return "displayName: string expected";
                        if (message.description != null && message.hasOwnProperty("description"))
                            if (!$util.isString(message.description))
                                return "description: string expected";
                        if (message.labels != null && message.hasOwnProperty("labels")) {
                            if (!$util.isObject(message.labels))
                                return "labels: object expected";
                            var key = Object.keys(message.labels);
                            for (var i = 0; i < key.length; ++i)
                                if (!$util.isString(message.labels[key[i]]))
                                    return "labels: string{k:string} expected";
                        }
                        if (message.userLabels != null && message.hasOwnProperty("userLabels")) {
                            if (!$util.isObject(message.userLabels))
                                return "userLabels: object expected";
                            var key = Object.keys(message.userLabels);
                            for (var i = 0; i < key.length; ++i)
                                if (!$util.isString(message.userLabels[key[i]]))
                                    return "userLabels: string{k:string} expected";
                        }
                        if (message.verificationStatus != null && message.hasOwnProperty("verificationStatus"))
                            switch (message.verificationStatus) {
                            default:
                                return "verificationStatus: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        if (message.enabled != null && message.hasOwnProperty("enabled")) {
                            var error = $root.google.protobuf.BoolValue.verify(message.enabled);
                            if (error)
                                return "enabled." + error;
                        }
                        if (message.creationRecord != null && message.hasOwnProperty("creationRecord")) {
                            var error = $root.google.monitoring.v3.MutationRecord.verify(message.creationRecord);
                            if (error)
                                return "creationRecord." + error;
                        }
                        if (message.mutationRecords != null && message.hasOwnProperty("mutationRecords")) {
                            if (!Array.isArray(message.mutationRecords))
                                return "mutationRecords: array expected";
                            for (var i = 0; i < message.mutationRecords.length; ++i) {
                                var error = $root.google.monitoring.v3.MutationRecord.verify(message.mutationRecords[i]);
                                if (error)
                                    return "mutationRecords." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates a NotificationChannel message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.NotificationChannel
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.NotificationChannel} NotificationChannel
                     */
                    NotificationChannel.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.NotificationChannel)
                            return object;
                        var message = new $root.google.monitoring.v3.NotificationChannel();
                        if (object.type != null)
                            message.type = String(object.type);
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.displayName != null)
                            message.displayName = String(object.displayName);
                        if (object.description != null)
                            message.description = String(object.description);
                        if (object.labels) {
                            if (typeof object.labels !== "object")
                                throw TypeError(".google.monitoring.v3.NotificationChannel.labels: object expected");
                            message.labels = {};
                            for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                message.labels[keys[i]] = String(object.labels[keys[i]]);
                        }
                        if (object.userLabels) {
                            if (typeof object.userLabels !== "object")
                                throw TypeError(".google.monitoring.v3.NotificationChannel.userLabels: object expected");
                            message.userLabels = {};
                            for (var keys = Object.keys(object.userLabels), i = 0; i < keys.length; ++i)
                                message.userLabels[keys[i]] = String(object.userLabels[keys[i]]);
                        }
                        switch (object.verificationStatus) {
                        default:
                            if (typeof object.verificationStatus === "number") {
                                message.verificationStatus = object.verificationStatus;
                                break;
                            }
                            break;
                        case "VERIFICATION_STATUS_UNSPECIFIED":
                        case 0:
                            message.verificationStatus = 0;
                            break;
                        case "UNVERIFIED":
                        case 1:
                            message.verificationStatus = 1;
                            break;
                        case "VERIFIED":
                        case 2:
                            message.verificationStatus = 2;
                            break;
                        }
                        if (object.enabled != null) {
                            if (typeof object.enabled !== "object")
                                throw TypeError(".google.monitoring.v3.NotificationChannel.enabled: object expected");
                            message.enabled = $root.google.protobuf.BoolValue.fromObject(object.enabled);
                        }
                        if (object.creationRecord != null) {
                            if (typeof object.creationRecord !== "object")
                                throw TypeError(".google.monitoring.v3.NotificationChannel.creationRecord: object expected");
                            message.creationRecord = $root.google.monitoring.v3.MutationRecord.fromObject(object.creationRecord);
                        }
                        if (object.mutationRecords) {
                            if (!Array.isArray(object.mutationRecords))
                                throw TypeError(".google.monitoring.v3.NotificationChannel.mutationRecords: array expected");
                            message.mutationRecords = [];
                            for (var i = 0; i < object.mutationRecords.length; ++i) {
                                if (typeof object.mutationRecords[i] !== "object")
                                    throw TypeError(".google.monitoring.v3.NotificationChannel.mutationRecords: object expected");
                                message.mutationRecords[i] = $root.google.monitoring.v3.MutationRecord.fromObject(object.mutationRecords[i]);
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NotificationChannel message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.NotificationChannel
                     * @static
                     * @param {google.monitoring.v3.NotificationChannel} message NotificationChannel
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NotificationChannel.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.mutationRecords = [];
                        if (options.objects || options.defaults) {
                            object.labels = {};
                            object.userLabels = {};
                        }
                        if (options.defaults) {
                            object.type = "";
                            object.displayName = "";
                            object.description = "";
                            object.name = "";
                            object.verificationStatus = options.enums === String ? "VERIFICATION_STATUS_UNSPECIFIED" : 0;
                            object.enabled = null;
                            object.creationRecord = null;
                        }
                        if (message.type != null && message.hasOwnProperty("type"))
                            object.type = message.type;
                        if (message.displayName != null && message.hasOwnProperty("displayName"))
                            object.displayName = message.displayName;
                        if (message.description != null && message.hasOwnProperty("description"))
                            object.description = message.description;
                        var keys2;
                        if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                            object.labels = {};
                            for (var j = 0; j < keys2.length; ++j)
                                object.labels[keys2[j]] = message.labels[keys2[j]];
                        }
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        if (message.userLabels && (keys2 = Object.keys(message.userLabels)).length) {
                            object.userLabels = {};
                            for (var j = 0; j < keys2.length; ++j)
                                object.userLabels[keys2[j]] = message.userLabels[keys2[j]];
                        }
                        if (message.verificationStatus != null && message.hasOwnProperty("verificationStatus"))
                            object.verificationStatus = options.enums === String ? $root.google.monitoring.v3.NotificationChannel.VerificationStatus[message.verificationStatus] === undefined ? message.verificationStatus : $root.google.monitoring.v3.NotificationChannel.VerificationStatus[message.verificationStatus] : message.verificationStatus;
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            object.enabled = $root.google.protobuf.BoolValue.toObject(message.enabled, options);
                        if (message.creationRecord != null && message.hasOwnProperty("creationRecord"))
                            object.creationRecord = $root.google.monitoring.v3.MutationRecord.toObject(message.creationRecord, options);
                        if (message.mutationRecords && message.mutationRecords.length) {
                            object.mutationRecords = [];
                            for (var j = 0; j < message.mutationRecords.length; ++j)
                                object.mutationRecords[j] = $root.google.monitoring.v3.MutationRecord.toObject(message.mutationRecords[j], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this NotificationChannel to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.NotificationChannel
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NotificationChannel.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NotificationChannel
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.NotificationChannel
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NotificationChannel.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.NotificationChannel";
                    };
    
                    /**
                     * VerificationStatus enum.
                     * @name google.monitoring.v3.NotificationChannel.VerificationStatus
                     * @enum {number}
                     * @property {number} VERIFICATION_STATUS_UNSPECIFIED=0 VERIFICATION_STATUS_UNSPECIFIED value
                     * @property {number} UNVERIFIED=1 UNVERIFIED value
                     * @property {number} VERIFIED=2 VERIFIED value
                     */
                    NotificationChannel.VerificationStatus = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "VERIFICATION_STATUS_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "UNVERIFIED"] = 1;
                        values[valuesById[2] = "VERIFIED"] = 2;
                        return values;
                    })();
    
                    return NotificationChannel;
                })();
    
                v3.NotificationChannelService = (function() {
    
                    /**
                     * Constructs a new NotificationChannelService service.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a NotificationChannelService
                     * @extends $protobuf.rpc.Service
                     * @constructor
                     * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                     * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                     * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                     */
                    function NotificationChannelService(rpcImpl, requestDelimited, responseDelimited) {
                        $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                    }
    
                    (NotificationChannelService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = NotificationChannelService;
    
                    /**
                     * Creates new NotificationChannelService service using the specified rpc implementation.
                     * @function create
                     * @memberof google.monitoring.v3.NotificationChannelService
                     * @static
                     * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                     * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                     * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                     * @returns {NotificationChannelService} RPC service. Useful where requests and/or responses are streamed.
                     */
                    NotificationChannelService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                        return new this(rpcImpl, requestDelimited, responseDelimited);
                    };
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.NotificationChannelService|listNotificationChannelDescriptors}.
                     * @memberof google.monitoring.v3.NotificationChannelService
                     * @typedef ListNotificationChannelDescriptorsCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.monitoring.v3.ListNotificationChannelDescriptorsResponse} [response] ListNotificationChannelDescriptorsResponse
                     */
    
                    /**
                     * Calls ListNotificationChannelDescriptors.
                     * @function listNotificationChannelDescriptors
                     * @memberof google.monitoring.v3.NotificationChannelService
                     * @instance
                     * @param {google.monitoring.v3.IListNotificationChannelDescriptorsRequest} request ListNotificationChannelDescriptorsRequest message or plain object
                     * @param {google.monitoring.v3.NotificationChannelService.ListNotificationChannelDescriptorsCallback} callback Node-style callback called with the error, if any, and ListNotificationChannelDescriptorsResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(NotificationChannelService.prototype.listNotificationChannelDescriptors = function listNotificationChannelDescriptors(request, callback) {
                        return this.rpcCall(listNotificationChannelDescriptors, $root.google.monitoring.v3.ListNotificationChannelDescriptorsRequest, $root.google.monitoring.v3.ListNotificationChannelDescriptorsResponse, request, callback);
                    }, "name", { value: "ListNotificationChannelDescriptors" });
    
                    /**
                     * Calls ListNotificationChannelDescriptors.
                     * @function listNotificationChannelDescriptors
                     * @memberof google.monitoring.v3.NotificationChannelService
                     * @instance
                     * @param {google.monitoring.v3.IListNotificationChannelDescriptorsRequest} request ListNotificationChannelDescriptorsRequest message or plain object
                     * @returns {Promise<google.monitoring.v3.ListNotificationChannelDescriptorsResponse>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.NotificationChannelService|getNotificationChannelDescriptor}.
                     * @memberof google.monitoring.v3.NotificationChannelService
                     * @typedef GetNotificationChannelDescriptorCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.monitoring.v3.NotificationChannelDescriptor} [response] NotificationChannelDescriptor
                     */
    
                    /**
                     * Calls GetNotificationChannelDescriptor.
                     * @function getNotificationChannelDescriptor
                     * @memberof google.monitoring.v3.NotificationChannelService
                     * @instance
                     * @param {google.monitoring.v3.IGetNotificationChannelDescriptorRequest} request GetNotificationChannelDescriptorRequest message or plain object
                     * @param {google.monitoring.v3.NotificationChannelService.GetNotificationChannelDescriptorCallback} callback Node-style callback called with the error, if any, and NotificationChannelDescriptor
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(NotificationChannelService.prototype.getNotificationChannelDescriptor = function getNotificationChannelDescriptor(request, callback) {
                        return this.rpcCall(getNotificationChannelDescriptor, $root.google.monitoring.v3.GetNotificationChannelDescriptorRequest, $root.google.monitoring.v3.NotificationChannelDescriptor, request, callback);
                    }, "name", { value: "GetNotificationChannelDescriptor" });
    
                    /**
                     * Calls GetNotificationChannelDescriptor.
                     * @function getNotificationChannelDescriptor
                     * @memberof google.monitoring.v3.NotificationChannelService
                     * @instance
                     * @param {google.monitoring.v3.IGetNotificationChannelDescriptorRequest} request GetNotificationChannelDescriptorRequest message or plain object
                     * @returns {Promise<google.monitoring.v3.NotificationChannelDescriptor>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.NotificationChannelService|listNotificationChannels}.
                     * @memberof google.monitoring.v3.NotificationChannelService
                     * @typedef ListNotificationChannelsCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.monitoring.v3.ListNotificationChannelsResponse} [response] ListNotificationChannelsResponse
                     */
    
                    /**
                     * Calls ListNotificationChannels.
                     * @function listNotificationChannels
                     * @memberof google.monitoring.v3.NotificationChannelService
                     * @instance
                     * @param {google.monitoring.v3.IListNotificationChannelsRequest} request ListNotificationChannelsRequest message or plain object
                     * @param {google.monitoring.v3.NotificationChannelService.ListNotificationChannelsCallback} callback Node-style callback called with the error, if any, and ListNotificationChannelsResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(NotificationChannelService.prototype.listNotificationChannels = function listNotificationChannels(request, callback) {
                        return this.rpcCall(listNotificationChannels, $root.google.monitoring.v3.ListNotificationChannelsRequest, $root.google.monitoring.v3.ListNotificationChannelsResponse, request, callback);
                    }, "name", { value: "ListNotificationChannels" });
    
                    /**
                     * Calls ListNotificationChannels.
                     * @function listNotificationChannels
                     * @memberof google.monitoring.v3.NotificationChannelService
                     * @instance
                     * @param {google.monitoring.v3.IListNotificationChannelsRequest} request ListNotificationChannelsRequest message or plain object
                     * @returns {Promise<google.monitoring.v3.ListNotificationChannelsResponse>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.NotificationChannelService|getNotificationChannel}.
                     * @memberof google.monitoring.v3.NotificationChannelService
                     * @typedef GetNotificationChannelCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.monitoring.v3.NotificationChannel} [response] NotificationChannel
                     */
    
                    /**
                     * Calls GetNotificationChannel.
                     * @function getNotificationChannel
                     * @memberof google.monitoring.v3.NotificationChannelService
                     * @instance
                     * @param {google.monitoring.v3.IGetNotificationChannelRequest} request GetNotificationChannelRequest message or plain object
                     * @param {google.monitoring.v3.NotificationChannelService.GetNotificationChannelCallback} callback Node-style callback called with the error, if any, and NotificationChannel
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(NotificationChannelService.prototype.getNotificationChannel = function getNotificationChannel(request, callback) {
                        return this.rpcCall(getNotificationChannel, $root.google.monitoring.v3.GetNotificationChannelRequest, $root.google.monitoring.v3.NotificationChannel, request, callback);
                    }, "name", { value: "GetNotificationChannel" });
    
                    /**
                     * Calls GetNotificationChannel.
                     * @function getNotificationChannel
                     * @memberof google.monitoring.v3.NotificationChannelService
                     * @instance
                     * @param {google.monitoring.v3.IGetNotificationChannelRequest} request GetNotificationChannelRequest message or plain object
                     * @returns {Promise<google.monitoring.v3.NotificationChannel>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.NotificationChannelService|createNotificationChannel}.
                     * @memberof google.monitoring.v3.NotificationChannelService
                     * @typedef CreateNotificationChannelCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.monitoring.v3.NotificationChannel} [response] NotificationChannel
                     */
    
                    /**
                     * Calls CreateNotificationChannel.
                     * @function createNotificationChannel
                     * @memberof google.monitoring.v3.NotificationChannelService
                     * @instance
                     * @param {google.monitoring.v3.ICreateNotificationChannelRequest} request CreateNotificationChannelRequest message or plain object
                     * @param {google.monitoring.v3.NotificationChannelService.CreateNotificationChannelCallback} callback Node-style callback called with the error, if any, and NotificationChannel
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(NotificationChannelService.prototype.createNotificationChannel = function createNotificationChannel(request, callback) {
                        return this.rpcCall(createNotificationChannel, $root.google.monitoring.v3.CreateNotificationChannelRequest, $root.google.monitoring.v3.NotificationChannel, request, callback);
                    }, "name", { value: "CreateNotificationChannel" });
    
                    /**
                     * Calls CreateNotificationChannel.
                     * @function createNotificationChannel
                     * @memberof google.monitoring.v3.NotificationChannelService
                     * @instance
                     * @param {google.monitoring.v3.ICreateNotificationChannelRequest} request CreateNotificationChannelRequest message or plain object
                     * @returns {Promise<google.monitoring.v3.NotificationChannel>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.NotificationChannelService|updateNotificationChannel}.
                     * @memberof google.monitoring.v3.NotificationChannelService
                     * @typedef UpdateNotificationChannelCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.monitoring.v3.NotificationChannel} [response] NotificationChannel
                     */
    
                    /**
                     * Calls UpdateNotificationChannel.
                     * @function updateNotificationChannel
                     * @memberof google.monitoring.v3.NotificationChannelService
                     * @instance
                     * @param {google.monitoring.v3.IUpdateNotificationChannelRequest} request UpdateNotificationChannelRequest message or plain object
                     * @param {google.monitoring.v3.NotificationChannelService.UpdateNotificationChannelCallback} callback Node-style callback called with the error, if any, and NotificationChannel
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(NotificationChannelService.prototype.updateNotificationChannel = function updateNotificationChannel(request, callback) {
                        return this.rpcCall(updateNotificationChannel, $root.google.monitoring.v3.UpdateNotificationChannelRequest, $root.google.monitoring.v3.NotificationChannel, request, callback);
                    }, "name", { value: "UpdateNotificationChannel" });
    
                    /**
                     * Calls UpdateNotificationChannel.
                     * @function updateNotificationChannel
                     * @memberof google.monitoring.v3.NotificationChannelService
                     * @instance
                     * @param {google.monitoring.v3.IUpdateNotificationChannelRequest} request UpdateNotificationChannelRequest message or plain object
                     * @returns {Promise<google.monitoring.v3.NotificationChannel>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.NotificationChannelService|deleteNotificationChannel}.
                     * @memberof google.monitoring.v3.NotificationChannelService
                     * @typedef DeleteNotificationChannelCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.protobuf.Empty} [response] Empty
                     */
    
                    /**
                     * Calls DeleteNotificationChannel.
                     * @function deleteNotificationChannel
                     * @memberof google.monitoring.v3.NotificationChannelService
                     * @instance
                     * @param {google.monitoring.v3.IDeleteNotificationChannelRequest} request DeleteNotificationChannelRequest message or plain object
                     * @param {google.monitoring.v3.NotificationChannelService.DeleteNotificationChannelCallback} callback Node-style callback called with the error, if any, and Empty
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(NotificationChannelService.prototype.deleteNotificationChannel = function deleteNotificationChannel(request, callback) {
                        return this.rpcCall(deleteNotificationChannel, $root.google.monitoring.v3.DeleteNotificationChannelRequest, $root.google.protobuf.Empty, request, callback);
                    }, "name", { value: "DeleteNotificationChannel" });
    
                    /**
                     * Calls DeleteNotificationChannel.
                     * @function deleteNotificationChannel
                     * @memberof google.monitoring.v3.NotificationChannelService
                     * @instance
                     * @param {google.monitoring.v3.IDeleteNotificationChannelRequest} request DeleteNotificationChannelRequest message or plain object
                     * @returns {Promise<google.protobuf.Empty>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.NotificationChannelService|sendNotificationChannelVerificationCode}.
                     * @memberof google.monitoring.v3.NotificationChannelService
                     * @typedef SendNotificationChannelVerificationCodeCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.protobuf.Empty} [response] Empty
                     */
    
                    /**
                     * Calls SendNotificationChannelVerificationCode.
                     * @function sendNotificationChannelVerificationCode
                     * @memberof google.monitoring.v3.NotificationChannelService
                     * @instance
                     * @param {google.monitoring.v3.ISendNotificationChannelVerificationCodeRequest} request SendNotificationChannelVerificationCodeRequest message or plain object
                     * @param {google.monitoring.v3.NotificationChannelService.SendNotificationChannelVerificationCodeCallback} callback Node-style callback called with the error, if any, and Empty
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(NotificationChannelService.prototype.sendNotificationChannelVerificationCode = function sendNotificationChannelVerificationCode(request, callback) {
                        return this.rpcCall(sendNotificationChannelVerificationCode, $root.google.monitoring.v3.SendNotificationChannelVerificationCodeRequest, $root.google.protobuf.Empty, request, callback);
                    }, "name", { value: "SendNotificationChannelVerificationCode" });
    
                    /**
                     * Calls SendNotificationChannelVerificationCode.
                     * @function sendNotificationChannelVerificationCode
                     * @memberof google.monitoring.v3.NotificationChannelService
                     * @instance
                     * @param {google.monitoring.v3.ISendNotificationChannelVerificationCodeRequest} request SendNotificationChannelVerificationCodeRequest message or plain object
                     * @returns {Promise<google.protobuf.Empty>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.NotificationChannelService|getNotificationChannelVerificationCode}.
                     * @memberof google.monitoring.v3.NotificationChannelService
                     * @typedef GetNotificationChannelVerificationCodeCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.monitoring.v3.GetNotificationChannelVerificationCodeResponse} [response] GetNotificationChannelVerificationCodeResponse
                     */
    
                    /**
                     * Calls GetNotificationChannelVerificationCode.
                     * @function getNotificationChannelVerificationCode
                     * @memberof google.monitoring.v3.NotificationChannelService
                     * @instance
                     * @param {google.monitoring.v3.IGetNotificationChannelVerificationCodeRequest} request GetNotificationChannelVerificationCodeRequest message or plain object
                     * @param {google.monitoring.v3.NotificationChannelService.GetNotificationChannelVerificationCodeCallback} callback Node-style callback called with the error, if any, and GetNotificationChannelVerificationCodeResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(NotificationChannelService.prototype.getNotificationChannelVerificationCode = function getNotificationChannelVerificationCode(request, callback) {
                        return this.rpcCall(getNotificationChannelVerificationCode, $root.google.monitoring.v3.GetNotificationChannelVerificationCodeRequest, $root.google.monitoring.v3.GetNotificationChannelVerificationCodeResponse, request, callback);
                    }, "name", { value: "GetNotificationChannelVerificationCode" });
    
                    /**
                     * Calls GetNotificationChannelVerificationCode.
                     * @function getNotificationChannelVerificationCode
                     * @memberof google.monitoring.v3.NotificationChannelService
                     * @instance
                     * @param {google.monitoring.v3.IGetNotificationChannelVerificationCodeRequest} request GetNotificationChannelVerificationCodeRequest message or plain object
                     * @returns {Promise<google.monitoring.v3.GetNotificationChannelVerificationCodeResponse>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.NotificationChannelService|verifyNotificationChannel}.
                     * @memberof google.monitoring.v3.NotificationChannelService
                     * @typedef VerifyNotificationChannelCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.monitoring.v3.NotificationChannel} [response] NotificationChannel
                     */
    
                    /**
                     * Calls VerifyNotificationChannel.
                     * @function verifyNotificationChannel
                     * @memberof google.monitoring.v3.NotificationChannelService
                     * @instance
                     * @param {google.monitoring.v3.IVerifyNotificationChannelRequest} request VerifyNotificationChannelRequest message or plain object
                     * @param {google.monitoring.v3.NotificationChannelService.VerifyNotificationChannelCallback} callback Node-style callback called with the error, if any, and NotificationChannel
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(NotificationChannelService.prototype.verifyNotificationChannel = function verifyNotificationChannel(request, callback) {
                        return this.rpcCall(verifyNotificationChannel, $root.google.monitoring.v3.VerifyNotificationChannelRequest, $root.google.monitoring.v3.NotificationChannel, request, callback);
                    }, "name", { value: "VerifyNotificationChannel" });
    
                    /**
                     * Calls VerifyNotificationChannel.
                     * @function verifyNotificationChannel
                     * @memberof google.monitoring.v3.NotificationChannelService
                     * @instance
                     * @param {google.monitoring.v3.IVerifyNotificationChannelRequest} request VerifyNotificationChannelRequest message or plain object
                     * @returns {Promise<google.monitoring.v3.NotificationChannel>} Promise
                     * @variation 2
                     */
    
                    return NotificationChannelService;
                })();
    
                v3.ListNotificationChannelDescriptorsRequest = (function() {
    
                    /**
                     * Properties of a ListNotificationChannelDescriptorsRequest.
                     * @memberof google.monitoring.v3
                     * @interface IListNotificationChannelDescriptorsRequest
                     * @property {string|null} [name] ListNotificationChannelDescriptorsRequest name
                     * @property {number|null} [pageSize] ListNotificationChannelDescriptorsRequest pageSize
                     * @property {string|null} [pageToken] ListNotificationChannelDescriptorsRequest pageToken
                     */
    
                    /**
                     * Constructs a new ListNotificationChannelDescriptorsRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a ListNotificationChannelDescriptorsRequest.
                     * @implements IListNotificationChannelDescriptorsRequest
                     * @constructor
                     * @param {google.monitoring.v3.IListNotificationChannelDescriptorsRequest=} [properties] Properties to set
                     */
                    function ListNotificationChannelDescriptorsRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListNotificationChannelDescriptorsRequest name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.ListNotificationChannelDescriptorsRequest
                     * @instance
                     */
                    ListNotificationChannelDescriptorsRequest.prototype.name = "";
    
                    /**
                     * ListNotificationChannelDescriptorsRequest pageSize.
                     * @member {number} pageSize
                     * @memberof google.monitoring.v3.ListNotificationChannelDescriptorsRequest
                     * @instance
                     */
                    ListNotificationChannelDescriptorsRequest.prototype.pageSize = 0;
    
                    /**
                     * ListNotificationChannelDescriptorsRequest pageToken.
                     * @member {string} pageToken
                     * @memberof google.monitoring.v3.ListNotificationChannelDescriptorsRequest
                     * @instance
                     */
                    ListNotificationChannelDescriptorsRequest.prototype.pageToken = "";
    
                    /**
                     * Creates a new ListNotificationChannelDescriptorsRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.ListNotificationChannelDescriptorsRequest
                     * @static
                     * @param {google.monitoring.v3.IListNotificationChannelDescriptorsRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.ListNotificationChannelDescriptorsRequest} ListNotificationChannelDescriptorsRequest instance
                     */
                    ListNotificationChannelDescriptorsRequest.create = function create(properties) {
                        return new ListNotificationChannelDescriptorsRequest(properties);
                    };
    
                    /**
                     * Encodes the specified ListNotificationChannelDescriptorsRequest message. Does not implicitly {@link google.monitoring.v3.ListNotificationChannelDescriptorsRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.ListNotificationChannelDescriptorsRequest
                     * @static
                     * @param {google.monitoring.v3.IListNotificationChannelDescriptorsRequest} message ListNotificationChannelDescriptorsRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListNotificationChannelDescriptorsRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                        if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ListNotificationChannelDescriptorsRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.ListNotificationChannelDescriptorsRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.ListNotificationChannelDescriptorsRequest
                     * @static
                     * @param {google.monitoring.v3.IListNotificationChannelDescriptorsRequest} message ListNotificationChannelDescriptorsRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListNotificationChannelDescriptorsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ListNotificationChannelDescriptorsRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.ListNotificationChannelDescriptorsRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.ListNotificationChannelDescriptorsRequest} ListNotificationChannelDescriptorsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListNotificationChannelDescriptorsRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.ListNotificationChannelDescriptorsRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 4: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.pageSize = reader.int32();
                                    break;
                                }
                            case 3: {
                                    message.pageToken = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ListNotificationChannelDescriptorsRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.ListNotificationChannelDescriptorsRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.ListNotificationChannelDescriptorsRequest} ListNotificationChannelDescriptorsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListNotificationChannelDescriptorsRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ListNotificationChannelDescriptorsRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.ListNotificationChannelDescriptorsRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ListNotificationChannelDescriptorsRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                            if (!$util.isInteger(message.pageSize))
                                return "pageSize: integer expected";
                        if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                            if (!$util.isString(message.pageToken))
                                return "pageToken: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a ListNotificationChannelDescriptorsRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.ListNotificationChannelDescriptorsRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.ListNotificationChannelDescriptorsRequest} ListNotificationChannelDescriptorsRequest
                     */
                    ListNotificationChannelDescriptorsRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.ListNotificationChannelDescriptorsRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.ListNotificationChannelDescriptorsRequest();
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.pageSize != null)
                            message.pageSize = object.pageSize | 0;
                        if (object.pageToken != null)
                            message.pageToken = String(object.pageToken);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ListNotificationChannelDescriptorsRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.ListNotificationChannelDescriptorsRequest
                     * @static
                     * @param {google.monitoring.v3.ListNotificationChannelDescriptorsRequest} message ListNotificationChannelDescriptorsRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ListNotificationChannelDescriptorsRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.pageSize = 0;
                            object.pageToken = "";
                            object.name = "";
                        }
                        if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                            object.pageSize = message.pageSize;
                        if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                            object.pageToken = message.pageToken;
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this ListNotificationChannelDescriptorsRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.ListNotificationChannelDescriptorsRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ListNotificationChannelDescriptorsRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ListNotificationChannelDescriptorsRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.ListNotificationChannelDescriptorsRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ListNotificationChannelDescriptorsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.ListNotificationChannelDescriptorsRequest";
                    };
    
                    return ListNotificationChannelDescriptorsRequest;
                })();
    
                v3.ListNotificationChannelDescriptorsResponse = (function() {
    
                    /**
                     * Properties of a ListNotificationChannelDescriptorsResponse.
                     * @memberof google.monitoring.v3
                     * @interface IListNotificationChannelDescriptorsResponse
                     * @property {Array.<google.monitoring.v3.INotificationChannelDescriptor>|null} [channelDescriptors] ListNotificationChannelDescriptorsResponse channelDescriptors
                     * @property {string|null} [nextPageToken] ListNotificationChannelDescriptorsResponse nextPageToken
                     */
    
                    /**
                     * Constructs a new ListNotificationChannelDescriptorsResponse.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a ListNotificationChannelDescriptorsResponse.
                     * @implements IListNotificationChannelDescriptorsResponse
                     * @constructor
                     * @param {google.monitoring.v3.IListNotificationChannelDescriptorsResponse=} [properties] Properties to set
                     */
                    function ListNotificationChannelDescriptorsResponse(properties) {
                        this.channelDescriptors = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListNotificationChannelDescriptorsResponse channelDescriptors.
                     * @member {Array.<google.monitoring.v3.INotificationChannelDescriptor>} channelDescriptors
                     * @memberof google.monitoring.v3.ListNotificationChannelDescriptorsResponse
                     * @instance
                     */
                    ListNotificationChannelDescriptorsResponse.prototype.channelDescriptors = $util.emptyArray;
    
                    /**
                     * ListNotificationChannelDescriptorsResponse nextPageToken.
                     * @member {string} nextPageToken
                     * @memberof google.monitoring.v3.ListNotificationChannelDescriptorsResponse
                     * @instance
                     */
                    ListNotificationChannelDescriptorsResponse.prototype.nextPageToken = "";
    
                    /**
                     * Creates a new ListNotificationChannelDescriptorsResponse instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.ListNotificationChannelDescriptorsResponse
                     * @static
                     * @param {google.monitoring.v3.IListNotificationChannelDescriptorsResponse=} [properties] Properties to set
                     * @returns {google.monitoring.v3.ListNotificationChannelDescriptorsResponse} ListNotificationChannelDescriptorsResponse instance
                     */
                    ListNotificationChannelDescriptorsResponse.create = function create(properties) {
                        return new ListNotificationChannelDescriptorsResponse(properties);
                    };
    
                    /**
                     * Encodes the specified ListNotificationChannelDescriptorsResponse message. Does not implicitly {@link google.monitoring.v3.ListNotificationChannelDescriptorsResponse.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.ListNotificationChannelDescriptorsResponse
                     * @static
                     * @param {google.monitoring.v3.IListNotificationChannelDescriptorsResponse} message ListNotificationChannelDescriptorsResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListNotificationChannelDescriptorsResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.channelDescriptors != null && message.channelDescriptors.length)
                            for (var i = 0; i < message.channelDescriptors.length; ++i)
                                $root.google.monitoring.v3.NotificationChannelDescriptor.encode(message.channelDescriptors[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ListNotificationChannelDescriptorsResponse message, length delimited. Does not implicitly {@link google.monitoring.v3.ListNotificationChannelDescriptorsResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.ListNotificationChannelDescriptorsResponse
                     * @static
                     * @param {google.monitoring.v3.IListNotificationChannelDescriptorsResponse} message ListNotificationChannelDescriptorsResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListNotificationChannelDescriptorsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ListNotificationChannelDescriptorsResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.ListNotificationChannelDescriptorsResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.ListNotificationChannelDescriptorsResponse} ListNotificationChannelDescriptorsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListNotificationChannelDescriptorsResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.ListNotificationChannelDescriptorsResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.channelDescriptors && message.channelDescriptors.length))
                                        message.channelDescriptors = [];
                                    message.channelDescriptors.push($root.google.monitoring.v3.NotificationChannelDescriptor.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 2: {
                                    message.nextPageToken = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ListNotificationChannelDescriptorsResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.ListNotificationChannelDescriptorsResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.ListNotificationChannelDescriptorsResponse} ListNotificationChannelDescriptorsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListNotificationChannelDescriptorsResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ListNotificationChannelDescriptorsResponse message.
                     * @function verify
                     * @memberof google.monitoring.v3.ListNotificationChannelDescriptorsResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ListNotificationChannelDescriptorsResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.channelDescriptors != null && message.hasOwnProperty("channelDescriptors")) {
                            if (!Array.isArray(message.channelDescriptors))
                                return "channelDescriptors: array expected";
                            for (var i = 0; i < message.channelDescriptors.length; ++i) {
                                var error = $root.google.monitoring.v3.NotificationChannelDescriptor.verify(message.channelDescriptors[i]);
                                if (error)
                                    return "channelDescriptors." + error;
                            }
                        }
                        if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                            if (!$util.isString(message.nextPageToken))
                                return "nextPageToken: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a ListNotificationChannelDescriptorsResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.ListNotificationChannelDescriptorsResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.ListNotificationChannelDescriptorsResponse} ListNotificationChannelDescriptorsResponse
                     */
                    ListNotificationChannelDescriptorsResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.ListNotificationChannelDescriptorsResponse)
                            return object;
                        var message = new $root.google.monitoring.v3.ListNotificationChannelDescriptorsResponse();
                        if (object.channelDescriptors) {
                            if (!Array.isArray(object.channelDescriptors))
                                throw TypeError(".google.monitoring.v3.ListNotificationChannelDescriptorsResponse.channelDescriptors: array expected");
                            message.channelDescriptors = [];
                            for (var i = 0; i < object.channelDescriptors.length; ++i) {
                                if (typeof object.channelDescriptors[i] !== "object")
                                    throw TypeError(".google.monitoring.v3.ListNotificationChannelDescriptorsResponse.channelDescriptors: object expected");
                                message.channelDescriptors[i] = $root.google.monitoring.v3.NotificationChannelDescriptor.fromObject(object.channelDescriptors[i]);
                            }
                        }
                        if (object.nextPageToken != null)
                            message.nextPageToken = String(object.nextPageToken);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ListNotificationChannelDescriptorsResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.ListNotificationChannelDescriptorsResponse
                     * @static
                     * @param {google.monitoring.v3.ListNotificationChannelDescriptorsResponse} message ListNotificationChannelDescriptorsResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ListNotificationChannelDescriptorsResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.channelDescriptors = [];
                        if (options.defaults)
                            object.nextPageToken = "";
                        if (message.channelDescriptors && message.channelDescriptors.length) {
                            object.channelDescriptors = [];
                            for (var j = 0; j < message.channelDescriptors.length; ++j)
                                object.channelDescriptors[j] = $root.google.monitoring.v3.NotificationChannelDescriptor.toObject(message.channelDescriptors[j], options);
                        }
                        if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                            object.nextPageToken = message.nextPageToken;
                        return object;
                    };
    
                    /**
                     * Converts this ListNotificationChannelDescriptorsResponse to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.ListNotificationChannelDescriptorsResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ListNotificationChannelDescriptorsResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ListNotificationChannelDescriptorsResponse
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.ListNotificationChannelDescriptorsResponse
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ListNotificationChannelDescriptorsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.ListNotificationChannelDescriptorsResponse";
                    };
    
                    return ListNotificationChannelDescriptorsResponse;
                })();
    
                v3.GetNotificationChannelDescriptorRequest = (function() {
    
                    /**
                     * Properties of a GetNotificationChannelDescriptorRequest.
                     * @memberof google.monitoring.v3
                     * @interface IGetNotificationChannelDescriptorRequest
                     * @property {string|null} [name] GetNotificationChannelDescriptorRequest name
                     */
    
                    /**
                     * Constructs a new GetNotificationChannelDescriptorRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a GetNotificationChannelDescriptorRequest.
                     * @implements IGetNotificationChannelDescriptorRequest
                     * @constructor
                     * @param {google.monitoring.v3.IGetNotificationChannelDescriptorRequest=} [properties] Properties to set
                     */
                    function GetNotificationChannelDescriptorRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * GetNotificationChannelDescriptorRequest name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.GetNotificationChannelDescriptorRequest
                     * @instance
                     */
                    GetNotificationChannelDescriptorRequest.prototype.name = "";
    
                    /**
                     * Creates a new GetNotificationChannelDescriptorRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.GetNotificationChannelDescriptorRequest
                     * @static
                     * @param {google.monitoring.v3.IGetNotificationChannelDescriptorRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.GetNotificationChannelDescriptorRequest} GetNotificationChannelDescriptorRequest instance
                     */
                    GetNotificationChannelDescriptorRequest.create = function create(properties) {
                        return new GetNotificationChannelDescriptorRequest(properties);
                    };
    
                    /**
                     * Encodes the specified GetNotificationChannelDescriptorRequest message. Does not implicitly {@link google.monitoring.v3.GetNotificationChannelDescriptorRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.GetNotificationChannelDescriptorRequest
                     * @static
                     * @param {google.monitoring.v3.IGetNotificationChannelDescriptorRequest} message GetNotificationChannelDescriptorRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetNotificationChannelDescriptorRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified GetNotificationChannelDescriptorRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.GetNotificationChannelDescriptorRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.GetNotificationChannelDescriptorRequest
                     * @static
                     * @param {google.monitoring.v3.IGetNotificationChannelDescriptorRequest} message GetNotificationChannelDescriptorRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetNotificationChannelDescriptorRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a GetNotificationChannelDescriptorRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.GetNotificationChannelDescriptorRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.GetNotificationChannelDescriptorRequest} GetNotificationChannelDescriptorRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetNotificationChannelDescriptorRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.GetNotificationChannelDescriptorRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 3: {
                                    message.name = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a GetNotificationChannelDescriptorRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.GetNotificationChannelDescriptorRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.GetNotificationChannelDescriptorRequest} GetNotificationChannelDescriptorRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetNotificationChannelDescriptorRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a GetNotificationChannelDescriptorRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.GetNotificationChannelDescriptorRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    GetNotificationChannelDescriptorRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a GetNotificationChannelDescriptorRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.GetNotificationChannelDescriptorRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.GetNotificationChannelDescriptorRequest} GetNotificationChannelDescriptorRequest
                     */
                    GetNotificationChannelDescriptorRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.GetNotificationChannelDescriptorRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.GetNotificationChannelDescriptorRequest();
                        if (object.name != null)
                            message.name = String(object.name);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a GetNotificationChannelDescriptorRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.GetNotificationChannelDescriptorRequest
                     * @static
                     * @param {google.monitoring.v3.GetNotificationChannelDescriptorRequest} message GetNotificationChannelDescriptorRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    GetNotificationChannelDescriptorRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.name = "";
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this GetNotificationChannelDescriptorRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.GetNotificationChannelDescriptorRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    GetNotificationChannelDescriptorRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for GetNotificationChannelDescriptorRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.GetNotificationChannelDescriptorRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    GetNotificationChannelDescriptorRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.GetNotificationChannelDescriptorRequest";
                    };
    
                    return GetNotificationChannelDescriptorRequest;
                })();
    
                v3.CreateNotificationChannelRequest = (function() {
    
                    /**
                     * Properties of a CreateNotificationChannelRequest.
                     * @memberof google.monitoring.v3
                     * @interface ICreateNotificationChannelRequest
                     * @property {string|null} [name] CreateNotificationChannelRequest name
                     * @property {google.monitoring.v3.INotificationChannel|null} [notificationChannel] CreateNotificationChannelRequest notificationChannel
                     */
    
                    /**
                     * Constructs a new CreateNotificationChannelRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a CreateNotificationChannelRequest.
                     * @implements ICreateNotificationChannelRequest
                     * @constructor
                     * @param {google.monitoring.v3.ICreateNotificationChannelRequest=} [properties] Properties to set
                     */
                    function CreateNotificationChannelRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * CreateNotificationChannelRequest name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.CreateNotificationChannelRequest
                     * @instance
                     */
                    CreateNotificationChannelRequest.prototype.name = "";
    
                    /**
                     * CreateNotificationChannelRequest notificationChannel.
                     * @member {google.monitoring.v3.INotificationChannel|null|undefined} notificationChannel
                     * @memberof google.monitoring.v3.CreateNotificationChannelRequest
                     * @instance
                     */
                    CreateNotificationChannelRequest.prototype.notificationChannel = null;
    
                    /**
                     * Creates a new CreateNotificationChannelRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.CreateNotificationChannelRequest
                     * @static
                     * @param {google.monitoring.v3.ICreateNotificationChannelRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.CreateNotificationChannelRequest} CreateNotificationChannelRequest instance
                     */
                    CreateNotificationChannelRequest.create = function create(properties) {
                        return new CreateNotificationChannelRequest(properties);
                    };
    
                    /**
                     * Encodes the specified CreateNotificationChannelRequest message. Does not implicitly {@link google.monitoring.v3.CreateNotificationChannelRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.CreateNotificationChannelRequest
                     * @static
                     * @param {google.monitoring.v3.ICreateNotificationChannelRequest} message CreateNotificationChannelRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CreateNotificationChannelRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.notificationChannel != null && Object.hasOwnProperty.call(message, "notificationChannel"))
                            $root.google.monitoring.v3.NotificationChannel.encode(message.notificationChannel, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified CreateNotificationChannelRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.CreateNotificationChannelRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.CreateNotificationChannelRequest
                     * @static
                     * @param {google.monitoring.v3.ICreateNotificationChannelRequest} message CreateNotificationChannelRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CreateNotificationChannelRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a CreateNotificationChannelRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.CreateNotificationChannelRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.CreateNotificationChannelRequest} CreateNotificationChannelRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CreateNotificationChannelRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.CreateNotificationChannelRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 3: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.notificationChannel = $root.google.monitoring.v3.NotificationChannel.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a CreateNotificationChannelRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.CreateNotificationChannelRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.CreateNotificationChannelRequest} CreateNotificationChannelRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CreateNotificationChannelRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a CreateNotificationChannelRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.CreateNotificationChannelRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    CreateNotificationChannelRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.notificationChannel != null && message.hasOwnProperty("notificationChannel")) {
                            var error = $root.google.monitoring.v3.NotificationChannel.verify(message.notificationChannel);
                            if (error)
                                return "notificationChannel." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a CreateNotificationChannelRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.CreateNotificationChannelRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.CreateNotificationChannelRequest} CreateNotificationChannelRequest
                     */
                    CreateNotificationChannelRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.CreateNotificationChannelRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.CreateNotificationChannelRequest();
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.notificationChannel != null) {
                            if (typeof object.notificationChannel !== "object")
                                throw TypeError(".google.monitoring.v3.CreateNotificationChannelRequest.notificationChannel: object expected");
                            message.notificationChannel = $root.google.monitoring.v3.NotificationChannel.fromObject(object.notificationChannel);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a CreateNotificationChannelRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.CreateNotificationChannelRequest
                     * @static
                     * @param {google.monitoring.v3.CreateNotificationChannelRequest} message CreateNotificationChannelRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    CreateNotificationChannelRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.notificationChannel = null;
                            object.name = "";
                        }
                        if (message.notificationChannel != null && message.hasOwnProperty("notificationChannel"))
                            object.notificationChannel = $root.google.monitoring.v3.NotificationChannel.toObject(message.notificationChannel, options);
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this CreateNotificationChannelRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.CreateNotificationChannelRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    CreateNotificationChannelRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for CreateNotificationChannelRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.CreateNotificationChannelRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    CreateNotificationChannelRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.CreateNotificationChannelRequest";
                    };
    
                    return CreateNotificationChannelRequest;
                })();
    
                v3.ListNotificationChannelsRequest = (function() {
    
                    /**
                     * Properties of a ListNotificationChannelsRequest.
                     * @memberof google.monitoring.v3
                     * @interface IListNotificationChannelsRequest
                     * @property {string|null} [name] ListNotificationChannelsRequest name
                     * @property {string|null} [filter] ListNotificationChannelsRequest filter
                     * @property {string|null} [orderBy] ListNotificationChannelsRequest orderBy
                     * @property {number|null} [pageSize] ListNotificationChannelsRequest pageSize
                     * @property {string|null} [pageToken] ListNotificationChannelsRequest pageToken
                     */
    
                    /**
                     * Constructs a new ListNotificationChannelsRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a ListNotificationChannelsRequest.
                     * @implements IListNotificationChannelsRequest
                     * @constructor
                     * @param {google.monitoring.v3.IListNotificationChannelsRequest=} [properties] Properties to set
                     */
                    function ListNotificationChannelsRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListNotificationChannelsRequest name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.ListNotificationChannelsRequest
                     * @instance
                     */
                    ListNotificationChannelsRequest.prototype.name = "";
    
                    /**
                     * ListNotificationChannelsRequest filter.
                     * @member {string} filter
                     * @memberof google.monitoring.v3.ListNotificationChannelsRequest
                     * @instance
                     */
                    ListNotificationChannelsRequest.prototype.filter = "";
    
                    /**
                     * ListNotificationChannelsRequest orderBy.
                     * @member {string} orderBy
                     * @memberof google.monitoring.v3.ListNotificationChannelsRequest
                     * @instance
                     */
                    ListNotificationChannelsRequest.prototype.orderBy = "";
    
                    /**
                     * ListNotificationChannelsRequest pageSize.
                     * @member {number} pageSize
                     * @memberof google.monitoring.v3.ListNotificationChannelsRequest
                     * @instance
                     */
                    ListNotificationChannelsRequest.prototype.pageSize = 0;
    
                    /**
                     * ListNotificationChannelsRequest pageToken.
                     * @member {string} pageToken
                     * @memberof google.monitoring.v3.ListNotificationChannelsRequest
                     * @instance
                     */
                    ListNotificationChannelsRequest.prototype.pageToken = "";
    
                    /**
                     * Creates a new ListNotificationChannelsRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.ListNotificationChannelsRequest
                     * @static
                     * @param {google.monitoring.v3.IListNotificationChannelsRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.ListNotificationChannelsRequest} ListNotificationChannelsRequest instance
                     */
                    ListNotificationChannelsRequest.create = function create(properties) {
                        return new ListNotificationChannelsRequest(properties);
                    };
    
                    /**
                     * Encodes the specified ListNotificationChannelsRequest message. Does not implicitly {@link google.monitoring.v3.ListNotificationChannelsRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.ListNotificationChannelsRequest
                     * @static
                     * @param {google.monitoring.v3.IListNotificationChannelsRequest} message ListNotificationChannelsRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListNotificationChannelsRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.pageSize);
                        if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.pageToken);
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.name);
                        if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                            writer.uint32(/* id 6, wireType 2 =*/50).string(message.filter);
                        if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                            writer.uint32(/* id 7, wireType 2 =*/58).string(message.orderBy);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ListNotificationChannelsRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.ListNotificationChannelsRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.ListNotificationChannelsRequest
                     * @static
                     * @param {google.monitoring.v3.IListNotificationChannelsRequest} message ListNotificationChannelsRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListNotificationChannelsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ListNotificationChannelsRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.ListNotificationChannelsRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.ListNotificationChannelsRequest} ListNotificationChannelsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListNotificationChannelsRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.ListNotificationChannelsRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 5: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 6: {
                                    message.filter = reader.string();
                                    break;
                                }
                            case 7: {
                                    message.orderBy = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.pageSize = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.pageToken = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ListNotificationChannelsRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.ListNotificationChannelsRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.ListNotificationChannelsRequest} ListNotificationChannelsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListNotificationChannelsRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ListNotificationChannelsRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.ListNotificationChannelsRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ListNotificationChannelsRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.filter != null && message.hasOwnProperty("filter"))
                            if (!$util.isString(message.filter))
                                return "filter: string expected";
                        if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                            if (!$util.isString(message.orderBy))
                                return "orderBy: string expected";
                        if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                            if (!$util.isInteger(message.pageSize))
                                return "pageSize: integer expected";
                        if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                            if (!$util.isString(message.pageToken))
                                return "pageToken: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a ListNotificationChannelsRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.ListNotificationChannelsRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.ListNotificationChannelsRequest} ListNotificationChannelsRequest
                     */
                    ListNotificationChannelsRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.ListNotificationChannelsRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.ListNotificationChannelsRequest();
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.filter != null)
                            message.filter = String(object.filter);
                        if (object.orderBy != null)
                            message.orderBy = String(object.orderBy);
                        if (object.pageSize != null)
                            message.pageSize = object.pageSize | 0;
                        if (object.pageToken != null)
                            message.pageToken = String(object.pageToken);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ListNotificationChannelsRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.ListNotificationChannelsRequest
                     * @static
                     * @param {google.monitoring.v3.ListNotificationChannelsRequest} message ListNotificationChannelsRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ListNotificationChannelsRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.pageSize = 0;
                            object.pageToken = "";
                            object.name = "";
                            object.filter = "";
                            object.orderBy = "";
                        }
                        if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                            object.pageSize = message.pageSize;
                        if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                            object.pageToken = message.pageToken;
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        if (message.filter != null && message.hasOwnProperty("filter"))
                            object.filter = message.filter;
                        if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                            object.orderBy = message.orderBy;
                        return object;
                    };
    
                    /**
                     * Converts this ListNotificationChannelsRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.ListNotificationChannelsRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ListNotificationChannelsRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ListNotificationChannelsRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.ListNotificationChannelsRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ListNotificationChannelsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.ListNotificationChannelsRequest";
                    };
    
                    return ListNotificationChannelsRequest;
                })();
    
                v3.ListNotificationChannelsResponse = (function() {
    
                    /**
                     * Properties of a ListNotificationChannelsResponse.
                     * @memberof google.monitoring.v3
                     * @interface IListNotificationChannelsResponse
                     * @property {Array.<google.monitoring.v3.INotificationChannel>|null} [notificationChannels] ListNotificationChannelsResponse notificationChannels
                     * @property {string|null} [nextPageToken] ListNotificationChannelsResponse nextPageToken
                     * @property {number|null} [totalSize] ListNotificationChannelsResponse totalSize
                     */
    
                    /**
                     * Constructs a new ListNotificationChannelsResponse.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a ListNotificationChannelsResponse.
                     * @implements IListNotificationChannelsResponse
                     * @constructor
                     * @param {google.monitoring.v3.IListNotificationChannelsResponse=} [properties] Properties to set
                     */
                    function ListNotificationChannelsResponse(properties) {
                        this.notificationChannels = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListNotificationChannelsResponse notificationChannels.
                     * @member {Array.<google.monitoring.v3.INotificationChannel>} notificationChannels
                     * @memberof google.monitoring.v3.ListNotificationChannelsResponse
                     * @instance
                     */
                    ListNotificationChannelsResponse.prototype.notificationChannels = $util.emptyArray;
    
                    /**
                     * ListNotificationChannelsResponse nextPageToken.
                     * @member {string} nextPageToken
                     * @memberof google.monitoring.v3.ListNotificationChannelsResponse
                     * @instance
                     */
                    ListNotificationChannelsResponse.prototype.nextPageToken = "";
    
                    /**
                     * ListNotificationChannelsResponse totalSize.
                     * @member {number} totalSize
                     * @memberof google.monitoring.v3.ListNotificationChannelsResponse
                     * @instance
                     */
                    ListNotificationChannelsResponse.prototype.totalSize = 0;
    
                    /**
                     * Creates a new ListNotificationChannelsResponse instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.ListNotificationChannelsResponse
                     * @static
                     * @param {google.monitoring.v3.IListNotificationChannelsResponse=} [properties] Properties to set
                     * @returns {google.monitoring.v3.ListNotificationChannelsResponse} ListNotificationChannelsResponse instance
                     */
                    ListNotificationChannelsResponse.create = function create(properties) {
                        return new ListNotificationChannelsResponse(properties);
                    };
    
                    /**
                     * Encodes the specified ListNotificationChannelsResponse message. Does not implicitly {@link google.monitoring.v3.ListNotificationChannelsResponse.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.ListNotificationChannelsResponse
                     * @static
                     * @param {google.monitoring.v3.IListNotificationChannelsResponse} message ListNotificationChannelsResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListNotificationChannelsResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                        if (message.notificationChannels != null && message.notificationChannels.length)
                            for (var i = 0; i < message.notificationChannels.length; ++i)
                                $root.google.monitoring.v3.NotificationChannel.encode(message.notificationChannels[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        if (message.totalSize != null && Object.hasOwnProperty.call(message, "totalSize"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.totalSize);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ListNotificationChannelsResponse message, length delimited. Does not implicitly {@link google.monitoring.v3.ListNotificationChannelsResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.ListNotificationChannelsResponse
                     * @static
                     * @param {google.monitoring.v3.IListNotificationChannelsResponse} message ListNotificationChannelsResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListNotificationChannelsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ListNotificationChannelsResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.ListNotificationChannelsResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.ListNotificationChannelsResponse} ListNotificationChannelsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListNotificationChannelsResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.ListNotificationChannelsResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 3: {
                                    if (!(message.notificationChannels && message.notificationChannels.length))
                                        message.notificationChannels = [];
                                    message.notificationChannels.push($root.google.monitoring.v3.NotificationChannel.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 2: {
                                    message.nextPageToken = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.totalSize = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ListNotificationChannelsResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.ListNotificationChannelsResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.ListNotificationChannelsResponse} ListNotificationChannelsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListNotificationChannelsResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ListNotificationChannelsResponse message.
                     * @function verify
                     * @memberof google.monitoring.v3.ListNotificationChannelsResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ListNotificationChannelsResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.notificationChannels != null && message.hasOwnProperty("notificationChannels")) {
                            if (!Array.isArray(message.notificationChannels))
                                return "notificationChannels: array expected";
                            for (var i = 0; i < message.notificationChannels.length; ++i) {
                                var error = $root.google.monitoring.v3.NotificationChannel.verify(message.notificationChannels[i]);
                                if (error)
                                    return "notificationChannels." + error;
                            }
                        }
                        if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                            if (!$util.isString(message.nextPageToken))
                                return "nextPageToken: string expected";
                        if (message.totalSize != null && message.hasOwnProperty("totalSize"))
                            if (!$util.isInteger(message.totalSize))
                                return "totalSize: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ListNotificationChannelsResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.ListNotificationChannelsResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.ListNotificationChannelsResponse} ListNotificationChannelsResponse
                     */
                    ListNotificationChannelsResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.ListNotificationChannelsResponse)
                            return object;
                        var message = new $root.google.monitoring.v3.ListNotificationChannelsResponse();
                        if (object.notificationChannels) {
                            if (!Array.isArray(object.notificationChannels))
                                throw TypeError(".google.monitoring.v3.ListNotificationChannelsResponse.notificationChannels: array expected");
                            message.notificationChannels = [];
                            for (var i = 0; i < object.notificationChannels.length; ++i) {
                                if (typeof object.notificationChannels[i] !== "object")
                                    throw TypeError(".google.monitoring.v3.ListNotificationChannelsResponse.notificationChannels: object expected");
                                message.notificationChannels[i] = $root.google.monitoring.v3.NotificationChannel.fromObject(object.notificationChannels[i]);
                            }
                        }
                        if (object.nextPageToken != null)
                            message.nextPageToken = String(object.nextPageToken);
                        if (object.totalSize != null)
                            message.totalSize = object.totalSize | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ListNotificationChannelsResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.ListNotificationChannelsResponse
                     * @static
                     * @param {google.monitoring.v3.ListNotificationChannelsResponse} message ListNotificationChannelsResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ListNotificationChannelsResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.notificationChannels = [];
                        if (options.defaults) {
                            object.nextPageToken = "";
                            object.totalSize = 0;
                        }
                        if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                            object.nextPageToken = message.nextPageToken;
                        if (message.notificationChannels && message.notificationChannels.length) {
                            object.notificationChannels = [];
                            for (var j = 0; j < message.notificationChannels.length; ++j)
                                object.notificationChannels[j] = $root.google.monitoring.v3.NotificationChannel.toObject(message.notificationChannels[j], options);
                        }
                        if (message.totalSize != null && message.hasOwnProperty("totalSize"))
                            object.totalSize = message.totalSize;
                        return object;
                    };
    
                    /**
                     * Converts this ListNotificationChannelsResponse to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.ListNotificationChannelsResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ListNotificationChannelsResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ListNotificationChannelsResponse
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.ListNotificationChannelsResponse
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ListNotificationChannelsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.ListNotificationChannelsResponse";
                    };
    
                    return ListNotificationChannelsResponse;
                })();
    
                v3.GetNotificationChannelRequest = (function() {
    
                    /**
                     * Properties of a GetNotificationChannelRequest.
                     * @memberof google.monitoring.v3
                     * @interface IGetNotificationChannelRequest
                     * @property {string|null} [name] GetNotificationChannelRequest name
                     */
    
                    /**
                     * Constructs a new GetNotificationChannelRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a GetNotificationChannelRequest.
                     * @implements IGetNotificationChannelRequest
                     * @constructor
                     * @param {google.monitoring.v3.IGetNotificationChannelRequest=} [properties] Properties to set
                     */
                    function GetNotificationChannelRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * GetNotificationChannelRequest name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.GetNotificationChannelRequest
                     * @instance
                     */
                    GetNotificationChannelRequest.prototype.name = "";
    
                    /**
                     * Creates a new GetNotificationChannelRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.GetNotificationChannelRequest
                     * @static
                     * @param {google.monitoring.v3.IGetNotificationChannelRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.GetNotificationChannelRequest} GetNotificationChannelRequest instance
                     */
                    GetNotificationChannelRequest.create = function create(properties) {
                        return new GetNotificationChannelRequest(properties);
                    };
    
                    /**
                     * Encodes the specified GetNotificationChannelRequest message. Does not implicitly {@link google.monitoring.v3.GetNotificationChannelRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.GetNotificationChannelRequest
                     * @static
                     * @param {google.monitoring.v3.IGetNotificationChannelRequest} message GetNotificationChannelRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetNotificationChannelRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified GetNotificationChannelRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.GetNotificationChannelRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.GetNotificationChannelRequest
                     * @static
                     * @param {google.monitoring.v3.IGetNotificationChannelRequest} message GetNotificationChannelRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetNotificationChannelRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a GetNotificationChannelRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.GetNotificationChannelRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.GetNotificationChannelRequest} GetNotificationChannelRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetNotificationChannelRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.GetNotificationChannelRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 3: {
                                    message.name = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a GetNotificationChannelRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.GetNotificationChannelRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.GetNotificationChannelRequest} GetNotificationChannelRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetNotificationChannelRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a GetNotificationChannelRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.GetNotificationChannelRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    GetNotificationChannelRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a GetNotificationChannelRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.GetNotificationChannelRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.GetNotificationChannelRequest} GetNotificationChannelRequest
                     */
                    GetNotificationChannelRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.GetNotificationChannelRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.GetNotificationChannelRequest();
                        if (object.name != null)
                            message.name = String(object.name);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a GetNotificationChannelRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.GetNotificationChannelRequest
                     * @static
                     * @param {google.monitoring.v3.GetNotificationChannelRequest} message GetNotificationChannelRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    GetNotificationChannelRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.name = "";
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this GetNotificationChannelRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.GetNotificationChannelRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    GetNotificationChannelRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for GetNotificationChannelRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.GetNotificationChannelRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    GetNotificationChannelRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.GetNotificationChannelRequest";
                    };
    
                    return GetNotificationChannelRequest;
                })();
    
                v3.UpdateNotificationChannelRequest = (function() {
    
                    /**
                     * Properties of an UpdateNotificationChannelRequest.
                     * @memberof google.monitoring.v3
                     * @interface IUpdateNotificationChannelRequest
                     * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateNotificationChannelRequest updateMask
                     * @property {google.monitoring.v3.INotificationChannel|null} [notificationChannel] UpdateNotificationChannelRequest notificationChannel
                     */
    
                    /**
                     * Constructs a new UpdateNotificationChannelRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents an UpdateNotificationChannelRequest.
                     * @implements IUpdateNotificationChannelRequest
                     * @constructor
                     * @param {google.monitoring.v3.IUpdateNotificationChannelRequest=} [properties] Properties to set
                     */
                    function UpdateNotificationChannelRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * UpdateNotificationChannelRequest updateMask.
                     * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                     * @memberof google.monitoring.v3.UpdateNotificationChannelRequest
                     * @instance
                     */
                    UpdateNotificationChannelRequest.prototype.updateMask = null;
    
                    /**
                     * UpdateNotificationChannelRequest notificationChannel.
                     * @member {google.monitoring.v3.INotificationChannel|null|undefined} notificationChannel
                     * @memberof google.monitoring.v3.UpdateNotificationChannelRequest
                     * @instance
                     */
                    UpdateNotificationChannelRequest.prototype.notificationChannel = null;
    
                    /**
                     * Creates a new UpdateNotificationChannelRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.UpdateNotificationChannelRequest
                     * @static
                     * @param {google.monitoring.v3.IUpdateNotificationChannelRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.UpdateNotificationChannelRequest} UpdateNotificationChannelRequest instance
                     */
                    UpdateNotificationChannelRequest.create = function create(properties) {
                        return new UpdateNotificationChannelRequest(properties);
                    };
    
                    /**
                     * Encodes the specified UpdateNotificationChannelRequest message. Does not implicitly {@link google.monitoring.v3.UpdateNotificationChannelRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.UpdateNotificationChannelRequest
                     * @static
                     * @param {google.monitoring.v3.IUpdateNotificationChannelRequest} message UpdateNotificationChannelRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UpdateNotificationChannelRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                            $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.notificationChannel != null && Object.hasOwnProperty.call(message, "notificationChannel"))
                            $root.google.monitoring.v3.NotificationChannel.encode(message.notificationChannel, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified UpdateNotificationChannelRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.UpdateNotificationChannelRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.UpdateNotificationChannelRequest
                     * @static
                     * @param {google.monitoring.v3.IUpdateNotificationChannelRequest} message UpdateNotificationChannelRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UpdateNotificationChannelRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an UpdateNotificationChannelRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.UpdateNotificationChannelRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.UpdateNotificationChannelRequest} UpdateNotificationChannelRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UpdateNotificationChannelRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.UpdateNotificationChannelRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 2: {
                                    message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                    break;
                                }
                            case 3: {
                                    message.notificationChannel = $root.google.monitoring.v3.NotificationChannel.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an UpdateNotificationChannelRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.UpdateNotificationChannelRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.UpdateNotificationChannelRequest} UpdateNotificationChannelRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UpdateNotificationChannelRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an UpdateNotificationChannelRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.UpdateNotificationChannelRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    UpdateNotificationChannelRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                            var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                            if (error)
                                return "updateMask." + error;
                        }
                        if (message.notificationChannel != null && message.hasOwnProperty("notificationChannel")) {
                            var error = $root.google.monitoring.v3.NotificationChannel.verify(message.notificationChannel);
                            if (error)
                                return "notificationChannel." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an UpdateNotificationChannelRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.UpdateNotificationChannelRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.UpdateNotificationChannelRequest} UpdateNotificationChannelRequest
                     */
                    UpdateNotificationChannelRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.UpdateNotificationChannelRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.UpdateNotificationChannelRequest();
                        if (object.updateMask != null) {
                            if (typeof object.updateMask !== "object")
                                throw TypeError(".google.monitoring.v3.UpdateNotificationChannelRequest.updateMask: object expected");
                            message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                        }
                        if (object.notificationChannel != null) {
                            if (typeof object.notificationChannel !== "object")
                                throw TypeError(".google.monitoring.v3.UpdateNotificationChannelRequest.notificationChannel: object expected");
                            message.notificationChannel = $root.google.monitoring.v3.NotificationChannel.fromObject(object.notificationChannel);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an UpdateNotificationChannelRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.UpdateNotificationChannelRequest
                     * @static
                     * @param {google.monitoring.v3.UpdateNotificationChannelRequest} message UpdateNotificationChannelRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    UpdateNotificationChannelRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.updateMask = null;
                            object.notificationChannel = null;
                        }
                        if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                            object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                        if (message.notificationChannel != null && message.hasOwnProperty("notificationChannel"))
                            object.notificationChannel = $root.google.monitoring.v3.NotificationChannel.toObject(message.notificationChannel, options);
                        return object;
                    };
    
                    /**
                     * Converts this UpdateNotificationChannelRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.UpdateNotificationChannelRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    UpdateNotificationChannelRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for UpdateNotificationChannelRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.UpdateNotificationChannelRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    UpdateNotificationChannelRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.UpdateNotificationChannelRequest";
                    };
    
                    return UpdateNotificationChannelRequest;
                })();
    
                v3.DeleteNotificationChannelRequest = (function() {
    
                    /**
                     * Properties of a DeleteNotificationChannelRequest.
                     * @memberof google.monitoring.v3
                     * @interface IDeleteNotificationChannelRequest
                     * @property {string|null} [name] DeleteNotificationChannelRequest name
                     * @property {boolean|null} [force] DeleteNotificationChannelRequest force
                     */
    
                    /**
                     * Constructs a new DeleteNotificationChannelRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a DeleteNotificationChannelRequest.
                     * @implements IDeleteNotificationChannelRequest
                     * @constructor
                     * @param {google.monitoring.v3.IDeleteNotificationChannelRequest=} [properties] Properties to set
                     */
                    function DeleteNotificationChannelRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * DeleteNotificationChannelRequest name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.DeleteNotificationChannelRequest
                     * @instance
                     */
                    DeleteNotificationChannelRequest.prototype.name = "";
    
                    /**
                     * DeleteNotificationChannelRequest force.
                     * @member {boolean} force
                     * @memberof google.monitoring.v3.DeleteNotificationChannelRequest
                     * @instance
                     */
                    DeleteNotificationChannelRequest.prototype.force = false;
    
                    /**
                     * Creates a new DeleteNotificationChannelRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.DeleteNotificationChannelRequest
                     * @static
                     * @param {google.monitoring.v3.IDeleteNotificationChannelRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.DeleteNotificationChannelRequest} DeleteNotificationChannelRequest instance
                     */
                    DeleteNotificationChannelRequest.create = function create(properties) {
                        return new DeleteNotificationChannelRequest(properties);
                    };
    
                    /**
                     * Encodes the specified DeleteNotificationChannelRequest message. Does not implicitly {@link google.monitoring.v3.DeleteNotificationChannelRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.DeleteNotificationChannelRequest
                     * @static
                     * @param {google.monitoring.v3.IDeleteNotificationChannelRequest} message DeleteNotificationChannelRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DeleteNotificationChannelRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                        if (message.force != null && Object.hasOwnProperty.call(message, "force"))
                            writer.uint32(/* id 5, wireType 0 =*/40).bool(message.force);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified DeleteNotificationChannelRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.DeleteNotificationChannelRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.DeleteNotificationChannelRequest
                     * @static
                     * @param {google.monitoring.v3.IDeleteNotificationChannelRequest} message DeleteNotificationChannelRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DeleteNotificationChannelRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a DeleteNotificationChannelRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.DeleteNotificationChannelRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.DeleteNotificationChannelRequest} DeleteNotificationChannelRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DeleteNotificationChannelRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.DeleteNotificationChannelRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 3: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 5: {
                                    message.force = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a DeleteNotificationChannelRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.DeleteNotificationChannelRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.DeleteNotificationChannelRequest} DeleteNotificationChannelRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DeleteNotificationChannelRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a DeleteNotificationChannelRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.DeleteNotificationChannelRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    DeleteNotificationChannelRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.force != null && message.hasOwnProperty("force"))
                            if (typeof message.force !== "boolean")
                                return "force: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a DeleteNotificationChannelRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.DeleteNotificationChannelRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.DeleteNotificationChannelRequest} DeleteNotificationChannelRequest
                     */
                    DeleteNotificationChannelRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.DeleteNotificationChannelRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.DeleteNotificationChannelRequest();
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.force != null)
                            message.force = Boolean(object.force);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a DeleteNotificationChannelRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.DeleteNotificationChannelRequest
                     * @static
                     * @param {google.monitoring.v3.DeleteNotificationChannelRequest} message DeleteNotificationChannelRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    DeleteNotificationChannelRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.name = "";
                            object.force = false;
                        }
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        if (message.force != null && message.hasOwnProperty("force"))
                            object.force = message.force;
                        return object;
                    };
    
                    /**
                     * Converts this DeleteNotificationChannelRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.DeleteNotificationChannelRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    DeleteNotificationChannelRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for DeleteNotificationChannelRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.DeleteNotificationChannelRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    DeleteNotificationChannelRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.DeleteNotificationChannelRequest";
                    };
    
                    return DeleteNotificationChannelRequest;
                })();
    
                v3.SendNotificationChannelVerificationCodeRequest = (function() {
    
                    /**
                     * Properties of a SendNotificationChannelVerificationCodeRequest.
                     * @memberof google.monitoring.v3
                     * @interface ISendNotificationChannelVerificationCodeRequest
                     * @property {string|null} [name] SendNotificationChannelVerificationCodeRequest name
                     */
    
                    /**
                     * Constructs a new SendNotificationChannelVerificationCodeRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a SendNotificationChannelVerificationCodeRequest.
                     * @implements ISendNotificationChannelVerificationCodeRequest
                     * @constructor
                     * @param {google.monitoring.v3.ISendNotificationChannelVerificationCodeRequest=} [properties] Properties to set
                     */
                    function SendNotificationChannelVerificationCodeRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * SendNotificationChannelVerificationCodeRequest name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.SendNotificationChannelVerificationCodeRequest
                     * @instance
                     */
                    SendNotificationChannelVerificationCodeRequest.prototype.name = "";
    
                    /**
                     * Creates a new SendNotificationChannelVerificationCodeRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.SendNotificationChannelVerificationCodeRequest
                     * @static
                     * @param {google.monitoring.v3.ISendNotificationChannelVerificationCodeRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.SendNotificationChannelVerificationCodeRequest} SendNotificationChannelVerificationCodeRequest instance
                     */
                    SendNotificationChannelVerificationCodeRequest.create = function create(properties) {
                        return new SendNotificationChannelVerificationCodeRequest(properties);
                    };
    
                    /**
                     * Encodes the specified SendNotificationChannelVerificationCodeRequest message. Does not implicitly {@link google.monitoring.v3.SendNotificationChannelVerificationCodeRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.SendNotificationChannelVerificationCodeRequest
                     * @static
                     * @param {google.monitoring.v3.ISendNotificationChannelVerificationCodeRequest} message SendNotificationChannelVerificationCodeRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SendNotificationChannelVerificationCodeRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified SendNotificationChannelVerificationCodeRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.SendNotificationChannelVerificationCodeRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.SendNotificationChannelVerificationCodeRequest
                     * @static
                     * @param {google.monitoring.v3.ISendNotificationChannelVerificationCodeRequest} message SendNotificationChannelVerificationCodeRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SendNotificationChannelVerificationCodeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a SendNotificationChannelVerificationCodeRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.SendNotificationChannelVerificationCodeRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.SendNotificationChannelVerificationCodeRequest} SendNotificationChannelVerificationCodeRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SendNotificationChannelVerificationCodeRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.SendNotificationChannelVerificationCodeRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.name = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a SendNotificationChannelVerificationCodeRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.SendNotificationChannelVerificationCodeRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.SendNotificationChannelVerificationCodeRequest} SendNotificationChannelVerificationCodeRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SendNotificationChannelVerificationCodeRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a SendNotificationChannelVerificationCodeRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.SendNotificationChannelVerificationCodeRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    SendNotificationChannelVerificationCodeRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a SendNotificationChannelVerificationCodeRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.SendNotificationChannelVerificationCodeRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.SendNotificationChannelVerificationCodeRequest} SendNotificationChannelVerificationCodeRequest
                     */
                    SendNotificationChannelVerificationCodeRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.SendNotificationChannelVerificationCodeRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.SendNotificationChannelVerificationCodeRequest();
                        if (object.name != null)
                            message.name = String(object.name);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a SendNotificationChannelVerificationCodeRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.SendNotificationChannelVerificationCodeRequest
                     * @static
                     * @param {google.monitoring.v3.SendNotificationChannelVerificationCodeRequest} message SendNotificationChannelVerificationCodeRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    SendNotificationChannelVerificationCodeRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.name = "";
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this SendNotificationChannelVerificationCodeRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.SendNotificationChannelVerificationCodeRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    SendNotificationChannelVerificationCodeRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for SendNotificationChannelVerificationCodeRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.SendNotificationChannelVerificationCodeRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    SendNotificationChannelVerificationCodeRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.SendNotificationChannelVerificationCodeRequest";
                    };
    
                    return SendNotificationChannelVerificationCodeRequest;
                })();
    
                v3.GetNotificationChannelVerificationCodeRequest = (function() {
    
                    /**
                     * Properties of a GetNotificationChannelVerificationCodeRequest.
                     * @memberof google.monitoring.v3
                     * @interface IGetNotificationChannelVerificationCodeRequest
                     * @property {string|null} [name] GetNotificationChannelVerificationCodeRequest name
                     * @property {google.protobuf.ITimestamp|null} [expireTime] GetNotificationChannelVerificationCodeRequest expireTime
                     */
    
                    /**
                     * Constructs a new GetNotificationChannelVerificationCodeRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a GetNotificationChannelVerificationCodeRequest.
                     * @implements IGetNotificationChannelVerificationCodeRequest
                     * @constructor
                     * @param {google.monitoring.v3.IGetNotificationChannelVerificationCodeRequest=} [properties] Properties to set
                     */
                    function GetNotificationChannelVerificationCodeRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * GetNotificationChannelVerificationCodeRequest name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.GetNotificationChannelVerificationCodeRequest
                     * @instance
                     */
                    GetNotificationChannelVerificationCodeRequest.prototype.name = "";
    
                    /**
                     * GetNotificationChannelVerificationCodeRequest expireTime.
                     * @member {google.protobuf.ITimestamp|null|undefined} expireTime
                     * @memberof google.monitoring.v3.GetNotificationChannelVerificationCodeRequest
                     * @instance
                     */
                    GetNotificationChannelVerificationCodeRequest.prototype.expireTime = null;
    
                    /**
                     * Creates a new GetNotificationChannelVerificationCodeRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.GetNotificationChannelVerificationCodeRequest
                     * @static
                     * @param {google.monitoring.v3.IGetNotificationChannelVerificationCodeRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.GetNotificationChannelVerificationCodeRequest} GetNotificationChannelVerificationCodeRequest instance
                     */
                    GetNotificationChannelVerificationCodeRequest.create = function create(properties) {
                        return new GetNotificationChannelVerificationCodeRequest(properties);
                    };
    
                    /**
                     * Encodes the specified GetNotificationChannelVerificationCodeRequest message. Does not implicitly {@link google.monitoring.v3.GetNotificationChannelVerificationCodeRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.GetNotificationChannelVerificationCodeRequest
                     * @static
                     * @param {google.monitoring.v3.IGetNotificationChannelVerificationCodeRequest} message GetNotificationChannelVerificationCodeRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetNotificationChannelVerificationCodeRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                        if (message.expireTime != null && Object.hasOwnProperty.call(message, "expireTime"))
                            $root.google.protobuf.Timestamp.encode(message.expireTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified GetNotificationChannelVerificationCodeRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.GetNotificationChannelVerificationCodeRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.GetNotificationChannelVerificationCodeRequest
                     * @static
                     * @param {google.monitoring.v3.IGetNotificationChannelVerificationCodeRequest} message GetNotificationChannelVerificationCodeRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetNotificationChannelVerificationCodeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a GetNotificationChannelVerificationCodeRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.GetNotificationChannelVerificationCodeRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.GetNotificationChannelVerificationCodeRequest} GetNotificationChannelVerificationCodeRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetNotificationChannelVerificationCodeRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.GetNotificationChannelVerificationCodeRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.expireTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a GetNotificationChannelVerificationCodeRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.GetNotificationChannelVerificationCodeRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.GetNotificationChannelVerificationCodeRequest} GetNotificationChannelVerificationCodeRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetNotificationChannelVerificationCodeRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a GetNotificationChannelVerificationCodeRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.GetNotificationChannelVerificationCodeRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    GetNotificationChannelVerificationCodeRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.expireTime != null && message.hasOwnProperty("expireTime")) {
                            var error = $root.google.protobuf.Timestamp.verify(message.expireTime);
                            if (error)
                                return "expireTime." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a GetNotificationChannelVerificationCodeRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.GetNotificationChannelVerificationCodeRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.GetNotificationChannelVerificationCodeRequest} GetNotificationChannelVerificationCodeRequest
                     */
                    GetNotificationChannelVerificationCodeRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.GetNotificationChannelVerificationCodeRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.GetNotificationChannelVerificationCodeRequest();
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.expireTime != null) {
                            if (typeof object.expireTime !== "object")
                                throw TypeError(".google.monitoring.v3.GetNotificationChannelVerificationCodeRequest.expireTime: object expected");
                            message.expireTime = $root.google.protobuf.Timestamp.fromObject(object.expireTime);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a GetNotificationChannelVerificationCodeRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.GetNotificationChannelVerificationCodeRequest
                     * @static
                     * @param {google.monitoring.v3.GetNotificationChannelVerificationCodeRequest} message GetNotificationChannelVerificationCodeRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    GetNotificationChannelVerificationCodeRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.name = "";
                            object.expireTime = null;
                        }
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        if (message.expireTime != null && message.hasOwnProperty("expireTime"))
                            object.expireTime = $root.google.protobuf.Timestamp.toObject(message.expireTime, options);
                        return object;
                    };
    
                    /**
                     * Converts this GetNotificationChannelVerificationCodeRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.GetNotificationChannelVerificationCodeRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    GetNotificationChannelVerificationCodeRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for GetNotificationChannelVerificationCodeRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.GetNotificationChannelVerificationCodeRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    GetNotificationChannelVerificationCodeRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.GetNotificationChannelVerificationCodeRequest";
                    };
    
                    return GetNotificationChannelVerificationCodeRequest;
                })();
    
                v3.GetNotificationChannelVerificationCodeResponse = (function() {
    
                    /**
                     * Properties of a GetNotificationChannelVerificationCodeResponse.
                     * @memberof google.monitoring.v3
                     * @interface IGetNotificationChannelVerificationCodeResponse
                     * @property {string|null} [code] GetNotificationChannelVerificationCodeResponse code
                     * @property {google.protobuf.ITimestamp|null} [expireTime] GetNotificationChannelVerificationCodeResponse expireTime
                     */
    
                    /**
                     * Constructs a new GetNotificationChannelVerificationCodeResponse.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a GetNotificationChannelVerificationCodeResponse.
                     * @implements IGetNotificationChannelVerificationCodeResponse
                     * @constructor
                     * @param {google.monitoring.v3.IGetNotificationChannelVerificationCodeResponse=} [properties] Properties to set
                     */
                    function GetNotificationChannelVerificationCodeResponse(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * GetNotificationChannelVerificationCodeResponse code.
                     * @member {string} code
                     * @memberof google.monitoring.v3.GetNotificationChannelVerificationCodeResponse
                     * @instance
                     */
                    GetNotificationChannelVerificationCodeResponse.prototype.code = "";
    
                    /**
                     * GetNotificationChannelVerificationCodeResponse expireTime.
                     * @member {google.protobuf.ITimestamp|null|undefined} expireTime
                     * @memberof google.monitoring.v3.GetNotificationChannelVerificationCodeResponse
                     * @instance
                     */
                    GetNotificationChannelVerificationCodeResponse.prototype.expireTime = null;
    
                    /**
                     * Creates a new GetNotificationChannelVerificationCodeResponse instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.GetNotificationChannelVerificationCodeResponse
                     * @static
                     * @param {google.monitoring.v3.IGetNotificationChannelVerificationCodeResponse=} [properties] Properties to set
                     * @returns {google.monitoring.v3.GetNotificationChannelVerificationCodeResponse} GetNotificationChannelVerificationCodeResponse instance
                     */
                    GetNotificationChannelVerificationCodeResponse.create = function create(properties) {
                        return new GetNotificationChannelVerificationCodeResponse(properties);
                    };
    
                    /**
                     * Encodes the specified GetNotificationChannelVerificationCodeResponse message. Does not implicitly {@link google.monitoring.v3.GetNotificationChannelVerificationCodeResponse.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.GetNotificationChannelVerificationCodeResponse
                     * @static
                     * @param {google.monitoring.v3.IGetNotificationChannelVerificationCodeResponse} message GetNotificationChannelVerificationCodeResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetNotificationChannelVerificationCodeResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.code);
                        if (message.expireTime != null && Object.hasOwnProperty.call(message, "expireTime"))
                            $root.google.protobuf.Timestamp.encode(message.expireTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified GetNotificationChannelVerificationCodeResponse message, length delimited. Does not implicitly {@link google.monitoring.v3.GetNotificationChannelVerificationCodeResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.GetNotificationChannelVerificationCodeResponse
                     * @static
                     * @param {google.monitoring.v3.IGetNotificationChannelVerificationCodeResponse} message GetNotificationChannelVerificationCodeResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetNotificationChannelVerificationCodeResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a GetNotificationChannelVerificationCodeResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.GetNotificationChannelVerificationCodeResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.GetNotificationChannelVerificationCodeResponse} GetNotificationChannelVerificationCodeResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetNotificationChannelVerificationCodeResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.GetNotificationChannelVerificationCodeResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.code = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.expireTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a GetNotificationChannelVerificationCodeResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.GetNotificationChannelVerificationCodeResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.GetNotificationChannelVerificationCodeResponse} GetNotificationChannelVerificationCodeResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetNotificationChannelVerificationCodeResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a GetNotificationChannelVerificationCodeResponse message.
                     * @function verify
                     * @memberof google.monitoring.v3.GetNotificationChannelVerificationCodeResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    GetNotificationChannelVerificationCodeResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.code != null && message.hasOwnProperty("code"))
                            if (!$util.isString(message.code))
                                return "code: string expected";
                        if (message.expireTime != null && message.hasOwnProperty("expireTime")) {
                            var error = $root.google.protobuf.Timestamp.verify(message.expireTime);
                            if (error)
                                return "expireTime." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a GetNotificationChannelVerificationCodeResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.GetNotificationChannelVerificationCodeResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.GetNotificationChannelVerificationCodeResponse} GetNotificationChannelVerificationCodeResponse
                     */
                    GetNotificationChannelVerificationCodeResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.GetNotificationChannelVerificationCodeResponse)
                            return object;
                        var message = new $root.google.monitoring.v3.GetNotificationChannelVerificationCodeResponse();
                        if (object.code != null)
                            message.code = String(object.code);
                        if (object.expireTime != null) {
                            if (typeof object.expireTime !== "object")
                                throw TypeError(".google.monitoring.v3.GetNotificationChannelVerificationCodeResponse.expireTime: object expected");
                            message.expireTime = $root.google.protobuf.Timestamp.fromObject(object.expireTime);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a GetNotificationChannelVerificationCodeResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.GetNotificationChannelVerificationCodeResponse
                     * @static
                     * @param {google.monitoring.v3.GetNotificationChannelVerificationCodeResponse} message GetNotificationChannelVerificationCodeResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    GetNotificationChannelVerificationCodeResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.code = "";
                            object.expireTime = null;
                        }
                        if (message.code != null && message.hasOwnProperty("code"))
                            object.code = message.code;
                        if (message.expireTime != null && message.hasOwnProperty("expireTime"))
                            object.expireTime = $root.google.protobuf.Timestamp.toObject(message.expireTime, options);
                        return object;
                    };
    
                    /**
                     * Converts this GetNotificationChannelVerificationCodeResponse to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.GetNotificationChannelVerificationCodeResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    GetNotificationChannelVerificationCodeResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for GetNotificationChannelVerificationCodeResponse
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.GetNotificationChannelVerificationCodeResponse
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    GetNotificationChannelVerificationCodeResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.GetNotificationChannelVerificationCodeResponse";
                    };
    
                    return GetNotificationChannelVerificationCodeResponse;
                })();
    
                v3.VerifyNotificationChannelRequest = (function() {
    
                    /**
                     * Properties of a VerifyNotificationChannelRequest.
                     * @memberof google.monitoring.v3
                     * @interface IVerifyNotificationChannelRequest
                     * @property {string|null} [name] VerifyNotificationChannelRequest name
                     * @property {string|null} [code] VerifyNotificationChannelRequest code
                     */
    
                    /**
                     * Constructs a new VerifyNotificationChannelRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a VerifyNotificationChannelRequest.
                     * @implements IVerifyNotificationChannelRequest
                     * @constructor
                     * @param {google.monitoring.v3.IVerifyNotificationChannelRequest=} [properties] Properties to set
                     */
                    function VerifyNotificationChannelRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * VerifyNotificationChannelRequest name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.VerifyNotificationChannelRequest
                     * @instance
                     */
                    VerifyNotificationChannelRequest.prototype.name = "";
    
                    /**
                     * VerifyNotificationChannelRequest code.
                     * @member {string} code
                     * @memberof google.monitoring.v3.VerifyNotificationChannelRequest
                     * @instance
                     */
                    VerifyNotificationChannelRequest.prototype.code = "";
    
                    /**
                     * Creates a new VerifyNotificationChannelRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.VerifyNotificationChannelRequest
                     * @static
                     * @param {google.monitoring.v3.IVerifyNotificationChannelRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.VerifyNotificationChannelRequest} VerifyNotificationChannelRequest instance
                     */
                    VerifyNotificationChannelRequest.create = function create(properties) {
                        return new VerifyNotificationChannelRequest(properties);
                    };
    
                    /**
                     * Encodes the specified VerifyNotificationChannelRequest message. Does not implicitly {@link google.monitoring.v3.VerifyNotificationChannelRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.VerifyNotificationChannelRequest
                     * @static
                     * @param {google.monitoring.v3.IVerifyNotificationChannelRequest} message VerifyNotificationChannelRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    VerifyNotificationChannelRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                        if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.code);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified VerifyNotificationChannelRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.VerifyNotificationChannelRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.VerifyNotificationChannelRequest
                     * @static
                     * @param {google.monitoring.v3.IVerifyNotificationChannelRequest} message VerifyNotificationChannelRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    VerifyNotificationChannelRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a VerifyNotificationChannelRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.VerifyNotificationChannelRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.VerifyNotificationChannelRequest} VerifyNotificationChannelRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    VerifyNotificationChannelRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.VerifyNotificationChannelRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.code = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a VerifyNotificationChannelRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.VerifyNotificationChannelRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.VerifyNotificationChannelRequest} VerifyNotificationChannelRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    VerifyNotificationChannelRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a VerifyNotificationChannelRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.VerifyNotificationChannelRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    VerifyNotificationChannelRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.code != null && message.hasOwnProperty("code"))
                            if (!$util.isString(message.code))
                                return "code: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a VerifyNotificationChannelRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.VerifyNotificationChannelRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.VerifyNotificationChannelRequest} VerifyNotificationChannelRequest
                     */
                    VerifyNotificationChannelRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.VerifyNotificationChannelRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.VerifyNotificationChannelRequest();
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.code != null)
                            message.code = String(object.code);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a VerifyNotificationChannelRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.VerifyNotificationChannelRequest
                     * @static
                     * @param {google.monitoring.v3.VerifyNotificationChannelRequest} message VerifyNotificationChannelRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    VerifyNotificationChannelRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.name = "";
                            object.code = "";
                        }
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        if (message.code != null && message.hasOwnProperty("code"))
                            object.code = message.code;
                        return object;
                    };
    
                    /**
                     * Converts this VerifyNotificationChannelRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.VerifyNotificationChannelRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    VerifyNotificationChannelRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for VerifyNotificationChannelRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.VerifyNotificationChannelRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    VerifyNotificationChannelRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.VerifyNotificationChannelRequest";
                    };
    
                    return VerifyNotificationChannelRequest;
                })();
    
                v3.QueryService = (function() {
    
                    /**
                     * Constructs a new QueryService service.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a QueryService
                     * @extends $protobuf.rpc.Service
                     * @constructor
                     * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                     * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                     * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                     */
                    function QueryService(rpcImpl, requestDelimited, responseDelimited) {
                        $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                    }
    
                    (QueryService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = QueryService;
    
                    /**
                     * Creates new QueryService service using the specified rpc implementation.
                     * @function create
                     * @memberof google.monitoring.v3.QueryService
                     * @static
                     * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                     * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                     * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                     * @returns {QueryService} RPC service. Useful where requests and/or responses are streamed.
                     */
                    QueryService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                        return new this(rpcImpl, requestDelimited, responseDelimited);
                    };
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.QueryService|queryTimeSeries}.
                     * @memberof google.monitoring.v3.QueryService
                     * @typedef QueryTimeSeriesCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.monitoring.v3.QueryTimeSeriesResponse} [response] QueryTimeSeriesResponse
                     */
    
                    /**
                     * Calls QueryTimeSeries.
                     * @function queryTimeSeries
                     * @memberof google.monitoring.v3.QueryService
                     * @instance
                     * @param {google.monitoring.v3.IQueryTimeSeriesRequest} request QueryTimeSeriesRequest message or plain object
                     * @param {google.monitoring.v3.QueryService.QueryTimeSeriesCallback} callback Node-style callback called with the error, if any, and QueryTimeSeriesResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(QueryService.prototype.queryTimeSeries = function queryTimeSeries(request, callback) {
                        return this.rpcCall(queryTimeSeries, $root.google.monitoring.v3.QueryTimeSeriesRequest, $root.google.monitoring.v3.QueryTimeSeriesResponse, request, callback);
                    }, "name", { value: "QueryTimeSeries" });
    
                    /**
                     * Calls QueryTimeSeries.
                     * @function queryTimeSeries
                     * @memberof google.monitoring.v3.QueryService
                     * @instance
                     * @param {google.monitoring.v3.IQueryTimeSeriesRequest} request QueryTimeSeriesRequest message or plain object
                     * @returns {Promise<google.monitoring.v3.QueryTimeSeriesResponse>} Promise
                     * @variation 2
                     */
    
                    return QueryService;
                })();
    
                v3.Service = (function() {
    
                    /**
                     * Properties of a Service.
                     * @memberof google.monitoring.v3
                     * @interface IService
                     * @property {string|null} [name] Service name
                     * @property {string|null} [displayName] Service displayName
                     * @property {google.monitoring.v3.Service.ICustom|null} [custom] Service custom
                     * @property {google.monitoring.v3.Service.IAppEngine|null} [appEngine] Service appEngine
                     * @property {google.monitoring.v3.Service.ICloudEndpoints|null} [cloudEndpoints] Service cloudEndpoints
                     * @property {google.monitoring.v3.Service.IClusterIstio|null} [clusterIstio] Service clusterIstio
                     * @property {google.monitoring.v3.Service.IMeshIstio|null} [meshIstio] Service meshIstio
                     * @property {google.monitoring.v3.Service.IIstioCanonicalService|null} [istioCanonicalService] Service istioCanonicalService
                     * @property {google.monitoring.v3.Service.ITelemetry|null} [telemetry] Service telemetry
                     */
    
                    /**
                     * Constructs a new Service.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a Service.
                     * @implements IService
                     * @constructor
                     * @param {google.monitoring.v3.IService=} [properties] Properties to set
                     */
                    function Service(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Service name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.Service
                     * @instance
                     */
                    Service.prototype.name = "";
    
                    /**
                     * Service displayName.
                     * @member {string} displayName
                     * @memberof google.monitoring.v3.Service
                     * @instance
                     */
                    Service.prototype.displayName = "";
    
                    /**
                     * Service custom.
                     * @member {google.monitoring.v3.Service.ICustom|null|undefined} custom
                     * @memberof google.monitoring.v3.Service
                     * @instance
                     */
                    Service.prototype.custom = null;
    
                    /**
                     * Service appEngine.
                     * @member {google.monitoring.v3.Service.IAppEngine|null|undefined} appEngine
                     * @memberof google.monitoring.v3.Service
                     * @instance
                     */
                    Service.prototype.appEngine = null;
    
                    /**
                     * Service cloudEndpoints.
                     * @member {google.monitoring.v3.Service.ICloudEndpoints|null|undefined} cloudEndpoints
                     * @memberof google.monitoring.v3.Service
                     * @instance
                     */
                    Service.prototype.cloudEndpoints = null;
    
                    /**
                     * Service clusterIstio.
                     * @member {google.monitoring.v3.Service.IClusterIstio|null|undefined} clusterIstio
                     * @memberof google.monitoring.v3.Service
                     * @instance
                     */
                    Service.prototype.clusterIstio = null;
    
                    /**
                     * Service meshIstio.
                     * @member {google.monitoring.v3.Service.IMeshIstio|null|undefined} meshIstio
                     * @memberof google.monitoring.v3.Service
                     * @instance
                     */
                    Service.prototype.meshIstio = null;
    
                    /**
                     * Service istioCanonicalService.
                     * @member {google.monitoring.v3.Service.IIstioCanonicalService|null|undefined} istioCanonicalService
                     * @memberof google.monitoring.v3.Service
                     * @instance
                     */
                    Service.prototype.istioCanonicalService = null;
    
                    /**
                     * Service telemetry.
                     * @member {google.monitoring.v3.Service.ITelemetry|null|undefined} telemetry
                     * @memberof google.monitoring.v3.Service
                     * @instance
                     */
                    Service.prototype.telemetry = null;
    
                    // OneOf field names bound to virtual getters and setters
                    var $oneOfFields;
    
                    /**
                     * Service identifier.
                     * @member {"custom"|"appEngine"|"cloudEndpoints"|"clusterIstio"|"meshIstio"|"istioCanonicalService"|undefined} identifier
                     * @memberof google.monitoring.v3.Service
                     * @instance
                     */
                    Object.defineProperty(Service.prototype, "identifier", {
                        get: $util.oneOfGetter($oneOfFields = ["custom", "appEngine", "cloudEndpoints", "clusterIstio", "meshIstio", "istioCanonicalService"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });
    
                    /**
                     * Creates a new Service instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.Service
                     * @static
                     * @param {google.monitoring.v3.IService=} [properties] Properties to set
                     * @returns {google.monitoring.v3.Service} Service instance
                     */
                    Service.create = function create(properties) {
                        return new Service(properties);
                    };
    
                    /**
                     * Encodes the specified Service message. Does not implicitly {@link google.monitoring.v3.Service.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.Service
                     * @static
                     * @param {google.monitoring.v3.IService} message Service message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Service.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                        if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.displayName);
                        if (message.custom != null && Object.hasOwnProperty.call(message, "custom"))
                            $root.google.monitoring.v3.Service.Custom.encode(message.custom, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                        if (message.appEngine != null && Object.hasOwnProperty.call(message, "appEngine"))
                            $root.google.monitoring.v3.Service.AppEngine.encode(message.appEngine, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                        if (message.cloudEndpoints != null && Object.hasOwnProperty.call(message, "cloudEndpoints"))
                            $root.google.monitoring.v3.Service.CloudEndpoints.encode(message.cloudEndpoints, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                        if (message.clusterIstio != null && Object.hasOwnProperty.call(message, "clusterIstio"))
                            $root.google.monitoring.v3.Service.ClusterIstio.encode(message.clusterIstio, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                        if (message.meshIstio != null && Object.hasOwnProperty.call(message, "meshIstio"))
                            $root.google.monitoring.v3.Service.MeshIstio.encode(message.meshIstio, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                        if (message.istioCanonicalService != null && Object.hasOwnProperty.call(message, "istioCanonicalService"))
                            $root.google.monitoring.v3.Service.IstioCanonicalService.encode(message.istioCanonicalService, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                        if (message.telemetry != null && Object.hasOwnProperty.call(message, "telemetry"))
                            $root.google.monitoring.v3.Service.Telemetry.encode(message.telemetry, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Service message, length delimited. Does not implicitly {@link google.monitoring.v3.Service.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.Service
                     * @static
                     * @param {google.monitoring.v3.IService} message Service message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Service.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Service message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.Service
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.Service} Service
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Service.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.Service();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.displayName = reader.string();
                                    break;
                                }
                            case 6: {
                                    message.custom = $root.google.monitoring.v3.Service.Custom.decode(reader, reader.uint32());
                                    break;
                                }
                            case 7: {
                                    message.appEngine = $root.google.monitoring.v3.Service.AppEngine.decode(reader, reader.uint32());
                                    break;
                                }
                            case 8: {
                                    message.cloudEndpoints = $root.google.monitoring.v3.Service.CloudEndpoints.decode(reader, reader.uint32());
                                    break;
                                }
                            case 9: {
                                    message.clusterIstio = $root.google.monitoring.v3.Service.ClusterIstio.decode(reader, reader.uint32());
                                    break;
                                }
                            case 10: {
                                    message.meshIstio = $root.google.monitoring.v3.Service.MeshIstio.decode(reader, reader.uint32());
                                    break;
                                }
                            case 11: {
                                    message.istioCanonicalService = $root.google.monitoring.v3.Service.IstioCanonicalService.decode(reader, reader.uint32());
                                    break;
                                }
                            case 13: {
                                    message.telemetry = $root.google.monitoring.v3.Service.Telemetry.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Service message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.Service
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.Service} Service
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Service.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Service message.
                     * @function verify
                     * @memberof google.monitoring.v3.Service
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Service.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        var properties = {};
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.displayName != null && message.hasOwnProperty("displayName"))
                            if (!$util.isString(message.displayName))
                                return "displayName: string expected";
                        if (message.custom != null && message.hasOwnProperty("custom")) {
                            properties.identifier = 1;
                            {
                                var error = $root.google.monitoring.v3.Service.Custom.verify(message.custom);
                                if (error)
                                    return "custom." + error;
                            }
                        }
                        if (message.appEngine != null && message.hasOwnProperty("appEngine")) {
                            if (properties.identifier === 1)
                                return "identifier: multiple values";
                            properties.identifier = 1;
                            {
                                var error = $root.google.monitoring.v3.Service.AppEngine.verify(message.appEngine);
                                if (error)
                                    return "appEngine." + error;
                            }
                        }
                        if (message.cloudEndpoints != null && message.hasOwnProperty("cloudEndpoints")) {
                            if (properties.identifier === 1)
                                return "identifier: multiple values";
                            properties.identifier = 1;
                            {
                                var error = $root.google.monitoring.v3.Service.CloudEndpoints.verify(message.cloudEndpoints);
                                if (error)
                                    return "cloudEndpoints." + error;
                            }
                        }
                        if (message.clusterIstio != null && message.hasOwnProperty("clusterIstio")) {
                            if (properties.identifier === 1)
                                return "identifier: multiple values";
                            properties.identifier = 1;
                            {
                                var error = $root.google.monitoring.v3.Service.ClusterIstio.verify(message.clusterIstio);
                                if (error)
                                    return "clusterIstio." + error;
                            }
                        }
                        if (message.meshIstio != null && message.hasOwnProperty("meshIstio")) {
                            if (properties.identifier === 1)
                                return "identifier: multiple values";
                            properties.identifier = 1;
                            {
                                var error = $root.google.monitoring.v3.Service.MeshIstio.verify(message.meshIstio);
                                if (error)
                                    return "meshIstio." + error;
                            }
                        }
                        if (message.istioCanonicalService != null && message.hasOwnProperty("istioCanonicalService")) {
                            if (properties.identifier === 1)
                                return "identifier: multiple values";
                            properties.identifier = 1;
                            {
                                var error = $root.google.monitoring.v3.Service.IstioCanonicalService.verify(message.istioCanonicalService);
                                if (error)
                                    return "istioCanonicalService." + error;
                            }
                        }
                        if (message.telemetry != null && message.hasOwnProperty("telemetry")) {
                            var error = $root.google.monitoring.v3.Service.Telemetry.verify(message.telemetry);
                            if (error)
                                return "telemetry." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Service message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.Service
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.Service} Service
                     */
                    Service.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.Service)
                            return object;
                        var message = new $root.google.monitoring.v3.Service();
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.displayName != null)
                            message.displayName = String(object.displayName);
                        if (object.custom != null) {
                            if (typeof object.custom !== "object")
                                throw TypeError(".google.monitoring.v3.Service.custom: object expected");
                            message.custom = $root.google.monitoring.v3.Service.Custom.fromObject(object.custom);
                        }
                        if (object.appEngine != null) {
                            if (typeof object.appEngine !== "object")
                                throw TypeError(".google.monitoring.v3.Service.appEngine: object expected");
                            message.appEngine = $root.google.monitoring.v3.Service.AppEngine.fromObject(object.appEngine);
                        }
                        if (object.cloudEndpoints != null) {
                            if (typeof object.cloudEndpoints !== "object")
                                throw TypeError(".google.monitoring.v3.Service.cloudEndpoints: object expected");
                            message.cloudEndpoints = $root.google.monitoring.v3.Service.CloudEndpoints.fromObject(object.cloudEndpoints);
                        }
                        if (object.clusterIstio != null) {
                            if (typeof object.clusterIstio !== "object")
                                throw TypeError(".google.monitoring.v3.Service.clusterIstio: object expected");
                            message.clusterIstio = $root.google.monitoring.v3.Service.ClusterIstio.fromObject(object.clusterIstio);
                        }
                        if (object.meshIstio != null) {
                            if (typeof object.meshIstio !== "object")
                                throw TypeError(".google.monitoring.v3.Service.meshIstio: object expected");
                            message.meshIstio = $root.google.monitoring.v3.Service.MeshIstio.fromObject(object.meshIstio);
                        }
                        if (object.istioCanonicalService != null) {
                            if (typeof object.istioCanonicalService !== "object")
                                throw TypeError(".google.monitoring.v3.Service.istioCanonicalService: object expected");
                            message.istioCanonicalService = $root.google.monitoring.v3.Service.IstioCanonicalService.fromObject(object.istioCanonicalService);
                        }
                        if (object.telemetry != null) {
                            if (typeof object.telemetry !== "object")
                                throw TypeError(".google.monitoring.v3.Service.telemetry: object expected");
                            message.telemetry = $root.google.monitoring.v3.Service.Telemetry.fromObject(object.telemetry);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Service message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.Service
                     * @static
                     * @param {google.monitoring.v3.Service} message Service
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Service.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.name = "";
                            object.displayName = "";
                            object.telemetry = null;
                        }
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        if (message.displayName != null && message.hasOwnProperty("displayName"))
                            object.displayName = message.displayName;
                        if (message.custom != null && message.hasOwnProperty("custom")) {
                            object.custom = $root.google.monitoring.v3.Service.Custom.toObject(message.custom, options);
                            if (options.oneofs)
                                object.identifier = "custom";
                        }
                        if (message.appEngine != null && message.hasOwnProperty("appEngine")) {
                            object.appEngine = $root.google.monitoring.v3.Service.AppEngine.toObject(message.appEngine, options);
                            if (options.oneofs)
                                object.identifier = "appEngine";
                        }
                        if (message.cloudEndpoints != null && message.hasOwnProperty("cloudEndpoints")) {
                            object.cloudEndpoints = $root.google.monitoring.v3.Service.CloudEndpoints.toObject(message.cloudEndpoints, options);
                            if (options.oneofs)
                                object.identifier = "cloudEndpoints";
                        }
                        if (message.clusterIstio != null && message.hasOwnProperty("clusterIstio")) {
                            object.clusterIstio = $root.google.monitoring.v3.Service.ClusterIstio.toObject(message.clusterIstio, options);
                            if (options.oneofs)
                                object.identifier = "clusterIstio";
                        }
                        if (message.meshIstio != null && message.hasOwnProperty("meshIstio")) {
                            object.meshIstio = $root.google.monitoring.v3.Service.MeshIstio.toObject(message.meshIstio, options);
                            if (options.oneofs)
                                object.identifier = "meshIstio";
                        }
                        if (message.istioCanonicalService != null && message.hasOwnProperty("istioCanonicalService")) {
                            object.istioCanonicalService = $root.google.monitoring.v3.Service.IstioCanonicalService.toObject(message.istioCanonicalService, options);
                            if (options.oneofs)
                                object.identifier = "istioCanonicalService";
                        }
                        if (message.telemetry != null && message.hasOwnProperty("telemetry"))
                            object.telemetry = $root.google.monitoring.v3.Service.Telemetry.toObject(message.telemetry, options);
                        return object;
                    };
    
                    /**
                     * Converts this Service to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.Service
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Service.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Service
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.Service
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Service.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.Service";
                    };
    
                    Service.Custom = (function() {
    
                        /**
                         * Properties of a Custom.
                         * @memberof google.monitoring.v3.Service
                         * @interface ICustom
                         */
    
                        /**
                         * Constructs a new Custom.
                         * @memberof google.monitoring.v3.Service
                         * @classdesc Represents a Custom.
                         * @implements ICustom
                         * @constructor
                         * @param {google.monitoring.v3.Service.ICustom=} [properties] Properties to set
                         */
                        function Custom(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new Custom instance using the specified properties.
                         * @function create
                         * @memberof google.monitoring.v3.Service.Custom
                         * @static
                         * @param {google.monitoring.v3.Service.ICustom=} [properties] Properties to set
                         * @returns {google.monitoring.v3.Service.Custom} Custom instance
                         */
                        Custom.create = function create(properties) {
                            return new Custom(properties);
                        };
    
                        /**
                         * Encodes the specified Custom message. Does not implicitly {@link google.monitoring.v3.Service.Custom.verify|verify} messages.
                         * @function encode
                         * @memberof google.monitoring.v3.Service.Custom
                         * @static
                         * @param {google.monitoring.v3.Service.ICustom} message Custom message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Custom.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Custom message, length delimited. Does not implicitly {@link google.monitoring.v3.Service.Custom.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.monitoring.v3.Service.Custom
                         * @static
                         * @param {google.monitoring.v3.Service.ICustom} message Custom message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Custom.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Custom message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.monitoring.v3.Service.Custom
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.monitoring.v3.Service.Custom} Custom
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Custom.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.Service.Custom();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Custom message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.monitoring.v3.Service.Custom
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.monitoring.v3.Service.Custom} Custom
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Custom.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Custom message.
                         * @function verify
                         * @memberof google.monitoring.v3.Service.Custom
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Custom.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates a Custom message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.monitoring.v3.Service.Custom
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.monitoring.v3.Service.Custom} Custom
                         */
                        Custom.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.monitoring.v3.Service.Custom)
                                return object;
                            return new $root.google.monitoring.v3.Service.Custom();
                        };
    
                        /**
                         * Creates a plain object from a Custom message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.monitoring.v3.Service.Custom
                         * @static
                         * @param {google.monitoring.v3.Service.Custom} message Custom
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Custom.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this Custom to JSON.
                         * @function toJSON
                         * @memberof google.monitoring.v3.Service.Custom
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Custom.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Custom
                         * @function getTypeUrl
                         * @memberof google.monitoring.v3.Service.Custom
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Custom.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.monitoring.v3.Service.Custom";
                        };
    
                        return Custom;
                    })();
    
                    Service.AppEngine = (function() {
    
                        /**
                         * Properties of an AppEngine.
                         * @memberof google.monitoring.v3.Service
                         * @interface IAppEngine
                         * @property {string|null} [moduleId] AppEngine moduleId
                         */
    
                        /**
                         * Constructs a new AppEngine.
                         * @memberof google.monitoring.v3.Service
                         * @classdesc Represents an AppEngine.
                         * @implements IAppEngine
                         * @constructor
                         * @param {google.monitoring.v3.Service.IAppEngine=} [properties] Properties to set
                         */
                        function AppEngine(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AppEngine moduleId.
                         * @member {string} moduleId
                         * @memberof google.monitoring.v3.Service.AppEngine
                         * @instance
                         */
                        AppEngine.prototype.moduleId = "";
    
                        /**
                         * Creates a new AppEngine instance using the specified properties.
                         * @function create
                         * @memberof google.monitoring.v3.Service.AppEngine
                         * @static
                         * @param {google.monitoring.v3.Service.IAppEngine=} [properties] Properties to set
                         * @returns {google.monitoring.v3.Service.AppEngine} AppEngine instance
                         */
                        AppEngine.create = function create(properties) {
                            return new AppEngine(properties);
                        };
    
                        /**
                         * Encodes the specified AppEngine message. Does not implicitly {@link google.monitoring.v3.Service.AppEngine.verify|verify} messages.
                         * @function encode
                         * @memberof google.monitoring.v3.Service.AppEngine
                         * @static
                         * @param {google.monitoring.v3.Service.IAppEngine} message AppEngine message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AppEngine.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.moduleId != null && Object.hasOwnProperty.call(message, "moduleId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.moduleId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AppEngine message, length delimited. Does not implicitly {@link google.monitoring.v3.Service.AppEngine.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.monitoring.v3.Service.AppEngine
                         * @static
                         * @param {google.monitoring.v3.Service.IAppEngine} message AppEngine message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AppEngine.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AppEngine message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.monitoring.v3.Service.AppEngine
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.monitoring.v3.Service.AppEngine} AppEngine
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AppEngine.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.Service.AppEngine();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.moduleId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AppEngine message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.monitoring.v3.Service.AppEngine
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.monitoring.v3.Service.AppEngine} AppEngine
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AppEngine.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AppEngine message.
                         * @function verify
                         * @memberof google.monitoring.v3.Service.AppEngine
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AppEngine.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.moduleId != null && message.hasOwnProperty("moduleId"))
                                if (!$util.isString(message.moduleId))
                                    return "moduleId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an AppEngine message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.monitoring.v3.Service.AppEngine
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.monitoring.v3.Service.AppEngine} AppEngine
                         */
                        AppEngine.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.monitoring.v3.Service.AppEngine)
                                return object;
                            var message = new $root.google.monitoring.v3.Service.AppEngine();
                            if (object.moduleId != null)
                                message.moduleId = String(object.moduleId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AppEngine message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.monitoring.v3.Service.AppEngine
                         * @static
                         * @param {google.monitoring.v3.Service.AppEngine} message AppEngine
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AppEngine.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.moduleId = "";
                            if (message.moduleId != null && message.hasOwnProperty("moduleId"))
                                object.moduleId = message.moduleId;
                            return object;
                        };
    
                        /**
                         * Converts this AppEngine to JSON.
                         * @function toJSON
                         * @memberof google.monitoring.v3.Service.AppEngine
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AppEngine.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AppEngine
                         * @function getTypeUrl
                         * @memberof google.monitoring.v3.Service.AppEngine
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AppEngine.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.monitoring.v3.Service.AppEngine";
                        };
    
                        return AppEngine;
                    })();
    
                    Service.CloudEndpoints = (function() {
    
                        /**
                         * Properties of a CloudEndpoints.
                         * @memberof google.monitoring.v3.Service
                         * @interface ICloudEndpoints
                         * @property {string|null} [service] CloudEndpoints service
                         */
    
                        /**
                         * Constructs a new CloudEndpoints.
                         * @memberof google.monitoring.v3.Service
                         * @classdesc Represents a CloudEndpoints.
                         * @implements ICloudEndpoints
                         * @constructor
                         * @param {google.monitoring.v3.Service.ICloudEndpoints=} [properties] Properties to set
                         */
                        function CloudEndpoints(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CloudEndpoints service.
                         * @member {string} service
                         * @memberof google.monitoring.v3.Service.CloudEndpoints
                         * @instance
                         */
                        CloudEndpoints.prototype.service = "";
    
                        /**
                         * Creates a new CloudEndpoints instance using the specified properties.
                         * @function create
                         * @memberof google.monitoring.v3.Service.CloudEndpoints
                         * @static
                         * @param {google.monitoring.v3.Service.ICloudEndpoints=} [properties] Properties to set
                         * @returns {google.monitoring.v3.Service.CloudEndpoints} CloudEndpoints instance
                         */
                        CloudEndpoints.create = function create(properties) {
                            return new CloudEndpoints(properties);
                        };
    
                        /**
                         * Encodes the specified CloudEndpoints message. Does not implicitly {@link google.monitoring.v3.Service.CloudEndpoints.verify|verify} messages.
                         * @function encode
                         * @memberof google.monitoring.v3.Service.CloudEndpoints
                         * @static
                         * @param {google.monitoring.v3.Service.ICloudEndpoints} message CloudEndpoints message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CloudEndpoints.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.service);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CloudEndpoints message, length delimited. Does not implicitly {@link google.monitoring.v3.Service.CloudEndpoints.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.monitoring.v3.Service.CloudEndpoints
                         * @static
                         * @param {google.monitoring.v3.Service.ICloudEndpoints} message CloudEndpoints message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CloudEndpoints.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CloudEndpoints message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.monitoring.v3.Service.CloudEndpoints
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.monitoring.v3.Service.CloudEndpoints} CloudEndpoints
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CloudEndpoints.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.Service.CloudEndpoints();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.service = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CloudEndpoints message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.monitoring.v3.Service.CloudEndpoints
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.monitoring.v3.Service.CloudEndpoints} CloudEndpoints
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CloudEndpoints.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CloudEndpoints message.
                         * @function verify
                         * @memberof google.monitoring.v3.Service.CloudEndpoints
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CloudEndpoints.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.service != null && message.hasOwnProperty("service"))
                                if (!$util.isString(message.service))
                                    return "service: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CloudEndpoints message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.monitoring.v3.Service.CloudEndpoints
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.monitoring.v3.Service.CloudEndpoints} CloudEndpoints
                         */
                        CloudEndpoints.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.monitoring.v3.Service.CloudEndpoints)
                                return object;
                            var message = new $root.google.monitoring.v3.Service.CloudEndpoints();
                            if (object.service != null)
                                message.service = String(object.service);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CloudEndpoints message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.monitoring.v3.Service.CloudEndpoints
                         * @static
                         * @param {google.monitoring.v3.Service.CloudEndpoints} message CloudEndpoints
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CloudEndpoints.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.service = "";
                            if (message.service != null && message.hasOwnProperty("service"))
                                object.service = message.service;
                            return object;
                        };
    
                        /**
                         * Converts this CloudEndpoints to JSON.
                         * @function toJSON
                         * @memberof google.monitoring.v3.Service.CloudEndpoints
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CloudEndpoints.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CloudEndpoints
                         * @function getTypeUrl
                         * @memberof google.monitoring.v3.Service.CloudEndpoints
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CloudEndpoints.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.monitoring.v3.Service.CloudEndpoints";
                        };
    
                        return CloudEndpoints;
                    })();
    
                    Service.ClusterIstio = (function() {
    
                        /**
                         * Properties of a ClusterIstio.
                         * @memberof google.monitoring.v3.Service
                         * @interface IClusterIstio
                         * @property {string|null} [location] ClusterIstio location
                         * @property {string|null} [clusterName] ClusterIstio clusterName
                         * @property {string|null} [serviceNamespace] ClusterIstio serviceNamespace
                         * @property {string|null} [serviceName] ClusterIstio serviceName
                         */
    
                        /**
                         * Constructs a new ClusterIstio.
                         * @memberof google.monitoring.v3.Service
                         * @classdesc Represents a ClusterIstio.
                         * @implements IClusterIstio
                         * @constructor
                         * @param {google.monitoring.v3.Service.IClusterIstio=} [properties] Properties to set
                         */
                        function ClusterIstio(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ClusterIstio location.
                         * @member {string} location
                         * @memberof google.monitoring.v3.Service.ClusterIstio
                         * @instance
                         */
                        ClusterIstio.prototype.location = "";
    
                        /**
                         * ClusterIstio clusterName.
                         * @member {string} clusterName
                         * @memberof google.monitoring.v3.Service.ClusterIstio
                         * @instance
                         */
                        ClusterIstio.prototype.clusterName = "";
    
                        /**
                         * ClusterIstio serviceNamespace.
                         * @member {string} serviceNamespace
                         * @memberof google.monitoring.v3.Service.ClusterIstio
                         * @instance
                         */
                        ClusterIstio.prototype.serviceNamespace = "";
    
                        /**
                         * ClusterIstio serviceName.
                         * @member {string} serviceName
                         * @memberof google.monitoring.v3.Service.ClusterIstio
                         * @instance
                         */
                        ClusterIstio.prototype.serviceName = "";
    
                        /**
                         * Creates a new ClusterIstio instance using the specified properties.
                         * @function create
                         * @memberof google.monitoring.v3.Service.ClusterIstio
                         * @static
                         * @param {google.monitoring.v3.Service.IClusterIstio=} [properties] Properties to set
                         * @returns {google.monitoring.v3.Service.ClusterIstio} ClusterIstio instance
                         */
                        ClusterIstio.create = function create(properties) {
                            return new ClusterIstio(properties);
                        };
    
                        /**
                         * Encodes the specified ClusterIstio message. Does not implicitly {@link google.monitoring.v3.Service.ClusterIstio.verify|verify} messages.
                         * @function encode
                         * @memberof google.monitoring.v3.Service.ClusterIstio
                         * @static
                         * @param {google.monitoring.v3.Service.IClusterIstio} message ClusterIstio message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ClusterIstio.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.location != null && Object.hasOwnProperty.call(message, "location"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.location);
                            if (message.clusterName != null && Object.hasOwnProperty.call(message, "clusterName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.clusterName);
                            if (message.serviceNamespace != null && Object.hasOwnProperty.call(message, "serviceNamespace"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.serviceNamespace);
                            if (message.serviceName != null && Object.hasOwnProperty.call(message, "serviceName"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.serviceName);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ClusterIstio message, length delimited. Does not implicitly {@link google.monitoring.v3.Service.ClusterIstio.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.monitoring.v3.Service.ClusterIstio
                         * @static
                         * @param {google.monitoring.v3.Service.IClusterIstio} message ClusterIstio message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ClusterIstio.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ClusterIstio message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.monitoring.v3.Service.ClusterIstio
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.monitoring.v3.Service.ClusterIstio} ClusterIstio
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ClusterIstio.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.Service.ClusterIstio();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.location = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.clusterName = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.serviceNamespace = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.serviceName = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ClusterIstio message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.monitoring.v3.Service.ClusterIstio
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.monitoring.v3.Service.ClusterIstio} ClusterIstio
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ClusterIstio.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ClusterIstio message.
                         * @function verify
                         * @memberof google.monitoring.v3.Service.ClusterIstio
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ClusterIstio.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.location != null && message.hasOwnProperty("location"))
                                if (!$util.isString(message.location))
                                    return "location: string expected";
                            if (message.clusterName != null && message.hasOwnProperty("clusterName"))
                                if (!$util.isString(message.clusterName))
                                    return "clusterName: string expected";
                            if (message.serviceNamespace != null && message.hasOwnProperty("serviceNamespace"))
                                if (!$util.isString(message.serviceNamespace))
                                    return "serviceNamespace: string expected";
                            if (message.serviceName != null && message.hasOwnProperty("serviceName"))
                                if (!$util.isString(message.serviceName))
                                    return "serviceName: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ClusterIstio message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.monitoring.v3.Service.ClusterIstio
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.monitoring.v3.Service.ClusterIstio} ClusterIstio
                         */
                        ClusterIstio.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.monitoring.v3.Service.ClusterIstio)
                                return object;
                            var message = new $root.google.monitoring.v3.Service.ClusterIstio();
                            if (object.location != null)
                                message.location = String(object.location);
                            if (object.clusterName != null)
                                message.clusterName = String(object.clusterName);
                            if (object.serviceNamespace != null)
                                message.serviceNamespace = String(object.serviceNamespace);
                            if (object.serviceName != null)
                                message.serviceName = String(object.serviceName);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ClusterIstio message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.monitoring.v3.Service.ClusterIstio
                         * @static
                         * @param {google.monitoring.v3.Service.ClusterIstio} message ClusterIstio
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ClusterIstio.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.location = "";
                                object.clusterName = "";
                                object.serviceNamespace = "";
                                object.serviceName = "";
                            }
                            if (message.location != null && message.hasOwnProperty("location"))
                                object.location = message.location;
                            if (message.clusterName != null && message.hasOwnProperty("clusterName"))
                                object.clusterName = message.clusterName;
                            if (message.serviceNamespace != null && message.hasOwnProperty("serviceNamespace"))
                                object.serviceNamespace = message.serviceNamespace;
                            if (message.serviceName != null && message.hasOwnProperty("serviceName"))
                                object.serviceName = message.serviceName;
                            return object;
                        };
    
                        /**
                         * Converts this ClusterIstio to JSON.
                         * @function toJSON
                         * @memberof google.monitoring.v3.Service.ClusterIstio
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ClusterIstio.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ClusterIstio
                         * @function getTypeUrl
                         * @memberof google.monitoring.v3.Service.ClusterIstio
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ClusterIstio.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.monitoring.v3.Service.ClusterIstio";
                        };
    
                        return ClusterIstio;
                    })();
    
                    Service.MeshIstio = (function() {
    
                        /**
                         * Properties of a MeshIstio.
                         * @memberof google.monitoring.v3.Service
                         * @interface IMeshIstio
                         * @property {string|null} [meshUid] MeshIstio meshUid
                         * @property {string|null} [serviceNamespace] MeshIstio serviceNamespace
                         * @property {string|null} [serviceName] MeshIstio serviceName
                         */
    
                        /**
                         * Constructs a new MeshIstio.
                         * @memberof google.monitoring.v3.Service
                         * @classdesc Represents a MeshIstio.
                         * @implements IMeshIstio
                         * @constructor
                         * @param {google.monitoring.v3.Service.IMeshIstio=} [properties] Properties to set
                         */
                        function MeshIstio(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MeshIstio meshUid.
                         * @member {string} meshUid
                         * @memberof google.monitoring.v3.Service.MeshIstio
                         * @instance
                         */
                        MeshIstio.prototype.meshUid = "";
    
                        /**
                         * MeshIstio serviceNamespace.
                         * @member {string} serviceNamespace
                         * @memberof google.monitoring.v3.Service.MeshIstio
                         * @instance
                         */
                        MeshIstio.prototype.serviceNamespace = "";
    
                        /**
                         * MeshIstio serviceName.
                         * @member {string} serviceName
                         * @memberof google.monitoring.v3.Service.MeshIstio
                         * @instance
                         */
                        MeshIstio.prototype.serviceName = "";
    
                        /**
                         * Creates a new MeshIstio instance using the specified properties.
                         * @function create
                         * @memberof google.monitoring.v3.Service.MeshIstio
                         * @static
                         * @param {google.monitoring.v3.Service.IMeshIstio=} [properties] Properties to set
                         * @returns {google.monitoring.v3.Service.MeshIstio} MeshIstio instance
                         */
                        MeshIstio.create = function create(properties) {
                            return new MeshIstio(properties);
                        };
    
                        /**
                         * Encodes the specified MeshIstio message. Does not implicitly {@link google.monitoring.v3.Service.MeshIstio.verify|verify} messages.
                         * @function encode
                         * @memberof google.monitoring.v3.Service.MeshIstio
                         * @static
                         * @param {google.monitoring.v3.Service.IMeshIstio} message MeshIstio message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MeshIstio.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.meshUid != null && Object.hasOwnProperty.call(message, "meshUid"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.meshUid);
                            if (message.serviceNamespace != null && Object.hasOwnProperty.call(message, "serviceNamespace"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.serviceNamespace);
                            if (message.serviceName != null && Object.hasOwnProperty.call(message, "serviceName"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.serviceName);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MeshIstio message, length delimited. Does not implicitly {@link google.monitoring.v3.Service.MeshIstio.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.monitoring.v3.Service.MeshIstio
                         * @static
                         * @param {google.monitoring.v3.Service.IMeshIstio} message MeshIstio message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MeshIstio.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MeshIstio message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.monitoring.v3.Service.MeshIstio
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.monitoring.v3.Service.MeshIstio} MeshIstio
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MeshIstio.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.Service.MeshIstio();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.meshUid = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.serviceNamespace = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.serviceName = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MeshIstio message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.monitoring.v3.Service.MeshIstio
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.monitoring.v3.Service.MeshIstio} MeshIstio
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MeshIstio.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MeshIstio message.
                         * @function verify
                         * @memberof google.monitoring.v3.Service.MeshIstio
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MeshIstio.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.meshUid != null && message.hasOwnProperty("meshUid"))
                                if (!$util.isString(message.meshUid))
                                    return "meshUid: string expected";
                            if (message.serviceNamespace != null && message.hasOwnProperty("serviceNamespace"))
                                if (!$util.isString(message.serviceNamespace))
                                    return "serviceNamespace: string expected";
                            if (message.serviceName != null && message.hasOwnProperty("serviceName"))
                                if (!$util.isString(message.serviceName))
                                    return "serviceName: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a MeshIstio message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.monitoring.v3.Service.MeshIstio
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.monitoring.v3.Service.MeshIstio} MeshIstio
                         */
                        MeshIstio.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.monitoring.v3.Service.MeshIstio)
                                return object;
                            var message = new $root.google.monitoring.v3.Service.MeshIstio();
                            if (object.meshUid != null)
                                message.meshUid = String(object.meshUid);
                            if (object.serviceNamespace != null)
                                message.serviceNamespace = String(object.serviceNamespace);
                            if (object.serviceName != null)
                                message.serviceName = String(object.serviceName);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MeshIstio message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.monitoring.v3.Service.MeshIstio
                         * @static
                         * @param {google.monitoring.v3.Service.MeshIstio} message MeshIstio
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MeshIstio.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.meshUid = "";
                                object.serviceNamespace = "";
                                object.serviceName = "";
                            }
                            if (message.meshUid != null && message.hasOwnProperty("meshUid"))
                                object.meshUid = message.meshUid;
                            if (message.serviceNamespace != null && message.hasOwnProperty("serviceNamespace"))
                                object.serviceNamespace = message.serviceNamespace;
                            if (message.serviceName != null && message.hasOwnProperty("serviceName"))
                                object.serviceName = message.serviceName;
                            return object;
                        };
    
                        /**
                         * Converts this MeshIstio to JSON.
                         * @function toJSON
                         * @memberof google.monitoring.v3.Service.MeshIstio
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MeshIstio.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MeshIstio
                         * @function getTypeUrl
                         * @memberof google.monitoring.v3.Service.MeshIstio
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MeshIstio.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.monitoring.v3.Service.MeshIstio";
                        };
    
                        return MeshIstio;
                    })();
    
                    Service.IstioCanonicalService = (function() {
    
                        /**
                         * Properties of an IstioCanonicalService.
                         * @memberof google.monitoring.v3.Service
                         * @interface IIstioCanonicalService
                         * @property {string|null} [meshUid] IstioCanonicalService meshUid
                         * @property {string|null} [canonicalServiceNamespace] IstioCanonicalService canonicalServiceNamespace
                         * @property {string|null} [canonicalService] IstioCanonicalService canonicalService
                         */
    
                        /**
                         * Constructs a new IstioCanonicalService.
                         * @memberof google.monitoring.v3.Service
                         * @classdesc Represents an IstioCanonicalService.
                         * @implements IIstioCanonicalService
                         * @constructor
                         * @param {google.monitoring.v3.Service.IIstioCanonicalService=} [properties] Properties to set
                         */
                        function IstioCanonicalService(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * IstioCanonicalService meshUid.
                         * @member {string} meshUid
                         * @memberof google.monitoring.v3.Service.IstioCanonicalService
                         * @instance
                         */
                        IstioCanonicalService.prototype.meshUid = "";
    
                        /**
                         * IstioCanonicalService canonicalServiceNamespace.
                         * @member {string} canonicalServiceNamespace
                         * @memberof google.monitoring.v3.Service.IstioCanonicalService
                         * @instance
                         */
                        IstioCanonicalService.prototype.canonicalServiceNamespace = "";
    
                        /**
                         * IstioCanonicalService canonicalService.
                         * @member {string} canonicalService
                         * @memberof google.monitoring.v3.Service.IstioCanonicalService
                         * @instance
                         */
                        IstioCanonicalService.prototype.canonicalService = "";
    
                        /**
                         * Creates a new IstioCanonicalService instance using the specified properties.
                         * @function create
                         * @memberof google.monitoring.v3.Service.IstioCanonicalService
                         * @static
                         * @param {google.monitoring.v3.Service.IIstioCanonicalService=} [properties] Properties to set
                         * @returns {google.monitoring.v3.Service.IstioCanonicalService} IstioCanonicalService instance
                         */
                        IstioCanonicalService.create = function create(properties) {
                            return new IstioCanonicalService(properties);
                        };
    
                        /**
                         * Encodes the specified IstioCanonicalService message. Does not implicitly {@link google.monitoring.v3.Service.IstioCanonicalService.verify|verify} messages.
                         * @function encode
                         * @memberof google.monitoring.v3.Service.IstioCanonicalService
                         * @static
                         * @param {google.monitoring.v3.Service.IIstioCanonicalService} message IstioCanonicalService message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        IstioCanonicalService.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.meshUid != null && Object.hasOwnProperty.call(message, "meshUid"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.meshUid);
                            if (message.canonicalServiceNamespace != null && Object.hasOwnProperty.call(message, "canonicalServiceNamespace"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.canonicalServiceNamespace);
                            if (message.canonicalService != null && Object.hasOwnProperty.call(message, "canonicalService"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.canonicalService);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified IstioCanonicalService message, length delimited. Does not implicitly {@link google.monitoring.v3.Service.IstioCanonicalService.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.monitoring.v3.Service.IstioCanonicalService
                         * @static
                         * @param {google.monitoring.v3.Service.IIstioCanonicalService} message IstioCanonicalService message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        IstioCanonicalService.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an IstioCanonicalService message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.monitoring.v3.Service.IstioCanonicalService
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.monitoring.v3.Service.IstioCanonicalService} IstioCanonicalService
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        IstioCanonicalService.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.Service.IstioCanonicalService();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.meshUid = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.canonicalServiceNamespace = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.canonicalService = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an IstioCanonicalService message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.monitoring.v3.Service.IstioCanonicalService
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.monitoring.v3.Service.IstioCanonicalService} IstioCanonicalService
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        IstioCanonicalService.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an IstioCanonicalService message.
                         * @function verify
                         * @memberof google.monitoring.v3.Service.IstioCanonicalService
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        IstioCanonicalService.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.meshUid != null && message.hasOwnProperty("meshUid"))
                                if (!$util.isString(message.meshUid))
                                    return "meshUid: string expected";
                            if (message.canonicalServiceNamespace != null && message.hasOwnProperty("canonicalServiceNamespace"))
                                if (!$util.isString(message.canonicalServiceNamespace))
                                    return "canonicalServiceNamespace: string expected";
                            if (message.canonicalService != null && message.hasOwnProperty("canonicalService"))
                                if (!$util.isString(message.canonicalService))
                                    return "canonicalService: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an IstioCanonicalService message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.monitoring.v3.Service.IstioCanonicalService
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.monitoring.v3.Service.IstioCanonicalService} IstioCanonicalService
                         */
                        IstioCanonicalService.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.monitoring.v3.Service.IstioCanonicalService)
                                return object;
                            var message = new $root.google.monitoring.v3.Service.IstioCanonicalService();
                            if (object.meshUid != null)
                                message.meshUid = String(object.meshUid);
                            if (object.canonicalServiceNamespace != null)
                                message.canonicalServiceNamespace = String(object.canonicalServiceNamespace);
                            if (object.canonicalService != null)
                                message.canonicalService = String(object.canonicalService);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an IstioCanonicalService message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.monitoring.v3.Service.IstioCanonicalService
                         * @static
                         * @param {google.monitoring.v3.Service.IstioCanonicalService} message IstioCanonicalService
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        IstioCanonicalService.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.meshUid = "";
                                object.canonicalServiceNamespace = "";
                                object.canonicalService = "";
                            }
                            if (message.meshUid != null && message.hasOwnProperty("meshUid"))
                                object.meshUid = message.meshUid;
                            if (message.canonicalServiceNamespace != null && message.hasOwnProperty("canonicalServiceNamespace"))
                                object.canonicalServiceNamespace = message.canonicalServiceNamespace;
                            if (message.canonicalService != null && message.hasOwnProperty("canonicalService"))
                                object.canonicalService = message.canonicalService;
                            return object;
                        };
    
                        /**
                         * Converts this IstioCanonicalService to JSON.
                         * @function toJSON
                         * @memberof google.monitoring.v3.Service.IstioCanonicalService
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        IstioCanonicalService.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for IstioCanonicalService
                         * @function getTypeUrl
                         * @memberof google.monitoring.v3.Service.IstioCanonicalService
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        IstioCanonicalService.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.monitoring.v3.Service.IstioCanonicalService";
                        };
    
                        return IstioCanonicalService;
                    })();
    
                    Service.Telemetry = (function() {
    
                        /**
                         * Properties of a Telemetry.
                         * @memberof google.monitoring.v3.Service
                         * @interface ITelemetry
                         * @property {string|null} [resourceName] Telemetry resourceName
                         */
    
                        /**
                         * Constructs a new Telemetry.
                         * @memberof google.monitoring.v3.Service
                         * @classdesc Represents a Telemetry.
                         * @implements ITelemetry
                         * @constructor
                         * @param {google.monitoring.v3.Service.ITelemetry=} [properties] Properties to set
                         */
                        function Telemetry(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Telemetry resourceName.
                         * @member {string} resourceName
                         * @memberof google.monitoring.v3.Service.Telemetry
                         * @instance
                         */
                        Telemetry.prototype.resourceName = "";
    
                        /**
                         * Creates a new Telemetry instance using the specified properties.
                         * @function create
                         * @memberof google.monitoring.v3.Service.Telemetry
                         * @static
                         * @param {google.monitoring.v3.Service.ITelemetry=} [properties] Properties to set
                         * @returns {google.monitoring.v3.Service.Telemetry} Telemetry instance
                         */
                        Telemetry.create = function create(properties) {
                            return new Telemetry(properties);
                        };
    
                        /**
                         * Encodes the specified Telemetry message. Does not implicitly {@link google.monitoring.v3.Service.Telemetry.verify|verify} messages.
                         * @function encode
                         * @memberof google.monitoring.v3.Service.Telemetry
                         * @static
                         * @param {google.monitoring.v3.Service.ITelemetry} message Telemetry message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Telemetry.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.resourceName != null && Object.hasOwnProperty.call(message, "resourceName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.resourceName);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Telemetry message, length delimited. Does not implicitly {@link google.monitoring.v3.Service.Telemetry.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.monitoring.v3.Service.Telemetry
                         * @static
                         * @param {google.monitoring.v3.Service.ITelemetry} message Telemetry message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Telemetry.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Telemetry message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.monitoring.v3.Service.Telemetry
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.monitoring.v3.Service.Telemetry} Telemetry
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Telemetry.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.Service.Telemetry();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.resourceName = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Telemetry message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.monitoring.v3.Service.Telemetry
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.monitoring.v3.Service.Telemetry} Telemetry
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Telemetry.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Telemetry message.
                         * @function verify
                         * @memberof google.monitoring.v3.Service.Telemetry
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Telemetry.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.resourceName != null && message.hasOwnProperty("resourceName"))
                                if (!$util.isString(message.resourceName))
                                    return "resourceName: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Telemetry message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.monitoring.v3.Service.Telemetry
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.monitoring.v3.Service.Telemetry} Telemetry
                         */
                        Telemetry.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.monitoring.v3.Service.Telemetry)
                                return object;
                            var message = new $root.google.monitoring.v3.Service.Telemetry();
                            if (object.resourceName != null)
                                message.resourceName = String(object.resourceName);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Telemetry message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.monitoring.v3.Service.Telemetry
                         * @static
                         * @param {google.monitoring.v3.Service.Telemetry} message Telemetry
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Telemetry.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.resourceName = "";
                            if (message.resourceName != null && message.hasOwnProperty("resourceName"))
                                object.resourceName = message.resourceName;
                            return object;
                        };
    
                        /**
                         * Converts this Telemetry to JSON.
                         * @function toJSON
                         * @memberof google.monitoring.v3.Service.Telemetry
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Telemetry.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Telemetry
                         * @function getTypeUrl
                         * @memberof google.monitoring.v3.Service.Telemetry
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Telemetry.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.monitoring.v3.Service.Telemetry";
                        };
    
                        return Telemetry;
                    })();
    
                    return Service;
                })();
    
                v3.ServiceLevelObjective = (function() {
    
                    /**
                     * Properties of a ServiceLevelObjective.
                     * @memberof google.monitoring.v3
                     * @interface IServiceLevelObjective
                     * @property {string|null} [name] ServiceLevelObjective name
                     * @property {string|null} [displayName] ServiceLevelObjective displayName
                     * @property {google.monitoring.v3.IServiceLevelIndicator|null} [serviceLevelIndicator] ServiceLevelObjective serviceLevelIndicator
                     * @property {number|null} [goal] ServiceLevelObjective goal
                     * @property {google.protobuf.IDuration|null} [rollingPeriod] ServiceLevelObjective rollingPeriod
                     * @property {google.type.CalendarPeriod|null} [calendarPeriod] ServiceLevelObjective calendarPeriod
                     */
    
                    /**
                     * Constructs a new ServiceLevelObjective.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a ServiceLevelObjective.
                     * @implements IServiceLevelObjective
                     * @constructor
                     * @param {google.monitoring.v3.IServiceLevelObjective=} [properties] Properties to set
                     */
                    function ServiceLevelObjective(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ServiceLevelObjective name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.ServiceLevelObjective
                     * @instance
                     */
                    ServiceLevelObjective.prototype.name = "";
    
                    /**
                     * ServiceLevelObjective displayName.
                     * @member {string} displayName
                     * @memberof google.monitoring.v3.ServiceLevelObjective
                     * @instance
                     */
                    ServiceLevelObjective.prototype.displayName = "";
    
                    /**
                     * ServiceLevelObjective serviceLevelIndicator.
                     * @member {google.monitoring.v3.IServiceLevelIndicator|null|undefined} serviceLevelIndicator
                     * @memberof google.monitoring.v3.ServiceLevelObjective
                     * @instance
                     */
                    ServiceLevelObjective.prototype.serviceLevelIndicator = null;
    
                    /**
                     * ServiceLevelObjective goal.
                     * @member {number} goal
                     * @memberof google.monitoring.v3.ServiceLevelObjective
                     * @instance
                     */
                    ServiceLevelObjective.prototype.goal = 0;
    
                    /**
                     * ServiceLevelObjective rollingPeriod.
                     * @member {google.protobuf.IDuration|null|undefined} rollingPeriod
                     * @memberof google.monitoring.v3.ServiceLevelObjective
                     * @instance
                     */
                    ServiceLevelObjective.prototype.rollingPeriod = null;
    
                    /**
                     * ServiceLevelObjective calendarPeriod.
                     * @member {google.type.CalendarPeriod|null|undefined} calendarPeriod
                     * @memberof google.monitoring.v3.ServiceLevelObjective
                     * @instance
                     */
                    ServiceLevelObjective.prototype.calendarPeriod = null;
    
                    // OneOf field names bound to virtual getters and setters
                    var $oneOfFields;
    
                    /**
                     * ServiceLevelObjective period.
                     * @member {"rollingPeriod"|"calendarPeriod"|undefined} period
                     * @memberof google.monitoring.v3.ServiceLevelObjective
                     * @instance
                     */
                    Object.defineProperty(ServiceLevelObjective.prototype, "period", {
                        get: $util.oneOfGetter($oneOfFields = ["rollingPeriod", "calendarPeriod"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });
    
                    /**
                     * Creates a new ServiceLevelObjective instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.ServiceLevelObjective
                     * @static
                     * @param {google.monitoring.v3.IServiceLevelObjective=} [properties] Properties to set
                     * @returns {google.monitoring.v3.ServiceLevelObjective} ServiceLevelObjective instance
                     */
                    ServiceLevelObjective.create = function create(properties) {
                        return new ServiceLevelObjective(properties);
                    };
    
                    /**
                     * Encodes the specified ServiceLevelObjective message. Does not implicitly {@link google.monitoring.v3.ServiceLevelObjective.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.ServiceLevelObjective
                     * @static
                     * @param {google.monitoring.v3.IServiceLevelObjective} message ServiceLevelObjective message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ServiceLevelObjective.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                        if (message.serviceLevelIndicator != null && Object.hasOwnProperty.call(message, "serviceLevelIndicator"))
                            $root.google.monitoring.v3.ServiceLevelIndicator.encode(message.serviceLevelIndicator, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        if (message.goal != null && Object.hasOwnProperty.call(message, "goal"))
                            writer.uint32(/* id 4, wireType 1 =*/33).double(message.goal);
                        if (message.rollingPeriod != null && Object.hasOwnProperty.call(message, "rollingPeriod"))
                            $root.google.protobuf.Duration.encode(message.rollingPeriod, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                        if (message.calendarPeriod != null && Object.hasOwnProperty.call(message, "calendarPeriod"))
                            writer.uint32(/* id 6, wireType 0 =*/48).int32(message.calendarPeriod);
                        if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                            writer.uint32(/* id 11, wireType 2 =*/90).string(message.displayName);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ServiceLevelObjective message, length delimited. Does not implicitly {@link google.monitoring.v3.ServiceLevelObjective.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.ServiceLevelObjective
                     * @static
                     * @param {google.monitoring.v3.IServiceLevelObjective} message ServiceLevelObjective message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ServiceLevelObjective.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ServiceLevelObjective message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.ServiceLevelObjective
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.ServiceLevelObjective} ServiceLevelObjective
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ServiceLevelObjective.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.ServiceLevelObjective();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 11: {
                                    message.displayName = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.serviceLevelIndicator = $root.google.monitoring.v3.ServiceLevelIndicator.decode(reader, reader.uint32());
                                    break;
                                }
                            case 4: {
                                    message.goal = reader.double();
                                    break;
                                }
                            case 5: {
                                    message.rollingPeriod = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            case 6: {
                                    message.calendarPeriod = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ServiceLevelObjective message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.ServiceLevelObjective
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.ServiceLevelObjective} ServiceLevelObjective
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ServiceLevelObjective.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ServiceLevelObjective message.
                     * @function verify
                     * @memberof google.monitoring.v3.ServiceLevelObjective
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ServiceLevelObjective.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        var properties = {};
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.displayName != null && message.hasOwnProperty("displayName"))
                            if (!$util.isString(message.displayName))
                                return "displayName: string expected";
                        if (message.serviceLevelIndicator != null && message.hasOwnProperty("serviceLevelIndicator")) {
                            var error = $root.google.monitoring.v3.ServiceLevelIndicator.verify(message.serviceLevelIndicator);
                            if (error)
                                return "serviceLevelIndicator." + error;
                        }
                        if (message.goal != null && message.hasOwnProperty("goal"))
                            if (typeof message.goal !== "number")
                                return "goal: number expected";
                        if (message.rollingPeriod != null && message.hasOwnProperty("rollingPeriod")) {
                            properties.period = 1;
                            {
                                var error = $root.google.protobuf.Duration.verify(message.rollingPeriod);
                                if (error)
                                    return "rollingPeriod." + error;
                            }
                        }
                        if (message.calendarPeriod != null && message.hasOwnProperty("calendarPeriod")) {
                            if (properties.period === 1)
                                return "period: multiple values";
                            properties.period = 1;
                            switch (message.calendarPeriod) {
                            default:
                                return "calendarPeriod: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                                break;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates a ServiceLevelObjective message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.ServiceLevelObjective
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.ServiceLevelObjective} ServiceLevelObjective
                     */
                    ServiceLevelObjective.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.ServiceLevelObjective)
                            return object;
                        var message = new $root.google.monitoring.v3.ServiceLevelObjective();
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.displayName != null)
                            message.displayName = String(object.displayName);
                        if (object.serviceLevelIndicator != null) {
                            if (typeof object.serviceLevelIndicator !== "object")
                                throw TypeError(".google.monitoring.v3.ServiceLevelObjective.serviceLevelIndicator: object expected");
                            message.serviceLevelIndicator = $root.google.monitoring.v3.ServiceLevelIndicator.fromObject(object.serviceLevelIndicator);
                        }
                        if (object.goal != null)
                            message.goal = Number(object.goal);
                        if (object.rollingPeriod != null) {
                            if (typeof object.rollingPeriod !== "object")
                                throw TypeError(".google.monitoring.v3.ServiceLevelObjective.rollingPeriod: object expected");
                            message.rollingPeriod = $root.google.protobuf.Duration.fromObject(object.rollingPeriod);
                        }
                        switch (object.calendarPeriod) {
                        default:
                            if (typeof object.calendarPeriod === "number") {
                                message.calendarPeriod = object.calendarPeriod;
                                break;
                            }
                            break;
                        case "CALENDAR_PERIOD_UNSPECIFIED":
                        case 0:
                            message.calendarPeriod = 0;
                            break;
                        case "DAY":
                        case 1:
                            message.calendarPeriod = 1;
                            break;
                        case "WEEK":
                        case 2:
                            message.calendarPeriod = 2;
                            break;
                        case "FORTNIGHT":
                        case 3:
                            message.calendarPeriod = 3;
                            break;
                        case "MONTH":
                        case 4:
                            message.calendarPeriod = 4;
                            break;
                        case "QUARTER":
                        case 5:
                            message.calendarPeriod = 5;
                            break;
                        case "HALF":
                        case 6:
                            message.calendarPeriod = 6;
                            break;
                        case "YEAR":
                        case 7:
                            message.calendarPeriod = 7;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ServiceLevelObjective message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.ServiceLevelObjective
                     * @static
                     * @param {google.monitoring.v3.ServiceLevelObjective} message ServiceLevelObjective
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ServiceLevelObjective.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.name = "";
                            object.serviceLevelIndicator = null;
                            object.goal = 0;
                            object.displayName = "";
                        }
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        if (message.serviceLevelIndicator != null && message.hasOwnProperty("serviceLevelIndicator"))
                            object.serviceLevelIndicator = $root.google.monitoring.v3.ServiceLevelIndicator.toObject(message.serviceLevelIndicator, options);
                        if (message.goal != null && message.hasOwnProperty("goal"))
                            object.goal = options.json && !isFinite(message.goal) ? String(message.goal) : message.goal;
                        if (message.rollingPeriod != null && message.hasOwnProperty("rollingPeriod")) {
                            object.rollingPeriod = $root.google.protobuf.Duration.toObject(message.rollingPeriod, options);
                            if (options.oneofs)
                                object.period = "rollingPeriod";
                        }
                        if (message.calendarPeriod != null && message.hasOwnProperty("calendarPeriod")) {
                            object.calendarPeriod = options.enums === String ? $root.google.type.CalendarPeriod[message.calendarPeriod] === undefined ? message.calendarPeriod : $root.google.type.CalendarPeriod[message.calendarPeriod] : message.calendarPeriod;
                            if (options.oneofs)
                                object.period = "calendarPeriod";
                        }
                        if (message.displayName != null && message.hasOwnProperty("displayName"))
                            object.displayName = message.displayName;
                        return object;
                    };
    
                    /**
                     * Converts this ServiceLevelObjective to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.ServiceLevelObjective
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ServiceLevelObjective.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ServiceLevelObjective
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.ServiceLevelObjective
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ServiceLevelObjective.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.ServiceLevelObjective";
                    };
    
                    /**
                     * View enum.
                     * @name google.monitoring.v3.ServiceLevelObjective.View
                     * @enum {number}
                     * @property {number} VIEW_UNSPECIFIED=0 VIEW_UNSPECIFIED value
                     * @property {number} FULL=2 FULL value
                     * @property {number} EXPLICIT=1 EXPLICIT value
                     */
                    ServiceLevelObjective.View = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "VIEW_UNSPECIFIED"] = 0;
                        values[valuesById[2] = "FULL"] = 2;
                        values[valuesById[1] = "EXPLICIT"] = 1;
                        return values;
                    })();
    
                    return ServiceLevelObjective;
                })();
    
                v3.ServiceLevelIndicator = (function() {
    
                    /**
                     * Properties of a ServiceLevelIndicator.
                     * @memberof google.monitoring.v3
                     * @interface IServiceLevelIndicator
                     * @property {google.monitoring.v3.IBasicSli|null} [basicSli] ServiceLevelIndicator basicSli
                     * @property {google.monitoring.v3.IRequestBasedSli|null} [requestBased] ServiceLevelIndicator requestBased
                     * @property {google.monitoring.v3.IWindowsBasedSli|null} [windowsBased] ServiceLevelIndicator windowsBased
                     */
    
                    /**
                     * Constructs a new ServiceLevelIndicator.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a ServiceLevelIndicator.
                     * @implements IServiceLevelIndicator
                     * @constructor
                     * @param {google.monitoring.v3.IServiceLevelIndicator=} [properties] Properties to set
                     */
                    function ServiceLevelIndicator(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ServiceLevelIndicator basicSli.
                     * @member {google.monitoring.v3.IBasicSli|null|undefined} basicSli
                     * @memberof google.monitoring.v3.ServiceLevelIndicator
                     * @instance
                     */
                    ServiceLevelIndicator.prototype.basicSli = null;
    
                    /**
                     * ServiceLevelIndicator requestBased.
                     * @member {google.monitoring.v3.IRequestBasedSli|null|undefined} requestBased
                     * @memberof google.monitoring.v3.ServiceLevelIndicator
                     * @instance
                     */
                    ServiceLevelIndicator.prototype.requestBased = null;
    
                    /**
                     * ServiceLevelIndicator windowsBased.
                     * @member {google.monitoring.v3.IWindowsBasedSli|null|undefined} windowsBased
                     * @memberof google.monitoring.v3.ServiceLevelIndicator
                     * @instance
                     */
                    ServiceLevelIndicator.prototype.windowsBased = null;
    
                    // OneOf field names bound to virtual getters and setters
                    var $oneOfFields;
    
                    /**
                     * ServiceLevelIndicator type.
                     * @member {"basicSli"|"requestBased"|"windowsBased"|undefined} type
                     * @memberof google.monitoring.v3.ServiceLevelIndicator
                     * @instance
                     */
                    Object.defineProperty(ServiceLevelIndicator.prototype, "type", {
                        get: $util.oneOfGetter($oneOfFields = ["basicSli", "requestBased", "windowsBased"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });
    
                    /**
                     * Creates a new ServiceLevelIndicator instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.ServiceLevelIndicator
                     * @static
                     * @param {google.monitoring.v3.IServiceLevelIndicator=} [properties] Properties to set
                     * @returns {google.monitoring.v3.ServiceLevelIndicator} ServiceLevelIndicator instance
                     */
                    ServiceLevelIndicator.create = function create(properties) {
                        return new ServiceLevelIndicator(properties);
                    };
    
                    /**
                     * Encodes the specified ServiceLevelIndicator message. Does not implicitly {@link google.monitoring.v3.ServiceLevelIndicator.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.ServiceLevelIndicator
                     * @static
                     * @param {google.monitoring.v3.IServiceLevelIndicator} message ServiceLevelIndicator message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ServiceLevelIndicator.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.requestBased != null && Object.hasOwnProperty.call(message, "requestBased"))
                            $root.google.monitoring.v3.RequestBasedSli.encode(message.requestBased, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.windowsBased != null && Object.hasOwnProperty.call(message, "windowsBased"))
                            $root.google.monitoring.v3.WindowsBasedSli.encode(message.windowsBased, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.basicSli != null && Object.hasOwnProperty.call(message, "basicSli"))
                            $root.google.monitoring.v3.BasicSli.encode(message.basicSli, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ServiceLevelIndicator message, length delimited. Does not implicitly {@link google.monitoring.v3.ServiceLevelIndicator.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.ServiceLevelIndicator
                     * @static
                     * @param {google.monitoring.v3.IServiceLevelIndicator} message ServiceLevelIndicator message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ServiceLevelIndicator.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ServiceLevelIndicator message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.ServiceLevelIndicator
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.ServiceLevelIndicator} ServiceLevelIndicator
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ServiceLevelIndicator.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.ServiceLevelIndicator();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 4: {
                                    message.basicSli = $root.google.monitoring.v3.BasicSli.decode(reader, reader.uint32());
                                    break;
                                }
                            case 1: {
                                    message.requestBased = $root.google.monitoring.v3.RequestBasedSli.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.windowsBased = $root.google.monitoring.v3.WindowsBasedSli.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ServiceLevelIndicator message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.ServiceLevelIndicator
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.ServiceLevelIndicator} ServiceLevelIndicator
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ServiceLevelIndicator.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ServiceLevelIndicator message.
                     * @function verify
                     * @memberof google.monitoring.v3.ServiceLevelIndicator
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ServiceLevelIndicator.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        var properties = {};
                        if (message.basicSli != null && message.hasOwnProperty("basicSli")) {
                            properties.type = 1;
                            {
                                var error = $root.google.monitoring.v3.BasicSli.verify(message.basicSli);
                                if (error)
                                    return "basicSli." + error;
                            }
                        }
                        if (message.requestBased != null && message.hasOwnProperty("requestBased")) {
                            if (properties.type === 1)
                                return "type: multiple values";
                            properties.type = 1;
                            {
                                var error = $root.google.monitoring.v3.RequestBasedSli.verify(message.requestBased);
                                if (error)
                                    return "requestBased." + error;
                            }
                        }
                        if (message.windowsBased != null && message.hasOwnProperty("windowsBased")) {
                            if (properties.type === 1)
                                return "type: multiple values";
                            properties.type = 1;
                            {
                                var error = $root.google.monitoring.v3.WindowsBasedSli.verify(message.windowsBased);
                                if (error)
                                    return "windowsBased." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates a ServiceLevelIndicator message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.ServiceLevelIndicator
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.ServiceLevelIndicator} ServiceLevelIndicator
                     */
                    ServiceLevelIndicator.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.ServiceLevelIndicator)
                            return object;
                        var message = new $root.google.monitoring.v3.ServiceLevelIndicator();
                        if (object.basicSli != null) {
                            if (typeof object.basicSli !== "object")
                                throw TypeError(".google.monitoring.v3.ServiceLevelIndicator.basicSli: object expected");
                            message.basicSli = $root.google.monitoring.v3.BasicSli.fromObject(object.basicSli);
                        }
                        if (object.requestBased != null) {
                            if (typeof object.requestBased !== "object")
                                throw TypeError(".google.monitoring.v3.ServiceLevelIndicator.requestBased: object expected");
                            message.requestBased = $root.google.monitoring.v3.RequestBasedSli.fromObject(object.requestBased);
                        }
                        if (object.windowsBased != null) {
                            if (typeof object.windowsBased !== "object")
                                throw TypeError(".google.monitoring.v3.ServiceLevelIndicator.windowsBased: object expected");
                            message.windowsBased = $root.google.monitoring.v3.WindowsBasedSli.fromObject(object.windowsBased);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ServiceLevelIndicator message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.ServiceLevelIndicator
                     * @static
                     * @param {google.monitoring.v3.ServiceLevelIndicator} message ServiceLevelIndicator
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ServiceLevelIndicator.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (message.requestBased != null && message.hasOwnProperty("requestBased")) {
                            object.requestBased = $root.google.monitoring.v3.RequestBasedSli.toObject(message.requestBased, options);
                            if (options.oneofs)
                                object.type = "requestBased";
                        }
                        if (message.windowsBased != null && message.hasOwnProperty("windowsBased")) {
                            object.windowsBased = $root.google.monitoring.v3.WindowsBasedSli.toObject(message.windowsBased, options);
                            if (options.oneofs)
                                object.type = "windowsBased";
                        }
                        if (message.basicSli != null && message.hasOwnProperty("basicSli")) {
                            object.basicSli = $root.google.monitoring.v3.BasicSli.toObject(message.basicSli, options);
                            if (options.oneofs)
                                object.type = "basicSli";
                        }
                        return object;
                    };
    
                    /**
                     * Converts this ServiceLevelIndicator to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.ServiceLevelIndicator
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ServiceLevelIndicator.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ServiceLevelIndicator
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.ServiceLevelIndicator
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ServiceLevelIndicator.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.ServiceLevelIndicator";
                    };
    
                    return ServiceLevelIndicator;
                })();
    
                v3.BasicSli = (function() {
    
                    /**
                     * Properties of a BasicSli.
                     * @memberof google.monitoring.v3
                     * @interface IBasicSli
                     * @property {Array.<string>|null} [method] BasicSli method
                     * @property {Array.<string>|null} [location] BasicSli location
                     * @property {Array.<string>|null} [version] BasicSli version
                     * @property {google.monitoring.v3.BasicSli.IAvailabilityCriteria|null} [availability] BasicSli availability
                     * @property {google.monitoring.v3.BasicSli.ILatencyCriteria|null} [latency] BasicSli latency
                     */
    
                    /**
                     * Constructs a new BasicSli.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a BasicSli.
                     * @implements IBasicSli
                     * @constructor
                     * @param {google.monitoring.v3.IBasicSli=} [properties] Properties to set
                     */
                    function BasicSli(properties) {
                        this.method = [];
                        this.location = [];
                        this.version = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * BasicSli method.
                     * @member {Array.<string>} method
                     * @memberof google.monitoring.v3.BasicSli
                     * @instance
                     */
                    BasicSli.prototype.method = $util.emptyArray;
    
                    /**
                     * BasicSli location.
                     * @member {Array.<string>} location
                     * @memberof google.monitoring.v3.BasicSli
                     * @instance
                     */
                    BasicSli.prototype.location = $util.emptyArray;
    
                    /**
                     * BasicSli version.
                     * @member {Array.<string>} version
                     * @memberof google.monitoring.v3.BasicSli
                     * @instance
                     */
                    BasicSli.prototype.version = $util.emptyArray;
    
                    /**
                     * BasicSli availability.
                     * @member {google.monitoring.v3.BasicSli.IAvailabilityCriteria|null|undefined} availability
                     * @memberof google.monitoring.v3.BasicSli
                     * @instance
                     */
                    BasicSli.prototype.availability = null;
    
                    /**
                     * BasicSli latency.
                     * @member {google.monitoring.v3.BasicSli.ILatencyCriteria|null|undefined} latency
                     * @memberof google.monitoring.v3.BasicSli
                     * @instance
                     */
                    BasicSli.prototype.latency = null;
    
                    // OneOf field names bound to virtual getters and setters
                    var $oneOfFields;
    
                    /**
                     * BasicSli sliCriteria.
                     * @member {"availability"|"latency"|undefined} sliCriteria
                     * @memberof google.monitoring.v3.BasicSli
                     * @instance
                     */
                    Object.defineProperty(BasicSli.prototype, "sliCriteria", {
                        get: $util.oneOfGetter($oneOfFields = ["availability", "latency"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });
    
                    /**
                     * Creates a new BasicSli instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.BasicSli
                     * @static
                     * @param {google.monitoring.v3.IBasicSli=} [properties] Properties to set
                     * @returns {google.monitoring.v3.BasicSli} BasicSli instance
                     */
                    BasicSli.create = function create(properties) {
                        return new BasicSli(properties);
                    };
    
                    /**
                     * Encodes the specified BasicSli message. Does not implicitly {@link google.monitoring.v3.BasicSli.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.BasicSli
                     * @static
                     * @param {google.monitoring.v3.IBasicSli} message BasicSli message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    BasicSli.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.availability != null && Object.hasOwnProperty.call(message, "availability"))
                            $root.google.monitoring.v3.BasicSli.AvailabilityCriteria.encode(message.availability, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.latency != null && Object.hasOwnProperty.call(message, "latency"))
                            $root.google.monitoring.v3.BasicSli.LatencyCriteria.encode(message.latency, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        if (message.method != null && message.method.length)
                            for (var i = 0; i < message.method.length; ++i)
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.method[i]);
                        if (message.location != null && message.location.length)
                            for (var i = 0; i < message.location.length; ++i)
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.location[i]);
                        if (message.version != null && message.version.length)
                            for (var i = 0; i < message.version.length; ++i)
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.version[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified BasicSli message, length delimited. Does not implicitly {@link google.monitoring.v3.BasicSli.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.BasicSli
                     * @static
                     * @param {google.monitoring.v3.IBasicSli} message BasicSli message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    BasicSli.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a BasicSli message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.BasicSli
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.BasicSli} BasicSli
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    BasicSli.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.BasicSli();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 7: {
                                    if (!(message.method && message.method.length))
                                        message.method = [];
                                    message.method.push(reader.string());
                                    break;
                                }
                            case 8: {
                                    if (!(message.location && message.location.length))
                                        message.location = [];
                                    message.location.push(reader.string());
                                    break;
                                }
                            case 9: {
                                    if (!(message.version && message.version.length))
                                        message.version = [];
                                    message.version.push(reader.string());
                                    break;
                                }
                            case 2: {
                                    message.availability = $root.google.monitoring.v3.BasicSli.AvailabilityCriteria.decode(reader, reader.uint32());
                                    break;
                                }
                            case 3: {
                                    message.latency = $root.google.monitoring.v3.BasicSli.LatencyCriteria.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a BasicSli message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.BasicSli
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.BasicSli} BasicSli
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    BasicSli.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a BasicSli message.
                     * @function verify
                     * @memberof google.monitoring.v3.BasicSli
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    BasicSli.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        var properties = {};
                        if (message.method != null && message.hasOwnProperty("method")) {
                            if (!Array.isArray(message.method))
                                return "method: array expected";
                            for (var i = 0; i < message.method.length; ++i)
                                if (!$util.isString(message.method[i]))
                                    return "method: string[] expected";
                        }
                        if (message.location != null && message.hasOwnProperty("location")) {
                            if (!Array.isArray(message.location))
                                return "location: array expected";
                            for (var i = 0; i < message.location.length; ++i)
                                if (!$util.isString(message.location[i]))
                                    return "location: string[] expected";
                        }
                        if (message.version != null && message.hasOwnProperty("version")) {
                            if (!Array.isArray(message.version))
                                return "version: array expected";
                            for (var i = 0; i < message.version.length; ++i)
                                if (!$util.isString(message.version[i]))
                                    return "version: string[] expected";
                        }
                        if (message.availability != null && message.hasOwnProperty("availability")) {
                            properties.sliCriteria = 1;
                            {
                                var error = $root.google.monitoring.v3.BasicSli.AvailabilityCriteria.verify(message.availability);
                                if (error)
                                    return "availability." + error;
                            }
                        }
                        if (message.latency != null && message.hasOwnProperty("latency")) {
                            if (properties.sliCriteria === 1)
                                return "sliCriteria: multiple values";
                            properties.sliCriteria = 1;
                            {
                                var error = $root.google.monitoring.v3.BasicSli.LatencyCriteria.verify(message.latency);
                                if (error)
                                    return "latency." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates a BasicSli message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.BasicSli
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.BasicSli} BasicSli
                     */
                    BasicSli.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.BasicSli)
                            return object;
                        var message = new $root.google.monitoring.v3.BasicSli();
                        if (object.method) {
                            if (!Array.isArray(object.method))
                                throw TypeError(".google.monitoring.v3.BasicSli.method: array expected");
                            message.method = [];
                            for (var i = 0; i < object.method.length; ++i)
                                message.method[i] = String(object.method[i]);
                        }
                        if (object.location) {
                            if (!Array.isArray(object.location))
                                throw TypeError(".google.monitoring.v3.BasicSli.location: array expected");
                            message.location = [];
                            for (var i = 0; i < object.location.length; ++i)
                                message.location[i] = String(object.location[i]);
                        }
                        if (object.version) {
                            if (!Array.isArray(object.version))
                                throw TypeError(".google.monitoring.v3.BasicSli.version: array expected");
                            message.version = [];
                            for (var i = 0; i < object.version.length; ++i)
                                message.version[i] = String(object.version[i]);
                        }
                        if (object.availability != null) {
                            if (typeof object.availability !== "object")
                                throw TypeError(".google.monitoring.v3.BasicSli.availability: object expected");
                            message.availability = $root.google.monitoring.v3.BasicSli.AvailabilityCriteria.fromObject(object.availability);
                        }
                        if (object.latency != null) {
                            if (typeof object.latency !== "object")
                                throw TypeError(".google.monitoring.v3.BasicSli.latency: object expected");
                            message.latency = $root.google.monitoring.v3.BasicSli.LatencyCriteria.fromObject(object.latency);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a BasicSli message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.BasicSli
                     * @static
                     * @param {google.monitoring.v3.BasicSli} message BasicSli
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    BasicSli.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.method = [];
                            object.location = [];
                            object.version = [];
                        }
                        if (message.availability != null && message.hasOwnProperty("availability")) {
                            object.availability = $root.google.monitoring.v3.BasicSli.AvailabilityCriteria.toObject(message.availability, options);
                            if (options.oneofs)
                                object.sliCriteria = "availability";
                        }
                        if (message.latency != null && message.hasOwnProperty("latency")) {
                            object.latency = $root.google.monitoring.v3.BasicSli.LatencyCriteria.toObject(message.latency, options);
                            if (options.oneofs)
                                object.sliCriteria = "latency";
                        }
                        if (message.method && message.method.length) {
                            object.method = [];
                            for (var j = 0; j < message.method.length; ++j)
                                object.method[j] = message.method[j];
                        }
                        if (message.location && message.location.length) {
                            object.location = [];
                            for (var j = 0; j < message.location.length; ++j)
                                object.location[j] = message.location[j];
                        }
                        if (message.version && message.version.length) {
                            object.version = [];
                            for (var j = 0; j < message.version.length; ++j)
                                object.version[j] = message.version[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this BasicSli to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.BasicSli
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    BasicSli.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for BasicSli
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.BasicSli
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    BasicSli.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.BasicSli";
                    };
    
                    BasicSli.AvailabilityCriteria = (function() {
    
                        /**
                         * Properties of an AvailabilityCriteria.
                         * @memberof google.monitoring.v3.BasicSli
                         * @interface IAvailabilityCriteria
                         */
    
                        /**
                         * Constructs a new AvailabilityCriteria.
                         * @memberof google.monitoring.v3.BasicSli
                         * @classdesc Represents an AvailabilityCriteria.
                         * @implements IAvailabilityCriteria
                         * @constructor
                         * @param {google.monitoring.v3.BasicSli.IAvailabilityCriteria=} [properties] Properties to set
                         */
                        function AvailabilityCriteria(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new AvailabilityCriteria instance using the specified properties.
                         * @function create
                         * @memberof google.monitoring.v3.BasicSli.AvailabilityCriteria
                         * @static
                         * @param {google.monitoring.v3.BasicSli.IAvailabilityCriteria=} [properties] Properties to set
                         * @returns {google.monitoring.v3.BasicSli.AvailabilityCriteria} AvailabilityCriteria instance
                         */
                        AvailabilityCriteria.create = function create(properties) {
                            return new AvailabilityCriteria(properties);
                        };
    
                        /**
                         * Encodes the specified AvailabilityCriteria message. Does not implicitly {@link google.monitoring.v3.BasicSli.AvailabilityCriteria.verify|verify} messages.
                         * @function encode
                         * @memberof google.monitoring.v3.BasicSli.AvailabilityCriteria
                         * @static
                         * @param {google.monitoring.v3.BasicSli.IAvailabilityCriteria} message AvailabilityCriteria message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AvailabilityCriteria.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AvailabilityCriteria message, length delimited. Does not implicitly {@link google.monitoring.v3.BasicSli.AvailabilityCriteria.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.monitoring.v3.BasicSli.AvailabilityCriteria
                         * @static
                         * @param {google.monitoring.v3.BasicSli.IAvailabilityCriteria} message AvailabilityCriteria message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AvailabilityCriteria.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AvailabilityCriteria message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.monitoring.v3.BasicSli.AvailabilityCriteria
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.monitoring.v3.BasicSli.AvailabilityCriteria} AvailabilityCriteria
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AvailabilityCriteria.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.BasicSli.AvailabilityCriteria();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AvailabilityCriteria message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.monitoring.v3.BasicSli.AvailabilityCriteria
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.monitoring.v3.BasicSli.AvailabilityCriteria} AvailabilityCriteria
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AvailabilityCriteria.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AvailabilityCriteria message.
                         * @function verify
                         * @memberof google.monitoring.v3.BasicSli.AvailabilityCriteria
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AvailabilityCriteria.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates an AvailabilityCriteria message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.monitoring.v3.BasicSli.AvailabilityCriteria
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.monitoring.v3.BasicSli.AvailabilityCriteria} AvailabilityCriteria
                         */
                        AvailabilityCriteria.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.monitoring.v3.BasicSli.AvailabilityCriteria)
                                return object;
                            return new $root.google.monitoring.v3.BasicSli.AvailabilityCriteria();
                        };
    
                        /**
                         * Creates a plain object from an AvailabilityCriteria message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.monitoring.v3.BasicSli.AvailabilityCriteria
                         * @static
                         * @param {google.monitoring.v3.BasicSli.AvailabilityCriteria} message AvailabilityCriteria
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AvailabilityCriteria.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this AvailabilityCriteria to JSON.
                         * @function toJSON
                         * @memberof google.monitoring.v3.BasicSli.AvailabilityCriteria
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AvailabilityCriteria.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AvailabilityCriteria
                         * @function getTypeUrl
                         * @memberof google.monitoring.v3.BasicSli.AvailabilityCriteria
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AvailabilityCriteria.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.monitoring.v3.BasicSli.AvailabilityCriteria";
                        };
    
                        return AvailabilityCriteria;
                    })();
    
                    BasicSli.LatencyCriteria = (function() {
    
                        /**
                         * Properties of a LatencyCriteria.
                         * @memberof google.monitoring.v3.BasicSli
                         * @interface ILatencyCriteria
                         * @property {google.protobuf.IDuration|null} [threshold] LatencyCriteria threshold
                         */
    
                        /**
                         * Constructs a new LatencyCriteria.
                         * @memberof google.monitoring.v3.BasicSli
                         * @classdesc Represents a LatencyCriteria.
                         * @implements ILatencyCriteria
                         * @constructor
                         * @param {google.monitoring.v3.BasicSli.ILatencyCriteria=} [properties] Properties to set
                         */
                        function LatencyCriteria(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * LatencyCriteria threshold.
                         * @member {google.protobuf.IDuration|null|undefined} threshold
                         * @memberof google.monitoring.v3.BasicSli.LatencyCriteria
                         * @instance
                         */
                        LatencyCriteria.prototype.threshold = null;
    
                        /**
                         * Creates a new LatencyCriteria instance using the specified properties.
                         * @function create
                         * @memberof google.monitoring.v3.BasicSli.LatencyCriteria
                         * @static
                         * @param {google.monitoring.v3.BasicSli.ILatencyCriteria=} [properties] Properties to set
                         * @returns {google.monitoring.v3.BasicSli.LatencyCriteria} LatencyCriteria instance
                         */
                        LatencyCriteria.create = function create(properties) {
                            return new LatencyCriteria(properties);
                        };
    
                        /**
                         * Encodes the specified LatencyCriteria message. Does not implicitly {@link google.monitoring.v3.BasicSli.LatencyCriteria.verify|verify} messages.
                         * @function encode
                         * @memberof google.monitoring.v3.BasicSli.LatencyCriteria
                         * @static
                         * @param {google.monitoring.v3.BasicSli.ILatencyCriteria} message LatencyCriteria message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LatencyCriteria.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.threshold != null && Object.hasOwnProperty.call(message, "threshold"))
                                $root.google.protobuf.Duration.encode(message.threshold, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified LatencyCriteria message, length delimited. Does not implicitly {@link google.monitoring.v3.BasicSli.LatencyCriteria.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.monitoring.v3.BasicSli.LatencyCriteria
                         * @static
                         * @param {google.monitoring.v3.BasicSli.ILatencyCriteria} message LatencyCriteria message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LatencyCriteria.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a LatencyCriteria message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.monitoring.v3.BasicSli.LatencyCriteria
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.monitoring.v3.BasicSli.LatencyCriteria} LatencyCriteria
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LatencyCriteria.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.BasicSli.LatencyCriteria();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 3: {
                                        message.threshold = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a LatencyCriteria message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.monitoring.v3.BasicSli.LatencyCriteria
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.monitoring.v3.BasicSli.LatencyCriteria} LatencyCriteria
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LatencyCriteria.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a LatencyCriteria message.
                         * @function verify
                         * @memberof google.monitoring.v3.BasicSli.LatencyCriteria
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        LatencyCriteria.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.threshold != null && message.hasOwnProperty("threshold")) {
                                var error = $root.google.protobuf.Duration.verify(message.threshold);
                                if (error)
                                    return "threshold." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a LatencyCriteria message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.monitoring.v3.BasicSli.LatencyCriteria
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.monitoring.v3.BasicSli.LatencyCriteria} LatencyCriteria
                         */
                        LatencyCriteria.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.monitoring.v3.BasicSli.LatencyCriteria)
                                return object;
                            var message = new $root.google.monitoring.v3.BasicSli.LatencyCriteria();
                            if (object.threshold != null) {
                                if (typeof object.threshold !== "object")
                                    throw TypeError(".google.monitoring.v3.BasicSli.LatencyCriteria.threshold: object expected");
                                message.threshold = $root.google.protobuf.Duration.fromObject(object.threshold);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a LatencyCriteria message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.monitoring.v3.BasicSli.LatencyCriteria
                         * @static
                         * @param {google.monitoring.v3.BasicSli.LatencyCriteria} message LatencyCriteria
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        LatencyCriteria.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.threshold = null;
                            if (message.threshold != null && message.hasOwnProperty("threshold"))
                                object.threshold = $root.google.protobuf.Duration.toObject(message.threshold, options);
                            return object;
                        };
    
                        /**
                         * Converts this LatencyCriteria to JSON.
                         * @function toJSON
                         * @memberof google.monitoring.v3.BasicSli.LatencyCriteria
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        LatencyCriteria.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for LatencyCriteria
                         * @function getTypeUrl
                         * @memberof google.monitoring.v3.BasicSli.LatencyCriteria
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        LatencyCriteria.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.monitoring.v3.BasicSli.LatencyCriteria";
                        };
    
                        return LatencyCriteria;
                    })();
    
                    return BasicSli;
                })();
    
                v3.Range = (function() {
    
                    /**
                     * Properties of a Range.
                     * @memberof google.monitoring.v3
                     * @interface IRange
                     * @property {number|null} [min] Range min
                     * @property {number|null} [max] Range max
                     */
    
                    /**
                     * Constructs a new Range.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a Range.
                     * @implements IRange
                     * @constructor
                     * @param {google.monitoring.v3.IRange=} [properties] Properties to set
                     */
                    function Range(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Range min.
                     * @member {number} min
                     * @memberof google.monitoring.v3.Range
                     * @instance
                     */
                    Range.prototype.min = 0;
    
                    /**
                     * Range max.
                     * @member {number} max
                     * @memberof google.monitoring.v3.Range
                     * @instance
                     */
                    Range.prototype.max = 0;
    
                    /**
                     * Creates a new Range instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.Range
                     * @static
                     * @param {google.monitoring.v3.IRange=} [properties] Properties to set
                     * @returns {google.monitoring.v3.Range} Range instance
                     */
                    Range.create = function create(properties) {
                        return new Range(properties);
                    };
    
                    /**
                     * Encodes the specified Range message. Does not implicitly {@link google.monitoring.v3.Range.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.Range
                     * @static
                     * @param {google.monitoring.v3.IRange} message Range message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Range.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.min != null && Object.hasOwnProperty.call(message, "min"))
                            writer.uint32(/* id 1, wireType 1 =*/9).double(message.min);
                        if (message.max != null && Object.hasOwnProperty.call(message, "max"))
                            writer.uint32(/* id 2, wireType 1 =*/17).double(message.max);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Range message, length delimited. Does not implicitly {@link google.monitoring.v3.Range.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.Range
                     * @static
                     * @param {google.monitoring.v3.IRange} message Range message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Range.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Range message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.Range
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.Range} Range
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Range.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.Range();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.min = reader.double();
                                    break;
                                }
                            case 2: {
                                    message.max = reader.double();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Range message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.Range
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.Range} Range
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Range.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Range message.
                     * @function verify
                     * @memberof google.monitoring.v3.Range
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Range.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.min != null && message.hasOwnProperty("min"))
                            if (typeof message.min !== "number")
                                return "min: number expected";
                        if (message.max != null && message.hasOwnProperty("max"))
                            if (typeof message.max !== "number")
                                return "max: number expected";
                        return null;
                    };
    
                    /**
                     * Creates a Range message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.Range
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.Range} Range
                     */
                    Range.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.Range)
                            return object;
                        var message = new $root.google.monitoring.v3.Range();
                        if (object.min != null)
                            message.min = Number(object.min);
                        if (object.max != null)
                            message.max = Number(object.max);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Range message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.Range
                     * @static
                     * @param {google.monitoring.v3.Range} message Range
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Range.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.min = 0;
                            object.max = 0;
                        }
                        if (message.min != null && message.hasOwnProperty("min"))
                            object.min = options.json && !isFinite(message.min) ? String(message.min) : message.min;
                        if (message.max != null && message.hasOwnProperty("max"))
                            object.max = options.json && !isFinite(message.max) ? String(message.max) : message.max;
                        return object;
                    };
    
                    /**
                     * Converts this Range to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.Range
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Range.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Range
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.Range
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Range.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.Range";
                    };
    
                    return Range;
                })();
    
                v3.RequestBasedSli = (function() {
    
                    /**
                     * Properties of a RequestBasedSli.
                     * @memberof google.monitoring.v3
                     * @interface IRequestBasedSli
                     * @property {google.monitoring.v3.ITimeSeriesRatio|null} [goodTotalRatio] RequestBasedSli goodTotalRatio
                     * @property {google.monitoring.v3.IDistributionCut|null} [distributionCut] RequestBasedSli distributionCut
                     */
    
                    /**
                     * Constructs a new RequestBasedSli.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a RequestBasedSli.
                     * @implements IRequestBasedSli
                     * @constructor
                     * @param {google.monitoring.v3.IRequestBasedSli=} [properties] Properties to set
                     */
                    function RequestBasedSli(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * RequestBasedSli goodTotalRatio.
                     * @member {google.monitoring.v3.ITimeSeriesRatio|null|undefined} goodTotalRatio
                     * @memberof google.monitoring.v3.RequestBasedSli
                     * @instance
                     */
                    RequestBasedSli.prototype.goodTotalRatio = null;
    
                    /**
                     * RequestBasedSli distributionCut.
                     * @member {google.monitoring.v3.IDistributionCut|null|undefined} distributionCut
                     * @memberof google.monitoring.v3.RequestBasedSli
                     * @instance
                     */
                    RequestBasedSli.prototype.distributionCut = null;
    
                    // OneOf field names bound to virtual getters and setters
                    var $oneOfFields;
    
                    /**
                     * RequestBasedSli method.
                     * @member {"goodTotalRatio"|"distributionCut"|undefined} method
                     * @memberof google.monitoring.v3.RequestBasedSli
                     * @instance
                     */
                    Object.defineProperty(RequestBasedSli.prototype, "method", {
                        get: $util.oneOfGetter($oneOfFields = ["goodTotalRatio", "distributionCut"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });
    
                    /**
                     * Creates a new RequestBasedSli instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.RequestBasedSli
                     * @static
                     * @param {google.monitoring.v3.IRequestBasedSli=} [properties] Properties to set
                     * @returns {google.monitoring.v3.RequestBasedSli} RequestBasedSli instance
                     */
                    RequestBasedSli.create = function create(properties) {
                        return new RequestBasedSli(properties);
                    };
    
                    /**
                     * Encodes the specified RequestBasedSli message. Does not implicitly {@link google.monitoring.v3.RequestBasedSli.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.RequestBasedSli
                     * @static
                     * @param {google.monitoring.v3.IRequestBasedSli} message RequestBasedSli message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    RequestBasedSli.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.goodTotalRatio != null && Object.hasOwnProperty.call(message, "goodTotalRatio"))
                            $root.google.monitoring.v3.TimeSeriesRatio.encode(message.goodTotalRatio, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.distributionCut != null && Object.hasOwnProperty.call(message, "distributionCut"))
                            $root.google.monitoring.v3.DistributionCut.encode(message.distributionCut, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified RequestBasedSli message, length delimited. Does not implicitly {@link google.monitoring.v3.RequestBasedSli.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.RequestBasedSli
                     * @static
                     * @param {google.monitoring.v3.IRequestBasedSli} message RequestBasedSli message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    RequestBasedSli.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a RequestBasedSli message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.RequestBasedSli
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.RequestBasedSli} RequestBasedSli
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    RequestBasedSli.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.RequestBasedSli();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.goodTotalRatio = $root.google.monitoring.v3.TimeSeriesRatio.decode(reader, reader.uint32());
                                    break;
                                }
                            case 3: {
                                    message.distributionCut = $root.google.monitoring.v3.DistributionCut.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a RequestBasedSli message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.RequestBasedSli
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.RequestBasedSli} RequestBasedSli
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    RequestBasedSli.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a RequestBasedSli message.
                     * @function verify
                     * @memberof google.monitoring.v3.RequestBasedSli
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    RequestBasedSli.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        var properties = {};
                        if (message.goodTotalRatio != null && message.hasOwnProperty("goodTotalRatio")) {
                            properties.method = 1;
                            {
                                var error = $root.google.monitoring.v3.TimeSeriesRatio.verify(message.goodTotalRatio);
                                if (error)
                                    return "goodTotalRatio." + error;
                            }
                        }
                        if (message.distributionCut != null && message.hasOwnProperty("distributionCut")) {
                            if (properties.method === 1)
                                return "method: multiple values";
                            properties.method = 1;
                            {
                                var error = $root.google.monitoring.v3.DistributionCut.verify(message.distributionCut);
                                if (error)
                                    return "distributionCut." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates a RequestBasedSli message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.RequestBasedSli
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.RequestBasedSli} RequestBasedSli
                     */
                    RequestBasedSli.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.RequestBasedSli)
                            return object;
                        var message = new $root.google.monitoring.v3.RequestBasedSli();
                        if (object.goodTotalRatio != null) {
                            if (typeof object.goodTotalRatio !== "object")
                                throw TypeError(".google.monitoring.v3.RequestBasedSli.goodTotalRatio: object expected");
                            message.goodTotalRatio = $root.google.monitoring.v3.TimeSeriesRatio.fromObject(object.goodTotalRatio);
                        }
                        if (object.distributionCut != null) {
                            if (typeof object.distributionCut !== "object")
                                throw TypeError(".google.monitoring.v3.RequestBasedSli.distributionCut: object expected");
                            message.distributionCut = $root.google.monitoring.v3.DistributionCut.fromObject(object.distributionCut);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a RequestBasedSli message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.RequestBasedSli
                     * @static
                     * @param {google.monitoring.v3.RequestBasedSli} message RequestBasedSli
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    RequestBasedSli.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (message.goodTotalRatio != null && message.hasOwnProperty("goodTotalRatio")) {
                            object.goodTotalRatio = $root.google.monitoring.v3.TimeSeriesRatio.toObject(message.goodTotalRatio, options);
                            if (options.oneofs)
                                object.method = "goodTotalRatio";
                        }
                        if (message.distributionCut != null && message.hasOwnProperty("distributionCut")) {
                            object.distributionCut = $root.google.monitoring.v3.DistributionCut.toObject(message.distributionCut, options);
                            if (options.oneofs)
                                object.method = "distributionCut";
                        }
                        return object;
                    };
    
                    /**
                     * Converts this RequestBasedSli to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.RequestBasedSli
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    RequestBasedSli.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for RequestBasedSli
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.RequestBasedSli
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    RequestBasedSli.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.RequestBasedSli";
                    };
    
                    return RequestBasedSli;
                })();
    
                v3.TimeSeriesRatio = (function() {
    
                    /**
                     * Properties of a TimeSeriesRatio.
                     * @memberof google.monitoring.v3
                     * @interface ITimeSeriesRatio
                     * @property {string|null} [goodServiceFilter] TimeSeriesRatio goodServiceFilter
                     * @property {string|null} [badServiceFilter] TimeSeriesRatio badServiceFilter
                     * @property {string|null} [totalServiceFilter] TimeSeriesRatio totalServiceFilter
                     */
    
                    /**
                     * Constructs a new TimeSeriesRatio.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a TimeSeriesRatio.
                     * @implements ITimeSeriesRatio
                     * @constructor
                     * @param {google.monitoring.v3.ITimeSeriesRatio=} [properties] Properties to set
                     */
                    function TimeSeriesRatio(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * TimeSeriesRatio goodServiceFilter.
                     * @member {string} goodServiceFilter
                     * @memberof google.monitoring.v3.TimeSeriesRatio
                     * @instance
                     */
                    TimeSeriesRatio.prototype.goodServiceFilter = "";
    
                    /**
                     * TimeSeriesRatio badServiceFilter.
                     * @member {string} badServiceFilter
                     * @memberof google.monitoring.v3.TimeSeriesRatio
                     * @instance
                     */
                    TimeSeriesRatio.prototype.badServiceFilter = "";
    
                    /**
                     * TimeSeriesRatio totalServiceFilter.
                     * @member {string} totalServiceFilter
                     * @memberof google.monitoring.v3.TimeSeriesRatio
                     * @instance
                     */
                    TimeSeriesRatio.prototype.totalServiceFilter = "";
    
                    /**
                     * Creates a new TimeSeriesRatio instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.TimeSeriesRatio
                     * @static
                     * @param {google.monitoring.v3.ITimeSeriesRatio=} [properties] Properties to set
                     * @returns {google.monitoring.v3.TimeSeriesRatio} TimeSeriesRatio instance
                     */
                    TimeSeriesRatio.create = function create(properties) {
                        return new TimeSeriesRatio(properties);
                    };
    
                    /**
                     * Encodes the specified TimeSeriesRatio message. Does not implicitly {@link google.monitoring.v3.TimeSeriesRatio.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.TimeSeriesRatio
                     * @static
                     * @param {google.monitoring.v3.ITimeSeriesRatio} message TimeSeriesRatio message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    TimeSeriesRatio.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.goodServiceFilter != null && Object.hasOwnProperty.call(message, "goodServiceFilter"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.goodServiceFilter);
                        if (message.badServiceFilter != null && Object.hasOwnProperty.call(message, "badServiceFilter"))
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.badServiceFilter);
                        if (message.totalServiceFilter != null && Object.hasOwnProperty.call(message, "totalServiceFilter"))
                            writer.uint32(/* id 6, wireType 2 =*/50).string(message.totalServiceFilter);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified TimeSeriesRatio message, length delimited. Does not implicitly {@link google.monitoring.v3.TimeSeriesRatio.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.TimeSeriesRatio
                     * @static
                     * @param {google.monitoring.v3.ITimeSeriesRatio} message TimeSeriesRatio message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    TimeSeriesRatio.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a TimeSeriesRatio message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.TimeSeriesRatio
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.TimeSeriesRatio} TimeSeriesRatio
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    TimeSeriesRatio.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.TimeSeriesRatio();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 4: {
                                    message.goodServiceFilter = reader.string();
                                    break;
                                }
                            case 5: {
                                    message.badServiceFilter = reader.string();
                                    break;
                                }
                            case 6: {
                                    message.totalServiceFilter = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a TimeSeriesRatio message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.TimeSeriesRatio
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.TimeSeriesRatio} TimeSeriesRatio
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    TimeSeriesRatio.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a TimeSeriesRatio message.
                     * @function verify
                     * @memberof google.monitoring.v3.TimeSeriesRatio
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    TimeSeriesRatio.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.goodServiceFilter != null && message.hasOwnProperty("goodServiceFilter"))
                            if (!$util.isString(message.goodServiceFilter))
                                return "goodServiceFilter: string expected";
                        if (message.badServiceFilter != null && message.hasOwnProperty("badServiceFilter"))
                            if (!$util.isString(message.badServiceFilter))
                                return "badServiceFilter: string expected";
                        if (message.totalServiceFilter != null && message.hasOwnProperty("totalServiceFilter"))
                            if (!$util.isString(message.totalServiceFilter))
                                return "totalServiceFilter: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a TimeSeriesRatio message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.TimeSeriesRatio
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.TimeSeriesRatio} TimeSeriesRatio
                     */
                    TimeSeriesRatio.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.TimeSeriesRatio)
                            return object;
                        var message = new $root.google.monitoring.v3.TimeSeriesRatio();
                        if (object.goodServiceFilter != null)
                            message.goodServiceFilter = String(object.goodServiceFilter);
                        if (object.badServiceFilter != null)
                            message.badServiceFilter = String(object.badServiceFilter);
                        if (object.totalServiceFilter != null)
                            message.totalServiceFilter = String(object.totalServiceFilter);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a TimeSeriesRatio message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.TimeSeriesRatio
                     * @static
                     * @param {google.monitoring.v3.TimeSeriesRatio} message TimeSeriesRatio
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    TimeSeriesRatio.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.goodServiceFilter = "";
                            object.badServiceFilter = "";
                            object.totalServiceFilter = "";
                        }
                        if (message.goodServiceFilter != null && message.hasOwnProperty("goodServiceFilter"))
                            object.goodServiceFilter = message.goodServiceFilter;
                        if (message.badServiceFilter != null && message.hasOwnProperty("badServiceFilter"))
                            object.badServiceFilter = message.badServiceFilter;
                        if (message.totalServiceFilter != null && message.hasOwnProperty("totalServiceFilter"))
                            object.totalServiceFilter = message.totalServiceFilter;
                        return object;
                    };
    
                    /**
                     * Converts this TimeSeriesRatio to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.TimeSeriesRatio
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    TimeSeriesRatio.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for TimeSeriesRatio
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.TimeSeriesRatio
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    TimeSeriesRatio.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.TimeSeriesRatio";
                    };
    
                    return TimeSeriesRatio;
                })();
    
                v3.DistributionCut = (function() {
    
                    /**
                     * Properties of a DistributionCut.
                     * @memberof google.monitoring.v3
                     * @interface IDistributionCut
                     * @property {string|null} [distributionFilter] DistributionCut distributionFilter
                     * @property {google.monitoring.v3.IRange|null} [range] DistributionCut range
                     */
    
                    /**
                     * Constructs a new DistributionCut.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a DistributionCut.
                     * @implements IDistributionCut
                     * @constructor
                     * @param {google.monitoring.v3.IDistributionCut=} [properties] Properties to set
                     */
                    function DistributionCut(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * DistributionCut distributionFilter.
                     * @member {string} distributionFilter
                     * @memberof google.monitoring.v3.DistributionCut
                     * @instance
                     */
                    DistributionCut.prototype.distributionFilter = "";
    
                    /**
                     * DistributionCut range.
                     * @member {google.monitoring.v3.IRange|null|undefined} range
                     * @memberof google.monitoring.v3.DistributionCut
                     * @instance
                     */
                    DistributionCut.prototype.range = null;
    
                    /**
                     * Creates a new DistributionCut instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.DistributionCut
                     * @static
                     * @param {google.monitoring.v3.IDistributionCut=} [properties] Properties to set
                     * @returns {google.monitoring.v3.DistributionCut} DistributionCut instance
                     */
                    DistributionCut.create = function create(properties) {
                        return new DistributionCut(properties);
                    };
    
                    /**
                     * Encodes the specified DistributionCut message. Does not implicitly {@link google.monitoring.v3.DistributionCut.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.DistributionCut
                     * @static
                     * @param {google.monitoring.v3.IDistributionCut} message DistributionCut message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DistributionCut.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.distributionFilter != null && Object.hasOwnProperty.call(message, "distributionFilter"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.distributionFilter);
                        if (message.range != null && Object.hasOwnProperty.call(message, "range"))
                            $root.google.monitoring.v3.Range.encode(message.range, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified DistributionCut message, length delimited. Does not implicitly {@link google.monitoring.v3.DistributionCut.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.DistributionCut
                     * @static
                     * @param {google.monitoring.v3.IDistributionCut} message DistributionCut message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DistributionCut.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a DistributionCut message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.DistributionCut
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.DistributionCut} DistributionCut
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DistributionCut.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.DistributionCut();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 4: {
                                    message.distributionFilter = reader.string();
                                    break;
                                }
                            case 5: {
                                    message.range = $root.google.monitoring.v3.Range.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a DistributionCut message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.DistributionCut
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.DistributionCut} DistributionCut
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DistributionCut.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a DistributionCut message.
                     * @function verify
                     * @memberof google.monitoring.v3.DistributionCut
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    DistributionCut.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.distributionFilter != null && message.hasOwnProperty("distributionFilter"))
                            if (!$util.isString(message.distributionFilter))
                                return "distributionFilter: string expected";
                        if (message.range != null && message.hasOwnProperty("range")) {
                            var error = $root.google.monitoring.v3.Range.verify(message.range);
                            if (error)
                                return "range." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a DistributionCut message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.DistributionCut
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.DistributionCut} DistributionCut
                     */
                    DistributionCut.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.DistributionCut)
                            return object;
                        var message = new $root.google.monitoring.v3.DistributionCut();
                        if (object.distributionFilter != null)
                            message.distributionFilter = String(object.distributionFilter);
                        if (object.range != null) {
                            if (typeof object.range !== "object")
                                throw TypeError(".google.monitoring.v3.DistributionCut.range: object expected");
                            message.range = $root.google.monitoring.v3.Range.fromObject(object.range);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a DistributionCut message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.DistributionCut
                     * @static
                     * @param {google.monitoring.v3.DistributionCut} message DistributionCut
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    DistributionCut.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.distributionFilter = "";
                            object.range = null;
                        }
                        if (message.distributionFilter != null && message.hasOwnProperty("distributionFilter"))
                            object.distributionFilter = message.distributionFilter;
                        if (message.range != null && message.hasOwnProperty("range"))
                            object.range = $root.google.monitoring.v3.Range.toObject(message.range, options);
                        return object;
                    };
    
                    /**
                     * Converts this DistributionCut to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.DistributionCut
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    DistributionCut.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for DistributionCut
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.DistributionCut
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    DistributionCut.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.DistributionCut";
                    };
    
                    return DistributionCut;
                })();
    
                v3.WindowsBasedSli = (function() {
    
                    /**
                     * Properties of a WindowsBasedSli.
                     * @memberof google.monitoring.v3
                     * @interface IWindowsBasedSli
                     * @property {string|null} [goodBadMetricFilter] WindowsBasedSli goodBadMetricFilter
                     * @property {google.monitoring.v3.WindowsBasedSli.IPerformanceThreshold|null} [goodTotalRatioThreshold] WindowsBasedSli goodTotalRatioThreshold
                     * @property {google.monitoring.v3.WindowsBasedSli.IMetricRange|null} [metricMeanInRange] WindowsBasedSli metricMeanInRange
                     * @property {google.monitoring.v3.WindowsBasedSli.IMetricRange|null} [metricSumInRange] WindowsBasedSli metricSumInRange
                     * @property {google.protobuf.IDuration|null} [windowPeriod] WindowsBasedSli windowPeriod
                     */
    
                    /**
                     * Constructs a new WindowsBasedSli.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a WindowsBasedSli.
                     * @implements IWindowsBasedSli
                     * @constructor
                     * @param {google.monitoring.v3.IWindowsBasedSli=} [properties] Properties to set
                     */
                    function WindowsBasedSli(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * WindowsBasedSli goodBadMetricFilter.
                     * @member {string|null|undefined} goodBadMetricFilter
                     * @memberof google.monitoring.v3.WindowsBasedSli
                     * @instance
                     */
                    WindowsBasedSli.prototype.goodBadMetricFilter = null;
    
                    /**
                     * WindowsBasedSli goodTotalRatioThreshold.
                     * @member {google.monitoring.v3.WindowsBasedSli.IPerformanceThreshold|null|undefined} goodTotalRatioThreshold
                     * @memberof google.monitoring.v3.WindowsBasedSli
                     * @instance
                     */
                    WindowsBasedSli.prototype.goodTotalRatioThreshold = null;
    
                    /**
                     * WindowsBasedSli metricMeanInRange.
                     * @member {google.monitoring.v3.WindowsBasedSli.IMetricRange|null|undefined} metricMeanInRange
                     * @memberof google.monitoring.v3.WindowsBasedSli
                     * @instance
                     */
                    WindowsBasedSli.prototype.metricMeanInRange = null;
    
                    /**
                     * WindowsBasedSli metricSumInRange.
                     * @member {google.monitoring.v3.WindowsBasedSli.IMetricRange|null|undefined} metricSumInRange
                     * @memberof google.monitoring.v3.WindowsBasedSli
                     * @instance
                     */
                    WindowsBasedSli.prototype.metricSumInRange = null;
    
                    /**
                     * WindowsBasedSli windowPeriod.
                     * @member {google.protobuf.IDuration|null|undefined} windowPeriod
                     * @memberof google.monitoring.v3.WindowsBasedSli
                     * @instance
                     */
                    WindowsBasedSli.prototype.windowPeriod = null;
    
                    // OneOf field names bound to virtual getters and setters
                    var $oneOfFields;
    
                    /**
                     * WindowsBasedSli windowCriterion.
                     * @member {"goodBadMetricFilter"|"goodTotalRatioThreshold"|"metricMeanInRange"|"metricSumInRange"|undefined} windowCriterion
                     * @memberof google.monitoring.v3.WindowsBasedSli
                     * @instance
                     */
                    Object.defineProperty(WindowsBasedSli.prototype, "windowCriterion", {
                        get: $util.oneOfGetter($oneOfFields = ["goodBadMetricFilter", "goodTotalRatioThreshold", "metricMeanInRange", "metricSumInRange"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });
    
                    /**
                     * Creates a new WindowsBasedSli instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.WindowsBasedSli
                     * @static
                     * @param {google.monitoring.v3.IWindowsBasedSli=} [properties] Properties to set
                     * @returns {google.monitoring.v3.WindowsBasedSli} WindowsBasedSli instance
                     */
                    WindowsBasedSli.create = function create(properties) {
                        return new WindowsBasedSli(properties);
                    };
    
                    /**
                     * Encodes the specified WindowsBasedSli message. Does not implicitly {@link google.monitoring.v3.WindowsBasedSli.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.WindowsBasedSli
                     * @static
                     * @param {google.monitoring.v3.IWindowsBasedSli} message WindowsBasedSli message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    WindowsBasedSli.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.goodTotalRatioThreshold != null && Object.hasOwnProperty.call(message, "goodTotalRatioThreshold"))
                            $root.google.monitoring.v3.WindowsBasedSli.PerformanceThreshold.encode(message.goodTotalRatioThreshold, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.windowPeriod != null && Object.hasOwnProperty.call(message, "windowPeriod"))
                            $root.google.protobuf.Duration.encode(message.windowPeriod, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        if (message.goodBadMetricFilter != null && Object.hasOwnProperty.call(message, "goodBadMetricFilter"))
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.goodBadMetricFilter);
                        if (message.metricMeanInRange != null && Object.hasOwnProperty.call(message, "metricMeanInRange"))
                            $root.google.monitoring.v3.WindowsBasedSli.MetricRange.encode(message.metricMeanInRange, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                        if (message.metricSumInRange != null && Object.hasOwnProperty.call(message, "metricSumInRange"))
                            $root.google.monitoring.v3.WindowsBasedSli.MetricRange.encode(message.metricSumInRange, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified WindowsBasedSli message, length delimited. Does not implicitly {@link google.monitoring.v3.WindowsBasedSli.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.WindowsBasedSli
                     * @static
                     * @param {google.monitoring.v3.IWindowsBasedSli} message WindowsBasedSli message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    WindowsBasedSli.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a WindowsBasedSli message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.WindowsBasedSli
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.WindowsBasedSli} WindowsBasedSli
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    WindowsBasedSli.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.WindowsBasedSli();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 5: {
                                    message.goodBadMetricFilter = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.goodTotalRatioThreshold = $root.google.monitoring.v3.WindowsBasedSli.PerformanceThreshold.decode(reader, reader.uint32());
                                    break;
                                }
                            case 6: {
                                    message.metricMeanInRange = $root.google.monitoring.v3.WindowsBasedSli.MetricRange.decode(reader, reader.uint32());
                                    break;
                                }
                            case 7: {
                                    message.metricSumInRange = $root.google.monitoring.v3.WindowsBasedSli.MetricRange.decode(reader, reader.uint32());
                                    break;
                                }
                            case 4: {
                                    message.windowPeriod = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a WindowsBasedSli message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.WindowsBasedSli
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.WindowsBasedSli} WindowsBasedSli
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    WindowsBasedSli.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a WindowsBasedSli message.
                     * @function verify
                     * @memberof google.monitoring.v3.WindowsBasedSli
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    WindowsBasedSli.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        var properties = {};
                        if (message.goodBadMetricFilter != null && message.hasOwnProperty("goodBadMetricFilter")) {
                            properties.windowCriterion = 1;
                            if (!$util.isString(message.goodBadMetricFilter))
                                return "goodBadMetricFilter: string expected";
                        }
                        if (message.goodTotalRatioThreshold != null && message.hasOwnProperty("goodTotalRatioThreshold")) {
                            if (properties.windowCriterion === 1)
                                return "windowCriterion: multiple values";
                            properties.windowCriterion = 1;
                            {
                                var error = $root.google.monitoring.v3.WindowsBasedSli.PerformanceThreshold.verify(message.goodTotalRatioThreshold);
                                if (error)
                                    return "goodTotalRatioThreshold." + error;
                            }
                        }
                        if (message.metricMeanInRange != null && message.hasOwnProperty("metricMeanInRange")) {
                            if (properties.windowCriterion === 1)
                                return "windowCriterion: multiple values";
                            properties.windowCriterion = 1;
                            {
                                var error = $root.google.monitoring.v3.WindowsBasedSli.MetricRange.verify(message.metricMeanInRange);
                                if (error)
                                    return "metricMeanInRange." + error;
                            }
                        }
                        if (message.metricSumInRange != null && message.hasOwnProperty("metricSumInRange")) {
                            if (properties.windowCriterion === 1)
                                return "windowCriterion: multiple values";
                            properties.windowCriterion = 1;
                            {
                                var error = $root.google.monitoring.v3.WindowsBasedSli.MetricRange.verify(message.metricSumInRange);
                                if (error)
                                    return "metricSumInRange." + error;
                            }
                        }
                        if (message.windowPeriod != null && message.hasOwnProperty("windowPeriod")) {
                            var error = $root.google.protobuf.Duration.verify(message.windowPeriod);
                            if (error)
                                return "windowPeriod." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a WindowsBasedSli message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.WindowsBasedSli
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.WindowsBasedSli} WindowsBasedSli
                     */
                    WindowsBasedSli.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.WindowsBasedSli)
                            return object;
                        var message = new $root.google.monitoring.v3.WindowsBasedSli();
                        if (object.goodBadMetricFilter != null)
                            message.goodBadMetricFilter = String(object.goodBadMetricFilter);
                        if (object.goodTotalRatioThreshold != null) {
                            if (typeof object.goodTotalRatioThreshold !== "object")
                                throw TypeError(".google.monitoring.v3.WindowsBasedSli.goodTotalRatioThreshold: object expected");
                            message.goodTotalRatioThreshold = $root.google.monitoring.v3.WindowsBasedSli.PerformanceThreshold.fromObject(object.goodTotalRatioThreshold);
                        }
                        if (object.metricMeanInRange != null) {
                            if (typeof object.metricMeanInRange !== "object")
                                throw TypeError(".google.monitoring.v3.WindowsBasedSli.metricMeanInRange: object expected");
                            message.metricMeanInRange = $root.google.monitoring.v3.WindowsBasedSli.MetricRange.fromObject(object.metricMeanInRange);
                        }
                        if (object.metricSumInRange != null) {
                            if (typeof object.metricSumInRange !== "object")
                                throw TypeError(".google.monitoring.v3.WindowsBasedSli.metricSumInRange: object expected");
                            message.metricSumInRange = $root.google.monitoring.v3.WindowsBasedSli.MetricRange.fromObject(object.metricSumInRange);
                        }
                        if (object.windowPeriod != null) {
                            if (typeof object.windowPeriod !== "object")
                                throw TypeError(".google.monitoring.v3.WindowsBasedSli.windowPeriod: object expected");
                            message.windowPeriod = $root.google.protobuf.Duration.fromObject(object.windowPeriod);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a WindowsBasedSli message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.WindowsBasedSli
                     * @static
                     * @param {google.monitoring.v3.WindowsBasedSli} message WindowsBasedSli
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    WindowsBasedSli.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.windowPeriod = null;
                        if (message.goodTotalRatioThreshold != null && message.hasOwnProperty("goodTotalRatioThreshold")) {
                            object.goodTotalRatioThreshold = $root.google.monitoring.v3.WindowsBasedSli.PerformanceThreshold.toObject(message.goodTotalRatioThreshold, options);
                            if (options.oneofs)
                                object.windowCriterion = "goodTotalRatioThreshold";
                        }
                        if (message.windowPeriod != null && message.hasOwnProperty("windowPeriod"))
                            object.windowPeriod = $root.google.protobuf.Duration.toObject(message.windowPeriod, options);
                        if (message.goodBadMetricFilter != null && message.hasOwnProperty("goodBadMetricFilter")) {
                            object.goodBadMetricFilter = message.goodBadMetricFilter;
                            if (options.oneofs)
                                object.windowCriterion = "goodBadMetricFilter";
                        }
                        if (message.metricMeanInRange != null && message.hasOwnProperty("metricMeanInRange")) {
                            object.metricMeanInRange = $root.google.monitoring.v3.WindowsBasedSli.MetricRange.toObject(message.metricMeanInRange, options);
                            if (options.oneofs)
                                object.windowCriterion = "metricMeanInRange";
                        }
                        if (message.metricSumInRange != null && message.hasOwnProperty("metricSumInRange")) {
                            object.metricSumInRange = $root.google.monitoring.v3.WindowsBasedSli.MetricRange.toObject(message.metricSumInRange, options);
                            if (options.oneofs)
                                object.windowCriterion = "metricSumInRange";
                        }
                        return object;
                    };
    
                    /**
                     * Converts this WindowsBasedSli to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.WindowsBasedSli
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    WindowsBasedSli.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for WindowsBasedSli
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.WindowsBasedSli
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    WindowsBasedSli.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.WindowsBasedSli";
                    };
    
                    WindowsBasedSli.PerformanceThreshold = (function() {
    
                        /**
                         * Properties of a PerformanceThreshold.
                         * @memberof google.monitoring.v3.WindowsBasedSli
                         * @interface IPerformanceThreshold
                         * @property {google.monitoring.v3.IRequestBasedSli|null} [performance] PerformanceThreshold performance
                         * @property {google.monitoring.v3.IBasicSli|null} [basicSliPerformance] PerformanceThreshold basicSliPerformance
                         * @property {number|null} [threshold] PerformanceThreshold threshold
                         */
    
                        /**
                         * Constructs a new PerformanceThreshold.
                         * @memberof google.monitoring.v3.WindowsBasedSli
                         * @classdesc Represents a PerformanceThreshold.
                         * @implements IPerformanceThreshold
                         * @constructor
                         * @param {google.monitoring.v3.WindowsBasedSli.IPerformanceThreshold=} [properties] Properties to set
                         */
                        function PerformanceThreshold(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PerformanceThreshold performance.
                         * @member {google.monitoring.v3.IRequestBasedSli|null|undefined} performance
                         * @memberof google.monitoring.v3.WindowsBasedSli.PerformanceThreshold
                         * @instance
                         */
                        PerformanceThreshold.prototype.performance = null;
    
                        /**
                         * PerformanceThreshold basicSliPerformance.
                         * @member {google.monitoring.v3.IBasicSli|null|undefined} basicSliPerformance
                         * @memberof google.monitoring.v3.WindowsBasedSli.PerformanceThreshold
                         * @instance
                         */
                        PerformanceThreshold.prototype.basicSliPerformance = null;
    
                        /**
                         * PerformanceThreshold threshold.
                         * @member {number} threshold
                         * @memberof google.monitoring.v3.WindowsBasedSli.PerformanceThreshold
                         * @instance
                         */
                        PerformanceThreshold.prototype.threshold = 0;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * PerformanceThreshold type.
                         * @member {"performance"|"basicSliPerformance"|undefined} type
                         * @memberof google.monitoring.v3.WindowsBasedSli.PerformanceThreshold
                         * @instance
                         */
                        Object.defineProperty(PerformanceThreshold.prototype, "type", {
                            get: $util.oneOfGetter($oneOfFields = ["performance", "basicSliPerformance"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new PerformanceThreshold instance using the specified properties.
                         * @function create
                         * @memberof google.monitoring.v3.WindowsBasedSli.PerformanceThreshold
                         * @static
                         * @param {google.monitoring.v3.WindowsBasedSli.IPerformanceThreshold=} [properties] Properties to set
                         * @returns {google.monitoring.v3.WindowsBasedSli.PerformanceThreshold} PerformanceThreshold instance
                         */
                        PerformanceThreshold.create = function create(properties) {
                            return new PerformanceThreshold(properties);
                        };
    
                        /**
                         * Encodes the specified PerformanceThreshold message. Does not implicitly {@link google.monitoring.v3.WindowsBasedSli.PerformanceThreshold.verify|verify} messages.
                         * @function encode
                         * @memberof google.monitoring.v3.WindowsBasedSli.PerformanceThreshold
                         * @static
                         * @param {google.monitoring.v3.WindowsBasedSli.IPerformanceThreshold} message PerformanceThreshold message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PerformanceThreshold.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.performance != null && Object.hasOwnProperty.call(message, "performance"))
                                $root.google.monitoring.v3.RequestBasedSli.encode(message.performance, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.threshold != null && Object.hasOwnProperty.call(message, "threshold"))
                                writer.uint32(/* id 2, wireType 1 =*/17).double(message.threshold);
                            if (message.basicSliPerformance != null && Object.hasOwnProperty.call(message, "basicSliPerformance"))
                                $root.google.monitoring.v3.BasicSli.encode(message.basicSliPerformance, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PerformanceThreshold message, length delimited. Does not implicitly {@link google.monitoring.v3.WindowsBasedSli.PerformanceThreshold.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.monitoring.v3.WindowsBasedSli.PerformanceThreshold
                         * @static
                         * @param {google.monitoring.v3.WindowsBasedSli.IPerformanceThreshold} message PerformanceThreshold message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PerformanceThreshold.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PerformanceThreshold message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.monitoring.v3.WindowsBasedSli.PerformanceThreshold
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.monitoring.v3.WindowsBasedSli.PerformanceThreshold} PerformanceThreshold
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PerformanceThreshold.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.WindowsBasedSli.PerformanceThreshold();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.performance = $root.google.monitoring.v3.RequestBasedSli.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.basicSliPerformance = $root.google.monitoring.v3.BasicSli.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.threshold = reader.double();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PerformanceThreshold message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.monitoring.v3.WindowsBasedSli.PerformanceThreshold
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.monitoring.v3.WindowsBasedSli.PerformanceThreshold} PerformanceThreshold
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PerformanceThreshold.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PerformanceThreshold message.
                         * @function verify
                         * @memberof google.monitoring.v3.WindowsBasedSli.PerformanceThreshold
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PerformanceThreshold.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.performance != null && message.hasOwnProperty("performance")) {
                                properties.type = 1;
                                {
                                    var error = $root.google.monitoring.v3.RequestBasedSli.verify(message.performance);
                                    if (error)
                                        return "performance." + error;
                                }
                            }
                            if (message.basicSliPerformance != null && message.hasOwnProperty("basicSliPerformance")) {
                                if (properties.type === 1)
                                    return "type: multiple values";
                                properties.type = 1;
                                {
                                    var error = $root.google.monitoring.v3.BasicSli.verify(message.basicSliPerformance);
                                    if (error)
                                        return "basicSliPerformance." + error;
                                }
                            }
                            if (message.threshold != null && message.hasOwnProperty("threshold"))
                                if (typeof message.threshold !== "number")
                                    return "threshold: number expected";
                            return null;
                        };
    
                        /**
                         * Creates a PerformanceThreshold message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.monitoring.v3.WindowsBasedSli.PerformanceThreshold
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.monitoring.v3.WindowsBasedSli.PerformanceThreshold} PerformanceThreshold
                         */
                        PerformanceThreshold.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.monitoring.v3.WindowsBasedSli.PerformanceThreshold)
                                return object;
                            var message = new $root.google.monitoring.v3.WindowsBasedSli.PerformanceThreshold();
                            if (object.performance != null) {
                                if (typeof object.performance !== "object")
                                    throw TypeError(".google.monitoring.v3.WindowsBasedSli.PerformanceThreshold.performance: object expected");
                                message.performance = $root.google.monitoring.v3.RequestBasedSli.fromObject(object.performance);
                            }
                            if (object.basicSliPerformance != null) {
                                if (typeof object.basicSliPerformance !== "object")
                                    throw TypeError(".google.monitoring.v3.WindowsBasedSli.PerformanceThreshold.basicSliPerformance: object expected");
                                message.basicSliPerformance = $root.google.monitoring.v3.BasicSli.fromObject(object.basicSliPerformance);
                            }
                            if (object.threshold != null)
                                message.threshold = Number(object.threshold);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PerformanceThreshold message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.monitoring.v3.WindowsBasedSli.PerformanceThreshold
                         * @static
                         * @param {google.monitoring.v3.WindowsBasedSli.PerformanceThreshold} message PerformanceThreshold
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PerformanceThreshold.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.threshold = 0;
                            if (message.performance != null && message.hasOwnProperty("performance")) {
                                object.performance = $root.google.monitoring.v3.RequestBasedSli.toObject(message.performance, options);
                                if (options.oneofs)
                                    object.type = "performance";
                            }
                            if (message.threshold != null && message.hasOwnProperty("threshold"))
                                object.threshold = options.json && !isFinite(message.threshold) ? String(message.threshold) : message.threshold;
                            if (message.basicSliPerformance != null && message.hasOwnProperty("basicSliPerformance")) {
                                object.basicSliPerformance = $root.google.monitoring.v3.BasicSli.toObject(message.basicSliPerformance, options);
                                if (options.oneofs)
                                    object.type = "basicSliPerformance";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this PerformanceThreshold to JSON.
                         * @function toJSON
                         * @memberof google.monitoring.v3.WindowsBasedSli.PerformanceThreshold
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PerformanceThreshold.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PerformanceThreshold
                         * @function getTypeUrl
                         * @memberof google.monitoring.v3.WindowsBasedSli.PerformanceThreshold
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PerformanceThreshold.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.monitoring.v3.WindowsBasedSli.PerformanceThreshold";
                        };
    
                        return PerformanceThreshold;
                    })();
    
                    WindowsBasedSli.MetricRange = (function() {
    
                        /**
                         * Properties of a MetricRange.
                         * @memberof google.monitoring.v3.WindowsBasedSli
                         * @interface IMetricRange
                         * @property {string|null} [timeSeries] MetricRange timeSeries
                         * @property {google.monitoring.v3.IRange|null} [range] MetricRange range
                         */
    
                        /**
                         * Constructs a new MetricRange.
                         * @memberof google.monitoring.v3.WindowsBasedSli
                         * @classdesc Represents a MetricRange.
                         * @implements IMetricRange
                         * @constructor
                         * @param {google.monitoring.v3.WindowsBasedSli.IMetricRange=} [properties] Properties to set
                         */
                        function MetricRange(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MetricRange timeSeries.
                         * @member {string} timeSeries
                         * @memberof google.monitoring.v3.WindowsBasedSli.MetricRange
                         * @instance
                         */
                        MetricRange.prototype.timeSeries = "";
    
                        /**
                         * MetricRange range.
                         * @member {google.monitoring.v3.IRange|null|undefined} range
                         * @memberof google.monitoring.v3.WindowsBasedSli.MetricRange
                         * @instance
                         */
                        MetricRange.prototype.range = null;
    
                        /**
                         * Creates a new MetricRange instance using the specified properties.
                         * @function create
                         * @memberof google.monitoring.v3.WindowsBasedSli.MetricRange
                         * @static
                         * @param {google.monitoring.v3.WindowsBasedSli.IMetricRange=} [properties] Properties to set
                         * @returns {google.monitoring.v3.WindowsBasedSli.MetricRange} MetricRange instance
                         */
                        MetricRange.create = function create(properties) {
                            return new MetricRange(properties);
                        };
    
                        /**
                         * Encodes the specified MetricRange message. Does not implicitly {@link google.monitoring.v3.WindowsBasedSli.MetricRange.verify|verify} messages.
                         * @function encode
                         * @memberof google.monitoring.v3.WindowsBasedSli.MetricRange
                         * @static
                         * @param {google.monitoring.v3.WindowsBasedSli.IMetricRange} message MetricRange message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetricRange.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.timeSeries != null && Object.hasOwnProperty.call(message, "timeSeries"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.timeSeries);
                            if (message.range != null && Object.hasOwnProperty.call(message, "range"))
                                $root.google.monitoring.v3.Range.encode(message.range, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MetricRange message, length delimited. Does not implicitly {@link google.monitoring.v3.WindowsBasedSli.MetricRange.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.monitoring.v3.WindowsBasedSli.MetricRange
                         * @static
                         * @param {google.monitoring.v3.WindowsBasedSli.IMetricRange} message MetricRange message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetricRange.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MetricRange message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.monitoring.v3.WindowsBasedSli.MetricRange
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.monitoring.v3.WindowsBasedSli.MetricRange} MetricRange
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetricRange.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.WindowsBasedSli.MetricRange();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.timeSeries = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.range = $root.google.monitoring.v3.Range.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MetricRange message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.monitoring.v3.WindowsBasedSli.MetricRange
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.monitoring.v3.WindowsBasedSli.MetricRange} MetricRange
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetricRange.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MetricRange message.
                         * @function verify
                         * @memberof google.monitoring.v3.WindowsBasedSli.MetricRange
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MetricRange.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.timeSeries != null && message.hasOwnProperty("timeSeries"))
                                if (!$util.isString(message.timeSeries))
                                    return "timeSeries: string expected";
                            if (message.range != null && message.hasOwnProperty("range")) {
                                var error = $root.google.monitoring.v3.Range.verify(message.range);
                                if (error)
                                    return "range." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a MetricRange message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.monitoring.v3.WindowsBasedSli.MetricRange
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.monitoring.v3.WindowsBasedSli.MetricRange} MetricRange
                         */
                        MetricRange.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.monitoring.v3.WindowsBasedSli.MetricRange)
                                return object;
                            var message = new $root.google.monitoring.v3.WindowsBasedSli.MetricRange();
                            if (object.timeSeries != null)
                                message.timeSeries = String(object.timeSeries);
                            if (object.range != null) {
                                if (typeof object.range !== "object")
                                    throw TypeError(".google.monitoring.v3.WindowsBasedSli.MetricRange.range: object expected");
                                message.range = $root.google.monitoring.v3.Range.fromObject(object.range);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MetricRange message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.monitoring.v3.WindowsBasedSli.MetricRange
                         * @static
                         * @param {google.monitoring.v3.WindowsBasedSli.MetricRange} message MetricRange
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MetricRange.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.timeSeries = "";
                                object.range = null;
                            }
                            if (message.timeSeries != null && message.hasOwnProperty("timeSeries"))
                                object.timeSeries = message.timeSeries;
                            if (message.range != null && message.hasOwnProperty("range"))
                                object.range = $root.google.monitoring.v3.Range.toObject(message.range, options);
                            return object;
                        };
    
                        /**
                         * Converts this MetricRange to JSON.
                         * @function toJSON
                         * @memberof google.monitoring.v3.WindowsBasedSli.MetricRange
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MetricRange.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MetricRange
                         * @function getTypeUrl
                         * @memberof google.monitoring.v3.WindowsBasedSli.MetricRange
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MetricRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.monitoring.v3.WindowsBasedSli.MetricRange";
                        };
    
                        return MetricRange;
                    })();
    
                    return WindowsBasedSli;
                })();
    
                v3.ServiceMonitoringService = (function() {
    
                    /**
                     * Constructs a new ServiceMonitoringService service.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a ServiceMonitoringService
                     * @extends $protobuf.rpc.Service
                     * @constructor
                     * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                     * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                     * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                     */
                    function ServiceMonitoringService(rpcImpl, requestDelimited, responseDelimited) {
                        $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                    }
    
                    (ServiceMonitoringService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = ServiceMonitoringService;
    
                    /**
                     * Creates new ServiceMonitoringService service using the specified rpc implementation.
                     * @function create
                     * @memberof google.monitoring.v3.ServiceMonitoringService
                     * @static
                     * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                     * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                     * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                     * @returns {ServiceMonitoringService} RPC service. Useful where requests and/or responses are streamed.
                     */
                    ServiceMonitoringService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                        return new this(rpcImpl, requestDelimited, responseDelimited);
                    };
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.ServiceMonitoringService|createService}.
                     * @memberof google.monitoring.v3.ServiceMonitoringService
                     * @typedef CreateServiceCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.monitoring.v3.Service} [response] Service
                     */
    
                    /**
                     * Calls CreateService.
                     * @function createService
                     * @memberof google.monitoring.v3.ServiceMonitoringService
                     * @instance
                     * @param {google.monitoring.v3.ICreateServiceRequest} request CreateServiceRequest message or plain object
                     * @param {google.monitoring.v3.ServiceMonitoringService.CreateServiceCallback} callback Node-style callback called with the error, if any, and Service
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ServiceMonitoringService.prototype.createService = function createService(request, callback) {
                        return this.rpcCall(createService, $root.google.monitoring.v3.CreateServiceRequest, $root.google.monitoring.v3.Service, request, callback);
                    }, "name", { value: "CreateService" });
    
                    /**
                     * Calls CreateService.
                     * @function createService
                     * @memberof google.monitoring.v3.ServiceMonitoringService
                     * @instance
                     * @param {google.monitoring.v3.ICreateServiceRequest} request CreateServiceRequest message or plain object
                     * @returns {Promise<google.monitoring.v3.Service>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.ServiceMonitoringService|getService}.
                     * @memberof google.monitoring.v3.ServiceMonitoringService
                     * @typedef GetServiceCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.monitoring.v3.Service} [response] Service
                     */
    
                    /**
                     * Calls GetService.
                     * @function getService
                     * @memberof google.monitoring.v3.ServiceMonitoringService
                     * @instance
                     * @param {google.monitoring.v3.IGetServiceRequest} request GetServiceRequest message or plain object
                     * @param {google.monitoring.v3.ServiceMonitoringService.GetServiceCallback} callback Node-style callback called with the error, if any, and Service
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ServiceMonitoringService.prototype.getService = function getService(request, callback) {
                        return this.rpcCall(getService, $root.google.monitoring.v3.GetServiceRequest, $root.google.monitoring.v3.Service, request, callback);
                    }, "name", { value: "GetService" });
    
                    /**
                     * Calls GetService.
                     * @function getService
                     * @memberof google.monitoring.v3.ServiceMonitoringService
                     * @instance
                     * @param {google.monitoring.v3.IGetServiceRequest} request GetServiceRequest message or plain object
                     * @returns {Promise<google.monitoring.v3.Service>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.ServiceMonitoringService|listServices}.
                     * @memberof google.monitoring.v3.ServiceMonitoringService
                     * @typedef ListServicesCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.monitoring.v3.ListServicesResponse} [response] ListServicesResponse
                     */
    
                    /**
                     * Calls ListServices.
                     * @function listServices
                     * @memberof google.monitoring.v3.ServiceMonitoringService
                     * @instance
                     * @param {google.monitoring.v3.IListServicesRequest} request ListServicesRequest message or plain object
                     * @param {google.monitoring.v3.ServiceMonitoringService.ListServicesCallback} callback Node-style callback called with the error, if any, and ListServicesResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ServiceMonitoringService.prototype.listServices = function listServices(request, callback) {
                        return this.rpcCall(listServices, $root.google.monitoring.v3.ListServicesRequest, $root.google.monitoring.v3.ListServicesResponse, request, callback);
                    }, "name", { value: "ListServices" });
    
                    /**
                     * Calls ListServices.
                     * @function listServices
                     * @memberof google.monitoring.v3.ServiceMonitoringService
                     * @instance
                     * @param {google.monitoring.v3.IListServicesRequest} request ListServicesRequest message or plain object
                     * @returns {Promise<google.monitoring.v3.ListServicesResponse>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.ServiceMonitoringService|updateService}.
                     * @memberof google.monitoring.v3.ServiceMonitoringService
                     * @typedef UpdateServiceCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.monitoring.v3.Service} [response] Service
                     */
    
                    /**
                     * Calls UpdateService.
                     * @function updateService
                     * @memberof google.monitoring.v3.ServiceMonitoringService
                     * @instance
                     * @param {google.monitoring.v3.IUpdateServiceRequest} request UpdateServiceRequest message or plain object
                     * @param {google.monitoring.v3.ServiceMonitoringService.UpdateServiceCallback} callback Node-style callback called with the error, if any, and Service
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ServiceMonitoringService.prototype.updateService = function updateService(request, callback) {
                        return this.rpcCall(updateService, $root.google.monitoring.v3.UpdateServiceRequest, $root.google.monitoring.v3.Service, request, callback);
                    }, "name", { value: "UpdateService" });
    
                    /**
                     * Calls UpdateService.
                     * @function updateService
                     * @memberof google.monitoring.v3.ServiceMonitoringService
                     * @instance
                     * @param {google.monitoring.v3.IUpdateServiceRequest} request UpdateServiceRequest message or plain object
                     * @returns {Promise<google.monitoring.v3.Service>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.ServiceMonitoringService|deleteService}.
                     * @memberof google.monitoring.v3.ServiceMonitoringService
                     * @typedef DeleteServiceCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.protobuf.Empty} [response] Empty
                     */
    
                    /**
                     * Calls DeleteService.
                     * @function deleteService
                     * @memberof google.monitoring.v3.ServiceMonitoringService
                     * @instance
                     * @param {google.monitoring.v3.IDeleteServiceRequest} request DeleteServiceRequest message or plain object
                     * @param {google.monitoring.v3.ServiceMonitoringService.DeleteServiceCallback} callback Node-style callback called with the error, if any, and Empty
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ServiceMonitoringService.prototype.deleteService = function deleteService(request, callback) {
                        return this.rpcCall(deleteService, $root.google.monitoring.v3.DeleteServiceRequest, $root.google.protobuf.Empty, request, callback);
                    }, "name", { value: "DeleteService" });
    
                    /**
                     * Calls DeleteService.
                     * @function deleteService
                     * @memberof google.monitoring.v3.ServiceMonitoringService
                     * @instance
                     * @param {google.monitoring.v3.IDeleteServiceRequest} request DeleteServiceRequest message or plain object
                     * @returns {Promise<google.protobuf.Empty>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.ServiceMonitoringService|createServiceLevelObjective}.
                     * @memberof google.monitoring.v3.ServiceMonitoringService
                     * @typedef CreateServiceLevelObjectiveCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.monitoring.v3.ServiceLevelObjective} [response] ServiceLevelObjective
                     */
    
                    /**
                     * Calls CreateServiceLevelObjective.
                     * @function createServiceLevelObjective
                     * @memberof google.monitoring.v3.ServiceMonitoringService
                     * @instance
                     * @param {google.monitoring.v3.ICreateServiceLevelObjectiveRequest} request CreateServiceLevelObjectiveRequest message or plain object
                     * @param {google.monitoring.v3.ServiceMonitoringService.CreateServiceLevelObjectiveCallback} callback Node-style callback called with the error, if any, and ServiceLevelObjective
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ServiceMonitoringService.prototype.createServiceLevelObjective = function createServiceLevelObjective(request, callback) {
                        return this.rpcCall(createServiceLevelObjective, $root.google.monitoring.v3.CreateServiceLevelObjectiveRequest, $root.google.monitoring.v3.ServiceLevelObjective, request, callback);
                    }, "name", { value: "CreateServiceLevelObjective" });
    
                    /**
                     * Calls CreateServiceLevelObjective.
                     * @function createServiceLevelObjective
                     * @memberof google.monitoring.v3.ServiceMonitoringService
                     * @instance
                     * @param {google.monitoring.v3.ICreateServiceLevelObjectiveRequest} request CreateServiceLevelObjectiveRequest message or plain object
                     * @returns {Promise<google.monitoring.v3.ServiceLevelObjective>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.ServiceMonitoringService|getServiceLevelObjective}.
                     * @memberof google.monitoring.v3.ServiceMonitoringService
                     * @typedef GetServiceLevelObjectiveCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.monitoring.v3.ServiceLevelObjective} [response] ServiceLevelObjective
                     */
    
                    /**
                     * Calls GetServiceLevelObjective.
                     * @function getServiceLevelObjective
                     * @memberof google.monitoring.v3.ServiceMonitoringService
                     * @instance
                     * @param {google.monitoring.v3.IGetServiceLevelObjectiveRequest} request GetServiceLevelObjectiveRequest message or plain object
                     * @param {google.monitoring.v3.ServiceMonitoringService.GetServiceLevelObjectiveCallback} callback Node-style callback called with the error, if any, and ServiceLevelObjective
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ServiceMonitoringService.prototype.getServiceLevelObjective = function getServiceLevelObjective(request, callback) {
                        return this.rpcCall(getServiceLevelObjective, $root.google.monitoring.v3.GetServiceLevelObjectiveRequest, $root.google.monitoring.v3.ServiceLevelObjective, request, callback);
                    }, "name", { value: "GetServiceLevelObjective" });
    
                    /**
                     * Calls GetServiceLevelObjective.
                     * @function getServiceLevelObjective
                     * @memberof google.monitoring.v3.ServiceMonitoringService
                     * @instance
                     * @param {google.monitoring.v3.IGetServiceLevelObjectiveRequest} request GetServiceLevelObjectiveRequest message or plain object
                     * @returns {Promise<google.monitoring.v3.ServiceLevelObjective>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.ServiceMonitoringService|listServiceLevelObjectives}.
                     * @memberof google.monitoring.v3.ServiceMonitoringService
                     * @typedef ListServiceLevelObjectivesCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.monitoring.v3.ListServiceLevelObjectivesResponse} [response] ListServiceLevelObjectivesResponse
                     */
    
                    /**
                     * Calls ListServiceLevelObjectives.
                     * @function listServiceLevelObjectives
                     * @memberof google.monitoring.v3.ServiceMonitoringService
                     * @instance
                     * @param {google.monitoring.v3.IListServiceLevelObjectivesRequest} request ListServiceLevelObjectivesRequest message or plain object
                     * @param {google.monitoring.v3.ServiceMonitoringService.ListServiceLevelObjectivesCallback} callback Node-style callback called with the error, if any, and ListServiceLevelObjectivesResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ServiceMonitoringService.prototype.listServiceLevelObjectives = function listServiceLevelObjectives(request, callback) {
                        return this.rpcCall(listServiceLevelObjectives, $root.google.monitoring.v3.ListServiceLevelObjectivesRequest, $root.google.monitoring.v3.ListServiceLevelObjectivesResponse, request, callback);
                    }, "name", { value: "ListServiceLevelObjectives" });
    
                    /**
                     * Calls ListServiceLevelObjectives.
                     * @function listServiceLevelObjectives
                     * @memberof google.monitoring.v3.ServiceMonitoringService
                     * @instance
                     * @param {google.monitoring.v3.IListServiceLevelObjectivesRequest} request ListServiceLevelObjectivesRequest message or plain object
                     * @returns {Promise<google.monitoring.v3.ListServiceLevelObjectivesResponse>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.ServiceMonitoringService|updateServiceLevelObjective}.
                     * @memberof google.monitoring.v3.ServiceMonitoringService
                     * @typedef UpdateServiceLevelObjectiveCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.monitoring.v3.ServiceLevelObjective} [response] ServiceLevelObjective
                     */
    
                    /**
                     * Calls UpdateServiceLevelObjective.
                     * @function updateServiceLevelObjective
                     * @memberof google.monitoring.v3.ServiceMonitoringService
                     * @instance
                     * @param {google.monitoring.v3.IUpdateServiceLevelObjectiveRequest} request UpdateServiceLevelObjectiveRequest message or plain object
                     * @param {google.monitoring.v3.ServiceMonitoringService.UpdateServiceLevelObjectiveCallback} callback Node-style callback called with the error, if any, and ServiceLevelObjective
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ServiceMonitoringService.prototype.updateServiceLevelObjective = function updateServiceLevelObjective(request, callback) {
                        return this.rpcCall(updateServiceLevelObjective, $root.google.monitoring.v3.UpdateServiceLevelObjectiveRequest, $root.google.monitoring.v3.ServiceLevelObjective, request, callback);
                    }, "name", { value: "UpdateServiceLevelObjective" });
    
                    /**
                     * Calls UpdateServiceLevelObjective.
                     * @function updateServiceLevelObjective
                     * @memberof google.monitoring.v3.ServiceMonitoringService
                     * @instance
                     * @param {google.monitoring.v3.IUpdateServiceLevelObjectiveRequest} request UpdateServiceLevelObjectiveRequest message or plain object
                     * @returns {Promise<google.monitoring.v3.ServiceLevelObjective>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.ServiceMonitoringService|deleteServiceLevelObjective}.
                     * @memberof google.monitoring.v3.ServiceMonitoringService
                     * @typedef DeleteServiceLevelObjectiveCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.protobuf.Empty} [response] Empty
                     */
    
                    /**
                     * Calls DeleteServiceLevelObjective.
                     * @function deleteServiceLevelObjective
                     * @memberof google.monitoring.v3.ServiceMonitoringService
                     * @instance
                     * @param {google.monitoring.v3.IDeleteServiceLevelObjectiveRequest} request DeleteServiceLevelObjectiveRequest message or plain object
                     * @param {google.monitoring.v3.ServiceMonitoringService.DeleteServiceLevelObjectiveCallback} callback Node-style callback called with the error, if any, and Empty
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ServiceMonitoringService.prototype.deleteServiceLevelObjective = function deleteServiceLevelObjective(request, callback) {
                        return this.rpcCall(deleteServiceLevelObjective, $root.google.monitoring.v3.DeleteServiceLevelObjectiveRequest, $root.google.protobuf.Empty, request, callback);
                    }, "name", { value: "DeleteServiceLevelObjective" });
    
                    /**
                     * Calls DeleteServiceLevelObjective.
                     * @function deleteServiceLevelObjective
                     * @memberof google.monitoring.v3.ServiceMonitoringService
                     * @instance
                     * @param {google.monitoring.v3.IDeleteServiceLevelObjectiveRequest} request DeleteServiceLevelObjectiveRequest message or plain object
                     * @returns {Promise<google.protobuf.Empty>} Promise
                     * @variation 2
                     */
    
                    return ServiceMonitoringService;
                })();
    
                v3.CreateServiceRequest = (function() {
    
                    /**
                     * Properties of a CreateServiceRequest.
                     * @memberof google.monitoring.v3
                     * @interface ICreateServiceRequest
                     * @property {string|null} [parent] CreateServiceRequest parent
                     * @property {string|null} [serviceId] CreateServiceRequest serviceId
                     * @property {google.monitoring.v3.IService|null} [service] CreateServiceRequest service
                     */
    
                    /**
                     * Constructs a new CreateServiceRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a CreateServiceRequest.
                     * @implements ICreateServiceRequest
                     * @constructor
                     * @param {google.monitoring.v3.ICreateServiceRequest=} [properties] Properties to set
                     */
                    function CreateServiceRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * CreateServiceRequest parent.
                     * @member {string} parent
                     * @memberof google.monitoring.v3.CreateServiceRequest
                     * @instance
                     */
                    CreateServiceRequest.prototype.parent = "";
    
                    /**
                     * CreateServiceRequest serviceId.
                     * @member {string} serviceId
                     * @memberof google.monitoring.v3.CreateServiceRequest
                     * @instance
                     */
                    CreateServiceRequest.prototype.serviceId = "";
    
                    /**
                     * CreateServiceRequest service.
                     * @member {google.monitoring.v3.IService|null|undefined} service
                     * @memberof google.monitoring.v3.CreateServiceRequest
                     * @instance
                     */
                    CreateServiceRequest.prototype.service = null;
    
                    /**
                     * Creates a new CreateServiceRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.CreateServiceRequest
                     * @static
                     * @param {google.monitoring.v3.ICreateServiceRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.CreateServiceRequest} CreateServiceRequest instance
                     */
                    CreateServiceRequest.create = function create(properties) {
                        return new CreateServiceRequest(properties);
                    };
    
                    /**
                     * Encodes the specified CreateServiceRequest message. Does not implicitly {@link google.monitoring.v3.CreateServiceRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.CreateServiceRequest
                     * @static
                     * @param {google.monitoring.v3.ICreateServiceRequest} message CreateServiceRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CreateServiceRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                        if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                            $root.google.monitoring.v3.Service.encode(message.service, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.serviceId != null && Object.hasOwnProperty.call(message, "serviceId"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.serviceId);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified CreateServiceRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.CreateServiceRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.CreateServiceRequest
                     * @static
                     * @param {google.monitoring.v3.ICreateServiceRequest} message CreateServiceRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CreateServiceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a CreateServiceRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.CreateServiceRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.CreateServiceRequest} CreateServiceRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CreateServiceRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.CreateServiceRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.parent = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.serviceId = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.service = $root.google.monitoring.v3.Service.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a CreateServiceRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.CreateServiceRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.CreateServiceRequest} CreateServiceRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CreateServiceRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a CreateServiceRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.CreateServiceRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    CreateServiceRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            if (!$util.isString(message.parent))
                                return "parent: string expected";
                        if (message.serviceId != null && message.hasOwnProperty("serviceId"))
                            if (!$util.isString(message.serviceId))
                                return "serviceId: string expected";
                        if (message.service != null && message.hasOwnProperty("service")) {
                            var error = $root.google.monitoring.v3.Service.verify(message.service);
                            if (error)
                                return "service." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a CreateServiceRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.CreateServiceRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.CreateServiceRequest} CreateServiceRequest
                     */
                    CreateServiceRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.CreateServiceRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.CreateServiceRequest();
                        if (object.parent != null)
                            message.parent = String(object.parent);
                        if (object.serviceId != null)
                            message.serviceId = String(object.serviceId);
                        if (object.service != null) {
                            if (typeof object.service !== "object")
                                throw TypeError(".google.monitoring.v3.CreateServiceRequest.service: object expected");
                            message.service = $root.google.monitoring.v3.Service.fromObject(object.service);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a CreateServiceRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.CreateServiceRequest
                     * @static
                     * @param {google.monitoring.v3.CreateServiceRequest} message CreateServiceRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    CreateServiceRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.parent = "";
                            object.service = null;
                            object.serviceId = "";
                        }
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            object.parent = message.parent;
                        if (message.service != null && message.hasOwnProperty("service"))
                            object.service = $root.google.monitoring.v3.Service.toObject(message.service, options);
                        if (message.serviceId != null && message.hasOwnProperty("serviceId"))
                            object.serviceId = message.serviceId;
                        return object;
                    };
    
                    /**
                     * Converts this CreateServiceRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.CreateServiceRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    CreateServiceRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for CreateServiceRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.CreateServiceRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    CreateServiceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.CreateServiceRequest";
                    };
    
                    return CreateServiceRequest;
                })();
    
                v3.GetServiceRequest = (function() {
    
                    /**
                     * Properties of a GetServiceRequest.
                     * @memberof google.monitoring.v3
                     * @interface IGetServiceRequest
                     * @property {string|null} [name] GetServiceRequest name
                     */
    
                    /**
                     * Constructs a new GetServiceRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a GetServiceRequest.
                     * @implements IGetServiceRequest
                     * @constructor
                     * @param {google.monitoring.v3.IGetServiceRequest=} [properties] Properties to set
                     */
                    function GetServiceRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * GetServiceRequest name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.GetServiceRequest
                     * @instance
                     */
                    GetServiceRequest.prototype.name = "";
    
                    /**
                     * Creates a new GetServiceRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.GetServiceRequest
                     * @static
                     * @param {google.monitoring.v3.IGetServiceRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.GetServiceRequest} GetServiceRequest instance
                     */
                    GetServiceRequest.create = function create(properties) {
                        return new GetServiceRequest(properties);
                    };
    
                    /**
                     * Encodes the specified GetServiceRequest message. Does not implicitly {@link google.monitoring.v3.GetServiceRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.GetServiceRequest
                     * @static
                     * @param {google.monitoring.v3.IGetServiceRequest} message GetServiceRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetServiceRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified GetServiceRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.GetServiceRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.GetServiceRequest
                     * @static
                     * @param {google.monitoring.v3.IGetServiceRequest} message GetServiceRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetServiceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a GetServiceRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.GetServiceRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.GetServiceRequest} GetServiceRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetServiceRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.GetServiceRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.name = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a GetServiceRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.GetServiceRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.GetServiceRequest} GetServiceRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetServiceRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a GetServiceRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.GetServiceRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    GetServiceRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a GetServiceRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.GetServiceRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.GetServiceRequest} GetServiceRequest
                     */
                    GetServiceRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.GetServiceRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.GetServiceRequest();
                        if (object.name != null)
                            message.name = String(object.name);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a GetServiceRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.GetServiceRequest
                     * @static
                     * @param {google.monitoring.v3.GetServiceRequest} message GetServiceRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    GetServiceRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.name = "";
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this GetServiceRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.GetServiceRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    GetServiceRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for GetServiceRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.GetServiceRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    GetServiceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.GetServiceRequest";
                    };
    
                    return GetServiceRequest;
                })();
    
                v3.ListServicesRequest = (function() {
    
                    /**
                     * Properties of a ListServicesRequest.
                     * @memberof google.monitoring.v3
                     * @interface IListServicesRequest
                     * @property {string|null} [parent] ListServicesRequest parent
                     * @property {string|null} [filter] ListServicesRequest filter
                     * @property {number|null} [pageSize] ListServicesRequest pageSize
                     * @property {string|null} [pageToken] ListServicesRequest pageToken
                     */
    
                    /**
                     * Constructs a new ListServicesRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a ListServicesRequest.
                     * @implements IListServicesRequest
                     * @constructor
                     * @param {google.monitoring.v3.IListServicesRequest=} [properties] Properties to set
                     */
                    function ListServicesRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListServicesRequest parent.
                     * @member {string} parent
                     * @memberof google.monitoring.v3.ListServicesRequest
                     * @instance
                     */
                    ListServicesRequest.prototype.parent = "";
    
                    /**
                     * ListServicesRequest filter.
                     * @member {string} filter
                     * @memberof google.monitoring.v3.ListServicesRequest
                     * @instance
                     */
                    ListServicesRequest.prototype.filter = "";
    
                    /**
                     * ListServicesRequest pageSize.
                     * @member {number} pageSize
                     * @memberof google.monitoring.v3.ListServicesRequest
                     * @instance
                     */
                    ListServicesRequest.prototype.pageSize = 0;
    
                    /**
                     * ListServicesRequest pageToken.
                     * @member {string} pageToken
                     * @memberof google.monitoring.v3.ListServicesRequest
                     * @instance
                     */
                    ListServicesRequest.prototype.pageToken = "";
    
                    /**
                     * Creates a new ListServicesRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.ListServicesRequest
                     * @static
                     * @param {google.monitoring.v3.IListServicesRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.ListServicesRequest} ListServicesRequest instance
                     */
                    ListServicesRequest.create = function create(properties) {
                        return new ListServicesRequest(properties);
                    };
    
                    /**
                     * Encodes the specified ListServicesRequest message. Does not implicitly {@link google.monitoring.v3.ListServicesRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.ListServicesRequest
                     * @static
                     * @param {google.monitoring.v3.IListServicesRequest} message ListServicesRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListServicesRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                        if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.filter);
                        if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.pageSize);
                        if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.pageToken);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ListServicesRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.ListServicesRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.ListServicesRequest
                     * @static
                     * @param {google.monitoring.v3.IListServicesRequest} message ListServicesRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListServicesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ListServicesRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.ListServicesRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.ListServicesRequest} ListServicesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListServicesRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.ListServicesRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.parent = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.filter = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.pageSize = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.pageToken = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ListServicesRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.ListServicesRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.ListServicesRequest} ListServicesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListServicesRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ListServicesRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.ListServicesRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ListServicesRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            if (!$util.isString(message.parent))
                                return "parent: string expected";
                        if (message.filter != null && message.hasOwnProperty("filter"))
                            if (!$util.isString(message.filter))
                                return "filter: string expected";
                        if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                            if (!$util.isInteger(message.pageSize))
                                return "pageSize: integer expected";
                        if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                            if (!$util.isString(message.pageToken))
                                return "pageToken: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a ListServicesRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.ListServicesRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.ListServicesRequest} ListServicesRequest
                     */
                    ListServicesRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.ListServicesRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.ListServicesRequest();
                        if (object.parent != null)
                            message.parent = String(object.parent);
                        if (object.filter != null)
                            message.filter = String(object.filter);
                        if (object.pageSize != null)
                            message.pageSize = object.pageSize | 0;
                        if (object.pageToken != null)
                            message.pageToken = String(object.pageToken);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ListServicesRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.ListServicesRequest
                     * @static
                     * @param {google.monitoring.v3.ListServicesRequest} message ListServicesRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ListServicesRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.parent = "";
                            object.filter = "";
                            object.pageSize = 0;
                            object.pageToken = "";
                        }
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            object.parent = message.parent;
                        if (message.filter != null && message.hasOwnProperty("filter"))
                            object.filter = message.filter;
                        if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                            object.pageSize = message.pageSize;
                        if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                            object.pageToken = message.pageToken;
                        return object;
                    };
    
                    /**
                     * Converts this ListServicesRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.ListServicesRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ListServicesRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ListServicesRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.ListServicesRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ListServicesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.ListServicesRequest";
                    };
    
                    return ListServicesRequest;
                })();
    
                v3.ListServicesResponse = (function() {
    
                    /**
                     * Properties of a ListServicesResponse.
                     * @memberof google.monitoring.v3
                     * @interface IListServicesResponse
                     * @property {Array.<google.monitoring.v3.IService>|null} [services] ListServicesResponse services
                     * @property {string|null} [nextPageToken] ListServicesResponse nextPageToken
                     */
    
                    /**
                     * Constructs a new ListServicesResponse.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a ListServicesResponse.
                     * @implements IListServicesResponse
                     * @constructor
                     * @param {google.monitoring.v3.IListServicesResponse=} [properties] Properties to set
                     */
                    function ListServicesResponse(properties) {
                        this.services = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListServicesResponse services.
                     * @member {Array.<google.monitoring.v3.IService>} services
                     * @memberof google.monitoring.v3.ListServicesResponse
                     * @instance
                     */
                    ListServicesResponse.prototype.services = $util.emptyArray;
    
                    /**
                     * ListServicesResponse nextPageToken.
                     * @member {string} nextPageToken
                     * @memberof google.monitoring.v3.ListServicesResponse
                     * @instance
                     */
                    ListServicesResponse.prototype.nextPageToken = "";
    
                    /**
                     * Creates a new ListServicesResponse instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.ListServicesResponse
                     * @static
                     * @param {google.monitoring.v3.IListServicesResponse=} [properties] Properties to set
                     * @returns {google.monitoring.v3.ListServicesResponse} ListServicesResponse instance
                     */
                    ListServicesResponse.create = function create(properties) {
                        return new ListServicesResponse(properties);
                    };
    
                    /**
                     * Encodes the specified ListServicesResponse message. Does not implicitly {@link google.monitoring.v3.ListServicesResponse.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.ListServicesResponse
                     * @static
                     * @param {google.monitoring.v3.IListServicesResponse} message ListServicesResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListServicesResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.services != null && message.services.length)
                            for (var i = 0; i < message.services.length; ++i)
                                $root.google.monitoring.v3.Service.encode(message.services[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ListServicesResponse message, length delimited. Does not implicitly {@link google.monitoring.v3.ListServicesResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.ListServicesResponse
                     * @static
                     * @param {google.monitoring.v3.IListServicesResponse} message ListServicesResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListServicesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ListServicesResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.ListServicesResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.ListServicesResponse} ListServicesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListServicesResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.ListServicesResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.services && message.services.length))
                                        message.services = [];
                                    message.services.push($root.google.monitoring.v3.Service.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 2: {
                                    message.nextPageToken = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ListServicesResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.ListServicesResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.ListServicesResponse} ListServicesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListServicesResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ListServicesResponse message.
                     * @function verify
                     * @memberof google.monitoring.v3.ListServicesResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ListServicesResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.services != null && message.hasOwnProperty("services")) {
                            if (!Array.isArray(message.services))
                                return "services: array expected";
                            for (var i = 0; i < message.services.length; ++i) {
                                var error = $root.google.monitoring.v3.Service.verify(message.services[i]);
                                if (error)
                                    return "services." + error;
                            }
                        }
                        if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                            if (!$util.isString(message.nextPageToken))
                                return "nextPageToken: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a ListServicesResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.ListServicesResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.ListServicesResponse} ListServicesResponse
                     */
                    ListServicesResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.ListServicesResponse)
                            return object;
                        var message = new $root.google.monitoring.v3.ListServicesResponse();
                        if (object.services) {
                            if (!Array.isArray(object.services))
                                throw TypeError(".google.monitoring.v3.ListServicesResponse.services: array expected");
                            message.services = [];
                            for (var i = 0; i < object.services.length; ++i) {
                                if (typeof object.services[i] !== "object")
                                    throw TypeError(".google.monitoring.v3.ListServicesResponse.services: object expected");
                                message.services[i] = $root.google.monitoring.v3.Service.fromObject(object.services[i]);
                            }
                        }
                        if (object.nextPageToken != null)
                            message.nextPageToken = String(object.nextPageToken);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ListServicesResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.ListServicesResponse
                     * @static
                     * @param {google.monitoring.v3.ListServicesResponse} message ListServicesResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ListServicesResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.services = [];
                        if (options.defaults)
                            object.nextPageToken = "";
                        if (message.services && message.services.length) {
                            object.services = [];
                            for (var j = 0; j < message.services.length; ++j)
                                object.services[j] = $root.google.monitoring.v3.Service.toObject(message.services[j], options);
                        }
                        if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                            object.nextPageToken = message.nextPageToken;
                        return object;
                    };
    
                    /**
                     * Converts this ListServicesResponse to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.ListServicesResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ListServicesResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ListServicesResponse
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.ListServicesResponse
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ListServicesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.ListServicesResponse";
                    };
    
                    return ListServicesResponse;
                })();
    
                v3.UpdateServiceRequest = (function() {
    
                    /**
                     * Properties of an UpdateServiceRequest.
                     * @memberof google.monitoring.v3
                     * @interface IUpdateServiceRequest
                     * @property {google.monitoring.v3.IService|null} [service] UpdateServiceRequest service
                     * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateServiceRequest updateMask
                     */
    
                    /**
                     * Constructs a new UpdateServiceRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents an UpdateServiceRequest.
                     * @implements IUpdateServiceRequest
                     * @constructor
                     * @param {google.monitoring.v3.IUpdateServiceRequest=} [properties] Properties to set
                     */
                    function UpdateServiceRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * UpdateServiceRequest service.
                     * @member {google.monitoring.v3.IService|null|undefined} service
                     * @memberof google.monitoring.v3.UpdateServiceRequest
                     * @instance
                     */
                    UpdateServiceRequest.prototype.service = null;
    
                    /**
                     * UpdateServiceRequest updateMask.
                     * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                     * @memberof google.monitoring.v3.UpdateServiceRequest
                     * @instance
                     */
                    UpdateServiceRequest.prototype.updateMask = null;
    
                    /**
                     * Creates a new UpdateServiceRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.UpdateServiceRequest
                     * @static
                     * @param {google.monitoring.v3.IUpdateServiceRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.UpdateServiceRequest} UpdateServiceRequest instance
                     */
                    UpdateServiceRequest.create = function create(properties) {
                        return new UpdateServiceRequest(properties);
                    };
    
                    /**
                     * Encodes the specified UpdateServiceRequest message. Does not implicitly {@link google.monitoring.v3.UpdateServiceRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.UpdateServiceRequest
                     * @static
                     * @param {google.monitoring.v3.IUpdateServiceRequest} message UpdateServiceRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UpdateServiceRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                            $root.google.monitoring.v3.Service.encode(message.service, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                            $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified UpdateServiceRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.UpdateServiceRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.UpdateServiceRequest
                     * @static
                     * @param {google.monitoring.v3.IUpdateServiceRequest} message UpdateServiceRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UpdateServiceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an UpdateServiceRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.UpdateServiceRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.UpdateServiceRequest} UpdateServiceRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UpdateServiceRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.UpdateServiceRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.service = $root.google.monitoring.v3.Service.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an UpdateServiceRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.UpdateServiceRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.UpdateServiceRequest} UpdateServiceRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UpdateServiceRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an UpdateServiceRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.UpdateServiceRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    UpdateServiceRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.service != null && message.hasOwnProperty("service")) {
                            var error = $root.google.monitoring.v3.Service.verify(message.service);
                            if (error)
                                return "service." + error;
                        }
                        if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                            var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                            if (error)
                                return "updateMask." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an UpdateServiceRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.UpdateServiceRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.UpdateServiceRequest} UpdateServiceRequest
                     */
                    UpdateServiceRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.UpdateServiceRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.UpdateServiceRequest();
                        if (object.service != null) {
                            if (typeof object.service !== "object")
                                throw TypeError(".google.monitoring.v3.UpdateServiceRequest.service: object expected");
                            message.service = $root.google.monitoring.v3.Service.fromObject(object.service);
                        }
                        if (object.updateMask != null) {
                            if (typeof object.updateMask !== "object")
                                throw TypeError(".google.monitoring.v3.UpdateServiceRequest.updateMask: object expected");
                            message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an UpdateServiceRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.UpdateServiceRequest
                     * @static
                     * @param {google.monitoring.v3.UpdateServiceRequest} message UpdateServiceRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    UpdateServiceRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.service = null;
                            object.updateMask = null;
                        }
                        if (message.service != null && message.hasOwnProperty("service"))
                            object.service = $root.google.monitoring.v3.Service.toObject(message.service, options);
                        if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                            object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                        return object;
                    };
    
                    /**
                     * Converts this UpdateServiceRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.UpdateServiceRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    UpdateServiceRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for UpdateServiceRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.UpdateServiceRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    UpdateServiceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.UpdateServiceRequest";
                    };
    
                    return UpdateServiceRequest;
                })();
    
                v3.DeleteServiceRequest = (function() {
    
                    /**
                     * Properties of a DeleteServiceRequest.
                     * @memberof google.monitoring.v3
                     * @interface IDeleteServiceRequest
                     * @property {string|null} [name] DeleteServiceRequest name
                     */
    
                    /**
                     * Constructs a new DeleteServiceRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a DeleteServiceRequest.
                     * @implements IDeleteServiceRequest
                     * @constructor
                     * @param {google.monitoring.v3.IDeleteServiceRequest=} [properties] Properties to set
                     */
                    function DeleteServiceRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * DeleteServiceRequest name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.DeleteServiceRequest
                     * @instance
                     */
                    DeleteServiceRequest.prototype.name = "";
    
                    /**
                     * Creates a new DeleteServiceRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.DeleteServiceRequest
                     * @static
                     * @param {google.monitoring.v3.IDeleteServiceRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.DeleteServiceRequest} DeleteServiceRequest instance
                     */
                    DeleteServiceRequest.create = function create(properties) {
                        return new DeleteServiceRequest(properties);
                    };
    
                    /**
                     * Encodes the specified DeleteServiceRequest message. Does not implicitly {@link google.monitoring.v3.DeleteServiceRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.DeleteServiceRequest
                     * @static
                     * @param {google.monitoring.v3.IDeleteServiceRequest} message DeleteServiceRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DeleteServiceRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified DeleteServiceRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.DeleteServiceRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.DeleteServiceRequest
                     * @static
                     * @param {google.monitoring.v3.IDeleteServiceRequest} message DeleteServiceRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DeleteServiceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a DeleteServiceRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.DeleteServiceRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.DeleteServiceRequest} DeleteServiceRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DeleteServiceRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.DeleteServiceRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.name = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a DeleteServiceRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.DeleteServiceRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.DeleteServiceRequest} DeleteServiceRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DeleteServiceRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a DeleteServiceRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.DeleteServiceRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    DeleteServiceRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a DeleteServiceRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.DeleteServiceRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.DeleteServiceRequest} DeleteServiceRequest
                     */
                    DeleteServiceRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.DeleteServiceRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.DeleteServiceRequest();
                        if (object.name != null)
                            message.name = String(object.name);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a DeleteServiceRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.DeleteServiceRequest
                     * @static
                     * @param {google.monitoring.v3.DeleteServiceRequest} message DeleteServiceRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    DeleteServiceRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.name = "";
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this DeleteServiceRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.DeleteServiceRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    DeleteServiceRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for DeleteServiceRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.DeleteServiceRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    DeleteServiceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.DeleteServiceRequest";
                    };
    
                    return DeleteServiceRequest;
                })();
    
                v3.CreateServiceLevelObjectiveRequest = (function() {
    
                    /**
                     * Properties of a CreateServiceLevelObjectiveRequest.
                     * @memberof google.monitoring.v3
                     * @interface ICreateServiceLevelObjectiveRequest
                     * @property {string|null} [parent] CreateServiceLevelObjectiveRequest parent
                     * @property {string|null} [serviceLevelObjectiveId] CreateServiceLevelObjectiveRequest serviceLevelObjectiveId
                     * @property {google.monitoring.v3.IServiceLevelObjective|null} [serviceLevelObjective] CreateServiceLevelObjectiveRequest serviceLevelObjective
                     */
    
                    /**
                     * Constructs a new CreateServiceLevelObjectiveRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a CreateServiceLevelObjectiveRequest.
                     * @implements ICreateServiceLevelObjectiveRequest
                     * @constructor
                     * @param {google.monitoring.v3.ICreateServiceLevelObjectiveRequest=} [properties] Properties to set
                     */
                    function CreateServiceLevelObjectiveRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * CreateServiceLevelObjectiveRequest parent.
                     * @member {string} parent
                     * @memberof google.monitoring.v3.CreateServiceLevelObjectiveRequest
                     * @instance
                     */
                    CreateServiceLevelObjectiveRequest.prototype.parent = "";
    
                    /**
                     * CreateServiceLevelObjectiveRequest serviceLevelObjectiveId.
                     * @member {string} serviceLevelObjectiveId
                     * @memberof google.monitoring.v3.CreateServiceLevelObjectiveRequest
                     * @instance
                     */
                    CreateServiceLevelObjectiveRequest.prototype.serviceLevelObjectiveId = "";
    
                    /**
                     * CreateServiceLevelObjectiveRequest serviceLevelObjective.
                     * @member {google.monitoring.v3.IServiceLevelObjective|null|undefined} serviceLevelObjective
                     * @memberof google.monitoring.v3.CreateServiceLevelObjectiveRequest
                     * @instance
                     */
                    CreateServiceLevelObjectiveRequest.prototype.serviceLevelObjective = null;
    
                    /**
                     * Creates a new CreateServiceLevelObjectiveRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.CreateServiceLevelObjectiveRequest
                     * @static
                     * @param {google.monitoring.v3.ICreateServiceLevelObjectiveRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.CreateServiceLevelObjectiveRequest} CreateServiceLevelObjectiveRequest instance
                     */
                    CreateServiceLevelObjectiveRequest.create = function create(properties) {
                        return new CreateServiceLevelObjectiveRequest(properties);
                    };
    
                    /**
                     * Encodes the specified CreateServiceLevelObjectiveRequest message. Does not implicitly {@link google.monitoring.v3.CreateServiceLevelObjectiveRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.CreateServiceLevelObjectiveRequest
                     * @static
                     * @param {google.monitoring.v3.ICreateServiceLevelObjectiveRequest} message CreateServiceLevelObjectiveRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CreateServiceLevelObjectiveRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                        if (message.serviceLevelObjective != null && Object.hasOwnProperty.call(message, "serviceLevelObjective"))
                            $root.google.monitoring.v3.ServiceLevelObjective.encode(message.serviceLevelObjective, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.serviceLevelObjectiveId != null && Object.hasOwnProperty.call(message, "serviceLevelObjectiveId"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.serviceLevelObjectiveId);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified CreateServiceLevelObjectiveRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.CreateServiceLevelObjectiveRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.CreateServiceLevelObjectiveRequest
                     * @static
                     * @param {google.monitoring.v3.ICreateServiceLevelObjectiveRequest} message CreateServiceLevelObjectiveRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CreateServiceLevelObjectiveRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a CreateServiceLevelObjectiveRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.CreateServiceLevelObjectiveRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.CreateServiceLevelObjectiveRequest} CreateServiceLevelObjectiveRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CreateServiceLevelObjectiveRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.CreateServiceLevelObjectiveRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.parent = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.serviceLevelObjectiveId = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.serviceLevelObjective = $root.google.monitoring.v3.ServiceLevelObjective.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a CreateServiceLevelObjectiveRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.CreateServiceLevelObjectiveRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.CreateServiceLevelObjectiveRequest} CreateServiceLevelObjectiveRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CreateServiceLevelObjectiveRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a CreateServiceLevelObjectiveRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.CreateServiceLevelObjectiveRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    CreateServiceLevelObjectiveRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            if (!$util.isString(message.parent))
                                return "parent: string expected";
                        if (message.serviceLevelObjectiveId != null && message.hasOwnProperty("serviceLevelObjectiveId"))
                            if (!$util.isString(message.serviceLevelObjectiveId))
                                return "serviceLevelObjectiveId: string expected";
                        if (message.serviceLevelObjective != null && message.hasOwnProperty("serviceLevelObjective")) {
                            var error = $root.google.monitoring.v3.ServiceLevelObjective.verify(message.serviceLevelObjective);
                            if (error)
                                return "serviceLevelObjective." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a CreateServiceLevelObjectiveRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.CreateServiceLevelObjectiveRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.CreateServiceLevelObjectiveRequest} CreateServiceLevelObjectiveRequest
                     */
                    CreateServiceLevelObjectiveRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.CreateServiceLevelObjectiveRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.CreateServiceLevelObjectiveRequest();
                        if (object.parent != null)
                            message.parent = String(object.parent);
                        if (object.serviceLevelObjectiveId != null)
                            message.serviceLevelObjectiveId = String(object.serviceLevelObjectiveId);
                        if (object.serviceLevelObjective != null) {
                            if (typeof object.serviceLevelObjective !== "object")
                                throw TypeError(".google.monitoring.v3.CreateServiceLevelObjectiveRequest.serviceLevelObjective: object expected");
                            message.serviceLevelObjective = $root.google.monitoring.v3.ServiceLevelObjective.fromObject(object.serviceLevelObjective);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a CreateServiceLevelObjectiveRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.CreateServiceLevelObjectiveRequest
                     * @static
                     * @param {google.monitoring.v3.CreateServiceLevelObjectiveRequest} message CreateServiceLevelObjectiveRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    CreateServiceLevelObjectiveRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.parent = "";
                            object.serviceLevelObjective = null;
                            object.serviceLevelObjectiveId = "";
                        }
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            object.parent = message.parent;
                        if (message.serviceLevelObjective != null && message.hasOwnProperty("serviceLevelObjective"))
                            object.serviceLevelObjective = $root.google.monitoring.v3.ServiceLevelObjective.toObject(message.serviceLevelObjective, options);
                        if (message.serviceLevelObjectiveId != null && message.hasOwnProperty("serviceLevelObjectiveId"))
                            object.serviceLevelObjectiveId = message.serviceLevelObjectiveId;
                        return object;
                    };
    
                    /**
                     * Converts this CreateServiceLevelObjectiveRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.CreateServiceLevelObjectiveRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    CreateServiceLevelObjectiveRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for CreateServiceLevelObjectiveRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.CreateServiceLevelObjectiveRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    CreateServiceLevelObjectiveRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.CreateServiceLevelObjectiveRequest";
                    };
    
                    return CreateServiceLevelObjectiveRequest;
                })();
    
                v3.GetServiceLevelObjectiveRequest = (function() {
    
                    /**
                     * Properties of a GetServiceLevelObjectiveRequest.
                     * @memberof google.monitoring.v3
                     * @interface IGetServiceLevelObjectiveRequest
                     * @property {string|null} [name] GetServiceLevelObjectiveRequest name
                     * @property {google.monitoring.v3.ServiceLevelObjective.View|null} [view] GetServiceLevelObjectiveRequest view
                     */
    
                    /**
                     * Constructs a new GetServiceLevelObjectiveRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a GetServiceLevelObjectiveRequest.
                     * @implements IGetServiceLevelObjectiveRequest
                     * @constructor
                     * @param {google.monitoring.v3.IGetServiceLevelObjectiveRequest=} [properties] Properties to set
                     */
                    function GetServiceLevelObjectiveRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * GetServiceLevelObjectiveRequest name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.GetServiceLevelObjectiveRequest
                     * @instance
                     */
                    GetServiceLevelObjectiveRequest.prototype.name = "";
    
                    /**
                     * GetServiceLevelObjectiveRequest view.
                     * @member {google.monitoring.v3.ServiceLevelObjective.View} view
                     * @memberof google.monitoring.v3.GetServiceLevelObjectiveRequest
                     * @instance
                     */
                    GetServiceLevelObjectiveRequest.prototype.view = 0;
    
                    /**
                     * Creates a new GetServiceLevelObjectiveRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.GetServiceLevelObjectiveRequest
                     * @static
                     * @param {google.monitoring.v3.IGetServiceLevelObjectiveRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.GetServiceLevelObjectiveRequest} GetServiceLevelObjectiveRequest instance
                     */
                    GetServiceLevelObjectiveRequest.create = function create(properties) {
                        return new GetServiceLevelObjectiveRequest(properties);
                    };
    
                    /**
                     * Encodes the specified GetServiceLevelObjectiveRequest message. Does not implicitly {@link google.monitoring.v3.GetServiceLevelObjectiveRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.GetServiceLevelObjectiveRequest
                     * @static
                     * @param {google.monitoring.v3.IGetServiceLevelObjectiveRequest} message GetServiceLevelObjectiveRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetServiceLevelObjectiveRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                        if (message.view != null && Object.hasOwnProperty.call(message, "view"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.view);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified GetServiceLevelObjectiveRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.GetServiceLevelObjectiveRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.GetServiceLevelObjectiveRequest
                     * @static
                     * @param {google.monitoring.v3.IGetServiceLevelObjectiveRequest} message GetServiceLevelObjectiveRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetServiceLevelObjectiveRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a GetServiceLevelObjectiveRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.GetServiceLevelObjectiveRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.GetServiceLevelObjectiveRequest} GetServiceLevelObjectiveRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetServiceLevelObjectiveRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.GetServiceLevelObjectiveRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.view = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a GetServiceLevelObjectiveRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.GetServiceLevelObjectiveRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.GetServiceLevelObjectiveRequest} GetServiceLevelObjectiveRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetServiceLevelObjectiveRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a GetServiceLevelObjectiveRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.GetServiceLevelObjectiveRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    GetServiceLevelObjectiveRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.view != null && message.hasOwnProperty("view"))
                            switch (message.view) {
                            default:
                                return "view: enum value expected";
                            case 0:
                            case 2:
                            case 1:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates a GetServiceLevelObjectiveRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.GetServiceLevelObjectiveRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.GetServiceLevelObjectiveRequest} GetServiceLevelObjectiveRequest
                     */
                    GetServiceLevelObjectiveRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.GetServiceLevelObjectiveRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.GetServiceLevelObjectiveRequest();
                        if (object.name != null)
                            message.name = String(object.name);
                        switch (object.view) {
                        default:
                            if (typeof object.view === "number") {
                                message.view = object.view;
                                break;
                            }
                            break;
                        case "VIEW_UNSPECIFIED":
                        case 0:
                            message.view = 0;
                            break;
                        case "FULL":
                        case 2:
                            message.view = 2;
                            break;
                        case "EXPLICIT":
                        case 1:
                            message.view = 1;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a GetServiceLevelObjectiveRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.GetServiceLevelObjectiveRequest
                     * @static
                     * @param {google.monitoring.v3.GetServiceLevelObjectiveRequest} message GetServiceLevelObjectiveRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    GetServiceLevelObjectiveRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.name = "";
                            object.view = options.enums === String ? "VIEW_UNSPECIFIED" : 0;
                        }
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        if (message.view != null && message.hasOwnProperty("view"))
                            object.view = options.enums === String ? $root.google.monitoring.v3.ServiceLevelObjective.View[message.view] === undefined ? message.view : $root.google.monitoring.v3.ServiceLevelObjective.View[message.view] : message.view;
                        return object;
                    };
    
                    /**
                     * Converts this GetServiceLevelObjectiveRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.GetServiceLevelObjectiveRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    GetServiceLevelObjectiveRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for GetServiceLevelObjectiveRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.GetServiceLevelObjectiveRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    GetServiceLevelObjectiveRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.GetServiceLevelObjectiveRequest";
                    };
    
                    return GetServiceLevelObjectiveRequest;
                })();
    
                v3.ListServiceLevelObjectivesRequest = (function() {
    
                    /**
                     * Properties of a ListServiceLevelObjectivesRequest.
                     * @memberof google.monitoring.v3
                     * @interface IListServiceLevelObjectivesRequest
                     * @property {string|null} [parent] ListServiceLevelObjectivesRequest parent
                     * @property {string|null} [filter] ListServiceLevelObjectivesRequest filter
                     * @property {number|null} [pageSize] ListServiceLevelObjectivesRequest pageSize
                     * @property {string|null} [pageToken] ListServiceLevelObjectivesRequest pageToken
                     * @property {google.monitoring.v3.ServiceLevelObjective.View|null} [view] ListServiceLevelObjectivesRequest view
                     */
    
                    /**
                     * Constructs a new ListServiceLevelObjectivesRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a ListServiceLevelObjectivesRequest.
                     * @implements IListServiceLevelObjectivesRequest
                     * @constructor
                     * @param {google.monitoring.v3.IListServiceLevelObjectivesRequest=} [properties] Properties to set
                     */
                    function ListServiceLevelObjectivesRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListServiceLevelObjectivesRequest parent.
                     * @member {string} parent
                     * @memberof google.monitoring.v3.ListServiceLevelObjectivesRequest
                     * @instance
                     */
                    ListServiceLevelObjectivesRequest.prototype.parent = "";
    
                    /**
                     * ListServiceLevelObjectivesRequest filter.
                     * @member {string} filter
                     * @memberof google.monitoring.v3.ListServiceLevelObjectivesRequest
                     * @instance
                     */
                    ListServiceLevelObjectivesRequest.prototype.filter = "";
    
                    /**
                     * ListServiceLevelObjectivesRequest pageSize.
                     * @member {number} pageSize
                     * @memberof google.monitoring.v3.ListServiceLevelObjectivesRequest
                     * @instance
                     */
                    ListServiceLevelObjectivesRequest.prototype.pageSize = 0;
    
                    /**
                     * ListServiceLevelObjectivesRequest pageToken.
                     * @member {string} pageToken
                     * @memberof google.monitoring.v3.ListServiceLevelObjectivesRequest
                     * @instance
                     */
                    ListServiceLevelObjectivesRequest.prototype.pageToken = "";
    
                    /**
                     * ListServiceLevelObjectivesRequest view.
                     * @member {google.monitoring.v3.ServiceLevelObjective.View} view
                     * @memberof google.monitoring.v3.ListServiceLevelObjectivesRequest
                     * @instance
                     */
                    ListServiceLevelObjectivesRequest.prototype.view = 0;
    
                    /**
                     * Creates a new ListServiceLevelObjectivesRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.ListServiceLevelObjectivesRequest
                     * @static
                     * @param {google.monitoring.v3.IListServiceLevelObjectivesRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.ListServiceLevelObjectivesRequest} ListServiceLevelObjectivesRequest instance
                     */
                    ListServiceLevelObjectivesRequest.create = function create(properties) {
                        return new ListServiceLevelObjectivesRequest(properties);
                    };
    
                    /**
                     * Encodes the specified ListServiceLevelObjectivesRequest message. Does not implicitly {@link google.monitoring.v3.ListServiceLevelObjectivesRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.ListServiceLevelObjectivesRequest
                     * @static
                     * @param {google.monitoring.v3.IListServiceLevelObjectivesRequest} message ListServiceLevelObjectivesRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListServiceLevelObjectivesRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                        if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.filter);
                        if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.pageSize);
                        if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.pageToken);
                        if (message.view != null && Object.hasOwnProperty.call(message, "view"))
                            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.view);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ListServiceLevelObjectivesRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.ListServiceLevelObjectivesRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.ListServiceLevelObjectivesRequest
                     * @static
                     * @param {google.monitoring.v3.IListServiceLevelObjectivesRequest} message ListServiceLevelObjectivesRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListServiceLevelObjectivesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ListServiceLevelObjectivesRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.ListServiceLevelObjectivesRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.ListServiceLevelObjectivesRequest} ListServiceLevelObjectivesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListServiceLevelObjectivesRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.ListServiceLevelObjectivesRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.parent = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.filter = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.pageSize = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.pageToken = reader.string();
                                    break;
                                }
                            case 5: {
                                    message.view = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ListServiceLevelObjectivesRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.ListServiceLevelObjectivesRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.ListServiceLevelObjectivesRequest} ListServiceLevelObjectivesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListServiceLevelObjectivesRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ListServiceLevelObjectivesRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.ListServiceLevelObjectivesRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ListServiceLevelObjectivesRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            if (!$util.isString(message.parent))
                                return "parent: string expected";
                        if (message.filter != null && message.hasOwnProperty("filter"))
                            if (!$util.isString(message.filter))
                                return "filter: string expected";
                        if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                            if (!$util.isInteger(message.pageSize))
                                return "pageSize: integer expected";
                        if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                            if (!$util.isString(message.pageToken))
                                return "pageToken: string expected";
                        if (message.view != null && message.hasOwnProperty("view"))
                            switch (message.view) {
                            default:
                                return "view: enum value expected";
                            case 0:
                            case 2:
                            case 1:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates a ListServiceLevelObjectivesRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.ListServiceLevelObjectivesRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.ListServiceLevelObjectivesRequest} ListServiceLevelObjectivesRequest
                     */
                    ListServiceLevelObjectivesRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.ListServiceLevelObjectivesRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.ListServiceLevelObjectivesRequest();
                        if (object.parent != null)
                            message.parent = String(object.parent);
                        if (object.filter != null)
                            message.filter = String(object.filter);
                        if (object.pageSize != null)
                            message.pageSize = object.pageSize | 0;
                        if (object.pageToken != null)
                            message.pageToken = String(object.pageToken);
                        switch (object.view) {
                        default:
                            if (typeof object.view === "number") {
                                message.view = object.view;
                                break;
                            }
                            break;
                        case "VIEW_UNSPECIFIED":
                        case 0:
                            message.view = 0;
                            break;
                        case "FULL":
                        case 2:
                            message.view = 2;
                            break;
                        case "EXPLICIT":
                        case 1:
                            message.view = 1;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ListServiceLevelObjectivesRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.ListServiceLevelObjectivesRequest
                     * @static
                     * @param {google.monitoring.v3.ListServiceLevelObjectivesRequest} message ListServiceLevelObjectivesRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ListServiceLevelObjectivesRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.parent = "";
                            object.filter = "";
                            object.pageSize = 0;
                            object.pageToken = "";
                            object.view = options.enums === String ? "VIEW_UNSPECIFIED" : 0;
                        }
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            object.parent = message.parent;
                        if (message.filter != null && message.hasOwnProperty("filter"))
                            object.filter = message.filter;
                        if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                            object.pageSize = message.pageSize;
                        if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                            object.pageToken = message.pageToken;
                        if (message.view != null && message.hasOwnProperty("view"))
                            object.view = options.enums === String ? $root.google.monitoring.v3.ServiceLevelObjective.View[message.view] === undefined ? message.view : $root.google.monitoring.v3.ServiceLevelObjective.View[message.view] : message.view;
                        return object;
                    };
    
                    /**
                     * Converts this ListServiceLevelObjectivesRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.ListServiceLevelObjectivesRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ListServiceLevelObjectivesRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ListServiceLevelObjectivesRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.ListServiceLevelObjectivesRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ListServiceLevelObjectivesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.ListServiceLevelObjectivesRequest";
                    };
    
                    return ListServiceLevelObjectivesRequest;
                })();
    
                v3.ListServiceLevelObjectivesResponse = (function() {
    
                    /**
                     * Properties of a ListServiceLevelObjectivesResponse.
                     * @memberof google.monitoring.v3
                     * @interface IListServiceLevelObjectivesResponse
                     * @property {Array.<google.monitoring.v3.IServiceLevelObjective>|null} [serviceLevelObjectives] ListServiceLevelObjectivesResponse serviceLevelObjectives
                     * @property {string|null} [nextPageToken] ListServiceLevelObjectivesResponse nextPageToken
                     */
    
                    /**
                     * Constructs a new ListServiceLevelObjectivesResponse.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a ListServiceLevelObjectivesResponse.
                     * @implements IListServiceLevelObjectivesResponse
                     * @constructor
                     * @param {google.monitoring.v3.IListServiceLevelObjectivesResponse=} [properties] Properties to set
                     */
                    function ListServiceLevelObjectivesResponse(properties) {
                        this.serviceLevelObjectives = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListServiceLevelObjectivesResponse serviceLevelObjectives.
                     * @member {Array.<google.monitoring.v3.IServiceLevelObjective>} serviceLevelObjectives
                     * @memberof google.monitoring.v3.ListServiceLevelObjectivesResponse
                     * @instance
                     */
                    ListServiceLevelObjectivesResponse.prototype.serviceLevelObjectives = $util.emptyArray;
    
                    /**
                     * ListServiceLevelObjectivesResponse nextPageToken.
                     * @member {string} nextPageToken
                     * @memberof google.monitoring.v3.ListServiceLevelObjectivesResponse
                     * @instance
                     */
                    ListServiceLevelObjectivesResponse.prototype.nextPageToken = "";
    
                    /**
                     * Creates a new ListServiceLevelObjectivesResponse instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.ListServiceLevelObjectivesResponse
                     * @static
                     * @param {google.monitoring.v3.IListServiceLevelObjectivesResponse=} [properties] Properties to set
                     * @returns {google.monitoring.v3.ListServiceLevelObjectivesResponse} ListServiceLevelObjectivesResponse instance
                     */
                    ListServiceLevelObjectivesResponse.create = function create(properties) {
                        return new ListServiceLevelObjectivesResponse(properties);
                    };
    
                    /**
                     * Encodes the specified ListServiceLevelObjectivesResponse message. Does not implicitly {@link google.monitoring.v3.ListServiceLevelObjectivesResponse.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.ListServiceLevelObjectivesResponse
                     * @static
                     * @param {google.monitoring.v3.IListServiceLevelObjectivesResponse} message ListServiceLevelObjectivesResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListServiceLevelObjectivesResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.serviceLevelObjectives != null && message.serviceLevelObjectives.length)
                            for (var i = 0; i < message.serviceLevelObjectives.length; ++i)
                                $root.google.monitoring.v3.ServiceLevelObjective.encode(message.serviceLevelObjectives[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ListServiceLevelObjectivesResponse message, length delimited. Does not implicitly {@link google.monitoring.v3.ListServiceLevelObjectivesResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.ListServiceLevelObjectivesResponse
                     * @static
                     * @param {google.monitoring.v3.IListServiceLevelObjectivesResponse} message ListServiceLevelObjectivesResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListServiceLevelObjectivesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ListServiceLevelObjectivesResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.ListServiceLevelObjectivesResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.ListServiceLevelObjectivesResponse} ListServiceLevelObjectivesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListServiceLevelObjectivesResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.ListServiceLevelObjectivesResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.serviceLevelObjectives && message.serviceLevelObjectives.length))
                                        message.serviceLevelObjectives = [];
                                    message.serviceLevelObjectives.push($root.google.monitoring.v3.ServiceLevelObjective.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 2: {
                                    message.nextPageToken = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ListServiceLevelObjectivesResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.ListServiceLevelObjectivesResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.ListServiceLevelObjectivesResponse} ListServiceLevelObjectivesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListServiceLevelObjectivesResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ListServiceLevelObjectivesResponse message.
                     * @function verify
                     * @memberof google.monitoring.v3.ListServiceLevelObjectivesResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ListServiceLevelObjectivesResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.serviceLevelObjectives != null && message.hasOwnProperty("serviceLevelObjectives")) {
                            if (!Array.isArray(message.serviceLevelObjectives))
                                return "serviceLevelObjectives: array expected";
                            for (var i = 0; i < message.serviceLevelObjectives.length; ++i) {
                                var error = $root.google.monitoring.v3.ServiceLevelObjective.verify(message.serviceLevelObjectives[i]);
                                if (error)
                                    return "serviceLevelObjectives." + error;
                            }
                        }
                        if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                            if (!$util.isString(message.nextPageToken))
                                return "nextPageToken: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a ListServiceLevelObjectivesResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.ListServiceLevelObjectivesResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.ListServiceLevelObjectivesResponse} ListServiceLevelObjectivesResponse
                     */
                    ListServiceLevelObjectivesResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.ListServiceLevelObjectivesResponse)
                            return object;
                        var message = new $root.google.monitoring.v3.ListServiceLevelObjectivesResponse();
                        if (object.serviceLevelObjectives) {
                            if (!Array.isArray(object.serviceLevelObjectives))
                                throw TypeError(".google.monitoring.v3.ListServiceLevelObjectivesResponse.serviceLevelObjectives: array expected");
                            message.serviceLevelObjectives = [];
                            for (var i = 0; i < object.serviceLevelObjectives.length; ++i) {
                                if (typeof object.serviceLevelObjectives[i] !== "object")
                                    throw TypeError(".google.monitoring.v3.ListServiceLevelObjectivesResponse.serviceLevelObjectives: object expected");
                                message.serviceLevelObjectives[i] = $root.google.monitoring.v3.ServiceLevelObjective.fromObject(object.serviceLevelObjectives[i]);
                            }
                        }
                        if (object.nextPageToken != null)
                            message.nextPageToken = String(object.nextPageToken);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ListServiceLevelObjectivesResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.ListServiceLevelObjectivesResponse
                     * @static
                     * @param {google.monitoring.v3.ListServiceLevelObjectivesResponse} message ListServiceLevelObjectivesResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ListServiceLevelObjectivesResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.serviceLevelObjectives = [];
                        if (options.defaults)
                            object.nextPageToken = "";
                        if (message.serviceLevelObjectives && message.serviceLevelObjectives.length) {
                            object.serviceLevelObjectives = [];
                            for (var j = 0; j < message.serviceLevelObjectives.length; ++j)
                                object.serviceLevelObjectives[j] = $root.google.monitoring.v3.ServiceLevelObjective.toObject(message.serviceLevelObjectives[j], options);
                        }
                        if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                            object.nextPageToken = message.nextPageToken;
                        return object;
                    };
    
                    /**
                     * Converts this ListServiceLevelObjectivesResponse to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.ListServiceLevelObjectivesResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ListServiceLevelObjectivesResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ListServiceLevelObjectivesResponse
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.ListServiceLevelObjectivesResponse
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ListServiceLevelObjectivesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.ListServiceLevelObjectivesResponse";
                    };
    
                    return ListServiceLevelObjectivesResponse;
                })();
    
                v3.UpdateServiceLevelObjectiveRequest = (function() {
    
                    /**
                     * Properties of an UpdateServiceLevelObjectiveRequest.
                     * @memberof google.monitoring.v3
                     * @interface IUpdateServiceLevelObjectiveRequest
                     * @property {google.monitoring.v3.IServiceLevelObjective|null} [serviceLevelObjective] UpdateServiceLevelObjectiveRequest serviceLevelObjective
                     * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateServiceLevelObjectiveRequest updateMask
                     */
    
                    /**
                     * Constructs a new UpdateServiceLevelObjectiveRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents an UpdateServiceLevelObjectiveRequest.
                     * @implements IUpdateServiceLevelObjectiveRequest
                     * @constructor
                     * @param {google.monitoring.v3.IUpdateServiceLevelObjectiveRequest=} [properties] Properties to set
                     */
                    function UpdateServiceLevelObjectiveRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * UpdateServiceLevelObjectiveRequest serviceLevelObjective.
                     * @member {google.monitoring.v3.IServiceLevelObjective|null|undefined} serviceLevelObjective
                     * @memberof google.monitoring.v3.UpdateServiceLevelObjectiveRequest
                     * @instance
                     */
                    UpdateServiceLevelObjectiveRequest.prototype.serviceLevelObjective = null;
    
                    /**
                     * UpdateServiceLevelObjectiveRequest updateMask.
                     * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                     * @memberof google.monitoring.v3.UpdateServiceLevelObjectiveRequest
                     * @instance
                     */
                    UpdateServiceLevelObjectiveRequest.prototype.updateMask = null;
    
                    /**
                     * Creates a new UpdateServiceLevelObjectiveRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.UpdateServiceLevelObjectiveRequest
                     * @static
                     * @param {google.monitoring.v3.IUpdateServiceLevelObjectiveRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.UpdateServiceLevelObjectiveRequest} UpdateServiceLevelObjectiveRequest instance
                     */
                    UpdateServiceLevelObjectiveRequest.create = function create(properties) {
                        return new UpdateServiceLevelObjectiveRequest(properties);
                    };
    
                    /**
                     * Encodes the specified UpdateServiceLevelObjectiveRequest message. Does not implicitly {@link google.monitoring.v3.UpdateServiceLevelObjectiveRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.UpdateServiceLevelObjectiveRequest
                     * @static
                     * @param {google.monitoring.v3.IUpdateServiceLevelObjectiveRequest} message UpdateServiceLevelObjectiveRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UpdateServiceLevelObjectiveRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.serviceLevelObjective != null && Object.hasOwnProperty.call(message, "serviceLevelObjective"))
                            $root.google.monitoring.v3.ServiceLevelObjective.encode(message.serviceLevelObjective, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                            $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified UpdateServiceLevelObjectiveRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.UpdateServiceLevelObjectiveRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.UpdateServiceLevelObjectiveRequest
                     * @static
                     * @param {google.monitoring.v3.IUpdateServiceLevelObjectiveRequest} message UpdateServiceLevelObjectiveRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UpdateServiceLevelObjectiveRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an UpdateServiceLevelObjectiveRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.UpdateServiceLevelObjectiveRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.UpdateServiceLevelObjectiveRequest} UpdateServiceLevelObjectiveRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UpdateServiceLevelObjectiveRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.UpdateServiceLevelObjectiveRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.serviceLevelObjective = $root.google.monitoring.v3.ServiceLevelObjective.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an UpdateServiceLevelObjectiveRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.UpdateServiceLevelObjectiveRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.UpdateServiceLevelObjectiveRequest} UpdateServiceLevelObjectiveRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UpdateServiceLevelObjectiveRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an UpdateServiceLevelObjectiveRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.UpdateServiceLevelObjectiveRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    UpdateServiceLevelObjectiveRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.serviceLevelObjective != null && message.hasOwnProperty("serviceLevelObjective")) {
                            var error = $root.google.monitoring.v3.ServiceLevelObjective.verify(message.serviceLevelObjective);
                            if (error)
                                return "serviceLevelObjective." + error;
                        }
                        if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                            var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                            if (error)
                                return "updateMask." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an UpdateServiceLevelObjectiveRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.UpdateServiceLevelObjectiveRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.UpdateServiceLevelObjectiveRequest} UpdateServiceLevelObjectiveRequest
                     */
                    UpdateServiceLevelObjectiveRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.UpdateServiceLevelObjectiveRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.UpdateServiceLevelObjectiveRequest();
                        if (object.serviceLevelObjective != null) {
                            if (typeof object.serviceLevelObjective !== "object")
                                throw TypeError(".google.monitoring.v3.UpdateServiceLevelObjectiveRequest.serviceLevelObjective: object expected");
                            message.serviceLevelObjective = $root.google.monitoring.v3.ServiceLevelObjective.fromObject(object.serviceLevelObjective);
                        }
                        if (object.updateMask != null) {
                            if (typeof object.updateMask !== "object")
                                throw TypeError(".google.monitoring.v3.UpdateServiceLevelObjectiveRequest.updateMask: object expected");
                            message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an UpdateServiceLevelObjectiveRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.UpdateServiceLevelObjectiveRequest
                     * @static
                     * @param {google.monitoring.v3.UpdateServiceLevelObjectiveRequest} message UpdateServiceLevelObjectiveRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    UpdateServiceLevelObjectiveRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.serviceLevelObjective = null;
                            object.updateMask = null;
                        }
                        if (message.serviceLevelObjective != null && message.hasOwnProperty("serviceLevelObjective"))
                            object.serviceLevelObjective = $root.google.monitoring.v3.ServiceLevelObjective.toObject(message.serviceLevelObjective, options);
                        if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                            object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                        return object;
                    };
    
                    /**
                     * Converts this UpdateServiceLevelObjectiveRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.UpdateServiceLevelObjectiveRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    UpdateServiceLevelObjectiveRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for UpdateServiceLevelObjectiveRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.UpdateServiceLevelObjectiveRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    UpdateServiceLevelObjectiveRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.UpdateServiceLevelObjectiveRequest";
                    };
    
                    return UpdateServiceLevelObjectiveRequest;
                })();
    
                v3.DeleteServiceLevelObjectiveRequest = (function() {
    
                    /**
                     * Properties of a DeleteServiceLevelObjectiveRequest.
                     * @memberof google.monitoring.v3
                     * @interface IDeleteServiceLevelObjectiveRequest
                     * @property {string|null} [name] DeleteServiceLevelObjectiveRequest name
                     */
    
                    /**
                     * Constructs a new DeleteServiceLevelObjectiveRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a DeleteServiceLevelObjectiveRequest.
                     * @implements IDeleteServiceLevelObjectiveRequest
                     * @constructor
                     * @param {google.monitoring.v3.IDeleteServiceLevelObjectiveRequest=} [properties] Properties to set
                     */
                    function DeleteServiceLevelObjectiveRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * DeleteServiceLevelObjectiveRequest name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.DeleteServiceLevelObjectiveRequest
                     * @instance
                     */
                    DeleteServiceLevelObjectiveRequest.prototype.name = "";
    
                    /**
                     * Creates a new DeleteServiceLevelObjectiveRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.DeleteServiceLevelObjectiveRequest
                     * @static
                     * @param {google.monitoring.v3.IDeleteServiceLevelObjectiveRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.DeleteServiceLevelObjectiveRequest} DeleteServiceLevelObjectiveRequest instance
                     */
                    DeleteServiceLevelObjectiveRequest.create = function create(properties) {
                        return new DeleteServiceLevelObjectiveRequest(properties);
                    };
    
                    /**
                     * Encodes the specified DeleteServiceLevelObjectiveRequest message. Does not implicitly {@link google.monitoring.v3.DeleteServiceLevelObjectiveRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.DeleteServiceLevelObjectiveRequest
                     * @static
                     * @param {google.monitoring.v3.IDeleteServiceLevelObjectiveRequest} message DeleteServiceLevelObjectiveRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DeleteServiceLevelObjectiveRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified DeleteServiceLevelObjectiveRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.DeleteServiceLevelObjectiveRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.DeleteServiceLevelObjectiveRequest
                     * @static
                     * @param {google.monitoring.v3.IDeleteServiceLevelObjectiveRequest} message DeleteServiceLevelObjectiveRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DeleteServiceLevelObjectiveRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a DeleteServiceLevelObjectiveRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.DeleteServiceLevelObjectiveRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.DeleteServiceLevelObjectiveRequest} DeleteServiceLevelObjectiveRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DeleteServiceLevelObjectiveRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.DeleteServiceLevelObjectiveRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.name = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a DeleteServiceLevelObjectiveRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.DeleteServiceLevelObjectiveRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.DeleteServiceLevelObjectiveRequest} DeleteServiceLevelObjectiveRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DeleteServiceLevelObjectiveRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a DeleteServiceLevelObjectiveRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.DeleteServiceLevelObjectiveRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    DeleteServiceLevelObjectiveRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a DeleteServiceLevelObjectiveRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.DeleteServiceLevelObjectiveRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.DeleteServiceLevelObjectiveRequest} DeleteServiceLevelObjectiveRequest
                     */
                    DeleteServiceLevelObjectiveRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.DeleteServiceLevelObjectiveRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.DeleteServiceLevelObjectiveRequest();
                        if (object.name != null)
                            message.name = String(object.name);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a DeleteServiceLevelObjectiveRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.DeleteServiceLevelObjectiveRequest
                     * @static
                     * @param {google.monitoring.v3.DeleteServiceLevelObjectiveRequest} message DeleteServiceLevelObjectiveRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    DeleteServiceLevelObjectiveRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.name = "";
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this DeleteServiceLevelObjectiveRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.DeleteServiceLevelObjectiveRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    DeleteServiceLevelObjectiveRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for DeleteServiceLevelObjectiveRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.DeleteServiceLevelObjectiveRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    DeleteServiceLevelObjectiveRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.DeleteServiceLevelObjectiveRequest";
                    };
    
                    return DeleteServiceLevelObjectiveRequest;
                })();
    
                v3.SpanContext = (function() {
    
                    /**
                     * Properties of a SpanContext.
                     * @memberof google.monitoring.v3
                     * @interface ISpanContext
                     * @property {string|null} [spanName] SpanContext spanName
                     */
    
                    /**
                     * Constructs a new SpanContext.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a SpanContext.
                     * @implements ISpanContext
                     * @constructor
                     * @param {google.monitoring.v3.ISpanContext=} [properties] Properties to set
                     */
                    function SpanContext(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * SpanContext spanName.
                     * @member {string} spanName
                     * @memberof google.monitoring.v3.SpanContext
                     * @instance
                     */
                    SpanContext.prototype.spanName = "";
    
                    /**
                     * Creates a new SpanContext instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.SpanContext
                     * @static
                     * @param {google.monitoring.v3.ISpanContext=} [properties] Properties to set
                     * @returns {google.monitoring.v3.SpanContext} SpanContext instance
                     */
                    SpanContext.create = function create(properties) {
                        return new SpanContext(properties);
                    };
    
                    /**
                     * Encodes the specified SpanContext message. Does not implicitly {@link google.monitoring.v3.SpanContext.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.SpanContext
                     * @static
                     * @param {google.monitoring.v3.ISpanContext} message SpanContext message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SpanContext.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.spanName != null && Object.hasOwnProperty.call(message, "spanName"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.spanName);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified SpanContext message, length delimited. Does not implicitly {@link google.monitoring.v3.SpanContext.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.SpanContext
                     * @static
                     * @param {google.monitoring.v3.ISpanContext} message SpanContext message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SpanContext.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a SpanContext message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.SpanContext
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.SpanContext} SpanContext
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SpanContext.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.SpanContext();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.spanName = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a SpanContext message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.SpanContext
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.SpanContext} SpanContext
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SpanContext.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a SpanContext message.
                     * @function verify
                     * @memberof google.monitoring.v3.SpanContext
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    SpanContext.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.spanName != null && message.hasOwnProperty("spanName"))
                            if (!$util.isString(message.spanName))
                                return "spanName: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a SpanContext message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.SpanContext
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.SpanContext} SpanContext
                     */
                    SpanContext.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.SpanContext)
                            return object;
                        var message = new $root.google.monitoring.v3.SpanContext();
                        if (object.spanName != null)
                            message.spanName = String(object.spanName);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a SpanContext message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.SpanContext
                     * @static
                     * @param {google.monitoring.v3.SpanContext} message SpanContext
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    SpanContext.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.spanName = "";
                        if (message.spanName != null && message.hasOwnProperty("spanName"))
                            object.spanName = message.spanName;
                        return object;
                    };
    
                    /**
                     * Converts this SpanContext to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.SpanContext
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    SpanContext.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for SpanContext
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.SpanContext
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    SpanContext.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.SpanContext";
                    };
    
                    return SpanContext;
                })();
    
                /**
                 * UptimeCheckRegion enum.
                 * @name google.monitoring.v3.UptimeCheckRegion
                 * @enum {number}
                 * @property {number} REGION_UNSPECIFIED=0 REGION_UNSPECIFIED value
                 * @property {number} USA=1 USA value
                 * @property {number} EUROPE=2 EUROPE value
                 * @property {number} SOUTH_AMERICA=3 SOUTH_AMERICA value
                 * @property {number} ASIA_PACIFIC=4 ASIA_PACIFIC value
                 */
                v3.UptimeCheckRegion = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "REGION_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "USA"] = 1;
                    values[valuesById[2] = "EUROPE"] = 2;
                    values[valuesById[3] = "SOUTH_AMERICA"] = 3;
                    values[valuesById[4] = "ASIA_PACIFIC"] = 4;
                    return values;
                })();
    
                v3.InternalChecker = (function() {
    
                    /**
                     * Properties of an InternalChecker.
                     * @memberof google.monitoring.v3
                     * @interface IInternalChecker
                     * @property {string|null} [name] InternalChecker name
                     * @property {string|null} [displayName] InternalChecker displayName
                     * @property {string|null} [network] InternalChecker network
                     * @property {string|null} [gcpZone] InternalChecker gcpZone
                     * @property {string|null} [peerProjectId] InternalChecker peerProjectId
                     * @property {google.monitoring.v3.InternalChecker.State|null} [state] InternalChecker state
                     */
    
                    /**
                     * Constructs a new InternalChecker.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents an InternalChecker.
                     * @implements IInternalChecker
                     * @constructor
                     * @param {google.monitoring.v3.IInternalChecker=} [properties] Properties to set
                     */
                    function InternalChecker(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * InternalChecker name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.InternalChecker
                     * @instance
                     */
                    InternalChecker.prototype.name = "";
    
                    /**
                     * InternalChecker displayName.
                     * @member {string} displayName
                     * @memberof google.monitoring.v3.InternalChecker
                     * @instance
                     */
                    InternalChecker.prototype.displayName = "";
    
                    /**
                     * InternalChecker network.
                     * @member {string} network
                     * @memberof google.monitoring.v3.InternalChecker
                     * @instance
                     */
                    InternalChecker.prototype.network = "";
    
                    /**
                     * InternalChecker gcpZone.
                     * @member {string} gcpZone
                     * @memberof google.monitoring.v3.InternalChecker
                     * @instance
                     */
                    InternalChecker.prototype.gcpZone = "";
    
                    /**
                     * InternalChecker peerProjectId.
                     * @member {string} peerProjectId
                     * @memberof google.monitoring.v3.InternalChecker
                     * @instance
                     */
                    InternalChecker.prototype.peerProjectId = "";
    
                    /**
                     * InternalChecker state.
                     * @member {google.monitoring.v3.InternalChecker.State} state
                     * @memberof google.monitoring.v3.InternalChecker
                     * @instance
                     */
                    InternalChecker.prototype.state = 0;
    
                    /**
                     * Creates a new InternalChecker instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.InternalChecker
                     * @static
                     * @param {google.monitoring.v3.IInternalChecker=} [properties] Properties to set
                     * @returns {google.monitoring.v3.InternalChecker} InternalChecker instance
                     */
                    InternalChecker.create = function create(properties) {
                        return new InternalChecker(properties);
                    };
    
                    /**
                     * Encodes the specified InternalChecker message. Does not implicitly {@link google.monitoring.v3.InternalChecker.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.InternalChecker
                     * @static
                     * @param {google.monitoring.v3.IInternalChecker} message InternalChecker message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    InternalChecker.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                        if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.displayName);
                        if (message.network != null && Object.hasOwnProperty.call(message, "network"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.network);
                        if (message.gcpZone != null && Object.hasOwnProperty.call(message, "gcpZone"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.gcpZone);
                        if (message.peerProjectId != null && Object.hasOwnProperty.call(message, "peerProjectId"))
                            writer.uint32(/* id 6, wireType 2 =*/50).string(message.peerProjectId);
                        if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                            writer.uint32(/* id 7, wireType 0 =*/56).int32(message.state);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified InternalChecker message, length delimited. Does not implicitly {@link google.monitoring.v3.InternalChecker.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.InternalChecker
                     * @static
                     * @param {google.monitoring.v3.IInternalChecker} message InternalChecker message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    InternalChecker.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an InternalChecker message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.InternalChecker
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.InternalChecker} InternalChecker
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    InternalChecker.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.InternalChecker();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.displayName = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.network = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.gcpZone = reader.string();
                                    break;
                                }
                            case 6: {
                                    message.peerProjectId = reader.string();
                                    break;
                                }
                            case 7: {
                                    message.state = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an InternalChecker message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.InternalChecker
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.InternalChecker} InternalChecker
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    InternalChecker.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an InternalChecker message.
                     * @function verify
                     * @memberof google.monitoring.v3.InternalChecker
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    InternalChecker.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.displayName != null && message.hasOwnProperty("displayName"))
                            if (!$util.isString(message.displayName))
                                return "displayName: string expected";
                        if (message.network != null && message.hasOwnProperty("network"))
                            if (!$util.isString(message.network))
                                return "network: string expected";
                        if (message.gcpZone != null && message.hasOwnProperty("gcpZone"))
                            if (!$util.isString(message.gcpZone))
                                return "gcpZone: string expected";
                        if (message.peerProjectId != null && message.hasOwnProperty("peerProjectId"))
                            if (!$util.isString(message.peerProjectId))
                                return "peerProjectId: string expected";
                        if (message.state != null && message.hasOwnProperty("state"))
                            switch (message.state) {
                            default:
                                return "state: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates an InternalChecker message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.InternalChecker
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.InternalChecker} InternalChecker
                     */
                    InternalChecker.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.InternalChecker)
                            return object;
                        var message = new $root.google.monitoring.v3.InternalChecker();
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.displayName != null)
                            message.displayName = String(object.displayName);
                        if (object.network != null)
                            message.network = String(object.network);
                        if (object.gcpZone != null)
                            message.gcpZone = String(object.gcpZone);
                        if (object.peerProjectId != null)
                            message.peerProjectId = String(object.peerProjectId);
                        switch (object.state) {
                        default:
                            if (typeof object.state === "number") {
                                message.state = object.state;
                                break;
                            }
                            break;
                        case "UNSPECIFIED":
                        case 0:
                            message.state = 0;
                            break;
                        case "CREATING":
                        case 1:
                            message.state = 1;
                            break;
                        case "RUNNING":
                        case 2:
                            message.state = 2;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an InternalChecker message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.InternalChecker
                     * @static
                     * @param {google.monitoring.v3.InternalChecker} message InternalChecker
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    InternalChecker.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.name = "";
                            object.displayName = "";
                            object.network = "";
                            object.gcpZone = "";
                            object.peerProjectId = "";
                            object.state = options.enums === String ? "UNSPECIFIED" : 0;
                        }
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        if (message.displayName != null && message.hasOwnProperty("displayName"))
                            object.displayName = message.displayName;
                        if (message.network != null && message.hasOwnProperty("network"))
                            object.network = message.network;
                        if (message.gcpZone != null && message.hasOwnProperty("gcpZone"))
                            object.gcpZone = message.gcpZone;
                        if (message.peerProjectId != null && message.hasOwnProperty("peerProjectId"))
                            object.peerProjectId = message.peerProjectId;
                        if (message.state != null && message.hasOwnProperty("state"))
                            object.state = options.enums === String ? $root.google.monitoring.v3.InternalChecker.State[message.state] === undefined ? message.state : $root.google.monitoring.v3.InternalChecker.State[message.state] : message.state;
                        return object;
                    };
    
                    /**
                     * Converts this InternalChecker to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.InternalChecker
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    InternalChecker.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for InternalChecker
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.InternalChecker
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    InternalChecker.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.InternalChecker";
                    };
    
                    /**
                     * State enum.
                     * @name google.monitoring.v3.InternalChecker.State
                     * @enum {number}
                     * @property {number} UNSPECIFIED=0 UNSPECIFIED value
                     * @property {number} CREATING=1 CREATING value
                     * @property {number} RUNNING=2 RUNNING value
                     */
                    InternalChecker.State = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "UNSPECIFIED"] = 0;
                        values[valuesById[1] = "CREATING"] = 1;
                        values[valuesById[2] = "RUNNING"] = 2;
                        return values;
                    })();
    
                    return InternalChecker;
                })();
    
                v3.UptimeCheckConfig = (function() {
    
                    /**
                     * Properties of an UptimeCheckConfig.
                     * @memberof google.monitoring.v3
                     * @interface IUptimeCheckConfig
                     * @property {string|null} [name] UptimeCheckConfig name
                     * @property {string|null} [displayName] UptimeCheckConfig displayName
                     * @property {google.api.IMonitoredResource|null} [monitoredResource] UptimeCheckConfig monitoredResource
                     * @property {google.monitoring.v3.UptimeCheckConfig.IResourceGroup|null} [resourceGroup] UptimeCheckConfig resourceGroup
                     * @property {google.monitoring.v3.UptimeCheckConfig.IHttpCheck|null} [httpCheck] UptimeCheckConfig httpCheck
                     * @property {google.monitoring.v3.UptimeCheckConfig.ITcpCheck|null} [tcpCheck] UptimeCheckConfig tcpCheck
                     * @property {google.protobuf.IDuration|null} [period] UptimeCheckConfig period
                     * @property {google.protobuf.IDuration|null} [timeout] UptimeCheckConfig timeout
                     * @property {Array.<google.monitoring.v3.UptimeCheckConfig.IContentMatcher>|null} [contentMatchers] UptimeCheckConfig contentMatchers
                     * @property {Array.<google.monitoring.v3.UptimeCheckRegion>|null} [selectedRegions] UptimeCheckConfig selectedRegions
                     * @property {boolean|null} [isInternal] UptimeCheckConfig isInternal
                     * @property {Array.<google.monitoring.v3.IInternalChecker>|null} [internalCheckers] UptimeCheckConfig internalCheckers
                     */
    
                    /**
                     * Constructs a new UptimeCheckConfig.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents an UptimeCheckConfig.
                     * @implements IUptimeCheckConfig
                     * @constructor
                     * @param {google.monitoring.v3.IUptimeCheckConfig=} [properties] Properties to set
                     */
                    function UptimeCheckConfig(properties) {
                        this.contentMatchers = [];
                        this.selectedRegions = [];
                        this.internalCheckers = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * UptimeCheckConfig name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.UptimeCheckConfig
                     * @instance
                     */
                    UptimeCheckConfig.prototype.name = "";
    
                    /**
                     * UptimeCheckConfig displayName.
                     * @member {string} displayName
                     * @memberof google.monitoring.v3.UptimeCheckConfig
                     * @instance
                     */
                    UptimeCheckConfig.prototype.displayName = "";
    
                    /**
                     * UptimeCheckConfig monitoredResource.
                     * @member {google.api.IMonitoredResource|null|undefined} monitoredResource
                     * @memberof google.monitoring.v3.UptimeCheckConfig
                     * @instance
                     */
                    UptimeCheckConfig.prototype.monitoredResource = null;
    
                    /**
                     * UptimeCheckConfig resourceGroup.
                     * @member {google.monitoring.v3.UptimeCheckConfig.IResourceGroup|null|undefined} resourceGroup
                     * @memberof google.monitoring.v3.UptimeCheckConfig
                     * @instance
                     */
                    UptimeCheckConfig.prototype.resourceGroup = null;
    
                    /**
                     * UptimeCheckConfig httpCheck.
                     * @member {google.monitoring.v3.UptimeCheckConfig.IHttpCheck|null|undefined} httpCheck
                     * @memberof google.monitoring.v3.UptimeCheckConfig
                     * @instance
                     */
                    UptimeCheckConfig.prototype.httpCheck = null;
    
                    /**
                     * UptimeCheckConfig tcpCheck.
                     * @member {google.monitoring.v3.UptimeCheckConfig.ITcpCheck|null|undefined} tcpCheck
                     * @memberof google.monitoring.v3.UptimeCheckConfig
                     * @instance
                     */
                    UptimeCheckConfig.prototype.tcpCheck = null;
    
                    /**
                     * UptimeCheckConfig period.
                     * @member {google.protobuf.IDuration|null|undefined} period
                     * @memberof google.monitoring.v3.UptimeCheckConfig
                     * @instance
                     */
                    UptimeCheckConfig.prototype.period = null;
    
                    /**
                     * UptimeCheckConfig timeout.
                     * @member {google.protobuf.IDuration|null|undefined} timeout
                     * @memberof google.monitoring.v3.UptimeCheckConfig
                     * @instance
                     */
                    UptimeCheckConfig.prototype.timeout = null;
    
                    /**
                     * UptimeCheckConfig contentMatchers.
                     * @member {Array.<google.monitoring.v3.UptimeCheckConfig.IContentMatcher>} contentMatchers
                     * @memberof google.monitoring.v3.UptimeCheckConfig
                     * @instance
                     */
                    UptimeCheckConfig.prototype.contentMatchers = $util.emptyArray;
    
                    /**
                     * UptimeCheckConfig selectedRegions.
                     * @member {Array.<google.monitoring.v3.UptimeCheckRegion>} selectedRegions
                     * @memberof google.monitoring.v3.UptimeCheckConfig
                     * @instance
                     */
                    UptimeCheckConfig.prototype.selectedRegions = $util.emptyArray;
    
                    /**
                     * UptimeCheckConfig isInternal.
                     * @member {boolean} isInternal
                     * @memberof google.monitoring.v3.UptimeCheckConfig
                     * @instance
                     */
                    UptimeCheckConfig.prototype.isInternal = false;
    
                    /**
                     * UptimeCheckConfig internalCheckers.
                     * @member {Array.<google.monitoring.v3.IInternalChecker>} internalCheckers
                     * @memberof google.monitoring.v3.UptimeCheckConfig
                     * @instance
                     */
                    UptimeCheckConfig.prototype.internalCheckers = $util.emptyArray;
    
                    // OneOf field names bound to virtual getters and setters
                    var $oneOfFields;
    
                    /**
                     * UptimeCheckConfig resource.
                     * @member {"monitoredResource"|"resourceGroup"|undefined} resource
                     * @memberof google.monitoring.v3.UptimeCheckConfig
                     * @instance
                     */
                    Object.defineProperty(UptimeCheckConfig.prototype, "resource", {
                        get: $util.oneOfGetter($oneOfFields = ["monitoredResource", "resourceGroup"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });
    
                    /**
                     * UptimeCheckConfig checkRequestType.
                     * @member {"httpCheck"|"tcpCheck"|undefined} checkRequestType
                     * @memberof google.monitoring.v3.UptimeCheckConfig
                     * @instance
                     */
                    Object.defineProperty(UptimeCheckConfig.prototype, "checkRequestType", {
                        get: $util.oneOfGetter($oneOfFields = ["httpCheck", "tcpCheck"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });
    
                    /**
                     * Creates a new UptimeCheckConfig instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.UptimeCheckConfig
                     * @static
                     * @param {google.monitoring.v3.IUptimeCheckConfig=} [properties] Properties to set
                     * @returns {google.monitoring.v3.UptimeCheckConfig} UptimeCheckConfig instance
                     */
                    UptimeCheckConfig.create = function create(properties) {
                        return new UptimeCheckConfig(properties);
                    };
    
                    /**
                     * Encodes the specified UptimeCheckConfig message. Does not implicitly {@link google.monitoring.v3.UptimeCheckConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.UptimeCheckConfig
                     * @static
                     * @param {google.monitoring.v3.IUptimeCheckConfig} message UptimeCheckConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UptimeCheckConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                        if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.displayName);
                        if (message.monitoredResource != null && Object.hasOwnProperty.call(message, "monitoredResource"))
                            $root.google.api.MonitoredResource.encode(message.monitoredResource, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        if (message.resourceGroup != null && Object.hasOwnProperty.call(message, "resourceGroup"))
                            $root.google.monitoring.v3.UptimeCheckConfig.ResourceGroup.encode(message.resourceGroup, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        if (message.httpCheck != null && Object.hasOwnProperty.call(message, "httpCheck"))
                            $root.google.monitoring.v3.UptimeCheckConfig.HttpCheck.encode(message.httpCheck, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                        if (message.tcpCheck != null && Object.hasOwnProperty.call(message, "tcpCheck"))
                            $root.google.monitoring.v3.UptimeCheckConfig.TcpCheck.encode(message.tcpCheck, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                        if (message.period != null && Object.hasOwnProperty.call(message, "period"))
                            $root.google.protobuf.Duration.encode(message.period, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                        if (message.timeout != null && Object.hasOwnProperty.call(message, "timeout"))
                            $root.google.protobuf.Duration.encode(message.timeout, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                        if (message.contentMatchers != null && message.contentMatchers.length)
                            for (var i = 0; i < message.contentMatchers.length; ++i)
                                $root.google.monitoring.v3.UptimeCheckConfig.ContentMatcher.encode(message.contentMatchers[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                        if (message.selectedRegions != null && message.selectedRegions.length) {
                            writer.uint32(/* id 10, wireType 2 =*/82).fork();
                            for (var i = 0; i < message.selectedRegions.length; ++i)
                                writer.int32(message.selectedRegions[i]);
                            writer.ldelim();
                        }
                        if (message.internalCheckers != null && message.internalCheckers.length)
                            for (var i = 0; i < message.internalCheckers.length; ++i)
                                $root.google.monitoring.v3.InternalChecker.encode(message.internalCheckers[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                        if (message.isInternal != null && Object.hasOwnProperty.call(message, "isInternal"))
                            writer.uint32(/* id 15, wireType 0 =*/120).bool(message.isInternal);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified UptimeCheckConfig message, length delimited. Does not implicitly {@link google.monitoring.v3.UptimeCheckConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.UptimeCheckConfig
                     * @static
                     * @param {google.monitoring.v3.IUptimeCheckConfig} message UptimeCheckConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UptimeCheckConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an UptimeCheckConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.UptimeCheckConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.UptimeCheckConfig} UptimeCheckConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UptimeCheckConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.UptimeCheckConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.displayName = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.monitoredResource = $root.google.api.MonitoredResource.decode(reader, reader.uint32());
                                    break;
                                }
                            case 4: {
                                    message.resourceGroup = $root.google.monitoring.v3.UptimeCheckConfig.ResourceGroup.decode(reader, reader.uint32());
                                    break;
                                }
                            case 5: {
                                    message.httpCheck = $root.google.monitoring.v3.UptimeCheckConfig.HttpCheck.decode(reader, reader.uint32());
                                    break;
                                }
                            case 6: {
                                    message.tcpCheck = $root.google.monitoring.v3.UptimeCheckConfig.TcpCheck.decode(reader, reader.uint32());
                                    break;
                                }
                            case 7: {
                                    message.period = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            case 8: {
                                    message.timeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            case 9: {
                                    if (!(message.contentMatchers && message.contentMatchers.length))
                                        message.contentMatchers = [];
                                    message.contentMatchers.push($root.google.monitoring.v3.UptimeCheckConfig.ContentMatcher.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 10: {
                                    if (!(message.selectedRegions && message.selectedRegions.length))
                                        message.selectedRegions = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.selectedRegions.push(reader.int32());
                                    } else
                                        message.selectedRegions.push(reader.int32());
                                    break;
                                }
                            case 15: {
                                    message.isInternal = reader.bool();
                                    break;
                                }
                            case 14: {
                                    if (!(message.internalCheckers && message.internalCheckers.length))
                                        message.internalCheckers = [];
                                    message.internalCheckers.push($root.google.monitoring.v3.InternalChecker.decode(reader, reader.uint32()));
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an UptimeCheckConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.UptimeCheckConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.UptimeCheckConfig} UptimeCheckConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UptimeCheckConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an UptimeCheckConfig message.
                     * @function verify
                     * @memberof google.monitoring.v3.UptimeCheckConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    UptimeCheckConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        var properties = {};
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.displayName != null && message.hasOwnProperty("displayName"))
                            if (!$util.isString(message.displayName))
                                return "displayName: string expected";
                        if (message.monitoredResource != null && message.hasOwnProperty("monitoredResource")) {
                            properties.resource = 1;
                            {
                                var error = $root.google.api.MonitoredResource.verify(message.monitoredResource);
                                if (error)
                                    return "monitoredResource." + error;
                            }
                        }
                        if (message.resourceGroup != null && message.hasOwnProperty("resourceGroup")) {
                            if (properties.resource === 1)
                                return "resource: multiple values";
                            properties.resource = 1;
                            {
                                var error = $root.google.monitoring.v3.UptimeCheckConfig.ResourceGroup.verify(message.resourceGroup);
                                if (error)
                                    return "resourceGroup." + error;
                            }
                        }
                        if (message.httpCheck != null && message.hasOwnProperty("httpCheck")) {
                            properties.checkRequestType = 1;
                            {
                                var error = $root.google.monitoring.v3.UptimeCheckConfig.HttpCheck.verify(message.httpCheck);
                                if (error)
                                    return "httpCheck." + error;
                            }
                        }
                        if (message.tcpCheck != null && message.hasOwnProperty("tcpCheck")) {
                            if (properties.checkRequestType === 1)
                                return "checkRequestType: multiple values";
                            properties.checkRequestType = 1;
                            {
                                var error = $root.google.monitoring.v3.UptimeCheckConfig.TcpCheck.verify(message.tcpCheck);
                                if (error)
                                    return "tcpCheck." + error;
                            }
                        }
                        if (message.period != null && message.hasOwnProperty("period")) {
                            var error = $root.google.protobuf.Duration.verify(message.period);
                            if (error)
                                return "period." + error;
                        }
                        if (message.timeout != null && message.hasOwnProperty("timeout")) {
                            var error = $root.google.protobuf.Duration.verify(message.timeout);
                            if (error)
                                return "timeout." + error;
                        }
                        if (message.contentMatchers != null && message.hasOwnProperty("contentMatchers")) {
                            if (!Array.isArray(message.contentMatchers))
                                return "contentMatchers: array expected";
                            for (var i = 0; i < message.contentMatchers.length; ++i) {
                                var error = $root.google.monitoring.v3.UptimeCheckConfig.ContentMatcher.verify(message.contentMatchers[i]);
                                if (error)
                                    return "contentMatchers." + error;
                            }
                        }
                        if (message.selectedRegions != null && message.hasOwnProperty("selectedRegions")) {
                            if (!Array.isArray(message.selectedRegions))
                                return "selectedRegions: array expected";
                            for (var i = 0; i < message.selectedRegions.length; ++i)
                                switch (message.selectedRegions[i]) {
                                default:
                                    return "selectedRegions: enum value[] expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                        }
                        if (message.isInternal != null && message.hasOwnProperty("isInternal"))
                            if (typeof message.isInternal !== "boolean")
                                return "isInternal: boolean expected";
                        if (message.internalCheckers != null && message.hasOwnProperty("internalCheckers")) {
                            if (!Array.isArray(message.internalCheckers))
                                return "internalCheckers: array expected";
                            for (var i = 0; i < message.internalCheckers.length; ++i) {
                                var error = $root.google.monitoring.v3.InternalChecker.verify(message.internalCheckers[i]);
                                if (error)
                                    return "internalCheckers." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates an UptimeCheckConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.UptimeCheckConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.UptimeCheckConfig} UptimeCheckConfig
                     */
                    UptimeCheckConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.UptimeCheckConfig)
                            return object;
                        var message = new $root.google.monitoring.v3.UptimeCheckConfig();
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.displayName != null)
                            message.displayName = String(object.displayName);
                        if (object.monitoredResource != null) {
                            if (typeof object.monitoredResource !== "object")
                                throw TypeError(".google.monitoring.v3.UptimeCheckConfig.monitoredResource: object expected");
                            message.monitoredResource = $root.google.api.MonitoredResource.fromObject(object.monitoredResource);
                        }
                        if (object.resourceGroup != null) {
                            if (typeof object.resourceGroup !== "object")
                                throw TypeError(".google.monitoring.v3.UptimeCheckConfig.resourceGroup: object expected");
                            message.resourceGroup = $root.google.monitoring.v3.UptimeCheckConfig.ResourceGroup.fromObject(object.resourceGroup);
                        }
                        if (object.httpCheck != null) {
                            if (typeof object.httpCheck !== "object")
                                throw TypeError(".google.monitoring.v3.UptimeCheckConfig.httpCheck: object expected");
                            message.httpCheck = $root.google.monitoring.v3.UptimeCheckConfig.HttpCheck.fromObject(object.httpCheck);
                        }
                        if (object.tcpCheck != null) {
                            if (typeof object.tcpCheck !== "object")
                                throw TypeError(".google.monitoring.v3.UptimeCheckConfig.tcpCheck: object expected");
                            message.tcpCheck = $root.google.monitoring.v3.UptimeCheckConfig.TcpCheck.fromObject(object.tcpCheck);
                        }
                        if (object.period != null) {
                            if (typeof object.period !== "object")
                                throw TypeError(".google.monitoring.v3.UptimeCheckConfig.period: object expected");
                            message.period = $root.google.protobuf.Duration.fromObject(object.period);
                        }
                        if (object.timeout != null) {
                            if (typeof object.timeout !== "object")
                                throw TypeError(".google.monitoring.v3.UptimeCheckConfig.timeout: object expected");
                            message.timeout = $root.google.protobuf.Duration.fromObject(object.timeout);
                        }
                        if (object.contentMatchers) {
                            if (!Array.isArray(object.contentMatchers))
                                throw TypeError(".google.monitoring.v3.UptimeCheckConfig.contentMatchers: array expected");
                            message.contentMatchers = [];
                            for (var i = 0; i < object.contentMatchers.length; ++i) {
                                if (typeof object.contentMatchers[i] !== "object")
                                    throw TypeError(".google.monitoring.v3.UptimeCheckConfig.contentMatchers: object expected");
                                message.contentMatchers[i] = $root.google.monitoring.v3.UptimeCheckConfig.ContentMatcher.fromObject(object.contentMatchers[i]);
                            }
                        }
                        if (object.selectedRegions) {
                            if (!Array.isArray(object.selectedRegions))
                                throw TypeError(".google.monitoring.v3.UptimeCheckConfig.selectedRegions: array expected");
                            message.selectedRegions = [];
                            for (var i = 0; i < object.selectedRegions.length; ++i)
                                switch (object.selectedRegions[i]) {
                                default:
                                    if (typeof object.selectedRegions[i] === "number") {
                                        message.selectedRegions[i] = object.selectedRegions[i];
                                        break;
                                    }
                                case "REGION_UNSPECIFIED":
                                case 0:
                                    message.selectedRegions[i] = 0;
                                    break;
                                case "USA":
                                case 1:
                                    message.selectedRegions[i] = 1;
                                    break;
                                case "EUROPE":
                                case 2:
                                    message.selectedRegions[i] = 2;
                                    break;
                                case "SOUTH_AMERICA":
                                case 3:
                                    message.selectedRegions[i] = 3;
                                    break;
                                case "ASIA_PACIFIC":
                                case 4:
                                    message.selectedRegions[i] = 4;
                                    break;
                                }
                        }
                        if (object.isInternal != null)
                            message.isInternal = Boolean(object.isInternal);
                        if (object.internalCheckers) {
                            if (!Array.isArray(object.internalCheckers))
                                throw TypeError(".google.monitoring.v3.UptimeCheckConfig.internalCheckers: array expected");
                            message.internalCheckers = [];
                            for (var i = 0; i < object.internalCheckers.length; ++i) {
                                if (typeof object.internalCheckers[i] !== "object")
                                    throw TypeError(".google.monitoring.v3.UptimeCheckConfig.internalCheckers: object expected");
                                message.internalCheckers[i] = $root.google.monitoring.v3.InternalChecker.fromObject(object.internalCheckers[i]);
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an UptimeCheckConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.UptimeCheckConfig
                     * @static
                     * @param {google.monitoring.v3.UptimeCheckConfig} message UptimeCheckConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    UptimeCheckConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.contentMatchers = [];
                            object.selectedRegions = [];
                            object.internalCheckers = [];
                        }
                        if (options.defaults) {
                            object.name = "";
                            object.displayName = "";
                            object.period = null;
                            object.timeout = null;
                            object.isInternal = false;
                        }
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        if (message.displayName != null && message.hasOwnProperty("displayName"))
                            object.displayName = message.displayName;
                        if (message.monitoredResource != null && message.hasOwnProperty("monitoredResource")) {
                            object.monitoredResource = $root.google.api.MonitoredResource.toObject(message.monitoredResource, options);
                            if (options.oneofs)
                                object.resource = "monitoredResource";
                        }
                        if (message.resourceGroup != null && message.hasOwnProperty("resourceGroup")) {
                            object.resourceGroup = $root.google.monitoring.v3.UptimeCheckConfig.ResourceGroup.toObject(message.resourceGroup, options);
                            if (options.oneofs)
                                object.resource = "resourceGroup";
                        }
                        if (message.httpCheck != null && message.hasOwnProperty("httpCheck")) {
                            object.httpCheck = $root.google.monitoring.v3.UptimeCheckConfig.HttpCheck.toObject(message.httpCheck, options);
                            if (options.oneofs)
                                object.checkRequestType = "httpCheck";
                        }
                        if (message.tcpCheck != null && message.hasOwnProperty("tcpCheck")) {
                            object.tcpCheck = $root.google.monitoring.v3.UptimeCheckConfig.TcpCheck.toObject(message.tcpCheck, options);
                            if (options.oneofs)
                                object.checkRequestType = "tcpCheck";
                        }
                        if (message.period != null && message.hasOwnProperty("period"))
                            object.period = $root.google.protobuf.Duration.toObject(message.period, options);
                        if (message.timeout != null && message.hasOwnProperty("timeout"))
                            object.timeout = $root.google.protobuf.Duration.toObject(message.timeout, options);
                        if (message.contentMatchers && message.contentMatchers.length) {
                            object.contentMatchers = [];
                            for (var j = 0; j < message.contentMatchers.length; ++j)
                                object.contentMatchers[j] = $root.google.monitoring.v3.UptimeCheckConfig.ContentMatcher.toObject(message.contentMatchers[j], options);
                        }
                        if (message.selectedRegions && message.selectedRegions.length) {
                            object.selectedRegions = [];
                            for (var j = 0; j < message.selectedRegions.length; ++j)
                                object.selectedRegions[j] = options.enums === String ? $root.google.monitoring.v3.UptimeCheckRegion[message.selectedRegions[j]] === undefined ? message.selectedRegions[j] : $root.google.monitoring.v3.UptimeCheckRegion[message.selectedRegions[j]] : message.selectedRegions[j];
                        }
                        if (message.internalCheckers && message.internalCheckers.length) {
                            object.internalCheckers = [];
                            for (var j = 0; j < message.internalCheckers.length; ++j)
                                object.internalCheckers[j] = $root.google.monitoring.v3.InternalChecker.toObject(message.internalCheckers[j], options);
                        }
                        if (message.isInternal != null && message.hasOwnProperty("isInternal"))
                            object.isInternal = message.isInternal;
                        return object;
                    };
    
                    /**
                     * Converts this UptimeCheckConfig to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.UptimeCheckConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    UptimeCheckConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for UptimeCheckConfig
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.UptimeCheckConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    UptimeCheckConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.UptimeCheckConfig";
                    };
    
                    UptimeCheckConfig.ResourceGroup = (function() {
    
                        /**
                         * Properties of a ResourceGroup.
                         * @memberof google.monitoring.v3.UptimeCheckConfig
                         * @interface IResourceGroup
                         * @property {string|null} [groupId] ResourceGroup groupId
                         * @property {google.monitoring.v3.GroupResourceType|null} [resourceType] ResourceGroup resourceType
                         */
    
                        /**
                         * Constructs a new ResourceGroup.
                         * @memberof google.monitoring.v3.UptimeCheckConfig
                         * @classdesc Represents a ResourceGroup.
                         * @implements IResourceGroup
                         * @constructor
                         * @param {google.monitoring.v3.UptimeCheckConfig.IResourceGroup=} [properties] Properties to set
                         */
                        function ResourceGroup(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ResourceGroup groupId.
                         * @member {string} groupId
                         * @memberof google.monitoring.v3.UptimeCheckConfig.ResourceGroup
                         * @instance
                         */
                        ResourceGroup.prototype.groupId = "";
    
                        /**
                         * ResourceGroup resourceType.
                         * @member {google.monitoring.v3.GroupResourceType} resourceType
                         * @memberof google.monitoring.v3.UptimeCheckConfig.ResourceGroup
                         * @instance
                         */
                        ResourceGroup.prototype.resourceType = 0;
    
                        /**
                         * Creates a new ResourceGroup instance using the specified properties.
                         * @function create
                         * @memberof google.monitoring.v3.UptimeCheckConfig.ResourceGroup
                         * @static
                         * @param {google.monitoring.v3.UptimeCheckConfig.IResourceGroup=} [properties] Properties to set
                         * @returns {google.monitoring.v3.UptimeCheckConfig.ResourceGroup} ResourceGroup instance
                         */
                        ResourceGroup.create = function create(properties) {
                            return new ResourceGroup(properties);
                        };
    
                        /**
                         * Encodes the specified ResourceGroup message. Does not implicitly {@link google.monitoring.v3.UptimeCheckConfig.ResourceGroup.verify|verify} messages.
                         * @function encode
                         * @memberof google.monitoring.v3.UptimeCheckConfig.ResourceGroup
                         * @static
                         * @param {google.monitoring.v3.UptimeCheckConfig.IResourceGroup} message ResourceGroup message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResourceGroup.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.groupId != null && Object.hasOwnProperty.call(message, "groupId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.groupId);
                            if (message.resourceType != null && Object.hasOwnProperty.call(message, "resourceType"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.resourceType);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ResourceGroup message, length delimited. Does not implicitly {@link google.monitoring.v3.UptimeCheckConfig.ResourceGroup.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.monitoring.v3.UptimeCheckConfig.ResourceGroup
                         * @static
                         * @param {google.monitoring.v3.UptimeCheckConfig.IResourceGroup} message ResourceGroup message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResourceGroup.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ResourceGroup message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.monitoring.v3.UptimeCheckConfig.ResourceGroup
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.monitoring.v3.UptimeCheckConfig.ResourceGroup} ResourceGroup
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResourceGroup.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.UptimeCheckConfig.ResourceGroup();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.groupId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.resourceType = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ResourceGroup message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.monitoring.v3.UptimeCheckConfig.ResourceGroup
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.monitoring.v3.UptimeCheckConfig.ResourceGroup} ResourceGroup
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResourceGroup.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ResourceGroup message.
                         * @function verify
                         * @memberof google.monitoring.v3.UptimeCheckConfig.ResourceGroup
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ResourceGroup.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.groupId != null && message.hasOwnProperty("groupId"))
                                if (!$util.isString(message.groupId))
                                    return "groupId: string expected";
                            if (message.resourceType != null && message.hasOwnProperty("resourceType"))
                                switch (message.resourceType) {
                                default:
                                    return "resourceType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a ResourceGroup message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.monitoring.v3.UptimeCheckConfig.ResourceGroup
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.monitoring.v3.UptimeCheckConfig.ResourceGroup} ResourceGroup
                         */
                        ResourceGroup.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.monitoring.v3.UptimeCheckConfig.ResourceGroup)
                                return object;
                            var message = new $root.google.monitoring.v3.UptimeCheckConfig.ResourceGroup();
                            if (object.groupId != null)
                                message.groupId = String(object.groupId);
                            switch (object.resourceType) {
                            default:
                                if (typeof object.resourceType === "number") {
                                    message.resourceType = object.resourceType;
                                    break;
                                }
                                break;
                            case "RESOURCE_TYPE_UNSPECIFIED":
                            case 0:
                                message.resourceType = 0;
                                break;
                            case "INSTANCE":
                            case 1:
                                message.resourceType = 1;
                                break;
                            case "AWS_ELB_LOAD_BALANCER":
                            case 2:
                                message.resourceType = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ResourceGroup message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.monitoring.v3.UptimeCheckConfig.ResourceGroup
                         * @static
                         * @param {google.monitoring.v3.UptimeCheckConfig.ResourceGroup} message ResourceGroup
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ResourceGroup.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.groupId = "";
                                object.resourceType = options.enums === String ? "RESOURCE_TYPE_UNSPECIFIED" : 0;
                            }
                            if (message.groupId != null && message.hasOwnProperty("groupId"))
                                object.groupId = message.groupId;
                            if (message.resourceType != null && message.hasOwnProperty("resourceType"))
                                object.resourceType = options.enums === String ? $root.google.monitoring.v3.GroupResourceType[message.resourceType] === undefined ? message.resourceType : $root.google.monitoring.v3.GroupResourceType[message.resourceType] : message.resourceType;
                            return object;
                        };
    
                        /**
                         * Converts this ResourceGroup to JSON.
                         * @function toJSON
                         * @memberof google.monitoring.v3.UptimeCheckConfig.ResourceGroup
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ResourceGroup.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ResourceGroup
                         * @function getTypeUrl
                         * @memberof google.monitoring.v3.UptimeCheckConfig.ResourceGroup
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ResourceGroup.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.monitoring.v3.UptimeCheckConfig.ResourceGroup";
                        };
    
                        return ResourceGroup;
                    })();
    
                    UptimeCheckConfig.HttpCheck = (function() {
    
                        /**
                         * Properties of a HttpCheck.
                         * @memberof google.monitoring.v3.UptimeCheckConfig
                         * @interface IHttpCheck
                         * @property {google.monitoring.v3.UptimeCheckConfig.HttpCheck.RequestMethod|null} [requestMethod] HttpCheck requestMethod
                         * @property {boolean|null} [useSsl] HttpCheck useSsl
                         * @property {string|null} [path] HttpCheck path
                         * @property {number|null} [port] HttpCheck port
                         * @property {google.monitoring.v3.UptimeCheckConfig.HttpCheck.IBasicAuthentication|null} [authInfo] HttpCheck authInfo
                         * @property {boolean|null} [maskHeaders] HttpCheck maskHeaders
                         * @property {Object.<string,string>|null} [headers] HttpCheck headers
                         * @property {google.monitoring.v3.UptimeCheckConfig.HttpCheck.ContentType|null} [contentType] HttpCheck contentType
                         * @property {boolean|null} [validateSsl] HttpCheck validateSsl
                         * @property {Uint8Array|null} [body] HttpCheck body
                         */
    
                        /**
                         * Constructs a new HttpCheck.
                         * @memberof google.monitoring.v3.UptimeCheckConfig
                         * @classdesc Represents a HttpCheck.
                         * @implements IHttpCheck
                         * @constructor
                         * @param {google.monitoring.v3.UptimeCheckConfig.IHttpCheck=} [properties] Properties to set
                         */
                        function HttpCheck(properties) {
                            this.headers = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * HttpCheck requestMethod.
                         * @member {google.monitoring.v3.UptimeCheckConfig.HttpCheck.RequestMethod} requestMethod
                         * @memberof google.monitoring.v3.UptimeCheckConfig.HttpCheck
                         * @instance
                         */
                        HttpCheck.prototype.requestMethod = 0;
    
                        /**
                         * HttpCheck useSsl.
                         * @member {boolean} useSsl
                         * @memberof google.monitoring.v3.UptimeCheckConfig.HttpCheck
                         * @instance
                         */
                        HttpCheck.prototype.useSsl = false;
    
                        /**
                         * HttpCheck path.
                         * @member {string} path
                         * @memberof google.monitoring.v3.UptimeCheckConfig.HttpCheck
                         * @instance
                         */
                        HttpCheck.prototype.path = "";
    
                        /**
                         * HttpCheck port.
                         * @member {number} port
                         * @memberof google.monitoring.v3.UptimeCheckConfig.HttpCheck
                         * @instance
                         */
                        HttpCheck.prototype.port = 0;
    
                        /**
                         * HttpCheck authInfo.
                         * @member {google.monitoring.v3.UptimeCheckConfig.HttpCheck.IBasicAuthentication|null|undefined} authInfo
                         * @memberof google.monitoring.v3.UptimeCheckConfig.HttpCheck
                         * @instance
                         */
                        HttpCheck.prototype.authInfo = null;
    
                        /**
                         * HttpCheck maskHeaders.
                         * @member {boolean} maskHeaders
                         * @memberof google.monitoring.v3.UptimeCheckConfig.HttpCheck
                         * @instance
                         */
                        HttpCheck.prototype.maskHeaders = false;
    
                        /**
                         * HttpCheck headers.
                         * @member {Object.<string,string>} headers
                         * @memberof google.monitoring.v3.UptimeCheckConfig.HttpCheck
                         * @instance
                         */
                        HttpCheck.prototype.headers = $util.emptyObject;
    
                        /**
                         * HttpCheck contentType.
                         * @member {google.monitoring.v3.UptimeCheckConfig.HttpCheck.ContentType} contentType
                         * @memberof google.monitoring.v3.UptimeCheckConfig.HttpCheck
                         * @instance
                         */
                        HttpCheck.prototype.contentType = 0;
    
                        /**
                         * HttpCheck validateSsl.
                         * @member {boolean} validateSsl
                         * @memberof google.monitoring.v3.UptimeCheckConfig.HttpCheck
                         * @instance
                         */
                        HttpCheck.prototype.validateSsl = false;
    
                        /**
                         * HttpCheck body.
                         * @member {Uint8Array} body
                         * @memberof google.monitoring.v3.UptimeCheckConfig.HttpCheck
                         * @instance
                         */
                        HttpCheck.prototype.body = $util.newBuffer([]);
    
                        /**
                         * Creates a new HttpCheck instance using the specified properties.
                         * @function create
                         * @memberof google.monitoring.v3.UptimeCheckConfig.HttpCheck
                         * @static
                         * @param {google.monitoring.v3.UptimeCheckConfig.IHttpCheck=} [properties] Properties to set
                         * @returns {google.monitoring.v3.UptimeCheckConfig.HttpCheck} HttpCheck instance
                         */
                        HttpCheck.create = function create(properties) {
                            return new HttpCheck(properties);
                        };
    
                        /**
                         * Encodes the specified HttpCheck message. Does not implicitly {@link google.monitoring.v3.UptimeCheckConfig.HttpCheck.verify|verify} messages.
                         * @function encode
                         * @memberof google.monitoring.v3.UptimeCheckConfig.HttpCheck
                         * @static
                         * @param {google.monitoring.v3.UptimeCheckConfig.IHttpCheck} message HttpCheck message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HttpCheck.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.useSsl != null && Object.hasOwnProperty.call(message, "useSsl"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.useSsl);
                            if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);
                            if (message.port != null && Object.hasOwnProperty.call(message, "port"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.port);
                            if (message.authInfo != null && Object.hasOwnProperty.call(message, "authInfo"))
                                $root.google.monitoring.v3.UptimeCheckConfig.HttpCheck.BasicAuthentication.encode(message.authInfo, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.maskHeaders != null && Object.hasOwnProperty.call(message, "maskHeaders"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.maskHeaders);
                            if (message.headers != null && Object.hasOwnProperty.call(message, "headers"))
                                for (var keys = Object.keys(message.headers), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 6, wireType 2 =*/50).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.headers[keys[i]]).ldelim();
                            if (message.validateSsl != null && Object.hasOwnProperty.call(message, "validateSsl"))
                                writer.uint32(/* id 7, wireType 0 =*/56).bool(message.validateSsl);
                            if (message.requestMethod != null && Object.hasOwnProperty.call(message, "requestMethod"))
                                writer.uint32(/* id 8, wireType 0 =*/64).int32(message.requestMethod);
                            if (message.contentType != null && Object.hasOwnProperty.call(message, "contentType"))
                                writer.uint32(/* id 9, wireType 0 =*/72).int32(message.contentType);
                            if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                                writer.uint32(/* id 10, wireType 2 =*/82).bytes(message.body);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified HttpCheck message, length delimited. Does not implicitly {@link google.monitoring.v3.UptimeCheckConfig.HttpCheck.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.monitoring.v3.UptimeCheckConfig.HttpCheck
                         * @static
                         * @param {google.monitoring.v3.UptimeCheckConfig.IHttpCheck} message HttpCheck message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HttpCheck.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a HttpCheck message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.monitoring.v3.UptimeCheckConfig.HttpCheck
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.monitoring.v3.UptimeCheckConfig.HttpCheck} HttpCheck
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HttpCheck.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.UptimeCheckConfig.HttpCheck(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 8: {
                                        message.requestMethod = reader.int32();
                                        break;
                                    }
                                case 1: {
                                        message.useSsl = reader.bool();
                                        break;
                                    }
                                case 2: {
                                        message.path = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.port = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.authInfo = $root.google.monitoring.v3.UptimeCheckConfig.HttpCheck.BasicAuthentication.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.maskHeaders = reader.bool();
                                        break;
                                    }
                                case 6: {
                                        if (message.headers === $util.emptyObject)
                                            message.headers = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.headers[key] = value;
                                        break;
                                    }
                                case 9: {
                                        message.contentType = reader.int32();
                                        break;
                                    }
                                case 7: {
                                        message.validateSsl = reader.bool();
                                        break;
                                    }
                                case 10: {
                                        message.body = reader.bytes();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a HttpCheck message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.monitoring.v3.UptimeCheckConfig.HttpCheck
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.monitoring.v3.UptimeCheckConfig.HttpCheck} HttpCheck
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HttpCheck.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a HttpCheck message.
                         * @function verify
                         * @memberof google.monitoring.v3.UptimeCheckConfig.HttpCheck
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        HttpCheck.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.requestMethod != null && message.hasOwnProperty("requestMethod"))
                                switch (message.requestMethod) {
                                default:
                                    return "requestMethod: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.useSsl != null && message.hasOwnProperty("useSsl"))
                                if (typeof message.useSsl !== "boolean")
                                    return "useSsl: boolean expected";
                            if (message.path != null && message.hasOwnProperty("path"))
                                if (!$util.isString(message.path))
                                    return "path: string expected";
                            if (message.port != null && message.hasOwnProperty("port"))
                                if (!$util.isInteger(message.port))
                                    return "port: integer expected";
                            if (message.authInfo != null && message.hasOwnProperty("authInfo")) {
                                var error = $root.google.monitoring.v3.UptimeCheckConfig.HttpCheck.BasicAuthentication.verify(message.authInfo);
                                if (error)
                                    return "authInfo." + error;
                            }
                            if (message.maskHeaders != null && message.hasOwnProperty("maskHeaders"))
                                if (typeof message.maskHeaders !== "boolean")
                                    return "maskHeaders: boolean expected";
                            if (message.headers != null && message.hasOwnProperty("headers")) {
                                if (!$util.isObject(message.headers))
                                    return "headers: object expected";
                                var key = Object.keys(message.headers);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.headers[key[i]]))
                                        return "headers: string{k:string} expected";
                            }
                            if (message.contentType != null && message.hasOwnProperty("contentType"))
                                switch (message.contentType) {
                                default:
                                    return "contentType: enum value expected";
                                case 0:
                                case 1:
                                    break;
                                }
                            if (message.validateSsl != null && message.hasOwnProperty("validateSsl"))
                                if (typeof message.validateSsl !== "boolean")
                                    return "validateSsl: boolean expected";
                            if (message.body != null && message.hasOwnProperty("body"))
                                if (!(message.body && typeof message.body.length === "number" || $util.isString(message.body)))
                                    return "body: buffer expected";
                            return null;
                        };
    
                        /**
                         * Creates a HttpCheck message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.monitoring.v3.UptimeCheckConfig.HttpCheck
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.monitoring.v3.UptimeCheckConfig.HttpCheck} HttpCheck
                         */
                        HttpCheck.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.monitoring.v3.UptimeCheckConfig.HttpCheck)
                                return object;
                            var message = new $root.google.monitoring.v3.UptimeCheckConfig.HttpCheck();
                            switch (object.requestMethod) {
                            default:
                                if (typeof object.requestMethod === "number") {
                                    message.requestMethod = object.requestMethod;
                                    break;
                                }
                                break;
                            case "METHOD_UNSPECIFIED":
                            case 0:
                                message.requestMethod = 0;
                                break;
                            case "GET":
                            case 1:
                                message.requestMethod = 1;
                                break;
                            case "POST":
                            case 2:
                                message.requestMethod = 2;
                                break;
                            }
                            if (object.useSsl != null)
                                message.useSsl = Boolean(object.useSsl);
                            if (object.path != null)
                                message.path = String(object.path);
                            if (object.port != null)
                                message.port = object.port | 0;
                            if (object.authInfo != null) {
                                if (typeof object.authInfo !== "object")
                                    throw TypeError(".google.monitoring.v3.UptimeCheckConfig.HttpCheck.authInfo: object expected");
                                message.authInfo = $root.google.monitoring.v3.UptimeCheckConfig.HttpCheck.BasicAuthentication.fromObject(object.authInfo);
                            }
                            if (object.maskHeaders != null)
                                message.maskHeaders = Boolean(object.maskHeaders);
                            if (object.headers) {
                                if (typeof object.headers !== "object")
                                    throw TypeError(".google.monitoring.v3.UptimeCheckConfig.HttpCheck.headers: object expected");
                                message.headers = {};
                                for (var keys = Object.keys(object.headers), i = 0; i < keys.length; ++i)
                                    message.headers[keys[i]] = String(object.headers[keys[i]]);
                            }
                            switch (object.contentType) {
                            default:
                                if (typeof object.contentType === "number") {
                                    message.contentType = object.contentType;
                                    break;
                                }
                                break;
                            case "TYPE_UNSPECIFIED":
                            case 0:
                                message.contentType = 0;
                                break;
                            case "URL_ENCODED":
                            case 1:
                                message.contentType = 1;
                                break;
                            }
                            if (object.validateSsl != null)
                                message.validateSsl = Boolean(object.validateSsl);
                            if (object.body != null)
                                if (typeof object.body === "string")
                                    $util.base64.decode(object.body, message.body = $util.newBuffer($util.base64.length(object.body)), 0);
                                else if (object.body.length >= 0)
                                    message.body = object.body;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a HttpCheck message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.monitoring.v3.UptimeCheckConfig.HttpCheck
                         * @static
                         * @param {google.monitoring.v3.UptimeCheckConfig.HttpCheck} message HttpCheck
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        HttpCheck.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.headers = {};
                            if (options.defaults) {
                                object.useSsl = false;
                                object.path = "";
                                object.port = 0;
                                object.authInfo = null;
                                object.maskHeaders = false;
                                object.validateSsl = false;
                                object.requestMethod = options.enums === String ? "METHOD_UNSPECIFIED" : 0;
                                object.contentType = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                                if (options.bytes === String)
                                    object.body = "";
                                else {
                                    object.body = [];
                                    if (options.bytes !== Array)
                                        object.body = $util.newBuffer(object.body);
                                }
                            }
                            if (message.useSsl != null && message.hasOwnProperty("useSsl"))
                                object.useSsl = message.useSsl;
                            if (message.path != null && message.hasOwnProperty("path"))
                                object.path = message.path;
                            if (message.port != null && message.hasOwnProperty("port"))
                                object.port = message.port;
                            if (message.authInfo != null && message.hasOwnProperty("authInfo"))
                                object.authInfo = $root.google.monitoring.v3.UptimeCheckConfig.HttpCheck.BasicAuthentication.toObject(message.authInfo, options);
                            if (message.maskHeaders != null && message.hasOwnProperty("maskHeaders"))
                                object.maskHeaders = message.maskHeaders;
                            var keys2;
                            if (message.headers && (keys2 = Object.keys(message.headers)).length) {
                                object.headers = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.headers[keys2[j]] = message.headers[keys2[j]];
                            }
                            if (message.validateSsl != null && message.hasOwnProperty("validateSsl"))
                                object.validateSsl = message.validateSsl;
                            if (message.requestMethod != null && message.hasOwnProperty("requestMethod"))
                                object.requestMethod = options.enums === String ? $root.google.monitoring.v3.UptimeCheckConfig.HttpCheck.RequestMethod[message.requestMethod] === undefined ? message.requestMethod : $root.google.monitoring.v3.UptimeCheckConfig.HttpCheck.RequestMethod[message.requestMethod] : message.requestMethod;
                            if (message.contentType != null && message.hasOwnProperty("contentType"))
                                object.contentType = options.enums === String ? $root.google.monitoring.v3.UptimeCheckConfig.HttpCheck.ContentType[message.contentType] === undefined ? message.contentType : $root.google.monitoring.v3.UptimeCheckConfig.HttpCheck.ContentType[message.contentType] : message.contentType;
                            if (message.body != null && message.hasOwnProperty("body"))
                                object.body = options.bytes === String ? $util.base64.encode(message.body, 0, message.body.length) : options.bytes === Array ? Array.prototype.slice.call(message.body) : message.body;
                            return object;
                        };
    
                        /**
                         * Converts this HttpCheck to JSON.
                         * @function toJSON
                         * @memberof google.monitoring.v3.UptimeCheckConfig.HttpCheck
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        HttpCheck.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for HttpCheck
                         * @function getTypeUrl
                         * @memberof google.monitoring.v3.UptimeCheckConfig.HttpCheck
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        HttpCheck.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.monitoring.v3.UptimeCheckConfig.HttpCheck";
                        };
    
                        HttpCheck.BasicAuthentication = (function() {
    
                            /**
                             * Properties of a BasicAuthentication.
                             * @memberof google.monitoring.v3.UptimeCheckConfig.HttpCheck
                             * @interface IBasicAuthentication
                             * @property {string|null} [username] BasicAuthentication username
                             * @property {string|null} [password] BasicAuthentication password
                             */
    
                            /**
                             * Constructs a new BasicAuthentication.
                             * @memberof google.monitoring.v3.UptimeCheckConfig.HttpCheck
                             * @classdesc Represents a BasicAuthentication.
                             * @implements IBasicAuthentication
                             * @constructor
                             * @param {google.monitoring.v3.UptimeCheckConfig.HttpCheck.IBasicAuthentication=} [properties] Properties to set
                             */
                            function BasicAuthentication(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * BasicAuthentication username.
                             * @member {string} username
                             * @memberof google.monitoring.v3.UptimeCheckConfig.HttpCheck.BasicAuthentication
                             * @instance
                             */
                            BasicAuthentication.prototype.username = "";
    
                            /**
                             * BasicAuthentication password.
                             * @member {string} password
                             * @memberof google.monitoring.v3.UptimeCheckConfig.HttpCheck.BasicAuthentication
                             * @instance
                             */
                            BasicAuthentication.prototype.password = "";
    
                            /**
                             * Creates a new BasicAuthentication instance using the specified properties.
                             * @function create
                             * @memberof google.monitoring.v3.UptimeCheckConfig.HttpCheck.BasicAuthentication
                             * @static
                             * @param {google.monitoring.v3.UptimeCheckConfig.HttpCheck.IBasicAuthentication=} [properties] Properties to set
                             * @returns {google.monitoring.v3.UptimeCheckConfig.HttpCheck.BasicAuthentication} BasicAuthentication instance
                             */
                            BasicAuthentication.create = function create(properties) {
                                return new BasicAuthentication(properties);
                            };
    
                            /**
                             * Encodes the specified BasicAuthentication message. Does not implicitly {@link google.monitoring.v3.UptimeCheckConfig.HttpCheck.BasicAuthentication.verify|verify} messages.
                             * @function encode
                             * @memberof google.monitoring.v3.UptimeCheckConfig.HttpCheck.BasicAuthentication
                             * @static
                             * @param {google.monitoring.v3.UptimeCheckConfig.HttpCheck.IBasicAuthentication} message BasicAuthentication message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BasicAuthentication.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.username != null && Object.hasOwnProperty.call(message, "username"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.username);
                                if (message.password != null && Object.hasOwnProperty.call(message, "password"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.password);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified BasicAuthentication message, length delimited. Does not implicitly {@link google.monitoring.v3.UptimeCheckConfig.HttpCheck.BasicAuthentication.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.monitoring.v3.UptimeCheckConfig.HttpCheck.BasicAuthentication
                             * @static
                             * @param {google.monitoring.v3.UptimeCheckConfig.HttpCheck.IBasicAuthentication} message BasicAuthentication message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BasicAuthentication.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a BasicAuthentication message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.monitoring.v3.UptimeCheckConfig.HttpCheck.BasicAuthentication
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.monitoring.v3.UptimeCheckConfig.HttpCheck.BasicAuthentication} BasicAuthentication
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BasicAuthentication.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.UptimeCheckConfig.HttpCheck.BasicAuthentication();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.username = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.password = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a BasicAuthentication message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.monitoring.v3.UptimeCheckConfig.HttpCheck.BasicAuthentication
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.monitoring.v3.UptimeCheckConfig.HttpCheck.BasicAuthentication} BasicAuthentication
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BasicAuthentication.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a BasicAuthentication message.
                             * @function verify
                             * @memberof google.monitoring.v3.UptimeCheckConfig.HttpCheck.BasicAuthentication
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            BasicAuthentication.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.username != null && message.hasOwnProperty("username"))
                                    if (!$util.isString(message.username))
                                        return "username: string expected";
                                if (message.password != null && message.hasOwnProperty("password"))
                                    if (!$util.isString(message.password))
                                        return "password: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a BasicAuthentication message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.monitoring.v3.UptimeCheckConfig.HttpCheck.BasicAuthentication
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.monitoring.v3.UptimeCheckConfig.HttpCheck.BasicAuthentication} BasicAuthentication
                             */
                            BasicAuthentication.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.monitoring.v3.UptimeCheckConfig.HttpCheck.BasicAuthentication)
                                    return object;
                                var message = new $root.google.monitoring.v3.UptimeCheckConfig.HttpCheck.BasicAuthentication();
                                if (object.username != null)
                                    message.username = String(object.username);
                                if (object.password != null)
                                    message.password = String(object.password);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a BasicAuthentication message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.monitoring.v3.UptimeCheckConfig.HttpCheck.BasicAuthentication
                             * @static
                             * @param {google.monitoring.v3.UptimeCheckConfig.HttpCheck.BasicAuthentication} message BasicAuthentication
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            BasicAuthentication.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.username = "";
                                    object.password = "";
                                }
                                if (message.username != null && message.hasOwnProperty("username"))
                                    object.username = message.username;
                                if (message.password != null && message.hasOwnProperty("password"))
                                    object.password = message.password;
                                return object;
                            };
    
                            /**
                             * Converts this BasicAuthentication to JSON.
                             * @function toJSON
                             * @memberof google.monitoring.v3.UptimeCheckConfig.HttpCheck.BasicAuthentication
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            BasicAuthentication.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for BasicAuthentication
                             * @function getTypeUrl
                             * @memberof google.monitoring.v3.UptimeCheckConfig.HttpCheck.BasicAuthentication
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            BasicAuthentication.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.monitoring.v3.UptimeCheckConfig.HttpCheck.BasicAuthentication";
                            };
    
                            return BasicAuthentication;
                        })();
    
                        /**
                         * RequestMethod enum.
                         * @name google.monitoring.v3.UptimeCheckConfig.HttpCheck.RequestMethod
                         * @enum {number}
                         * @property {number} METHOD_UNSPECIFIED=0 METHOD_UNSPECIFIED value
                         * @property {number} GET=1 GET value
                         * @property {number} POST=2 POST value
                         */
                        HttpCheck.RequestMethod = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "METHOD_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "GET"] = 1;
                            values[valuesById[2] = "POST"] = 2;
                            return values;
                        })();
    
                        /**
                         * ContentType enum.
                         * @name google.monitoring.v3.UptimeCheckConfig.HttpCheck.ContentType
                         * @enum {number}
                         * @property {number} TYPE_UNSPECIFIED=0 TYPE_UNSPECIFIED value
                         * @property {number} URL_ENCODED=1 URL_ENCODED value
                         */
                        HttpCheck.ContentType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "URL_ENCODED"] = 1;
                            return values;
                        })();
    
                        return HttpCheck;
                    })();
    
                    UptimeCheckConfig.TcpCheck = (function() {
    
                        /**
                         * Properties of a TcpCheck.
                         * @memberof google.monitoring.v3.UptimeCheckConfig
                         * @interface ITcpCheck
                         * @property {number|null} [port] TcpCheck port
                         */
    
                        /**
                         * Constructs a new TcpCheck.
                         * @memberof google.monitoring.v3.UptimeCheckConfig
                         * @classdesc Represents a TcpCheck.
                         * @implements ITcpCheck
                         * @constructor
                         * @param {google.monitoring.v3.UptimeCheckConfig.ITcpCheck=} [properties] Properties to set
                         */
                        function TcpCheck(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TcpCheck port.
                         * @member {number} port
                         * @memberof google.monitoring.v3.UptimeCheckConfig.TcpCheck
                         * @instance
                         */
                        TcpCheck.prototype.port = 0;
    
                        /**
                         * Creates a new TcpCheck instance using the specified properties.
                         * @function create
                         * @memberof google.monitoring.v3.UptimeCheckConfig.TcpCheck
                         * @static
                         * @param {google.monitoring.v3.UptimeCheckConfig.ITcpCheck=} [properties] Properties to set
                         * @returns {google.monitoring.v3.UptimeCheckConfig.TcpCheck} TcpCheck instance
                         */
                        TcpCheck.create = function create(properties) {
                            return new TcpCheck(properties);
                        };
    
                        /**
                         * Encodes the specified TcpCheck message. Does not implicitly {@link google.monitoring.v3.UptimeCheckConfig.TcpCheck.verify|verify} messages.
                         * @function encode
                         * @memberof google.monitoring.v3.UptimeCheckConfig.TcpCheck
                         * @static
                         * @param {google.monitoring.v3.UptimeCheckConfig.ITcpCheck} message TcpCheck message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TcpCheck.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.port != null && Object.hasOwnProperty.call(message, "port"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.port);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TcpCheck message, length delimited. Does not implicitly {@link google.monitoring.v3.UptimeCheckConfig.TcpCheck.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.monitoring.v3.UptimeCheckConfig.TcpCheck
                         * @static
                         * @param {google.monitoring.v3.UptimeCheckConfig.ITcpCheck} message TcpCheck message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TcpCheck.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TcpCheck message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.monitoring.v3.UptimeCheckConfig.TcpCheck
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.monitoring.v3.UptimeCheckConfig.TcpCheck} TcpCheck
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TcpCheck.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.UptimeCheckConfig.TcpCheck();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.port = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TcpCheck message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.monitoring.v3.UptimeCheckConfig.TcpCheck
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.monitoring.v3.UptimeCheckConfig.TcpCheck} TcpCheck
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TcpCheck.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TcpCheck message.
                         * @function verify
                         * @memberof google.monitoring.v3.UptimeCheckConfig.TcpCheck
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TcpCheck.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.port != null && message.hasOwnProperty("port"))
                                if (!$util.isInteger(message.port))
                                    return "port: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a TcpCheck message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.monitoring.v3.UptimeCheckConfig.TcpCheck
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.monitoring.v3.UptimeCheckConfig.TcpCheck} TcpCheck
                         */
                        TcpCheck.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.monitoring.v3.UptimeCheckConfig.TcpCheck)
                                return object;
                            var message = new $root.google.monitoring.v3.UptimeCheckConfig.TcpCheck();
                            if (object.port != null)
                                message.port = object.port | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TcpCheck message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.monitoring.v3.UptimeCheckConfig.TcpCheck
                         * @static
                         * @param {google.monitoring.v3.UptimeCheckConfig.TcpCheck} message TcpCheck
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TcpCheck.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.port = 0;
                            if (message.port != null && message.hasOwnProperty("port"))
                                object.port = message.port;
                            return object;
                        };
    
                        /**
                         * Converts this TcpCheck to JSON.
                         * @function toJSON
                         * @memberof google.monitoring.v3.UptimeCheckConfig.TcpCheck
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TcpCheck.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TcpCheck
                         * @function getTypeUrl
                         * @memberof google.monitoring.v3.UptimeCheckConfig.TcpCheck
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TcpCheck.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.monitoring.v3.UptimeCheckConfig.TcpCheck";
                        };
    
                        return TcpCheck;
                    })();
    
                    UptimeCheckConfig.ContentMatcher = (function() {
    
                        /**
                         * Properties of a ContentMatcher.
                         * @memberof google.monitoring.v3.UptimeCheckConfig
                         * @interface IContentMatcher
                         * @property {string|null} [content] ContentMatcher content
                         * @property {google.monitoring.v3.UptimeCheckConfig.ContentMatcher.ContentMatcherOption|null} [matcher] ContentMatcher matcher
                         */
    
                        /**
                         * Constructs a new ContentMatcher.
                         * @memberof google.monitoring.v3.UptimeCheckConfig
                         * @classdesc Represents a ContentMatcher.
                         * @implements IContentMatcher
                         * @constructor
                         * @param {google.monitoring.v3.UptimeCheckConfig.IContentMatcher=} [properties] Properties to set
                         */
                        function ContentMatcher(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ContentMatcher content.
                         * @member {string} content
                         * @memberof google.monitoring.v3.UptimeCheckConfig.ContentMatcher
                         * @instance
                         */
                        ContentMatcher.prototype.content = "";
    
                        /**
                         * ContentMatcher matcher.
                         * @member {google.monitoring.v3.UptimeCheckConfig.ContentMatcher.ContentMatcherOption} matcher
                         * @memberof google.monitoring.v3.UptimeCheckConfig.ContentMatcher
                         * @instance
                         */
                        ContentMatcher.prototype.matcher = 0;
    
                        /**
                         * Creates a new ContentMatcher instance using the specified properties.
                         * @function create
                         * @memberof google.monitoring.v3.UptimeCheckConfig.ContentMatcher
                         * @static
                         * @param {google.monitoring.v3.UptimeCheckConfig.IContentMatcher=} [properties] Properties to set
                         * @returns {google.monitoring.v3.UptimeCheckConfig.ContentMatcher} ContentMatcher instance
                         */
                        ContentMatcher.create = function create(properties) {
                            return new ContentMatcher(properties);
                        };
    
                        /**
                         * Encodes the specified ContentMatcher message. Does not implicitly {@link google.monitoring.v3.UptimeCheckConfig.ContentMatcher.verify|verify} messages.
                         * @function encode
                         * @memberof google.monitoring.v3.UptimeCheckConfig.ContentMatcher
                         * @static
                         * @param {google.monitoring.v3.UptimeCheckConfig.IContentMatcher} message ContentMatcher message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ContentMatcher.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.content != null && Object.hasOwnProperty.call(message, "content"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.content);
                            if (message.matcher != null && Object.hasOwnProperty.call(message, "matcher"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.matcher);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ContentMatcher message, length delimited. Does not implicitly {@link google.monitoring.v3.UptimeCheckConfig.ContentMatcher.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.monitoring.v3.UptimeCheckConfig.ContentMatcher
                         * @static
                         * @param {google.monitoring.v3.UptimeCheckConfig.IContentMatcher} message ContentMatcher message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ContentMatcher.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ContentMatcher message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.monitoring.v3.UptimeCheckConfig.ContentMatcher
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.monitoring.v3.UptimeCheckConfig.ContentMatcher} ContentMatcher
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ContentMatcher.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.UptimeCheckConfig.ContentMatcher();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.content = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.matcher = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ContentMatcher message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.monitoring.v3.UptimeCheckConfig.ContentMatcher
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.monitoring.v3.UptimeCheckConfig.ContentMatcher} ContentMatcher
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ContentMatcher.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ContentMatcher message.
                         * @function verify
                         * @memberof google.monitoring.v3.UptimeCheckConfig.ContentMatcher
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ContentMatcher.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.content != null && message.hasOwnProperty("content"))
                                if (!$util.isString(message.content))
                                    return "content: string expected";
                            if (message.matcher != null && message.hasOwnProperty("matcher"))
                                switch (message.matcher) {
                                default:
                                    return "matcher: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a ContentMatcher message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.monitoring.v3.UptimeCheckConfig.ContentMatcher
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.monitoring.v3.UptimeCheckConfig.ContentMatcher} ContentMatcher
                         */
                        ContentMatcher.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.monitoring.v3.UptimeCheckConfig.ContentMatcher)
                                return object;
                            var message = new $root.google.monitoring.v3.UptimeCheckConfig.ContentMatcher();
                            if (object.content != null)
                                message.content = String(object.content);
                            switch (object.matcher) {
                            default:
                                if (typeof object.matcher === "number") {
                                    message.matcher = object.matcher;
                                    break;
                                }
                                break;
                            case "CONTENT_MATCHER_OPTION_UNSPECIFIED":
                            case 0:
                                message.matcher = 0;
                                break;
                            case "CONTAINS_STRING":
                            case 1:
                                message.matcher = 1;
                                break;
                            case "NOT_CONTAINS_STRING":
                            case 2:
                                message.matcher = 2;
                                break;
                            case "MATCHES_REGEX":
                            case 3:
                                message.matcher = 3;
                                break;
                            case "NOT_MATCHES_REGEX":
                            case 4:
                                message.matcher = 4;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ContentMatcher message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.monitoring.v3.UptimeCheckConfig.ContentMatcher
                         * @static
                         * @param {google.monitoring.v3.UptimeCheckConfig.ContentMatcher} message ContentMatcher
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ContentMatcher.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.content = "";
                                object.matcher = options.enums === String ? "CONTENT_MATCHER_OPTION_UNSPECIFIED" : 0;
                            }
                            if (message.content != null && message.hasOwnProperty("content"))
                                object.content = message.content;
                            if (message.matcher != null && message.hasOwnProperty("matcher"))
                                object.matcher = options.enums === String ? $root.google.monitoring.v3.UptimeCheckConfig.ContentMatcher.ContentMatcherOption[message.matcher] === undefined ? message.matcher : $root.google.monitoring.v3.UptimeCheckConfig.ContentMatcher.ContentMatcherOption[message.matcher] : message.matcher;
                            return object;
                        };
    
                        /**
                         * Converts this ContentMatcher to JSON.
                         * @function toJSON
                         * @memberof google.monitoring.v3.UptimeCheckConfig.ContentMatcher
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ContentMatcher.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ContentMatcher
                         * @function getTypeUrl
                         * @memberof google.monitoring.v3.UptimeCheckConfig.ContentMatcher
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ContentMatcher.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.monitoring.v3.UptimeCheckConfig.ContentMatcher";
                        };
    
                        /**
                         * ContentMatcherOption enum.
                         * @name google.monitoring.v3.UptimeCheckConfig.ContentMatcher.ContentMatcherOption
                         * @enum {number}
                         * @property {number} CONTENT_MATCHER_OPTION_UNSPECIFIED=0 CONTENT_MATCHER_OPTION_UNSPECIFIED value
                         * @property {number} CONTAINS_STRING=1 CONTAINS_STRING value
                         * @property {number} NOT_CONTAINS_STRING=2 NOT_CONTAINS_STRING value
                         * @property {number} MATCHES_REGEX=3 MATCHES_REGEX value
                         * @property {number} NOT_MATCHES_REGEX=4 NOT_MATCHES_REGEX value
                         */
                        ContentMatcher.ContentMatcherOption = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "CONTENT_MATCHER_OPTION_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CONTAINS_STRING"] = 1;
                            values[valuesById[2] = "NOT_CONTAINS_STRING"] = 2;
                            values[valuesById[3] = "MATCHES_REGEX"] = 3;
                            values[valuesById[4] = "NOT_MATCHES_REGEX"] = 4;
                            return values;
                        })();
    
                        return ContentMatcher;
                    })();
    
                    return UptimeCheckConfig;
                })();
    
                v3.UptimeCheckIp = (function() {
    
                    /**
                     * Properties of an UptimeCheckIp.
                     * @memberof google.monitoring.v3
                     * @interface IUptimeCheckIp
                     * @property {google.monitoring.v3.UptimeCheckRegion|null} [region] UptimeCheckIp region
                     * @property {string|null} [location] UptimeCheckIp location
                     * @property {string|null} [ipAddress] UptimeCheckIp ipAddress
                     */
    
                    /**
                     * Constructs a new UptimeCheckIp.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents an UptimeCheckIp.
                     * @implements IUptimeCheckIp
                     * @constructor
                     * @param {google.monitoring.v3.IUptimeCheckIp=} [properties] Properties to set
                     */
                    function UptimeCheckIp(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * UptimeCheckIp region.
                     * @member {google.monitoring.v3.UptimeCheckRegion} region
                     * @memberof google.monitoring.v3.UptimeCheckIp
                     * @instance
                     */
                    UptimeCheckIp.prototype.region = 0;
    
                    /**
                     * UptimeCheckIp location.
                     * @member {string} location
                     * @memberof google.monitoring.v3.UptimeCheckIp
                     * @instance
                     */
                    UptimeCheckIp.prototype.location = "";
    
                    /**
                     * UptimeCheckIp ipAddress.
                     * @member {string} ipAddress
                     * @memberof google.monitoring.v3.UptimeCheckIp
                     * @instance
                     */
                    UptimeCheckIp.prototype.ipAddress = "";
    
                    /**
                     * Creates a new UptimeCheckIp instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.UptimeCheckIp
                     * @static
                     * @param {google.monitoring.v3.IUptimeCheckIp=} [properties] Properties to set
                     * @returns {google.monitoring.v3.UptimeCheckIp} UptimeCheckIp instance
                     */
                    UptimeCheckIp.create = function create(properties) {
                        return new UptimeCheckIp(properties);
                    };
    
                    /**
                     * Encodes the specified UptimeCheckIp message. Does not implicitly {@link google.monitoring.v3.UptimeCheckIp.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.UptimeCheckIp
                     * @static
                     * @param {google.monitoring.v3.IUptimeCheckIp} message UptimeCheckIp message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UptimeCheckIp.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.region != null && Object.hasOwnProperty.call(message, "region"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.region);
                        if (message.location != null && Object.hasOwnProperty.call(message, "location"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.location);
                        if (message.ipAddress != null && Object.hasOwnProperty.call(message, "ipAddress"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.ipAddress);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified UptimeCheckIp message, length delimited. Does not implicitly {@link google.monitoring.v3.UptimeCheckIp.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.UptimeCheckIp
                     * @static
                     * @param {google.monitoring.v3.IUptimeCheckIp} message UptimeCheckIp message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UptimeCheckIp.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an UptimeCheckIp message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.UptimeCheckIp
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.UptimeCheckIp} UptimeCheckIp
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UptimeCheckIp.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.UptimeCheckIp();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.region = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.location = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.ipAddress = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an UptimeCheckIp message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.UptimeCheckIp
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.UptimeCheckIp} UptimeCheckIp
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UptimeCheckIp.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an UptimeCheckIp message.
                     * @function verify
                     * @memberof google.monitoring.v3.UptimeCheckIp
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    UptimeCheckIp.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.region != null && message.hasOwnProperty("region"))
                            switch (message.region) {
                            default:
                                return "region: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                                break;
                            }
                        if (message.location != null && message.hasOwnProperty("location"))
                            if (!$util.isString(message.location))
                                return "location: string expected";
                        if (message.ipAddress != null && message.hasOwnProperty("ipAddress"))
                            if (!$util.isString(message.ipAddress))
                                return "ipAddress: string expected";
                        return null;
                    };
    
                    /**
                     * Creates an UptimeCheckIp message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.UptimeCheckIp
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.UptimeCheckIp} UptimeCheckIp
                     */
                    UptimeCheckIp.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.UptimeCheckIp)
                            return object;
                        var message = new $root.google.monitoring.v3.UptimeCheckIp();
                        switch (object.region) {
                        default:
                            if (typeof object.region === "number") {
                                message.region = object.region;
                                break;
                            }
                            break;
                        case "REGION_UNSPECIFIED":
                        case 0:
                            message.region = 0;
                            break;
                        case "USA":
                        case 1:
                            message.region = 1;
                            break;
                        case "EUROPE":
                        case 2:
                            message.region = 2;
                            break;
                        case "SOUTH_AMERICA":
                        case 3:
                            message.region = 3;
                            break;
                        case "ASIA_PACIFIC":
                        case 4:
                            message.region = 4;
                            break;
                        }
                        if (object.location != null)
                            message.location = String(object.location);
                        if (object.ipAddress != null)
                            message.ipAddress = String(object.ipAddress);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an UptimeCheckIp message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.UptimeCheckIp
                     * @static
                     * @param {google.monitoring.v3.UptimeCheckIp} message UptimeCheckIp
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    UptimeCheckIp.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.region = options.enums === String ? "REGION_UNSPECIFIED" : 0;
                            object.location = "";
                            object.ipAddress = "";
                        }
                        if (message.region != null && message.hasOwnProperty("region"))
                            object.region = options.enums === String ? $root.google.monitoring.v3.UptimeCheckRegion[message.region] === undefined ? message.region : $root.google.monitoring.v3.UptimeCheckRegion[message.region] : message.region;
                        if (message.location != null && message.hasOwnProperty("location"))
                            object.location = message.location;
                        if (message.ipAddress != null && message.hasOwnProperty("ipAddress"))
                            object.ipAddress = message.ipAddress;
                        return object;
                    };
    
                    /**
                     * Converts this UptimeCheckIp to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.UptimeCheckIp
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    UptimeCheckIp.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for UptimeCheckIp
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.UptimeCheckIp
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    UptimeCheckIp.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.UptimeCheckIp";
                    };
    
                    return UptimeCheckIp;
                })();
    
                /**
                 * GroupResourceType enum.
                 * @name google.monitoring.v3.GroupResourceType
                 * @enum {number}
                 * @property {number} RESOURCE_TYPE_UNSPECIFIED=0 RESOURCE_TYPE_UNSPECIFIED value
                 * @property {number} INSTANCE=1 INSTANCE value
                 * @property {number} AWS_ELB_LOAD_BALANCER=2 AWS_ELB_LOAD_BALANCER value
                 */
                v3.GroupResourceType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "RESOURCE_TYPE_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "INSTANCE"] = 1;
                    values[valuesById[2] = "AWS_ELB_LOAD_BALANCER"] = 2;
                    return values;
                })();
    
                v3.UptimeCheckService = (function() {
    
                    /**
                     * Constructs a new UptimeCheckService service.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents an UptimeCheckService
                     * @extends $protobuf.rpc.Service
                     * @constructor
                     * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                     * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                     * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                     */
                    function UptimeCheckService(rpcImpl, requestDelimited, responseDelimited) {
                        $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                    }
    
                    (UptimeCheckService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = UptimeCheckService;
    
                    /**
                     * Creates new UptimeCheckService service using the specified rpc implementation.
                     * @function create
                     * @memberof google.monitoring.v3.UptimeCheckService
                     * @static
                     * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                     * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                     * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                     * @returns {UptimeCheckService} RPC service. Useful where requests and/or responses are streamed.
                     */
                    UptimeCheckService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                        return new this(rpcImpl, requestDelimited, responseDelimited);
                    };
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.UptimeCheckService|listUptimeCheckConfigs}.
                     * @memberof google.monitoring.v3.UptimeCheckService
                     * @typedef ListUptimeCheckConfigsCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.monitoring.v3.ListUptimeCheckConfigsResponse} [response] ListUptimeCheckConfigsResponse
                     */
    
                    /**
                     * Calls ListUptimeCheckConfigs.
                     * @function listUptimeCheckConfigs
                     * @memberof google.monitoring.v3.UptimeCheckService
                     * @instance
                     * @param {google.monitoring.v3.IListUptimeCheckConfigsRequest} request ListUptimeCheckConfigsRequest message or plain object
                     * @param {google.monitoring.v3.UptimeCheckService.ListUptimeCheckConfigsCallback} callback Node-style callback called with the error, if any, and ListUptimeCheckConfigsResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(UptimeCheckService.prototype.listUptimeCheckConfigs = function listUptimeCheckConfigs(request, callback) {
                        return this.rpcCall(listUptimeCheckConfigs, $root.google.monitoring.v3.ListUptimeCheckConfigsRequest, $root.google.monitoring.v3.ListUptimeCheckConfigsResponse, request, callback);
                    }, "name", { value: "ListUptimeCheckConfigs" });
    
                    /**
                     * Calls ListUptimeCheckConfigs.
                     * @function listUptimeCheckConfigs
                     * @memberof google.monitoring.v3.UptimeCheckService
                     * @instance
                     * @param {google.monitoring.v3.IListUptimeCheckConfigsRequest} request ListUptimeCheckConfigsRequest message or plain object
                     * @returns {Promise<google.monitoring.v3.ListUptimeCheckConfigsResponse>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.UptimeCheckService|getUptimeCheckConfig}.
                     * @memberof google.monitoring.v3.UptimeCheckService
                     * @typedef GetUptimeCheckConfigCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.monitoring.v3.UptimeCheckConfig} [response] UptimeCheckConfig
                     */
    
                    /**
                     * Calls GetUptimeCheckConfig.
                     * @function getUptimeCheckConfig
                     * @memberof google.monitoring.v3.UptimeCheckService
                     * @instance
                     * @param {google.monitoring.v3.IGetUptimeCheckConfigRequest} request GetUptimeCheckConfigRequest message or plain object
                     * @param {google.monitoring.v3.UptimeCheckService.GetUptimeCheckConfigCallback} callback Node-style callback called with the error, if any, and UptimeCheckConfig
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(UptimeCheckService.prototype.getUptimeCheckConfig = function getUptimeCheckConfig(request, callback) {
                        return this.rpcCall(getUptimeCheckConfig, $root.google.monitoring.v3.GetUptimeCheckConfigRequest, $root.google.monitoring.v3.UptimeCheckConfig, request, callback);
                    }, "name", { value: "GetUptimeCheckConfig" });
    
                    /**
                     * Calls GetUptimeCheckConfig.
                     * @function getUptimeCheckConfig
                     * @memberof google.monitoring.v3.UptimeCheckService
                     * @instance
                     * @param {google.monitoring.v3.IGetUptimeCheckConfigRequest} request GetUptimeCheckConfigRequest message or plain object
                     * @returns {Promise<google.monitoring.v3.UptimeCheckConfig>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.UptimeCheckService|createUptimeCheckConfig}.
                     * @memberof google.monitoring.v3.UptimeCheckService
                     * @typedef CreateUptimeCheckConfigCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.monitoring.v3.UptimeCheckConfig} [response] UptimeCheckConfig
                     */
    
                    /**
                     * Calls CreateUptimeCheckConfig.
                     * @function createUptimeCheckConfig
                     * @memberof google.monitoring.v3.UptimeCheckService
                     * @instance
                     * @param {google.monitoring.v3.ICreateUptimeCheckConfigRequest} request CreateUptimeCheckConfigRequest message or plain object
                     * @param {google.monitoring.v3.UptimeCheckService.CreateUptimeCheckConfigCallback} callback Node-style callback called with the error, if any, and UptimeCheckConfig
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(UptimeCheckService.prototype.createUptimeCheckConfig = function createUptimeCheckConfig(request, callback) {
                        return this.rpcCall(createUptimeCheckConfig, $root.google.monitoring.v3.CreateUptimeCheckConfigRequest, $root.google.monitoring.v3.UptimeCheckConfig, request, callback);
                    }, "name", { value: "CreateUptimeCheckConfig" });
    
                    /**
                     * Calls CreateUptimeCheckConfig.
                     * @function createUptimeCheckConfig
                     * @memberof google.monitoring.v3.UptimeCheckService
                     * @instance
                     * @param {google.monitoring.v3.ICreateUptimeCheckConfigRequest} request CreateUptimeCheckConfigRequest message or plain object
                     * @returns {Promise<google.monitoring.v3.UptimeCheckConfig>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.UptimeCheckService|updateUptimeCheckConfig}.
                     * @memberof google.monitoring.v3.UptimeCheckService
                     * @typedef UpdateUptimeCheckConfigCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.monitoring.v3.UptimeCheckConfig} [response] UptimeCheckConfig
                     */
    
                    /**
                     * Calls UpdateUptimeCheckConfig.
                     * @function updateUptimeCheckConfig
                     * @memberof google.monitoring.v3.UptimeCheckService
                     * @instance
                     * @param {google.monitoring.v3.IUpdateUptimeCheckConfigRequest} request UpdateUptimeCheckConfigRequest message or plain object
                     * @param {google.monitoring.v3.UptimeCheckService.UpdateUptimeCheckConfigCallback} callback Node-style callback called with the error, if any, and UptimeCheckConfig
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(UptimeCheckService.prototype.updateUptimeCheckConfig = function updateUptimeCheckConfig(request, callback) {
                        return this.rpcCall(updateUptimeCheckConfig, $root.google.monitoring.v3.UpdateUptimeCheckConfigRequest, $root.google.monitoring.v3.UptimeCheckConfig, request, callback);
                    }, "name", { value: "UpdateUptimeCheckConfig" });
    
                    /**
                     * Calls UpdateUptimeCheckConfig.
                     * @function updateUptimeCheckConfig
                     * @memberof google.monitoring.v3.UptimeCheckService
                     * @instance
                     * @param {google.monitoring.v3.IUpdateUptimeCheckConfigRequest} request UpdateUptimeCheckConfigRequest message or plain object
                     * @returns {Promise<google.monitoring.v3.UptimeCheckConfig>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.UptimeCheckService|deleteUptimeCheckConfig}.
                     * @memberof google.monitoring.v3.UptimeCheckService
                     * @typedef DeleteUptimeCheckConfigCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.protobuf.Empty} [response] Empty
                     */
    
                    /**
                     * Calls DeleteUptimeCheckConfig.
                     * @function deleteUptimeCheckConfig
                     * @memberof google.monitoring.v3.UptimeCheckService
                     * @instance
                     * @param {google.monitoring.v3.IDeleteUptimeCheckConfigRequest} request DeleteUptimeCheckConfigRequest message or plain object
                     * @param {google.monitoring.v3.UptimeCheckService.DeleteUptimeCheckConfigCallback} callback Node-style callback called with the error, if any, and Empty
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(UptimeCheckService.prototype.deleteUptimeCheckConfig = function deleteUptimeCheckConfig(request, callback) {
                        return this.rpcCall(deleteUptimeCheckConfig, $root.google.monitoring.v3.DeleteUptimeCheckConfigRequest, $root.google.protobuf.Empty, request, callback);
                    }, "name", { value: "DeleteUptimeCheckConfig" });
    
                    /**
                     * Calls DeleteUptimeCheckConfig.
                     * @function deleteUptimeCheckConfig
                     * @memberof google.monitoring.v3.UptimeCheckService
                     * @instance
                     * @param {google.monitoring.v3.IDeleteUptimeCheckConfigRequest} request DeleteUptimeCheckConfigRequest message or plain object
                     * @returns {Promise<google.protobuf.Empty>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.monitoring.v3.UptimeCheckService|listUptimeCheckIps}.
                     * @memberof google.monitoring.v3.UptimeCheckService
                     * @typedef ListUptimeCheckIpsCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.monitoring.v3.ListUptimeCheckIpsResponse} [response] ListUptimeCheckIpsResponse
                     */
    
                    /**
                     * Calls ListUptimeCheckIps.
                     * @function listUptimeCheckIps
                     * @memberof google.monitoring.v3.UptimeCheckService
                     * @instance
                     * @param {google.monitoring.v3.IListUptimeCheckIpsRequest} request ListUptimeCheckIpsRequest message or plain object
                     * @param {google.monitoring.v3.UptimeCheckService.ListUptimeCheckIpsCallback} callback Node-style callback called with the error, if any, and ListUptimeCheckIpsResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(UptimeCheckService.prototype.listUptimeCheckIps = function listUptimeCheckIps(request, callback) {
                        return this.rpcCall(listUptimeCheckIps, $root.google.monitoring.v3.ListUptimeCheckIpsRequest, $root.google.monitoring.v3.ListUptimeCheckIpsResponse, request, callback);
                    }, "name", { value: "ListUptimeCheckIps" });
    
                    /**
                     * Calls ListUptimeCheckIps.
                     * @function listUptimeCheckIps
                     * @memberof google.monitoring.v3.UptimeCheckService
                     * @instance
                     * @param {google.monitoring.v3.IListUptimeCheckIpsRequest} request ListUptimeCheckIpsRequest message or plain object
                     * @returns {Promise<google.monitoring.v3.ListUptimeCheckIpsResponse>} Promise
                     * @variation 2
                     */
    
                    return UptimeCheckService;
                })();
    
                v3.ListUptimeCheckConfigsRequest = (function() {
    
                    /**
                     * Properties of a ListUptimeCheckConfigsRequest.
                     * @memberof google.monitoring.v3
                     * @interface IListUptimeCheckConfigsRequest
                     * @property {string|null} [parent] ListUptimeCheckConfigsRequest parent
                     * @property {number|null} [pageSize] ListUptimeCheckConfigsRequest pageSize
                     * @property {string|null} [pageToken] ListUptimeCheckConfigsRequest pageToken
                     */
    
                    /**
                     * Constructs a new ListUptimeCheckConfigsRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a ListUptimeCheckConfigsRequest.
                     * @implements IListUptimeCheckConfigsRequest
                     * @constructor
                     * @param {google.monitoring.v3.IListUptimeCheckConfigsRequest=} [properties] Properties to set
                     */
                    function ListUptimeCheckConfigsRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListUptimeCheckConfigsRequest parent.
                     * @member {string} parent
                     * @memberof google.monitoring.v3.ListUptimeCheckConfigsRequest
                     * @instance
                     */
                    ListUptimeCheckConfigsRequest.prototype.parent = "";
    
                    /**
                     * ListUptimeCheckConfigsRequest pageSize.
                     * @member {number} pageSize
                     * @memberof google.monitoring.v3.ListUptimeCheckConfigsRequest
                     * @instance
                     */
                    ListUptimeCheckConfigsRequest.prototype.pageSize = 0;
    
                    /**
                     * ListUptimeCheckConfigsRequest pageToken.
                     * @member {string} pageToken
                     * @memberof google.monitoring.v3.ListUptimeCheckConfigsRequest
                     * @instance
                     */
                    ListUptimeCheckConfigsRequest.prototype.pageToken = "";
    
                    /**
                     * Creates a new ListUptimeCheckConfigsRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.ListUptimeCheckConfigsRequest
                     * @static
                     * @param {google.monitoring.v3.IListUptimeCheckConfigsRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.ListUptimeCheckConfigsRequest} ListUptimeCheckConfigsRequest instance
                     */
                    ListUptimeCheckConfigsRequest.create = function create(properties) {
                        return new ListUptimeCheckConfigsRequest(properties);
                    };
    
                    /**
                     * Encodes the specified ListUptimeCheckConfigsRequest message. Does not implicitly {@link google.monitoring.v3.ListUptimeCheckConfigsRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.ListUptimeCheckConfigsRequest
                     * @static
                     * @param {google.monitoring.v3.IListUptimeCheckConfigsRequest} message ListUptimeCheckConfigsRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListUptimeCheckConfigsRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                        if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.pageSize);
                        if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.pageToken);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ListUptimeCheckConfigsRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.ListUptimeCheckConfigsRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.ListUptimeCheckConfigsRequest
                     * @static
                     * @param {google.monitoring.v3.IListUptimeCheckConfigsRequest} message ListUptimeCheckConfigsRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListUptimeCheckConfigsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ListUptimeCheckConfigsRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.ListUptimeCheckConfigsRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.ListUptimeCheckConfigsRequest} ListUptimeCheckConfigsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListUptimeCheckConfigsRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.ListUptimeCheckConfigsRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.parent = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.pageSize = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.pageToken = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ListUptimeCheckConfigsRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.ListUptimeCheckConfigsRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.ListUptimeCheckConfigsRequest} ListUptimeCheckConfigsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListUptimeCheckConfigsRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ListUptimeCheckConfigsRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.ListUptimeCheckConfigsRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ListUptimeCheckConfigsRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            if (!$util.isString(message.parent))
                                return "parent: string expected";
                        if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                            if (!$util.isInteger(message.pageSize))
                                return "pageSize: integer expected";
                        if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                            if (!$util.isString(message.pageToken))
                                return "pageToken: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a ListUptimeCheckConfigsRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.ListUptimeCheckConfigsRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.ListUptimeCheckConfigsRequest} ListUptimeCheckConfigsRequest
                     */
                    ListUptimeCheckConfigsRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.ListUptimeCheckConfigsRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.ListUptimeCheckConfigsRequest();
                        if (object.parent != null)
                            message.parent = String(object.parent);
                        if (object.pageSize != null)
                            message.pageSize = object.pageSize | 0;
                        if (object.pageToken != null)
                            message.pageToken = String(object.pageToken);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ListUptimeCheckConfigsRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.ListUptimeCheckConfigsRequest
                     * @static
                     * @param {google.monitoring.v3.ListUptimeCheckConfigsRequest} message ListUptimeCheckConfigsRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ListUptimeCheckConfigsRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.parent = "";
                            object.pageSize = 0;
                            object.pageToken = "";
                        }
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            object.parent = message.parent;
                        if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                            object.pageSize = message.pageSize;
                        if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                            object.pageToken = message.pageToken;
                        return object;
                    };
    
                    /**
                     * Converts this ListUptimeCheckConfigsRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.ListUptimeCheckConfigsRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ListUptimeCheckConfigsRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ListUptimeCheckConfigsRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.ListUptimeCheckConfigsRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ListUptimeCheckConfigsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.ListUptimeCheckConfigsRequest";
                    };
    
                    return ListUptimeCheckConfigsRequest;
                })();
    
                v3.ListUptimeCheckConfigsResponse = (function() {
    
                    /**
                     * Properties of a ListUptimeCheckConfigsResponse.
                     * @memberof google.monitoring.v3
                     * @interface IListUptimeCheckConfigsResponse
                     * @property {Array.<google.monitoring.v3.IUptimeCheckConfig>|null} [uptimeCheckConfigs] ListUptimeCheckConfigsResponse uptimeCheckConfigs
                     * @property {string|null} [nextPageToken] ListUptimeCheckConfigsResponse nextPageToken
                     * @property {number|null} [totalSize] ListUptimeCheckConfigsResponse totalSize
                     */
    
                    /**
                     * Constructs a new ListUptimeCheckConfigsResponse.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a ListUptimeCheckConfigsResponse.
                     * @implements IListUptimeCheckConfigsResponse
                     * @constructor
                     * @param {google.monitoring.v3.IListUptimeCheckConfigsResponse=} [properties] Properties to set
                     */
                    function ListUptimeCheckConfigsResponse(properties) {
                        this.uptimeCheckConfigs = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListUptimeCheckConfigsResponse uptimeCheckConfigs.
                     * @member {Array.<google.monitoring.v3.IUptimeCheckConfig>} uptimeCheckConfigs
                     * @memberof google.monitoring.v3.ListUptimeCheckConfigsResponse
                     * @instance
                     */
                    ListUptimeCheckConfigsResponse.prototype.uptimeCheckConfigs = $util.emptyArray;
    
                    /**
                     * ListUptimeCheckConfigsResponse nextPageToken.
                     * @member {string} nextPageToken
                     * @memberof google.monitoring.v3.ListUptimeCheckConfigsResponse
                     * @instance
                     */
                    ListUptimeCheckConfigsResponse.prototype.nextPageToken = "";
    
                    /**
                     * ListUptimeCheckConfigsResponse totalSize.
                     * @member {number} totalSize
                     * @memberof google.monitoring.v3.ListUptimeCheckConfigsResponse
                     * @instance
                     */
                    ListUptimeCheckConfigsResponse.prototype.totalSize = 0;
    
                    /**
                     * Creates a new ListUptimeCheckConfigsResponse instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.ListUptimeCheckConfigsResponse
                     * @static
                     * @param {google.monitoring.v3.IListUptimeCheckConfigsResponse=} [properties] Properties to set
                     * @returns {google.monitoring.v3.ListUptimeCheckConfigsResponse} ListUptimeCheckConfigsResponse instance
                     */
                    ListUptimeCheckConfigsResponse.create = function create(properties) {
                        return new ListUptimeCheckConfigsResponse(properties);
                    };
    
                    /**
                     * Encodes the specified ListUptimeCheckConfigsResponse message. Does not implicitly {@link google.monitoring.v3.ListUptimeCheckConfigsResponse.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.ListUptimeCheckConfigsResponse
                     * @static
                     * @param {google.monitoring.v3.IListUptimeCheckConfigsResponse} message ListUptimeCheckConfigsResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListUptimeCheckConfigsResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.uptimeCheckConfigs != null && message.uptimeCheckConfigs.length)
                            for (var i = 0; i < message.uptimeCheckConfigs.length; ++i)
                                $root.google.monitoring.v3.UptimeCheckConfig.encode(message.uptimeCheckConfigs[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                        if (message.totalSize != null && Object.hasOwnProperty.call(message, "totalSize"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.totalSize);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ListUptimeCheckConfigsResponse message, length delimited. Does not implicitly {@link google.monitoring.v3.ListUptimeCheckConfigsResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.ListUptimeCheckConfigsResponse
                     * @static
                     * @param {google.monitoring.v3.IListUptimeCheckConfigsResponse} message ListUptimeCheckConfigsResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListUptimeCheckConfigsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ListUptimeCheckConfigsResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.ListUptimeCheckConfigsResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.ListUptimeCheckConfigsResponse} ListUptimeCheckConfigsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListUptimeCheckConfigsResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.ListUptimeCheckConfigsResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.uptimeCheckConfigs && message.uptimeCheckConfigs.length))
                                        message.uptimeCheckConfigs = [];
                                    message.uptimeCheckConfigs.push($root.google.monitoring.v3.UptimeCheckConfig.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 2: {
                                    message.nextPageToken = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.totalSize = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ListUptimeCheckConfigsResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.ListUptimeCheckConfigsResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.ListUptimeCheckConfigsResponse} ListUptimeCheckConfigsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListUptimeCheckConfigsResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ListUptimeCheckConfigsResponse message.
                     * @function verify
                     * @memberof google.monitoring.v3.ListUptimeCheckConfigsResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ListUptimeCheckConfigsResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.uptimeCheckConfigs != null && message.hasOwnProperty("uptimeCheckConfigs")) {
                            if (!Array.isArray(message.uptimeCheckConfigs))
                                return "uptimeCheckConfigs: array expected";
                            for (var i = 0; i < message.uptimeCheckConfigs.length; ++i) {
                                var error = $root.google.monitoring.v3.UptimeCheckConfig.verify(message.uptimeCheckConfigs[i]);
                                if (error)
                                    return "uptimeCheckConfigs." + error;
                            }
                        }
                        if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                            if (!$util.isString(message.nextPageToken))
                                return "nextPageToken: string expected";
                        if (message.totalSize != null && message.hasOwnProperty("totalSize"))
                            if (!$util.isInteger(message.totalSize))
                                return "totalSize: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ListUptimeCheckConfigsResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.ListUptimeCheckConfigsResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.ListUptimeCheckConfigsResponse} ListUptimeCheckConfigsResponse
                     */
                    ListUptimeCheckConfigsResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.ListUptimeCheckConfigsResponse)
                            return object;
                        var message = new $root.google.monitoring.v3.ListUptimeCheckConfigsResponse();
                        if (object.uptimeCheckConfigs) {
                            if (!Array.isArray(object.uptimeCheckConfigs))
                                throw TypeError(".google.monitoring.v3.ListUptimeCheckConfigsResponse.uptimeCheckConfigs: array expected");
                            message.uptimeCheckConfigs = [];
                            for (var i = 0; i < object.uptimeCheckConfigs.length; ++i) {
                                if (typeof object.uptimeCheckConfigs[i] !== "object")
                                    throw TypeError(".google.monitoring.v3.ListUptimeCheckConfigsResponse.uptimeCheckConfigs: object expected");
                                message.uptimeCheckConfigs[i] = $root.google.monitoring.v3.UptimeCheckConfig.fromObject(object.uptimeCheckConfigs[i]);
                            }
                        }
                        if (object.nextPageToken != null)
                            message.nextPageToken = String(object.nextPageToken);
                        if (object.totalSize != null)
                            message.totalSize = object.totalSize | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ListUptimeCheckConfigsResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.ListUptimeCheckConfigsResponse
                     * @static
                     * @param {google.monitoring.v3.ListUptimeCheckConfigsResponse} message ListUptimeCheckConfigsResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ListUptimeCheckConfigsResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.uptimeCheckConfigs = [];
                        if (options.defaults) {
                            object.nextPageToken = "";
                            object.totalSize = 0;
                        }
                        if (message.uptimeCheckConfigs && message.uptimeCheckConfigs.length) {
                            object.uptimeCheckConfigs = [];
                            for (var j = 0; j < message.uptimeCheckConfigs.length; ++j)
                                object.uptimeCheckConfigs[j] = $root.google.monitoring.v3.UptimeCheckConfig.toObject(message.uptimeCheckConfigs[j], options);
                        }
                        if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                            object.nextPageToken = message.nextPageToken;
                        if (message.totalSize != null && message.hasOwnProperty("totalSize"))
                            object.totalSize = message.totalSize;
                        return object;
                    };
    
                    /**
                     * Converts this ListUptimeCheckConfigsResponse to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.ListUptimeCheckConfigsResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ListUptimeCheckConfigsResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ListUptimeCheckConfigsResponse
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.ListUptimeCheckConfigsResponse
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ListUptimeCheckConfigsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.ListUptimeCheckConfigsResponse";
                    };
    
                    return ListUptimeCheckConfigsResponse;
                })();
    
                v3.GetUptimeCheckConfigRequest = (function() {
    
                    /**
                     * Properties of a GetUptimeCheckConfigRequest.
                     * @memberof google.monitoring.v3
                     * @interface IGetUptimeCheckConfigRequest
                     * @property {string|null} [name] GetUptimeCheckConfigRequest name
                     */
    
                    /**
                     * Constructs a new GetUptimeCheckConfigRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a GetUptimeCheckConfigRequest.
                     * @implements IGetUptimeCheckConfigRequest
                     * @constructor
                     * @param {google.monitoring.v3.IGetUptimeCheckConfigRequest=} [properties] Properties to set
                     */
                    function GetUptimeCheckConfigRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * GetUptimeCheckConfigRequest name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.GetUptimeCheckConfigRequest
                     * @instance
                     */
                    GetUptimeCheckConfigRequest.prototype.name = "";
    
                    /**
                     * Creates a new GetUptimeCheckConfigRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.GetUptimeCheckConfigRequest
                     * @static
                     * @param {google.monitoring.v3.IGetUptimeCheckConfigRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.GetUptimeCheckConfigRequest} GetUptimeCheckConfigRequest instance
                     */
                    GetUptimeCheckConfigRequest.create = function create(properties) {
                        return new GetUptimeCheckConfigRequest(properties);
                    };
    
                    /**
                     * Encodes the specified GetUptimeCheckConfigRequest message. Does not implicitly {@link google.monitoring.v3.GetUptimeCheckConfigRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.GetUptimeCheckConfigRequest
                     * @static
                     * @param {google.monitoring.v3.IGetUptimeCheckConfigRequest} message GetUptimeCheckConfigRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetUptimeCheckConfigRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified GetUptimeCheckConfigRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.GetUptimeCheckConfigRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.GetUptimeCheckConfigRequest
                     * @static
                     * @param {google.monitoring.v3.IGetUptimeCheckConfigRequest} message GetUptimeCheckConfigRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetUptimeCheckConfigRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a GetUptimeCheckConfigRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.GetUptimeCheckConfigRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.GetUptimeCheckConfigRequest} GetUptimeCheckConfigRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetUptimeCheckConfigRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.GetUptimeCheckConfigRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.name = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a GetUptimeCheckConfigRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.GetUptimeCheckConfigRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.GetUptimeCheckConfigRequest} GetUptimeCheckConfigRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetUptimeCheckConfigRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a GetUptimeCheckConfigRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.GetUptimeCheckConfigRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    GetUptimeCheckConfigRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a GetUptimeCheckConfigRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.GetUptimeCheckConfigRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.GetUptimeCheckConfigRequest} GetUptimeCheckConfigRequest
                     */
                    GetUptimeCheckConfigRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.GetUptimeCheckConfigRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.GetUptimeCheckConfigRequest();
                        if (object.name != null)
                            message.name = String(object.name);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a GetUptimeCheckConfigRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.GetUptimeCheckConfigRequest
                     * @static
                     * @param {google.monitoring.v3.GetUptimeCheckConfigRequest} message GetUptimeCheckConfigRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    GetUptimeCheckConfigRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.name = "";
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this GetUptimeCheckConfigRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.GetUptimeCheckConfigRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    GetUptimeCheckConfigRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for GetUptimeCheckConfigRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.GetUptimeCheckConfigRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    GetUptimeCheckConfigRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.GetUptimeCheckConfigRequest";
                    };
    
                    return GetUptimeCheckConfigRequest;
                })();
    
                v3.CreateUptimeCheckConfigRequest = (function() {
    
                    /**
                     * Properties of a CreateUptimeCheckConfigRequest.
                     * @memberof google.monitoring.v3
                     * @interface ICreateUptimeCheckConfigRequest
                     * @property {string|null} [parent] CreateUptimeCheckConfigRequest parent
                     * @property {google.monitoring.v3.IUptimeCheckConfig|null} [uptimeCheckConfig] CreateUptimeCheckConfigRequest uptimeCheckConfig
                     */
    
                    /**
                     * Constructs a new CreateUptimeCheckConfigRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a CreateUptimeCheckConfigRequest.
                     * @implements ICreateUptimeCheckConfigRequest
                     * @constructor
                     * @param {google.monitoring.v3.ICreateUptimeCheckConfigRequest=} [properties] Properties to set
                     */
                    function CreateUptimeCheckConfigRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * CreateUptimeCheckConfigRequest parent.
                     * @member {string} parent
                     * @memberof google.monitoring.v3.CreateUptimeCheckConfigRequest
                     * @instance
                     */
                    CreateUptimeCheckConfigRequest.prototype.parent = "";
    
                    /**
                     * CreateUptimeCheckConfigRequest uptimeCheckConfig.
                     * @member {google.monitoring.v3.IUptimeCheckConfig|null|undefined} uptimeCheckConfig
                     * @memberof google.monitoring.v3.CreateUptimeCheckConfigRequest
                     * @instance
                     */
                    CreateUptimeCheckConfigRequest.prototype.uptimeCheckConfig = null;
    
                    /**
                     * Creates a new CreateUptimeCheckConfigRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.CreateUptimeCheckConfigRequest
                     * @static
                     * @param {google.monitoring.v3.ICreateUptimeCheckConfigRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.CreateUptimeCheckConfigRequest} CreateUptimeCheckConfigRequest instance
                     */
                    CreateUptimeCheckConfigRequest.create = function create(properties) {
                        return new CreateUptimeCheckConfigRequest(properties);
                    };
    
                    /**
                     * Encodes the specified CreateUptimeCheckConfigRequest message. Does not implicitly {@link google.monitoring.v3.CreateUptimeCheckConfigRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.CreateUptimeCheckConfigRequest
                     * @static
                     * @param {google.monitoring.v3.ICreateUptimeCheckConfigRequest} message CreateUptimeCheckConfigRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CreateUptimeCheckConfigRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                        if (message.uptimeCheckConfig != null && Object.hasOwnProperty.call(message, "uptimeCheckConfig"))
                            $root.google.monitoring.v3.UptimeCheckConfig.encode(message.uptimeCheckConfig, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified CreateUptimeCheckConfigRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.CreateUptimeCheckConfigRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.CreateUptimeCheckConfigRequest
                     * @static
                     * @param {google.monitoring.v3.ICreateUptimeCheckConfigRequest} message CreateUptimeCheckConfigRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CreateUptimeCheckConfigRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a CreateUptimeCheckConfigRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.CreateUptimeCheckConfigRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.CreateUptimeCheckConfigRequest} CreateUptimeCheckConfigRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CreateUptimeCheckConfigRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.CreateUptimeCheckConfigRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.parent = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.uptimeCheckConfig = $root.google.monitoring.v3.UptimeCheckConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a CreateUptimeCheckConfigRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.CreateUptimeCheckConfigRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.CreateUptimeCheckConfigRequest} CreateUptimeCheckConfigRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CreateUptimeCheckConfigRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a CreateUptimeCheckConfigRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.CreateUptimeCheckConfigRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    CreateUptimeCheckConfigRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            if (!$util.isString(message.parent))
                                return "parent: string expected";
                        if (message.uptimeCheckConfig != null && message.hasOwnProperty("uptimeCheckConfig")) {
                            var error = $root.google.monitoring.v3.UptimeCheckConfig.verify(message.uptimeCheckConfig);
                            if (error)
                                return "uptimeCheckConfig." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a CreateUptimeCheckConfigRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.CreateUptimeCheckConfigRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.CreateUptimeCheckConfigRequest} CreateUptimeCheckConfigRequest
                     */
                    CreateUptimeCheckConfigRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.CreateUptimeCheckConfigRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.CreateUptimeCheckConfigRequest();
                        if (object.parent != null)
                            message.parent = String(object.parent);
                        if (object.uptimeCheckConfig != null) {
                            if (typeof object.uptimeCheckConfig !== "object")
                                throw TypeError(".google.monitoring.v3.CreateUptimeCheckConfigRequest.uptimeCheckConfig: object expected");
                            message.uptimeCheckConfig = $root.google.monitoring.v3.UptimeCheckConfig.fromObject(object.uptimeCheckConfig);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a CreateUptimeCheckConfigRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.CreateUptimeCheckConfigRequest
                     * @static
                     * @param {google.monitoring.v3.CreateUptimeCheckConfigRequest} message CreateUptimeCheckConfigRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    CreateUptimeCheckConfigRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.parent = "";
                            object.uptimeCheckConfig = null;
                        }
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            object.parent = message.parent;
                        if (message.uptimeCheckConfig != null && message.hasOwnProperty("uptimeCheckConfig"))
                            object.uptimeCheckConfig = $root.google.monitoring.v3.UptimeCheckConfig.toObject(message.uptimeCheckConfig, options);
                        return object;
                    };
    
                    /**
                     * Converts this CreateUptimeCheckConfigRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.CreateUptimeCheckConfigRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    CreateUptimeCheckConfigRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for CreateUptimeCheckConfigRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.CreateUptimeCheckConfigRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    CreateUptimeCheckConfigRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.CreateUptimeCheckConfigRequest";
                    };
    
                    return CreateUptimeCheckConfigRequest;
                })();
    
                v3.UpdateUptimeCheckConfigRequest = (function() {
    
                    /**
                     * Properties of an UpdateUptimeCheckConfigRequest.
                     * @memberof google.monitoring.v3
                     * @interface IUpdateUptimeCheckConfigRequest
                     * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateUptimeCheckConfigRequest updateMask
                     * @property {google.monitoring.v3.IUptimeCheckConfig|null} [uptimeCheckConfig] UpdateUptimeCheckConfigRequest uptimeCheckConfig
                     */
    
                    /**
                     * Constructs a new UpdateUptimeCheckConfigRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents an UpdateUptimeCheckConfigRequest.
                     * @implements IUpdateUptimeCheckConfigRequest
                     * @constructor
                     * @param {google.monitoring.v3.IUpdateUptimeCheckConfigRequest=} [properties] Properties to set
                     */
                    function UpdateUptimeCheckConfigRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * UpdateUptimeCheckConfigRequest updateMask.
                     * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                     * @memberof google.monitoring.v3.UpdateUptimeCheckConfigRequest
                     * @instance
                     */
                    UpdateUptimeCheckConfigRequest.prototype.updateMask = null;
    
                    /**
                     * UpdateUptimeCheckConfigRequest uptimeCheckConfig.
                     * @member {google.monitoring.v3.IUptimeCheckConfig|null|undefined} uptimeCheckConfig
                     * @memberof google.monitoring.v3.UpdateUptimeCheckConfigRequest
                     * @instance
                     */
                    UpdateUptimeCheckConfigRequest.prototype.uptimeCheckConfig = null;
    
                    /**
                     * Creates a new UpdateUptimeCheckConfigRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.UpdateUptimeCheckConfigRequest
                     * @static
                     * @param {google.monitoring.v3.IUpdateUptimeCheckConfigRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.UpdateUptimeCheckConfigRequest} UpdateUptimeCheckConfigRequest instance
                     */
                    UpdateUptimeCheckConfigRequest.create = function create(properties) {
                        return new UpdateUptimeCheckConfigRequest(properties);
                    };
    
                    /**
                     * Encodes the specified UpdateUptimeCheckConfigRequest message. Does not implicitly {@link google.monitoring.v3.UpdateUptimeCheckConfigRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.UpdateUptimeCheckConfigRequest
                     * @static
                     * @param {google.monitoring.v3.IUpdateUptimeCheckConfigRequest} message UpdateUptimeCheckConfigRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UpdateUptimeCheckConfigRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                            $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.uptimeCheckConfig != null && Object.hasOwnProperty.call(message, "uptimeCheckConfig"))
                            $root.google.monitoring.v3.UptimeCheckConfig.encode(message.uptimeCheckConfig, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified UpdateUptimeCheckConfigRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.UpdateUptimeCheckConfigRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.UpdateUptimeCheckConfigRequest
                     * @static
                     * @param {google.monitoring.v3.IUpdateUptimeCheckConfigRequest} message UpdateUptimeCheckConfigRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UpdateUptimeCheckConfigRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an UpdateUptimeCheckConfigRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.UpdateUptimeCheckConfigRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.UpdateUptimeCheckConfigRequest} UpdateUptimeCheckConfigRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UpdateUptimeCheckConfigRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.UpdateUptimeCheckConfigRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 2: {
                                    message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                    break;
                                }
                            case 3: {
                                    message.uptimeCheckConfig = $root.google.monitoring.v3.UptimeCheckConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an UpdateUptimeCheckConfigRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.UpdateUptimeCheckConfigRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.UpdateUptimeCheckConfigRequest} UpdateUptimeCheckConfigRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UpdateUptimeCheckConfigRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an UpdateUptimeCheckConfigRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.UpdateUptimeCheckConfigRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    UpdateUptimeCheckConfigRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                            var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                            if (error)
                                return "updateMask." + error;
                        }
                        if (message.uptimeCheckConfig != null && message.hasOwnProperty("uptimeCheckConfig")) {
                            var error = $root.google.monitoring.v3.UptimeCheckConfig.verify(message.uptimeCheckConfig);
                            if (error)
                                return "uptimeCheckConfig." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an UpdateUptimeCheckConfigRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.UpdateUptimeCheckConfigRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.UpdateUptimeCheckConfigRequest} UpdateUptimeCheckConfigRequest
                     */
                    UpdateUptimeCheckConfigRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.UpdateUptimeCheckConfigRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.UpdateUptimeCheckConfigRequest();
                        if (object.updateMask != null) {
                            if (typeof object.updateMask !== "object")
                                throw TypeError(".google.monitoring.v3.UpdateUptimeCheckConfigRequest.updateMask: object expected");
                            message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                        }
                        if (object.uptimeCheckConfig != null) {
                            if (typeof object.uptimeCheckConfig !== "object")
                                throw TypeError(".google.monitoring.v3.UpdateUptimeCheckConfigRequest.uptimeCheckConfig: object expected");
                            message.uptimeCheckConfig = $root.google.monitoring.v3.UptimeCheckConfig.fromObject(object.uptimeCheckConfig);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an UpdateUptimeCheckConfigRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.UpdateUptimeCheckConfigRequest
                     * @static
                     * @param {google.monitoring.v3.UpdateUptimeCheckConfigRequest} message UpdateUptimeCheckConfigRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    UpdateUptimeCheckConfigRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.updateMask = null;
                            object.uptimeCheckConfig = null;
                        }
                        if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                            object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                        if (message.uptimeCheckConfig != null && message.hasOwnProperty("uptimeCheckConfig"))
                            object.uptimeCheckConfig = $root.google.monitoring.v3.UptimeCheckConfig.toObject(message.uptimeCheckConfig, options);
                        return object;
                    };
    
                    /**
                     * Converts this UpdateUptimeCheckConfigRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.UpdateUptimeCheckConfigRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    UpdateUptimeCheckConfigRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for UpdateUptimeCheckConfigRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.UpdateUptimeCheckConfigRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    UpdateUptimeCheckConfigRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.UpdateUptimeCheckConfigRequest";
                    };
    
                    return UpdateUptimeCheckConfigRequest;
                })();
    
                v3.DeleteUptimeCheckConfigRequest = (function() {
    
                    /**
                     * Properties of a DeleteUptimeCheckConfigRequest.
                     * @memberof google.monitoring.v3
                     * @interface IDeleteUptimeCheckConfigRequest
                     * @property {string|null} [name] DeleteUptimeCheckConfigRequest name
                     */
    
                    /**
                     * Constructs a new DeleteUptimeCheckConfigRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a DeleteUptimeCheckConfigRequest.
                     * @implements IDeleteUptimeCheckConfigRequest
                     * @constructor
                     * @param {google.monitoring.v3.IDeleteUptimeCheckConfigRequest=} [properties] Properties to set
                     */
                    function DeleteUptimeCheckConfigRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * DeleteUptimeCheckConfigRequest name.
                     * @member {string} name
                     * @memberof google.monitoring.v3.DeleteUptimeCheckConfigRequest
                     * @instance
                     */
                    DeleteUptimeCheckConfigRequest.prototype.name = "";
    
                    /**
                     * Creates a new DeleteUptimeCheckConfigRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.DeleteUptimeCheckConfigRequest
                     * @static
                     * @param {google.monitoring.v3.IDeleteUptimeCheckConfigRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.DeleteUptimeCheckConfigRequest} DeleteUptimeCheckConfigRequest instance
                     */
                    DeleteUptimeCheckConfigRequest.create = function create(properties) {
                        return new DeleteUptimeCheckConfigRequest(properties);
                    };
    
                    /**
                     * Encodes the specified DeleteUptimeCheckConfigRequest message. Does not implicitly {@link google.monitoring.v3.DeleteUptimeCheckConfigRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.DeleteUptimeCheckConfigRequest
                     * @static
                     * @param {google.monitoring.v3.IDeleteUptimeCheckConfigRequest} message DeleteUptimeCheckConfigRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DeleteUptimeCheckConfigRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified DeleteUptimeCheckConfigRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.DeleteUptimeCheckConfigRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.DeleteUptimeCheckConfigRequest
                     * @static
                     * @param {google.monitoring.v3.IDeleteUptimeCheckConfigRequest} message DeleteUptimeCheckConfigRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DeleteUptimeCheckConfigRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a DeleteUptimeCheckConfigRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.DeleteUptimeCheckConfigRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.DeleteUptimeCheckConfigRequest} DeleteUptimeCheckConfigRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DeleteUptimeCheckConfigRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.DeleteUptimeCheckConfigRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.name = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a DeleteUptimeCheckConfigRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.DeleteUptimeCheckConfigRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.DeleteUptimeCheckConfigRequest} DeleteUptimeCheckConfigRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DeleteUptimeCheckConfigRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a DeleteUptimeCheckConfigRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.DeleteUptimeCheckConfigRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    DeleteUptimeCheckConfigRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a DeleteUptimeCheckConfigRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.DeleteUptimeCheckConfigRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.DeleteUptimeCheckConfigRequest} DeleteUptimeCheckConfigRequest
                     */
                    DeleteUptimeCheckConfigRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.DeleteUptimeCheckConfigRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.DeleteUptimeCheckConfigRequest();
                        if (object.name != null)
                            message.name = String(object.name);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a DeleteUptimeCheckConfigRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.DeleteUptimeCheckConfigRequest
                     * @static
                     * @param {google.monitoring.v3.DeleteUptimeCheckConfigRequest} message DeleteUptimeCheckConfigRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    DeleteUptimeCheckConfigRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.name = "";
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this DeleteUptimeCheckConfigRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.DeleteUptimeCheckConfigRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    DeleteUptimeCheckConfigRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for DeleteUptimeCheckConfigRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.DeleteUptimeCheckConfigRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    DeleteUptimeCheckConfigRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.DeleteUptimeCheckConfigRequest";
                    };
    
                    return DeleteUptimeCheckConfigRequest;
                })();
    
                v3.ListUptimeCheckIpsRequest = (function() {
    
                    /**
                     * Properties of a ListUptimeCheckIpsRequest.
                     * @memberof google.monitoring.v3
                     * @interface IListUptimeCheckIpsRequest
                     * @property {number|null} [pageSize] ListUptimeCheckIpsRequest pageSize
                     * @property {string|null} [pageToken] ListUptimeCheckIpsRequest pageToken
                     */
    
                    /**
                     * Constructs a new ListUptimeCheckIpsRequest.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a ListUptimeCheckIpsRequest.
                     * @implements IListUptimeCheckIpsRequest
                     * @constructor
                     * @param {google.monitoring.v3.IListUptimeCheckIpsRequest=} [properties] Properties to set
                     */
                    function ListUptimeCheckIpsRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListUptimeCheckIpsRequest pageSize.
                     * @member {number} pageSize
                     * @memberof google.monitoring.v3.ListUptimeCheckIpsRequest
                     * @instance
                     */
                    ListUptimeCheckIpsRequest.prototype.pageSize = 0;
    
                    /**
                     * ListUptimeCheckIpsRequest pageToken.
                     * @member {string} pageToken
                     * @memberof google.monitoring.v3.ListUptimeCheckIpsRequest
                     * @instance
                     */
                    ListUptimeCheckIpsRequest.prototype.pageToken = "";
    
                    /**
                     * Creates a new ListUptimeCheckIpsRequest instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.ListUptimeCheckIpsRequest
                     * @static
                     * @param {google.monitoring.v3.IListUptimeCheckIpsRequest=} [properties] Properties to set
                     * @returns {google.monitoring.v3.ListUptimeCheckIpsRequest} ListUptimeCheckIpsRequest instance
                     */
                    ListUptimeCheckIpsRequest.create = function create(properties) {
                        return new ListUptimeCheckIpsRequest(properties);
                    };
    
                    /**
                     * Encodes the specified ListUptimeCheckIpsRequest message. Does not implicitly {@link google.monitoring.v3.ListUptimeCheckIpsRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.ListUptimeCheckIpsRequest
                     * @static
                     * @param {google.monitoring.v3.IListUptimeCheckIpsRequest} message ListUptimeCheckIpsRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListUptimeCheckIpsRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                        if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ListUptimeCheckIpsRequest message, length delimited. Does not implicitly {@link google.monitoring.v3.ListUptimeCheckIpsRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.ListUptimeCheckIpsRequest
                     * @static
                     * @param {google.monitoring.v3.IListUptimeCheckIpsRequest} message ListUptimeCheckIpsRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListUptimeCheckIpsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ListUptimeCheckIpsRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.ListUptimeCheckIpsRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.ListUptimeCheckIpsRequest} ListUptimeCheckIpsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListUptimeCheckIpsRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.ListUptimeCheckIpsRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 2: {
                                    message.pageSize = reader.int32();
                                    break;
                                }
                            case 3: {
                                    message.pageToken = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ListUptimeCheckIpsRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.ListUptimeCheckIpsRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.ListUptimeCheckIpsRequest} ListUptimeCheckIpsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListUptimeCheckIpsRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ListUptimeCheckIpsRequest message.
                     * @function verify
                     * @memberof google.monitoring.v3.ListUptimeCheckIpsRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ListUptimeCheckIpsRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                            if (!$util.isInteger(message.pageSize))
                                return "pageSize: integer expected";
                        if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                            if (!$util.isString(message.pageToken))
                                return "pageToken: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a ListUptimeCheckIpsRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.ListUptimeCheckIpsRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.ListUptimeCheckIpsRequest} ListUptimeCheckIpsRequest
                     */
                    ListUptimeCheckIpsRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.ListUptimeCheckIpsRequest)
                            return object;
                        var message = new $root.google.monitoring.v3.ListUptimeCheckIpsRequest();
                        if (object.pageSize != null)
                            message.pageSize = object.pageSize | 0;
                        if (object.pageToken != null)
                            message.pageToken = String(object.pageToken);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ListUptimeCheckIpsRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.ListUptimeCheckIpsRequest
                     * @static
                     * @param {google.monitoring.v3.ListUptimeCheckIpsRequest} message ListUptimeCheckIpsRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ListUptimeCheckIpsRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.pageSize = 0;
                            object.pageToken = "";
                        }
                        if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                            object.pageSize = message.pageSize;
                        if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                            object.pageToken = message.pageToken;
                        return object;
                    };
    
                    /**
                     * Converts this ListUptimeCheckIpsRequest to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.ListUptimeCheckIpsRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ListUptimeCheckIpsRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ListUptimeCheckIpsRequest
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.ListUptimeCheckIpsRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ListUptimeCheckIpsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.ListUptimeCheckIpsRequest";
                    };
    
                    return ListUptimeCheckIpsRequest;
                })();
    
                v3.ListUptimeCheckIpsResponse = (function() {
    
                    /**
                     * Properties of a ListUptimeCheckIpsResponse.
                     * @memberof google.monitoring.v3
                     * @interface IListUptimeCheckIpsResponse
                     * @property {Array.<google.monitoring.v3.IUptimeCheckIp>|null} [uptimeCheckIps] ListUptimeCheckIpsResponse uptimeCheckIps
                     * @property {string|null} [nextPageToken] ListUptimeCheckIpsResponse nextPageToken
                     */
    
                    /**
                     * Constructs a new ListUptimeCheckIpsResponse.
                     * @memberof google.monitoring.v3
                     * @classdesc Represents a ListUptimeCheckIpsResponse.
                     * @implements IListUptimeCheckIpsResponse
                     * @constructor
                     * @param {google.monitoring.v3.IListUptimeCheckIpsResponse=} [properties] Properties to set
                     */
                    function ListUptimeCheckIpsResponse(properties) {
                        this.uptimeCheckIps = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListUptimeCheckIpsResponse uptimeCheckIps.
                     * @member {Array.<google.monitoring.v3.IUptimeCheckIp>} uptimeCheckIps
                     * @memberof google.monitoring.v3.ListUptimeCheckIpsResponse
                     * @instance
                     */
                    ListUptimeCheckIpsResponse.prototype.uptimeCheckIps = $util.emptyArray;
    
                    /**
                     * ListUptimeCheckIpsResponse nextPageToken.
                     * @member {string} nextPageToken
                     * @memberof google.monitoring.v3.ListUptimeCheckIpsResponse
                     * @instance
                     */
                    ListUptimeCheckIpsResponse.prototype.nextPageToken = "";
    
                    /**
                     * Creates a new ListUptimeCheckIpsResponse instance using the specified properties.
                     * @function create
                     * @memberof google.monitoring.v3.ListUptimeCheckIpsResponse
                     * @static
                     * @param {google.monitoring.v3.IListUptimeCheckIpsResponse=} [properties] Properties to set
                     * @returns {google.monitoring.v3.ListUptimeCheckIpsResponse} ListUptimeCheckIpsResponse instance
                     */
                    ListUptimeCheckIpsResponse.create = function create(properties) {
                        return new ListUptimeCheckIpsResponse(properties);
                    };
    
                    /**
                     * Encodes the specified ListUptimeCheckIpsResponse message. Does not implicitly {@link google.monitoring.v3.ListUptimeCheckIpsResponse.verify|verify} messages.
                     * @function encode
                     * @memberof google.monitoring.v3.ListUptimeCheckIpsResponse
                     * @static
                     * @param {google.monitoring.v3.IListUptimeCheckIpsResponse} message ListUptimeCheckIpsResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListUptimeCheckIpsResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.uptimeCheckIps != null && message.uptimeCheckIps.length)
                            for (var i = 0; i < message.uptimeCheckIps.length; ++i)
                                $root.google.monitoring.v3.UptimeCheckIp.encode(message.uptimeCheckIps[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ListUptimeCheckIpsResponse message, length delimited. Does not implicitly {@link google.monitoring.v3.ListUptimeCheckIpsResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.monitoring.v3.ListUptimeCheckIpsResponse
                     * @static
                     * @param {google.monitoring.v3.IListUptimeCheckIpsResponse} message ListUptimeCheckIpsResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListUptimeCheckIpsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ListUptimeCheckIpsResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.monitoring.v3.ListUptimeCheckIpsResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.monitoring.v3.ListUptimeCheckIpsResponse} ListUptimeCheckIpsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListUptimeCheckIpsResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.monitoring.v3.ListUptimeCheckIpsResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.uptimeCheckIps && message.uptimeCheckIps.length))
                                        message.uptimeCheckIps = [];
                                    message.uptimeCheckIps.push($root.google.monitoring.v3.UptimeCheckIp.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 2: {
                                    message.nextPageToken = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ListUptimeCheckIpsResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.monitoring.v3.ListUptimeCheckIpsResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.monitoring.v3.ListUptimeCheckIpsResponse} ListUptimeCheckIpsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListUptimeCheckIpsResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ListUptimeCheckIpsResponse message.
                     * @function verify
                     * @memberof google.monitoring.v3.ListUptimeCheckIpsResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ListUptimeCheckIpsResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.uptimeCheckIps != null && message.hasOwnProperty("uptimeCheckIps")) {
                            if (!Array.isArray(message.uptimeCheckIps))
                                return "uptimeCheckIps: array expected";
                            for (var i = 0; i < message.uptimeCheckIps.length; ++i) {
                                var error = $root.google.monitoring.v3.UptimeCheckIp.verify(message.uptimeCheckIps[i]);
                                if (error)
                                    return "uptimeCheckIps." + error;
                            }
                        }
                        if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                            if (!$util.isString(message.nextPageToken))
                                return "nextPageToken: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a ListUptimeCheckIpsResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.monitoring.v3.ListUptimeCheckIpsResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.monitoring.v3.ListUptimeCheckIpsResponse} ListUptimeCheckIpsResponse
                     */
                    ListUptimeCheckIpsResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.monitoring.v3.ListUptimeCheckIpsResponse)
                            return object;
                        var message = new $root.google.monitoring.v3.ListUptimeCheckIpsResponse();
                        if (object.uptimeCheckIps) {
                            if (!Array.isArray(object.uptimeCheckIps))
                                throw TypeError(".google.monitoring.v3.ListUptimeCheckIpsResponse.uptimeCheckIps: array expected");
                            message.uptimeCheckIps = [];
                            for (var i = 0; i < object.uptimeCheckIps.length; ++i) {
                                if (typeof object.uptimeCheckIps[i] !== "object")
                                    throw TypeError(".google.monitoring.v3.ListUptimeCheckIpsResponse.uptimeCheckIps: object expected");
                                message.uptimeCheckIps[i] = $root.google.monitoring.v3.UptimeCheckIp.fromObject(object.uptimeCheckIps[i]);
                            }
                        }
                        if (object.nextPageToken != null)
                            message.nextPageToken = String(object.nextPageToken);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ListUptimeCheckIpsResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.monitoring.v3.ListUptimeCheckIpsResponse
                     * @static
                     * @param {google.monitoring.v3.ListUptimeCheckIpsResponse} message ListUptimeCheckIpsResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ListUptimeCheckIpsResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.uptimeCheckIps = [];
                        if (options.defaults)
                            object.nextPageToken = "";
                        if (message.uptimeCheckIps && message.uptimeCheckIps.length) {
                            object.uptimeCheckIps = [];
                            for (var j = 0; j < message.uptimeCheckIps.length; ++j)
                                object.uptimeCheckIps[j] = $root.google.monitoring.v3.UptimeCheckIp.toObject(message.uptimeCheckIps[j], options);
                        }
                        if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                            object.nextPageToken = message.nextPageToken;
                        return object;
                    };
    
                    /**
                     * Converts this ListUptimeCheckIpsResponse to JSON.
                     * @function toJSON
                     * @memberof google.monitoring.v3.ListUptimeCheckIpsResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ListUptimeCheckIpsResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ListUptimeCheckIpsResponse
                     * @function getTypeUrl
                     * @memberof google.monitoring.v3.ListUptimeCheckIpsResponse
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ListUptimeCheckIpsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.monitoring.v3.ListUptimeCheckIpsResponse";
                    };
    
                    return ListUptimeCheckIpsResponse;
                })();
    
                return v3;
            })();
    
            return monitoring;
        })();
    
        google.api = (function() {
    
            /**
             * Namespace api.
             * @memberof google
             * @namespace
             */
            var api = {};
    
            /**
             * FieldBehavior enum.
             * @name google.api.FieldBehavior
             * @enum {number}
             * @property {number} FIELD_BEHAVIOR_UNSPECIFIED=0 FIELD_BEHAVIOR_UNSPECIFIED value
             * @property {number} OPTIONAL=1 OPTIONAL value
             * @property {number} REQUIRED=2 REQUIRED value
             * @property {number} OUTPUT_ONLY=3 OUTPUT_ONLY value
             * @property {number} INPUT_ONLY=4 INPUT_ONLY value
             * @property {number} IMMUTABLE=5 IMMUTABLE value
             * @property {number} UNORDERED_LIST=6 UNORDERED_LIST value
             * @property {number} NON_EMPTY_DEFAULT=7 NON_EMPTY_DEFAULT value
             */
            api.FieldBehavior = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "FIELD_BEHAVIOR_UNSPECIFIED"] = 0;
                values[valuesById[1] = "OPTIONAL"] = 1;
                values[valuesById[2] = "REQUIRED"] = 2;
                values[valuesById[3] = "OUTPUT_ONLY"] = 3;
                values[valuesById[4] = "INPUT_ONLY"] = 4;
                values[valuesById[5] = "IMMUTABLE"] = 5;
                values[valuesById[6] = "UNORDERED_LIST"] = 6;
                values[valuesById[7] = "NON_EMPTY_DEFAULT"] = 7;
                return values;
            })();
    
            api.ResourceDescriptor = (function() {
    
                /**
                 * Properties of a ResourceDescriptor.
                 * @memberof google.api
                 * @interface IResourceDescriptor
                 * @property {string|null} [type] ResourceDescriptor type
                 * @property {Array.<string>|null} [pattern] ResourceDescriptor pattern
                 * @property {string|null} [nameField] ResourceDescriptor nameField
                 * @property {google.api.ResourceDescriptor.History|null} [history] ResourceDescriptor history
                 * @property {string|null} [plural] ResourceDescriptor plural
                 * @property {string|null} [singular] ResourceDescriptor singular
                 * @property {Array.<google.api.ResourceDescriptor.Style>|null} [style] ResourceDescriptor style
                 */
    
                /**
                 * Constructs a new ResourceDescriptor.
                 * @memberof google.api
                 * @classdesc Represents a ResourceDescriptor.
                 * @implements IResourceDescriptor
                 * @constructor
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 */
                function ResourceDescriptor(properties) {
                    this.pattern = [];
                    this.style = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceDescriptor type.
                 * @member {string} type
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.type = "";
    
                /**
                 * ResourceDescriptor pattern.
                 * @member {Array.<string>} pattern
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.pattern = $util.emptyArray;
    
                /**
                 * ResourceDescriptor nameField.
                 * @member {string} nameField
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.nameField = "";
    
                /**
                 * ResourceDescriptor history.
                 * @member {google.api.ResourceDescriptor.History} history
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.history = 0;
    
                /**
                 * ResourceDescriptor plural.
                 * @member {string} plural
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.plural = "";
    
                /**
                 * ResourceDescriptor singular.
                 * @member {string} singular
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.singular = "";
    
                /**
                 * ResourceDescriptor style.
                 * @member {Array.<google.api.ResourceDescriptor.Style>} style
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.style = $util.emptyArray;
    
                /**
                 * Creates a new ResourceDescriptor instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor instance
                 */
                ResourceDescriptor.create = function create(properties) {
                    return new ResourceDescriptor(properties);
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.pattern != null && message.pattern.length)
                        for (var i = 0; i < message.pattern.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.pattern[i]);
                    if (message.nameField != null && Object.hasOwnProperty.call(message, "nameField"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.nameField);
                    if (message.history != null && Object.hasOwnProperty.call(message, "history"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.history);
                    if (message.plural != null && Object.hasOwnProperty.call(message, "plural"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.plural);
                    if (message.singular != null && Object.hasOwnProperty.call(message, "singular"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.singular);
                    if (message.style != null && message.style.length) {
                        writer.uint32(/* id 10, wireType 2 =*/82).fork();
                        for (var i = 0; i < message.style.length; ++i)
                            writer.int32(message.style[i]);
                        writer.ldelim();
                    }
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message, length delimited. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceDescriptor();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.pattern && message.pattern.length))
                                    message.pattern = [];
                                message.pattern.push(reader.string());
                                break;
                            }
                        case 3: {
                                message.nameField = reader.string();
                                break;
                            }
                        case 4: {
                                message.history = reader.int32();
                                break;
                            }
                        case 5: {
                                message.plural = reader.string();
                                break;
                            }
                        case 6: {
                                message.singular = reader.string();
                                break;
                            }
                        case 10: {
                                if (!(message.style && message.style.length))
                                    message.style = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.style.push(reader.int32());
                                } else
                                    message.style.push(reader.int32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceDescriptor message.
                 * @function verify
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceDescriptor.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.pattern != null && message.hasOwnProperty("pattern")) {
                        if (!Array.isArray(message.pattern))
                            return "pattern: array expected";
                        for (var i = 0; i < message.pattern.length; ++i)
                            if (!$util.isString(message.pattern[i]))
                                return "pattern: string[] expected";
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        if (!$util.isString(message.nameField))
                            return "nameField: string expected";
                    if (message.history != null && message.hasOwnProperty("history"))
                        switch (message.history) {
                        default:
                            return "history: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        if (!$util.isString(message.plural))
                            return "plural: string expected";
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        if (!$util.isString(message.singular))
                            return "singular: string expected";
                    if (message.style != null && message.hasOwnProperty("style")) {
                        if (!Array.isArray(message.style))
                            return "style: array expected";
                        for (var i = 0; i < message.style.length; ++i)
                            switch (message.style[i]) {
                            default:
                                return "style: enum value[] expected";
                            case 0:
                            case 1:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a ResourceDescriptor message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 */
                ResourceDescriptor.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceDescriptor)
                        return object;
                    var message = new $root.google.api.ResourceDescriptor();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.pattern) {
                        if (!Array.isArray(object.pattern))
                            throw TypeError(".google.api.ResourceDescriptor.pattern: array expected");
                        message.pattern = [];
                        for (var i = 0; i < object.pattern.length; ++i)
                            message.pattern[i] = String(object.pattern[i]);
                    }
                    if (object.nameField != null)
                        message.nameField = String(object.nameField);
                    switch (object.history) {
                    default:
                        if (typeof object.history === "number") {
                            message.history = object.history;
                            break;
                        }
                        break;
                    case "HISTORY_UNSPECIFIED":
                    case 0:
                        message.history = 0;
                        break;
                    case "ORIGINALLY_SINGLE_PATTERN":
                    case 1:
                        message.history = 1;
                        break;
                    case "FUTURE_MULTI_PATTERN":
                    case 2:
                        message.history = 2;
                        break;
                    }
                    if (object.plural != null)
                        message.plural = String(object.plural);
                    if (object.singular != null)
                        message.singular = String(object.singular);
                    if (object.style) {
                        if (!Array.isArray(object.style))
                            throw TypeError(".google.api.ResourceDescriptor.style: array expected");
                        message.style = [];
                        for (var i = 0; i < object.style.length; ++i)
                            switch (object.style[i]) {
                            default:
                                if (typeof object.style[i] === "number") {
                                    message.style[i] = object.style[i];
                                    break;
                                }
                            case "STYLE_UNSPECIFIED":
                            case 0:
                                message.style[i] = 0;
                                break;
                            case "DECLARATIVE_FRIENDLY":
                            case 1:
                                message.style[i] = 1;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceDescriptor message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.ResourceDescriptor} message ResourceDescriptor
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceDescriptor.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.pattern = [];
                        object.style = [];
                    }
                    if (options.defaults) {
                        object.type = "";
                        object.nameField = "";
                        object.history = options.enums === String ? "HISTORY_UNSPECIFIED" : 0;
                        object.plural = "";
                        object.singular = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.pattern && message.pattern.length) {
                        object.pattern = [];
                        for (var j = 0; j < message.pattern.length; ++j)
                            object.pattern[j] = message.pattern[j];
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        object.nameField = message.nameField;
                    if (message.history != null && message.hasOwnProperty("history"))
                        object.history = options.enums === String ? $root.google.api.ResourceDescriptor.History[message.history] === undefined ? message.history : $root.google.api.ResourceDescriptor.History[message.history] : message.history;
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        object.plural = message.plural;
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        object.singular = message.singular;
                    if (message.style && message.style.length) {
                        object.style = [];
                        for (var j = 0; j < message.style.length; ++j)
                            object.style[j] = options.enums === String ? $root.google.api.ResourceDescriptor.Style[message.style[j]] === undefined ? message.style[j] : $root.google.api.ResourceDescriptor.Style[message.style[j]] : message.style[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this ResourceDescriptor to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceDescriptor.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceDescriptor
                 * @function getTypeUrl
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceDescriptor.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceDescriptor";
                };
    
                /**
                 * History enum.
                 * @name google.api.ResourceDescriptor.History
                 * @enum {number}
                 * @property {number} HISTORY_UNSPECIFIED=0 HISTORY_UNSPECIFIED value
                 * @property {number} ORIGINALLY_SINGLE_PATTERN=1 ORIGINALLY_SINGLE_PATTERN value
                 * @property {number} FUTURE_MULTI_PATTERN=2 FUTURE_MULTI_PATTERN value
                 */
                ResourceDescriptor.History = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "HISTORY_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "ORIGINALLY_SINGLE_PATTERN"] = 1;
                    values[valuesById[2] = "FUTURE_MULTI_PATTERN"] = 2;
                    return values;
                })();
    
                /**
                 * Style enum.
                 * @name google.api.ResourceDescriptor.Style
                 * @enum {number}
                 * @property {number} STYLE_UNSPECIFIED=0 STYLE_UNSPECIFIED value
                 * @property {number} DECLARATIVE_FRIENDLY=1 DECLARATIVE_FRIENDLY value
                 */
                ResourceDescriptor.Style = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STYLE_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "DECLARATIVE_FRIENDLY"] = 1;
                    return values;
                })();
    
                return ResourceDescriptor;
            })();
    
            api.ResourceReference = (function() {
    
                /**
                 * Properties of a ResourceReference.
                 * @memberof google.api
                 * @interface IResourceReference
                 * @property {string|null} [type] ResourceReference type
                 * @property {string|null} [childType] ResourceReference childType
                 */
    
                /**
                 * Constructs a new ResourceReference.
                 * @memberof google.api
                 * @classdesc Represents a ResourceReference.
                 * @implements IResourceReference
                 * @constructor
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 */
                function ResourceReference(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceReference type.
                 * @member {string} type
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.type = "";
    
                /**
                 * ResourceReference childType.
                 * @member {string} childType
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.childType = "";
    
                /**
                 * Creates a new ResourceReference instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 * @returns {google.api.ResourceReference} ResourceReference instance
                 */
                ResourceReference.create = function create(properties) {
                    return new ResourceReference(properties);
                };
    
                /**
                 * Encodes the specified ResourceReference message. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.childType != null && Object.hasOwnProperty.call(message, "childType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.childType);
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceReference message, length delimited. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceReference();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                message.childType = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceReference message.
                 * @function verify
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceReference.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        if (!$util.isString(message.childType))
                            return "childType: string expected";
                    return null;
                };
    
                /**
                 * Creates a ResourceReference message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceReference} ResourceReference
                 */
                ResourceReference.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceReference)
                        return object;
                    var message = new $root.google.api.ResourceReference();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.childType != null)
                        message.childType = String(object.childType);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceReference message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.ResourceReference} message ResourceReference
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceReference.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type = "";
                        object.childType = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        object.childType = message.childType;
                    return object;
                };
    
                /**
                 * Converts this ResourceReference to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceReference
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceReference.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceReference
                 * @function getTypeUrl
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceReference.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceReference";
                };
    
                return ResourceReference;
            })();
    
            api.Distribution = (function() {
    
                /**
                 * Properties of a Distribution.
                 * @memberof google.api
                 * @interface IDistribution
                 * @property {number|Long|null} [count] Distribution count
                 * @property {number|null} [mean] Distribution mean
                 * @property {number|null} [sumOfSquaredDeviation] Distribution sumOfSquaredDeviation
                 * @property {google.api.Distribution.IRange|null} [range] Distribution range
                 * @property {google.api.Distribution.IBucketOptions|null} [bucketOptions] Distribution bucketOptions
                 * @property {Array.<number|Long>|null} [bucketCounts] Distribution bucketCounts
                 * @property {Array.<google.api.Distribution.IExemplar>|null} [exemplars] Distribution exemplars
                 */
    
                /**
                 * Constructs a new Distribution.
                 * @memberof google.api
                 * @classdesc Represents a Distribution.
                 * @implements IDistribution
                 * @constructor
                 * @param {google.api.IDistribution=} [properties] Properties to set
                 */
                function Distribution(properties) {
                    this.bucketCounts = [];
                    this.exemplars = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Distribution count.
                 * @member {number|Long} count
                 * @memberof google.api.Distribution
                 * @instance
                 */
                Distribution.prototype.count = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Distribution mean.
                 * @member {number} mean
                 * @memberof google.api.Distribution
                 * @instance
                 */
                Distribution.prototype.mean = 0;
    
                /**
                 * Distribution sumOfSquaredDeviation.
                 * @member {number} sumOfSquaredDeviation
                 * @memberof google.api.Distribution
                 * @instance
                 */
                Distribution.prototype.sumOfSquaredDeviation = 0;
    
                /**
                 * Distribution range.
                 * @member {google.api.Distribution.IRange|null|undefined} range
                 * @memberof google.api.Distribution
                 * @instance
                 */
                Distribution.prototype.range = null;
    
                /**
                 * Distribution bucketOptions.
                 * @member {google.api.Distribution.IBucketOptions|null|undefined} bucketOptions
                 * @memberof google.api.Distribution
                 * @instance
                 */
                Distribution.prototype.bucketOptions = null;
    
                /**
                 * Distribution bucketCounts.
                 * @member {Array.<number|Long>} bucketCounts
                 * @memberof google.api.Distribution
                 * @instance
                 */
                Distribution.prototype.bucketCounts = $util.emptyArray;
    
                /**
                 * Distribution exemplars.
                 * @member {Array.<google.api.Distribution.IExemplar>} exemplars
                 * @memberof google.api.Distribution
                 * @instance
                 */
                Distribution.prototype.exemplars = $util.emptyArray;
    
                /**
                 * Creates a new Distribution instance using the specified properties.
                 * @function create
                 * @memberof google.api.Distribution
                 * @static
                 * @param {google.api.IDistribution=} [properties] Properties to set
                 * @returns {google.api.Distribution} Distribution instance
                 */
                Distribution.create = function create(properties) {
                    return new Distribution(properties);
                };
    
                /**
                 * Encodes the specified Distribution message. Does not implicitly {@link google.api.Distribution.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Distribution
                 * @static
                 * @param {google.api.IDistribution} message Distribution message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Distribution.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.count != null && Object.hasOwnProperty.call(message, "count"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.count);
                    if (message.mean != null && Object.hasOwnProperty.call(message, "mean"))
                        writer.uint32(/* id 2, wireType 1 =*/17).double(message.mean);
                    if (message.sumOfSquaredDeviation != null && Object.hasOwnProperty.call(message, "sumOfSquaredDeviation"))
                        writer.uint32(/* id 3, wireType 1 =*/25).double(message.sumOfSquaredDeviation);
                    if (message.range != null && Object.hasOwnProperty.call(message, "range"))
                        $root.google.api.Distribution.Range.encode(message.range, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.bucketOptions != null && Object.hasOwnProperty.call(message, "bucketOptions"))
                        $root.google.api.Distribution.BucketOptions.encode(message.bucketOptions, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.bucketCounts != null && message.bucketCounts.length) {
                        writer.uint32(/* id 7, wireType 2 =*/58).fork();
                        for (var i = 0; i < message.bucketCounts.length; ++i)
                            writer.int64(message.bucketCounts[i]);
                        writer.ldelim();
                    }
                    if (message.exemplars != null && message.exemplars.length)
                        for (var i = 0; i < message.exemplars.length; ++i)
                            $root.google.api.Distribution.Exemplar.encode(message.exemplars[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Distribution message, length delimited. Does not implicitly {@link google.api.Distribution.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Distribution
                 * @static
                 * @param {google.api.IDistribution} message Distribution message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Distribution.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Distribution message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Distribution
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Distribution} Distribution
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Distribution.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Distribution();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.count = reader.int64();
                                break;
                            }
                        case 2: {
                                message.mean = reader.double();
                                break;
                            }
                        case 3: {
                                message.sumOfSquaredDeviation = reader.double();
                                break;
                            }
                        case 4: {
                                message.range = $root.google.api.Distribution.Range.decode(reader, reader.uint32());
                                break;
                            }
                        case 6: {
                                message.bucketOptions = $root.google.api.Distribution.BucketOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 7: {
                                if (!(message.bucketCounts && message.bucketCounts.length))
                                    message.bucketCounts = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.bucketCounts.push(reader.int64());
                                } else
                                    message.bucketCounts.push(reader.int64());
                                break;
                            }
                        case 10: {
                                if (!(message.exemplars && message.exemplars.length))
                                    message.exemplars = [];
                                message.exemplars.push($root.google.api.Distribution.Exemplar.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Distribution message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Distribution
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Distribution} Distribution
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Distribution.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Distribution message.
                 * @function verify
                 * @memberof google.api.Distribution
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Distribution.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.count != null && message.hasOwnProperty("count"))
                        if (!$util.isInteger(message.count) && !(message.count && $util.isInteger(message.count.low) && $util.isInteger(message.count.high)))
                            return "count: integer|Long expected";
                    if (message.mean != null && message.hasOwnProperty("mean"))
                        if (typeof message.mean !== "number")
                            return "mean: number expected";
                    if (message.sumOfSquaredDeviation != null && message.hasOwnProperty("sumOfSquaredDeviation"))
                        if (typeof message.sumOfSquaredDeviation !== "number")
                            return "sumOfSquaredDeviation: number expected";
                    if (message.range != null && message.hasOwnProperty("range")) {
                        var error = $root.google.api.Distribution.Range.verify(message.range);
                        if (error)
                            return "range." + error;
                    }
                    if (message.bucketOptions != null && message.hasOwnProperty("bucketOptions")) {
                        var error = $root.google.api.Distribution.BucketOptions.verify(message.bucketOptions);
                        if (error)
                            return "bucketOptions." + error;
                    }
                    if (message.bucketCounts != null && message.hasOwnProperty("bucketCounts")) {
                        if (!Array.isArray(message.bucketCounts))
                            return "bucketCounts: array expected";
                        for (var i = 0; i < message.bucketCounts.length; ++i)
                            if (!$util.isInteger(message.bucketCounts[i]) && !(message.bucketCounts[i] && $util.isInteger(message.bucketCounts[i].low) && $util.isInteger(message.bucketCounts[i].high)))
                                return "bucketCounts: integer|Long[] expected";
                    }
                    if (message.exemplars != null && message.hasOwnProperty("exemplars")) {
                        if (!Array.isArray(message.exemplars))
                            return "exemplars: array expected";
                        for (var i = 0; i < message.exemplars.length; ++i) {
                            var error = $root.google.api.Distribution.Exemplar.verify(message.exemplars[i]);
                            if (error)
                                return "exemplars." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Distribution message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Distribution
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Distribution} Distribution
                 */
                Distribution.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Distribution)
                        return object;
                    var message = new $root.google.api.Distribution();
                    if (object.count != null)
                        if ($util.Long)
                            (message.count = $util.Long.fromValue(object.count)).unsigned = false;
                        else if (typeof object.count === "string")
                            message.count = parseInt(object.count, 10);
                        else if (typeof object.count === "number")
                            message.count = object.count;
                        else if (typeof object.count === "object")
                            message.count = new $util.LongBits(object.count.low >>> 0, object.count.high >>> 0).toNumber();
                    if (object.mean != null)
                        message.mean = Number(object.mean);
                    if (object.sumOfSquaredDeviation != null)
                        message.sumOfSquaredDeviation = Number(object.sumOfSquaredDeviation);
                    if (object.range != null) {
                        if (typeof object.range !== "object")
                            throw TypeError(".google.api.Distribution.range: object expected");
                        message.range = $root.google.api.Distribution.Range.fromObject(object.range);
                    }
                    if (object.bucketOptions != null) {
                        if (typeof object.bucketOptions !== "object")
                            throw TypeError(".google.api.Distribution.bucketOptions: object expected");
                        message.bucketOptions = $root.google.api.Distribution.BucketOptions.fromObject(object.bucketOptions);
                    }
                    if (object.bucketCounts) {
                        if (!Array.isArray(object.bucketCounts))
                            throw TypeError(".google.api.Distribution.bucketCounts: array expected");
                        message.bucketCounts = [];
                        for (var i = 0; i < object.bucketCounts.length; ++i)
                            if ($util.Long)
                                (message.bucketCounts[i] = $util.Long.fromValue(object.bucketCounts[i])).unsigned = false;
                            else if (typeof object.bucketCounts[i] === "string")
                                message.bucketCounts[i] = parseInt(object.bucketCounts[i], 10);
                            else if (typeof object.bucketCounts[i] === "number")
                                message.bucketCounts[i] = object.bucketCounts[i];
                            else if (typeof object.bucketCounts[i] === "object")
                                message.bucketCounts[i] = new $util.LongBits(object.bucketCounts[i].low >>> 0, object.bucketCounts[i].high >>> 0).toNumber();
                    }
                    if (object.exemplars) {
                        if (!Array.isArray(object.exemplars))
                            throw TypeError(".google.api.Distribution.exemplars: array expected");
                        message.exemplars = [];
                        for (var i = 0; i < object.exemplars.length; ++i) {
                            if (typeof object.exemplars[i] !== "object")
                                throw TypeError(".google.api.Distribution.exemplars: object expected");
                            message.exemplars[i] = $root.google.api.Distribution.Exemplar.fromObject(object.exemplars[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Distribution message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Distribution
                 * @static
                 * @param {google.api.Distribution} message Distribution
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Distribution.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.bucketCounts = [];
                        object.exemplars = [];
                    }
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.count = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.count = options.longs === String ? "0" : 0;
                        object.mean = 0;
                        object.sumOfSquaredDeviation = 0;
                        object.range = null;
                        object.bucketOptions = null;
                    }
                    if (message.count != null && message.hasOwnProperty("count"))
                        if (typeof message.count === "number")
                            object.count = options.longs === String ? String(message.count) : message.count;
                        else
                            object.count = options.longs === String ? $util.Long.prototype.toString.call(message.count) : options.longs === Number ? new $util.LongBits(message.count.low >>> 0, message.count.high >>> 0).toNumber() : message.count;
                    if (message.mean != null && message.hasOwnProperty("mean"))
                        object.mean = options.json && !isFinite(message.mean) ? String(message.mean) : message.mean;
                    if (message.sumOfSquaredDeviation != null && message.hasOwnProperty("sumOfSquaredDeviation"))
                        object.sumOfSquaredDeviation = options.json && !isFinite(message.sumOfSquaredDeviation) ? String(message.sumOfSquaredDeviation) : message.sumOfSquaredDeviation;
                    if (message.range != null && message.hasOwnProperty("range"))
                        object.range = $root.google.api.Distribution.Range.toObject(message.range, options);
                    if (message.bucketOptions != null && message.hasOwnProperty("bucketOptions"))
                        object.bucketOptions = $root.google.api.Distribution.BucketOptions.toObject(message.bucketOptions, options);
                    if (message.bucketCounts && message.bucketCounts.length) {
                        object.bucketCounts = [];
                        for (var j = 0; j < message.bucketCounts.length; ++j)
                            if (typeof message.bucketCounts[j] === "number")
                                object.bucketCounts[j] = options.longs === String ? String(message.bucketCounts[j]) : message.bucketCounts[j];
                            else
                                object.bucketCounts[j] = options.longs === String ? $util.Long.prototype.toString.call(message.bucketCounts[j]) : options.longs === Number ? new $util.LongBits(message.bucketCounts[j].low >>> 0, message.bucketCounts[j].high >>> 0).toNumber() : message.bucketCounts[j];
                    }
                    if (message.exemplars && message.exemplars.length) {
                        object.exemplars = [];
                        for (var j = 0; j < message.exemplars.length; ++j)
                            object.exemplars[j] = $root.google.api.Distribution.Exemplar.toObject(message.exemplars[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this Distribution to JSON.
                 * @function toJSON
                 * @memberof google.api.Distribution
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Distribution.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Distribution
                 * @function getTypeUrl
                 * @memberof google.api.Distribution
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Distribution.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.Distribution";
                };
    
                Distribution.Range = (function() {
    
                    /**
                     * Properties of a Range.
                     * @memberof google.api.Distribution
                     * @interface IRange
                     * @property {number|null} [min] Range min
                     * @property {number|null} [max] Range max
                     */
    
                    /**
                     * Constructs a new Range.
                     * @memberof google.api.Distribution
                     * @classdesc Represents a Range.
                     * @implements IRange
                     * @constructor
                     * @param {google.api.Distribution.IRange=} [properties] Properties to set
                     */
                    function Range(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Range min.
                     * @member {number} min
                     * @memberof google.api.Distribution.Range
                     * @instance
                     */
                    Range.prototype.min = 0;
    
                    /**
                     * Range max.
                     * @member {number} max
                     * @memberof google.api.Distribution.Range
                     * @instance
                     */
                    Range.prototype.max = 0;
    
                    /**
                     * Creates a new Range instance using the specified properties.
                     * @function create
                     * @memberof google.api.Distribution.Range
                     * @static
                     * @param {google.api.Distribution.IRange=} [properties] Properties to set
                     * @returns {google.api.Distribution.Range} Range instance
                     */
                    Range.create = function create(properties) {
                        return new Range(properties);
                    };
    
                    /**
                     * Encodes the specified Range message. Does not implicitly {@link google.api.Distribution.Range.verify|verify} messages.
                     * @function encode
                     * @memberof google.api.Distribution.Range
                     * @static
                     * @param {google.api.Distribution.IRange} message Range message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Range.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.min != null && Object.hasOwnProperty.call(message, "min"))
                            writer.uint32(/* id 1, wireType 1 =*/9).double(message.min);
                        if (message.max != null && Object.hasOwnProperty.call(message, "max"))
                            writer.uint32(/* id 2, wireType 1 =*/17).double(message.max);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Range message, length delimited. Does not implicitly {@link google.api.Distribution.Range.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.api.Distribution.Range
                     * @static
                     * @param {google.api.Distribution.IRange} message Range message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Range.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Range message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.api.Distribution.Range
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.api.Distribution.Range} Range
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Range.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Distribution.Range();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.min = reader.double();
                                    break;
                                }
                            case 2: {
                                    message.max = reader.double();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Range message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.api.Distribution.Range
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.api.Distribution.Range} Range
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Range.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Range message.
                     * @function verify
                     * @memberof google.api.Distribution.Range
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Range.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.min != null && message.hasOwnProperty("min"))
                            if (typeof message.min !== "number")
                                return "min: number expected";
                        if (message.max != null && message.hasOwnProperty("max"))
                            if (typeof message.max !== "number")
                                return "max: number expected";
                        return null;
                    };
    
                    /**
                     * Creates a Range message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.api.Distribution.Range
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.api.Distribution.Range} Range
                     */
                    Range.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.api.Distribution.Range)
                            return object;
                        var message = new $root.google.api.Distribution.Range();
                        if (object.min != null)
                            message.min = Number(object.min);
                        if (object.max != null)
                            message.max = Number(object.max);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Range message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.api.Distribution.Range
                     * @static
                     * @param {google.api.Distribution.Range} message Range
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Range.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.min = 0;
                            object.max = 0;
                        }
                        if (message.min != null && message.hasOwnProperty("min"))
                            object.min = options.json && !isFinite(message.min) ? String(message.min) : message.min;
                        if (message.max != null && message.hasOwnProperty("max"))
                            object.max = options.json && !isFinite(message.max) ? String(message.max) : message.max;
                        return object;
                    };
    
                    /**
                     * Converts this Range to JSON.
                     * @function toJSON
                     * @memberof google.api.Distribution.Range
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Range.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Range
                     * @function getTypeUrl
                     * @memberof google.api.Distribution.Range
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Range.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.api.Distribution.Range";
                    };
    
                    return Range;
                })();
    
                Distribution.BucketOptions = (function() {
    
                    /**
                     * Properties of a BucketOptions.
                     * @memberof google.api.Distribution
                     * @interface IBucketOptions
                     * @property {google.api.Distribution.BucketOptions.ILinear|null} [linearBuckets] BucketOptions linearBuckets
                     * @property {google.api.Distribution.BucketOptions.IExponential|null} [exponentialBuckets] BucketOptions exponentialBuckets
                     * @property {google.api.Distribution.BucketOptions.IExplicit|null} [explicitBuckets] BucketOptions explicitBuckets
                     */
    
                    /**
                     * Constructs a new BucketOptions.
                     * @memberof google.api.Distribution
                     * @classdesc Represents a BucketOptions.
                     * @implements IBucketOptions
                     * @constructor
                     * @param {google.api.Distribution.IBucketOptions=} [properties] Properties to set
                     */
                    function BucketOptions(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * BucketOptions linearBuckets.
                     * @member {google.api.Distribution.BucketOptions.ILinear|null|undefined} linearBuckets
                     * @memberof google.api.Distribution.BucketOptions
                     * @instance
                     */
                    BucketOptions.prototype.linearBuckets = null;
    
                    /**
                     * BucketOptions exponentialBuckets.
                     * @member {google.api.Distribution.BucketOptions.IExponential|null|undefined} exponentialBuckets
                     * @memberof google.api.Distribution.BucketOptions
                     * @instance
                     */
                    BucketOptions.prototype.exponentialBuckets = null;
    
                    /**
                     * BucketOptions explicitBuckets.
                     * @member {google.api.Distribution.BucketOptions.IExplicit|null|undefined} explicitBuckets
                     * @memberof google.api.Distribution.BucketOptions
                     * @instance
                     */
                    BucketOptions.prototype.explicitBuckets = null;
    
                    // OneOf field names bound to virtual getters and setters
                    var $oneOfFields;
    
                    /**
                     * BucketOptions options.
                     * @member {"linearBuckets"|"exponentialBuckets"|"explicitBuckets"|undefined} options
                     * @memberof google.api.Distribution.BucketOptions
                     * @instance
                     */
                    Object.defineProperty(BucketOptions.prototype, "options", {
                        get: $util.oneOfGetter($oneOfFields = ["linearBuckets", "exponentialBuckets", "explicitBuckets"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });
    
                    /**
                     * Creates a new BucketOptions instance using the specified properties.
                     * @function create
                     * @memberof google.api.Distribution.BucketOptions
                     * @static
                     * @param {google.api.Distribution.IBucketOptions=} [properties] Properties to set
                     * @returns {google.api.Distribution.BucketOptions} BucketOptions instance
                     */
                    BucketOptions.create = function create(properties) {
                        return new BucketOptions(properties);
                    };
    
                    /**
                     * Encodes the specified BucketOptions message. Does not implicitly {@link google.api.Distribution.BucketOptions.verify|verify} messages.
                     * @function encode
                     * @memberof google.api.Distribution.BucketOptions
                     * @static
                     * @param {google.api.Distribution.IBucketOptions} message BucketOptions message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    BucketOptions.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.linearBuckets != null && Object.hasOwnProperty.call(message, "linearBuckets"))
                            $root.google.api.Distribution.BucketOptions.Linear.encode(message.linearBuckets, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.exponentialBuckets != null && Object.hasOwnProperty.call(message, "exponentialBuckets"))
                            $root.google.api.Distribution.BucketOptions.Exponential.encode(message.exponentialBuckets, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.explicitBuckets != null && Object.hasOwnProperty.call(message, "explicitBuckets"))
                            $root.google.api.Distribution.BucketOptions.Explicit.encode(message.explicitBuckets, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified BucketOptions message, length delimited. Does not implicitly {@link google.api.Distribution.BucketOptions.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.api.Distribution.BucketOptions
                     * @static
                     * @param {google.api.Distribution.IBucketOptions} message BucketOptions message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    BucketOptions.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a BucketOptions message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.api.Distribution.BucketOptions
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.api.Distribution.BucketOptions} BucketOptions
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    BucketOptions.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Distribution.BucketOptions();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.linearBuckets = $root.google.api.Distribution.BucketOptions.Linear.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.exponentialBuckets = $root.google.api.Distribution.BucketOptions.Exponential.decode(reader, reader.uint32());
                                    break;
                                }
                            case 3: {
                                    message.explicitBuckets = $root.google.api.Distribution.BucketOptions.Explicit.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a BucketOptions message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.api.Distribution.BucketOptions
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.api.Distribution.BucketOptions} BucketOptions
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    BucketOptions.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a BucketOptions message.
                     * @function verify
                     * @memberof google.api.Distribution.BucketOptions
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    BucketOptions.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        var properties = {};
                        if (message.linearBuckets != null && message.hasOwnProperty("linearBuckets")) {
                            properties.options = 1;
                            {
                                var error = $root.google.api.Distribution.BucketOptions.Linear.verify(message.linearBuckets);
                                if (error)
                                    return "linearBuckets." + error;
                            }
                        }
                        if (message.exponentialBuckets != null && message.hasOwnProperty("exponentialBuckets")) {
                            if (properties.options === 1)
                                return "options: multiple values";
                            properties.options = 1;
                            {
                                var error = $root.google.api.Distribution.BucketOptions.Exponential.verify(message.exponentialBuckets);
                                if (error)
                                    return "exponentialBuckets." + error;
                            }
                        }
                        if (message.explicitBuckets != null && message.hasOwnProperty("explicitBuckets")) {
                            if (properties.options === 1)
                                return "options: multiple values";
                            properties.options = 1;
                            {
                                var error = $root.google.api.Distribution.BucketOptions.Explicit.verify(message.explicitBuckets);
                                if (error)
                                    return "explicitBuckets." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates a BucketOptions message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.api.Distribution.BucketOptions
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.api.Distribution.BucketOptions} BucketOptions
                     */
                    BucketOptions.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.api.Distribution.BucketOptions)
                            return object;
                        var message = new $root.google.api.Distribution.BucketOptions();
                        if (object.linearBuckets != null) {
                            if (typeof object.linearBuckets !== "object")
                                throw TypeError(".google.api.Distribution.BucketOptions.linearBuckets: object expected");
                            message.linearBuckets = $root.google.api.Distribution.BucketOptions.Linear.fromObject(object.linearBuckets);
                        }
                        if (object.exponentialBuckets != null) {
                            if (typeof object.exponentialBuckets !== "object")
                                throw TypeError(".google.api.Distribution.BucketOptions.exponentialBuckets: object expected");
                            message.exponentialBuckets = $root.google.api.Distribution.BucketOptions.Exponential.fromObject(object.exponentialBuckets);
                        }
                        if (object.explicitBuckets != null) {
                            if (typeof object.explicitBuckets !== "object")
                                throw TypeError(".google.api.Distribution.BucketOptions.explicitBuckets: object expected");
                            message.explicitBuckets = $root.google.api.Distribution.BucketOptions.Explicit.fromObject(object.explicitBuckets);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a BucketOptions message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.api.Distribution.BucketOptions
                     * @static
                     * @param {google.api.Distribution.BucketOptions} message BucketOptions
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    BucketOptions.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (message.linearBuckets != null && message.hasOwnProperty("linearBuckets")) {
                            object.linearBuckets = $root.google.api.Distribution.BucketOptions.Linear.toObject(message.linearBuckets, options);
                            if (options.oneofs)
                                object.options = "linearBuckets";
                        }
                        if (message.exponentialBuckets != null && message.hasOwnProperty("exponentialBuckets")) {
                            object.exponentialBuckets = $root.google.api.Distribution.BucketOptions.Exponential.toObject(message.exponentialBuckets, options);
                            if (options.oneofs)
                                object.options = "exponentialBuckets";
                        }
                        if (message.explicitBuckets != null && message.hasOwnProperty("explicitBuckets")) {
                            object.explicitBuckets = $root.google.api.Distribution.BucketOptions.Explicit.toObject(message.explicitBuckets, options);
                            if (options.oneofs)
                                object.options = "explicitBuckets";
                        }
                        return object;
                    };
    
                    /**
                     * Converts this BucketOptions to JSON.
                     * @function toJSON
                     * @memberof google.api.Distribution.BucketOptions
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    BucketOptions.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for BucketOptions
                     * @function getTypeUrl
                     * @memberof google.api.Distribution.BucketOptions
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    BucketOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.api.Distribution.BucketOptions";
                    };
    
                    BucketOptions.Linear = (function() {
    
                        /**
                         * Properties of a Linear.
                         * @memberof google.api.Distribution.BucketOptions
                         * @interface ILinear
                         * @property {number|null} [numFiniteBuckets] Linear numFiniteBuckets
                         * @property {number|null} [width] Linear width
                         * @property {number|null} [offset] Linear offset
                         */
    
                        /**
                         * Constructs a new Linear.
                         * @memberof google.api.Distribution.BucketOptions
                         * @classdesc Represents a Linear.
                         * @implements ILinear
                         * @constructor
                         * @param {google.api.Distribution.BucketOptions.ILinear=} [properties] Properties to set
                         */
                        function Linear(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Linear numFiniteBuckets.
                         * @member {number} numFiniteBuckets
                         * @memberof google.api.Distribution.BucketOptions.Linear
                         * @instance
                         */
                        Linear.prototype.numFiniteBuckets = 0;
    
                        /**
                         * Linear width.
                         * @member {number} width
                         * @memberof google.api.Distribution.BucketOptions.Linear
                         * @instance
                         */
                        Linear.prototype.width = 0;
    
                        /**
                         * Linear offset.
                         * @member {number} offset
                         * @memberof google.api.Distribution.BucketOptions.Linear
                         * @instance
                         */
                        Linear.prototype.offset = 0;
    
                        /**
                         * Creates a new Linear instance using the specified properties.
                         * @function create
                         * @memberof google.api.Distribution.BucketOptions.Linear
                         * @static
                         * @param {google.api.Distribution.BucketOptions.ILinear=} [properties] Properties to set
                         * @returns {google.api.Distribution.BucketOptions.Linear} Linear instance
                         */
                        Linear.create = function create(properties) {
                            return new Linear(properties);
                        };
    
                        /**
                         * Encodes the specified Linear message. Does not implicitly {@link google.api.Distribution.BucketOptions.Linear.verify|verify} messages.
                         * @function encode
                         * @memberof google.api.Distribution.BucketOptions.Linear
                         * @static
                         * @param {google.api.Distribution.BucketOptions.ILinear} message Linear message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Linear.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.numFiniteBuckets != null && Object.hasOwnProperty.call(message, "numFiniteBuckets"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.numFiniteBuckets);
                            if (message.width != null && Object.hasOwnProperty.call(message, "width"))
                                writer.uint32(/* id 2, wireType 1 =*/17).double(message.width);
                            if (message.offset != null && Object.hasOwnProperty.call(message, "offset"))
                                writer.uint32(/* id 3, wireType 1 =*/25).double(message.offset);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Linear message, length delimited. Does not implicitly {@link google.api.Distribution.BucketOptions.Linear.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.api.Distribution.BucketOptions.Linear
                         * @static
                         * @param {google.api.Distribution.BucketOptions.ILinear} message Linear message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Linear.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Linear message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.api.Distribution.BucketOptions.Linear
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.api.Distribution.BucketOptions.Linear} Linear
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Linear.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Distribution.BucketOptions.Linear();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.numFiniteBuckets = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.width = reader.double();
                                        break;
                                    }
                                case 3: {
                                        message.offset = reader.double();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Linear message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.api.Distribution.BucketOptions.Linear
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.api.Distribution.BucketOptions.Linear} Linear
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Linear.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Linear message.
                         * @function verify
                         * @memberof google.api.Distribution.BucketOptions.Linear
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Linear.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.numFiniteBuckets != null && message.hasOwnProperty("numFiniteBuckets"))
                                if (!$util.isInteger(message.numFiniteBuckets))
                                    return "numFiniteBuckets: integer expected";
                            if (message.width != null && message.hasOwnProperty("width"))
                                if (typeof message.width !== "number")
                                    return "width: number expected";
                            if (message.offset != null && message.hasOwnProperty("offset"))
                                if (typeof message.offset !== "number")
                                    return "offset: number expected";
                            return null;
                        };
    
                        /**
                         * Creates a Linear message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.api.Distribution.BucketOptions.Linear
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.api.Distribution.BucketOptions.Linear} Linear
                         */
                        Linear.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.api.Distribution.BucketOptions.Linear)
                                return object;
                            var message = new $root.google.api.Distribution.BucketOptions.Linear();
                            if (object.numFiniteBuckets != null)
                                message.numFiniteBuckets = object.numFiniteBuckets | 0;
                            if (object.width != null)
                                message.width = Number(object.width);
                            if (object.offset != null)
                                message.offset = Number(object.offset);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Linear message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.api.Distribution.BucketOptions.Linear
                         * @static
                         * @param {google.api.Distribution.BucketOptions.Linear} message Linear
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Linear.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.numFiniteBuckets = 0;
                                object.width = 0;
                                object.offset = 0;
                            }
                            if (message.numFiniteBuckets != null && message.hasOwnProperty("numFiniteBuckets"))
                                object.numFiniteBuckets = message.numFiniteBuckets;
                            if (message.width != null && message.hasOwnProperty("width"))
                                object.width = options.json && !isFinite(message.width) ? String(message.width) : message.width;
                            if (message.offset != null && message.hasOwnProperty("offset"))
                                object.offset = options.json && !isFinite(message.offset) ? String(message.offset) : message.offset;
                            return object;
                        };
    
                        /**
                         * Converts this Linear to JSON.
                         * @function toJSON
                         * @memberof google.api.Distribution.BucketOptions.Linear
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Linear.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Linear
                         * @function getTypeUrl
                         * @memberof google.api.Distribution.BucketOptions.Linear
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Linear.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.api.Distribution.BucketOptions.Linear";
                        };
    
                        return Linear;
                    })();
    
                    BucketOptions.Exponential = (function() {
    
                        /**
                         * Properties of an Exponential.
                         * @memberof google.api.Distribution.BucketOptions
                         * @interface IExponential
                         * @property {number|null} [numFiniteBuckets] Exponential numFiniteBuckets
                         * @property {number|null} [growthFactor] Exponential growthFactor
                         * @property {number|null} [scale] Exponential scale
                         */
    
                        /**
                         * Constructs a new Exponential.
                         * @memberof google.api.Distribution.BucketOptions
                         * @classdesc Represents an Exponential.
                         * @implements IExponential
                         * @constructor
                         * @param {google.api.Distribution.BucketOptions.IExponential=} [properties] Properties to set
                         */
                        function Exponential(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Exponential numFiniteBuckets.
                         * @member {number} numFiniteBuckets
                         * @memberof google.api.Distribution.BucketOptions.Exponential
                         * @instance
                         */
                        Exponential.prototype.numFiniteBuckets = 0;
    
                        /**
                         * Exponential growthFactor.
                         * @member {number} growthFactor
                         * @memberof google.api.Distribution.BucketOptions.Exponential
                         * @instance
                         */
                        Exponential.prototype.growthFactor = 0;
    
                        /**
                         * Exponential scale.
                         * @member {number} scale
                         * @memberof google.api.Distribution.BucketOptions.Exponential
                         * @instance
                         */
                        Exponential.prototype.scale = 0;
    
                        /**
                         * Creates a new Exponential instance using the specified properties.
                         * @function create
                         * @memberof google.api.Distribution.BucketOptions.Exponential
                         * @static
                         * @param {google.api.Distribution.BucketOptions.IExponential=} [properties] Properties to set
                         * @returns {google.api.Distribution.BucketOptions.Exponential} Exponential instance
                         */
                        Exponential.create = function create(properties) {
                            return new Exponential(properties);
                        };
    
                        /**
                         * Encodes the specified Exponential message. Does not implicitly {@link google.api.Distribution.BucketOptions.Exponential.verify|verify} messages.
                         * @function encode
                         * @memberof google.api.Distribution.BucketOptions.Exponential
                         * @static
                         * @param {google.api.Distribution.BucketOptions.IExponential} message Exponential message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Exponential.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.numFiniteBuckets != null && Object.hasOwnProperty.call(message, "numFiniteBuckets"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.numFiniteBuckets);
                            if (message.growthFactor != null && Object.hasOwnProperty.call(message, "growthFactor"))
                                writer.uint32(/* id 2, wireType 1 =*/17).double(message.growthFactor);
                            if (message.scale != null && Object.hasOwnProperty.call(message, "scale"))
                                writer.uint32(/* id 3, wireType 1 =*/25).double(message.scale);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Exponential message, length delimited. Does not implicitly {@link google.api.Distribution.BucketOptions.Exponential.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.api.Distribution.BucketOptions.Exponential
                         * @static
                         * @param {google.api.Distribution.BucketOptions.IExponential} message Exponential message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Exponential.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Exponential message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.api.Distribution.BucketOptions.Exponential
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.api.Distribution.BucketOptions.Exponential} Exponential
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Exponential.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Distribution.BucketOptions.Exponential();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.numFiniteBuckets = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.growthFactor = reader.double();
                                        break;
                                    }
                                case 3: {
                                        message.scale = reader.double();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Exponential message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.api.Distribution.BucketOptions.Exponential
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.api.Distribution.BucketOptions.Exponential} Exponential
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Exponential.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Exponential message.
                         * @function verify
                         * @memberof google.api.Distribution.BucketOptions.Exponential
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Exponential.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.numFiniteBuckets != null && message.hasOwnProperty("numFiniteBuckets"))
                                if (!$util.isInteger(message.numFiniteBuckets))
                                    return "numFiniteBuckets: integer expected";
                            if (message.growthFactor != null && message.hasOwnProperty("growthFactor"))
                                if (typeof message.growthFactor !== "number")
                                    return "growthFactor: number expected";
                            if (message.scale != null && message.hasOwnProperty("scale"))
                                if (typeof message.scale !== "number")
                                    return "scale: number expected";
                            return null;
                        };
    
                        /**
                         * Creates an Exponential message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.api.Distribution.BucketOptions.Exponential
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.api.Distribution.BucketOptions.Exponential} Exponential
                         */
                        Exponential.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.api.Distribution.BucketOptions.Exponential)
                                return object;
                            var message = new $root.google.api.Distribution.BucketOptions.Exponential();
                            if (object.numFiniteBuckets != null)
                                message.numFiniteBuckets = object.numFiniteBuckets | 0;
                            if (object.growthFactor != null)
                                message.growthFactor = Number(object.growthFactor);
                            if (object.scale != null)
                                message.scale = Number(object.scale);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Exponential message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.api.Distribution.BucketOptions.Exponential
                         * @static
                         * @param {google.api.Distribution.BucketOptions.Exponential} message Exponential
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Exponential.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.numFiniteBuckets = 0;
                                object.growthFactor = 0;
                                object.scale = 0;
                            }
                            if (message.numFiniteBuckets != null && message.hasOwnProperty("numFiniteBuckets"))
                                object.numFiniteBuckets = message.numFiniteBuckets;
                            if (message.growthFactor != null && message.hasOwnProperty("growthFactor"))
                                object.growthFactor = options.json && !isFinite(message.growthFactor) ? String(message.growthFactor) : message.growthFactor;
                            if (message.scale != null && message.hasOwnProperty("scale"))
                                object.scale = options.json && !isFinite(message.scale) ? String(message.scale) : message.scale;
                            return object;
                        };
    
                        /**
                         * Converts this Exponential to JSON.
                         * @function toJSON
                         * @memberof google.api.Distribution.BucketOptions.Exponential
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Exponential.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Exponential
                         * @function getTypeUrl
                         * @memberof google.api.Distribution.BucketOptions.Exponential
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Exponential.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.api.Distribution.BucketOptions.Exponential";
                        };
    
                        return Exponential;
                    })();
    
                    BucketOptions.Explicit = (function() {
    
                        /**
                         * Properties of an Explicit.
                         * @memberof google.api.Distribution.BucketOptions
                         * @interface IExplicit
                         * @property {Array.<number>|null} [bounds] Explicit bounds
                         */
    
                        /**
                         * Constructs a new Explicit.
                         * @memberof google.api.Distribution.BucketOptions
                         * @classdesc Represents an Explicit.
                         * @implements IExplicit
                         * @constructor
                         * @param {google.api.Distribution.BucketOptions.IExplicit=} [properties] Properties to set
                         */
                        function Explicit(properties) {
                            this.bounds = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Explicit bounds.
                         * @member {Array.<number>} bounds
                         * @memberof google.api.Distribution.BucketOptions.Explicit
                         * @instance
                         */
                        Explicit.prototype.bounds = $util.emptyArray;
    
                        /**
                         * Creates a new Explicit instance using the specified properties.
                         * @function create
                         * @memberof google.api.Distribution.BucketOptions.Explicit
                         * @static
                         * @param {google.api.Distribution.BucketOptions.IExplicit=} [properties] Properties to set
                         * @returns {google.api.Distribution.BucketOptions.Explicit} Explicit instance
                         */
                        Explicit.create = function create(properties) {
                            return new Explicit(properties);
                        };
    
                        /**
                         * Encodes the specified Explicit message. Does not implicitly {@link google.api.Distribution.BucketOptions.Explicit.verify|verify} messages.
                         * @function encode
                         * @memberof google.api.Distribution.BucketOptions.Explicit
                         * @static
                         * @param {google.api.Distribution.BucketOptions.IExplicit} message Explicit message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Explicit.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.bounds != null && message.bounds.length) {
                                writer.uint32(/* id 1, wireType 2 =*/10).fork();
                                for (var i = 0; i < message.bounds.length; ++i)
                                    writer.double(message.bounds[i]);
                                writer.ldelim();
                            }
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Explicit message, length delimited. Does not implicitly {@link google.api.Distribution.BucketOptions.Explicit.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.api.Distribution.BucketOptions.Explicit
                         * @static
                         * @param {google.api.Distribution.BucketOptions.IExplicit} message Explicit message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Explicit.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Explicit message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.api.Distribution.BucketOptions.Explicit
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.api.Distribution.BucketOptions.Explicit} Explicit
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Explicit.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Distribution.BucketOptions.Explicit();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.bounds && message.bounds.length))
                                            message.bounds = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.bounds.push(reader.double());
                                        } else
                                            message.bounds.push(reader.double());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Explicit message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.api.Distribution.BucketOptions.Explicit
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.api.Distribution.BucketOptions.Explicit} Explicit
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Explicit.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Explicit message.
                         * @function verify
                         * @memberof google.api.Distribution.BucketOptions.Explicit
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Explicit.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.bounds != null && message.hasOwnProperty("bounds")) {
                                if (!Array.isArray(message.bounds))
                                    return "bounds: array expected";
                                for (var i = 0; i < message.bounds.length; ++i)
                                    if (typeof message.bounds[i] !== "number")
                                        return "bounds: number[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates an Explicit message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.api.Distribution.BucketOptions.Explicit
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.api.Distribution.BucketOptions.Explicit} Explicit
                         */
                        Explicit.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.api.Distribution.BucketOptions.Explicit)
                                return object;
                            var message = new $root.google.api.Distribution.BucketOptions.Explicit();
                            if (object.bounds) {
                                if (!Array.isArray(object.bounds))
                                    throw TypeError(".google.api.Distribution.BucketOptions.Explicit.bounds: array expected");
                                message.bounds = [];
                                for (var i = 0; i < object.bounds.length; ++i)
                                    message.bounds[i] = Number(object.bounds[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Explicit message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.api.Distribution.BucketOptions.Explicit
                         * @static
                         * @param {google.api.Distribution.BucketOptions.Explicit} message Explicit
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Explicit.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.bounds = [];
                            if (message.bounds && message.bounds.length) {
                                object.bounds = [];
                                for (var j = 0; j < message.bounds.length; ++j)
                                    object.bounds[j] = options.json && !isFinite(message.bounds[j]) ? String(message.bounds[j]) : message.bounds[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Explicit to JSON.
                         * @function toJSON
                         * @memberof google.api.Distribution.BucketOptions.Explicit
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Explicit.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Explicit
                         * @function getTypeUrl
                         * @memberof google.api.Distribution.BucketOptions.Explicit
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Explicit.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.api.Distribution.BucketOptions.Explicit";
                        };
    
                        return Explicit;
                    })();
    
                    return BucketOptions;
                })();
    
                Distribution.Exemplar = (function() {
    
                    /**
                     * Properties of an Exemplar.
                     * @memberof google.api.Distribution
                     * @interface IExemplar
                     * @property {number|null} [value] Exemplar value
                     * @property {google.protobuf.ITimestamp|null} [timestamp] Exemplar timestamp
                     * @property {Array.<google.protobuf.IAny>|null} [attachments] Exemplar attachments
                     */
    
                    /**
                     * Constructs a new Exemplar.
                     * @memberof google.api.Distribution
                     * @classdesc Represents an Exemplar.
                     * @implements IExemplar
                     * @constructor
                     * @param {google.api.Distribution.IExemplar=} [properties] Properties to set
                     */
                    function Exemplar(properties) {
                        this.attachments = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Exemplar value.
                     * @member {number} value
                     * @memberof google.api.Distribution.Exemplar
                     * @instance
                     */
                    Exemplar.prototype.value = 0;
    
                    /**
                     * Exemplar timestamp.
                     * @member {google.protobuf.ITimestamp|null|undefined} timestamp
                     * @memberof google.api.Distribution.Exemplar
                     * @instance
                     */
                    Exemplar.prototype.timestamp = null;
    
                    /**
                     * Exemplar attachments.
                     * @member {Array.<google.protobuf.IAny>} attachments
                     * @memberof google.api.Distribution.Exemplar
                     * @instance
                     */
                    Exemplar.prototype.attachments = $util.emptyArray;
    
                    /**
                     * Creates a new Exemplar instance using the specified properties.
                     * @function create
                     * @memberof google.api.Distribution.Exemplar
                     * @static
                     * @param {google.api.Distribution.IExemplar=} [properties] Properties to set
                     * @returns {google.api.Distribution.Exemplar} Exemplar instance
                     */
                    Exemplar.create = function create(properties) {
                        return new Exemplar(properties);
                    };
    
                    /**
                     * Encodes the specified Exemplar message. Does not implicitly {@link google.api.Distribution.Exemplar.verify|verify} messages.
                     * @function encode
                     * @memberof google.api.Distribution.Exemplar
                     * @static
                     * @param {google.api.Distribution.IExemplar} message Exemplar message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Exemplar.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                            writer.uint32(/* id 1, wireType 1 =*/9).double(message.value);
                        if (message.timestamp != null && Object.hasOwnProperty.call(message, "timestamp"))
                            $root.google.protobuf.Timestamp.encode(message.timestamp, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.attachments != null && message.attachments.length)
                            for (var i = 0; i < message.attachments.length; ++i)
                                $root.google.protobuf.Any.encode(message.attachments[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Exemplar message, length delimited. Does not implicitly {@link google.api.Distribution.Exemplar.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.api.Distribution.Exemplar
                     * @static
                     * @param {google.api.Distribution.IExemplar} message Exemplar message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Exemplar.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an Exemplar message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.api.Distribution.Exemplar
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.api.Distribution.Exemplar} Exemplar
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Exemplar.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Distribution.Exemplar();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.value = reader.double();
                                    break;
                                }
                            case 2: {
                                    message.timestamp = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            case 3: {
                                    if (!(message.attachments && message.attachments.length))
                                        message.attachments = [];
                                    message.attachments.push($root.google.protobuf.Any.decode(reader, reader.uint32()));
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an Exemplar message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.api.Distribution.Exemplar
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.api.Distribution.Exemplar} Exemplar
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Exemplar.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an Exemplar message.
                     * @function verify
                     * @memberof google.api.Distribution.Exemplar
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Exemplar.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.value != null && message.hasOwnProperty("value"))
                            if (typeof message.value !== "number")
                                return "value: number expected";
                        if (message.timestamp != null && message.hasOwnProperty("timestamp")) {
                            var error = $root.google.protobuf.Timestamp.verify(message.timestamp);
                            if (error)
                                return "timestamp." + error;
                        }
                        if (message.attachments != null && message.hasOwnProperty("attachments")) {
                            if (!Array.isArray(message.attachments))
                                return "attachments: array expected";
                            for (var i = 0; i < message.attachments.length; ++i) {
                                var error = $root.google.protobuf.Any.verify(message.attachments[i]);
                                if (error)
                                    return "attachments." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates an Exemplar message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.api.Distribution.Exemplar
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.api.Distribution.Exemplar} Exemplar
                     */
                    Exemplar.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.api.Distribution.Exemplar)
                            return object;
                        var message = new $root.google.api.Distribution.Exemplar();
                        if (object.value != null)
                            message.value = Number(object.value);
                        if (object.timestamp != null) {
                            if (typeof object.timestamp !== "object")
                                throw TypeError(".google.api.Distribution.Exemplar.timestamp: object expected");
                            message.timestamp = $root.google.protobuf.Timestamp.fromObject(object.timestamp);
                        }
                        if (object.attachments) {
                            if (!Array.isArray(object.attachments))
                                throw TypeError(".google.api.Distribution.Exemplar.attachments: array expected");
                            message.attachments = [];
                            for (var i = 0; i < object.attachments.length; ++i) {
                                if (typeof object.attachments[i] !== "object")
                                    throw TypeError(".google.api.Distribution.Exemplar.attachments: object expected");
                                message.attachments[i] = $root.google.protobuf.Any.fromObject(object.attachments[i]);
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an Exemplar message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.api.Distribution.Exemplar
                     * @static
                     * @param {google.api.Distribution.Exemplar} message Exemplar
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Exemplar.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.attachments = [];
                        if (options.defaults) {
                            object.value = 0;
                            object.timestamp = null;
                        }
                        if (message.value != null && message.hasOwnProperty("value"))
                            object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;
                        if (message.timestamp != null && message.hasOwnProperty("timestamp"))
                            object.timestamp = $root.google.protobuf.Timestamp.toObject(message.timestamp, options);
                        if (message.attachments && message.attachments.length) {
                            object.attachments = [];
                            for (var j = 0; j < message.attachments.length; ++j)
                                object.attachments[j] = $root.google.protobuf.Any.toObject(message.attachments[j], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Exemplar to JSON.
                     * @function toJSON
                     * @memberof google.api.Distribution.Exemplar
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Exemplar.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Exemplar
                     * @function getTypeUrl
                     * @memberof google.api.Distribution.Exemplar
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Exemplar.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.api.Distribution.Exemplar";
                    };
    
                    return Exemplar;
                })();
    
                return Distribution;
            })();
    
            api.Http = (function() {
    
                /**
                 * Properties of a Http.
                 * @memberof google.api
                 * @interface IHttp
                 * @property {Array.<google.api.IHttpRule>|null} [rules] Http rules
                 * @property {boolean|null} [fullyDecodeReservedExpansion] Http fullyDecodeReservedExpansion
                 */
    
                /**
                 * Constructs a new Http.
                 * @memberof google.api
                 * @classdesc Represents a Http.
                 * @implements IHttp
                 * @constructor
                 * @param {google.api.IHttp=} [properties] Properties to set
                 */
                function Http(properties) {
                    this.rules = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Http rules.
                 * @member {Array.<google.api.IHttpRule>} rules
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.rules = $util.emptyArray;
    
                /**
                 * Http fullyDecodeReservedExpansion.
                 * @member {boolean} fullyDecodeReservedExpansion
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.fullyDecodeReservedExpansion = false;
    
                /**
                 * Creates a new Http instance using the specified properties.
                 * @function create
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp=} [properties] Properties to set
                 * @returns {google.api.Http} Http instance
                 */
                Http.create = function create(properties) {
                    return new Http(properties);
                };
    
                /**
                 * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.rules != null && message.rules.length)
                        for (var i = 0; i < message.rules.length; ++i)
                            $root.google.api.HttpRule.encode(message.rules[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.fullyDecodeReservedExpansion != null && Object.hasOwnProperty.call(message, "fullyDecodeReservedExpansion"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.fullyDecodeReservedExpansion);
                    return writer;
                };
    
                /**
                 * Encodes the specified Http message, length delimited. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Http();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.rules && message.rules.length))
                                    message.rules = [];
                                message.rules.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                message.fullyDecodeReservedExpansion = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Http message.
                 * @function verify
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Http.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.rules != null && message.hasOwnProperty("rules")) {
                        if (!Array.isArray(message.rules))
                            return "rules: array expected";
                        for (var i = 0; i < message.rules.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.rules[i]);
                            if (error)
                                return "rules." + error;
                        }
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        if (typeof message.fullyDecodeReservedExpansion !== "boolean")
                            return "fullyDecodeReservedExpansion: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a Http message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Http} Http
                 */
                Http.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Http)
                        return object;
                    var message = new $root.google.api.Http();
                    if (object.rules) {
                        if (!Array.isArray(object.rules))
                            throw TypeError(".google.api.Http.rules: array expected");
                        message.rules = [];
                        for (var i = 0; i < object.rules.length; ++i) {
                            if (typeof object.rules[i] !== "object")
                                throw TypeError(".google.api.Http.rules: object expected");
                            message.rules[i] = $root.google.api.HttpRule.fromObject(object.rules[i]);
                        }
                    }
                    if (object.fullyDecodeReservedExpansion != null)
                        message.fullyDecodeReservedExpansion = Boolean(object.fullyDecodeReservedExpansion);
                    return message;
                };
    
                /**
                 * Creates a plain object from a Http message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.Http} message Http
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Http.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.rules = [];
                    if (options.defaults)
                        object.fullyDecodeReservedExpansion = false;
                    if (message.rules && message.rules.length) {
                        object.rules = [];
                        for (var j = 0; j < message.rules.length; ++j)
                            object.rules[j] = $root.google.api.HttpRule.toObject(message.rules[j], options);
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        object.fullyDecodeReservedExpansion = message.fullyDecodeReservedExpansion;
                    return object;
                };
    
                /**
                 * Converts this Http to JSON.
                 * @function toJSON
                 * @memberof google.api.Http
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Http.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Http
                 * @function getTypeUrl
                 * @memberof google.api.Http
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Http.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.Http";
                };
    
                return Http;
            })();
    
            api.HttpRule = (function() {
    
                /**
                 * Properties of a HttpRule.
                 * @memberof google.api
                 * @interface IHttpRule
                 * @property {string|null} [selector] HttpRule selector
                 * @property {string|null} [get] HttpRule get
                 * @property {string|null} [put] HttpRule put
                 * @property {string|null} [post] HttpRule post
                 * @property {string|null} ["delete"] HttpRule delete
                 * @property {string|null} [patch] HttpRule patch
                 * @property {google.api.ICustomHttpPattern|null} [custom] HttpRule custom
                 * @property {string|null} [body] HttpRule body
                 * @property {string|null} [responseBody] HttpRule responseBody
                 * @property {Array.<google.api.IHttpRule>|null} [additionalBindings] HttpRule additionalBindings
                 */
    
                /**
                 * Constructs a new HttpRule.
                 * @memberof google.api
                 * @classdesc Represents a HttpRule.
                 * @implements IHttpRule
                 * @constructor
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 */
                function HttpRule(properties) {
                    this.additionalBindings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * HttpRule selector.
                 * @member {string} selector
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.selector = "";
    
                /**
                 * HttpRule get.
                 * @member {string|null|undefined} get
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.get = null;
    
                /**
                 * HttpRule put.
                 * @member {string|null|undefined} put
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.put = null;
    
                /**
                 * HttpRule post.
                 * @member {string|null|undefined} post
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.post = null;
    
                /**
                 * HttpRule delete.
                 * @member {string|null|undefined} delete
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype["delete"] = null;
    
                /**
                 * HttpRule patch.
                 * @member {string|null|undefined} patch
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.patch = null;
    
                /**
                 * HttpRule custom.
                 * @member {google.api.ICustomHttpPattern|null|undefined} custom
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.custom = null;
    
                /**
                 * HttpRule body.
                 * @member {string} body
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.body = "";
    
                /**
                 * HttpRule responseBody.
                 * @member {string} responseBody
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.responseBody = "";
    
                /**
                 * HttpRule additionalBindings.
                 * @member {Array.<google.api.IHttpRule>} additionalBindings
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.additionalBindings = $util.emptyArray;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * HttpRule pattern.
                 * @member {"get"|"put"|"post"|"delete"|"patch"|"custom"|undefined} pattern
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                Object.defineProperty(HttpRule.prototype, "pattern", {
                    get: $util.oneOfGetter($oneOfFields = ["get", "put", "post", "delete", "patch", "custom"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new HttpRule instance using the specified properties.
                 * @function create
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 * @returns {google.api.HttpRule} HttpRule instance
                 */
                HttpRule.create = function create(properties) {
                    return new HttpRule(properties);
                };
    
                /**
                 * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.get != null && Object.hasOwnProperty.call(message, "get"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.get);
                    if (message.put != null && Object.hasOwnProperty.call(message, "put"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.put);
                    if (message.post != null && Object.hasOwnProperty.call(message, "post"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.post);
                    if (message["delete"] != null && Object.hasOwnProperty.call(message, "delete"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message["delete"]);
                    if (message.patch != null && Object.hasOwnProperty.call(message, "patch"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.patch);
                    if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.body);
                    if (message.custom != null && Object.hasOwnProperty.call(message, "custom"))
                        $root.google.api.CustomHttpPattern.encode(message.custom, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.additionalBindings != null && message.additionalBindings.length)
                        for (var i = 0; i < message.additionalBindings.length; ++i)
                            $root.google.api.HttpRule.encode(message.additionalBindings[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                    if (message.responseBody != null && Object.hasOwnProperty.call(message, "responseBody"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.responseBody);
                    return writer;
                };
    
                /**
                 * Encodes the specified HttpRule message, length delimited. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.HttpRule();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.selector = reader.string();
                                break;
                            }
                        case 2: {
                                message.get = reader.string();
                                break;
                            }
                        case 3: {
                                message.put = reader.string();
                                break;
                            }
                        case 4: {
                                message.post = reader.string();
                                break;
                            }
                        case 5: {
                                message["delete"] = reader.string();
                                break;
                            }
                        case 6: {
                                message.patch = reader.string();
                                break;
                            }
                        case 8: {
                                message.custom = $root.google.api.CustomHttpPattern.decode(reader, reader.uint32());
                                break;
                            }
                        case 7: {
                                message.body = reader.string();
                                break;
                            }
                        case 12: {
                                message.responseBody = reader.string();
                                break;
                            }
                        case 11: {
                                if (!(message.additionalBindings && message.additionalBindings.length))
                                    message.additionalBindings = [];
                                message.additionalBindings.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a HttpRule message.
                 * @function verify
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                HttpRule.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.get != null && message.hasOwnProperty("get")) {
                        properties.pattern = 1;
                        if (!$util.isString(message.get))
                            return "get: string expected";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.put))
                            return "put: string expected";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.post))
                            return "post: string expected";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message["delete"]))
                            return "delete: string expected";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.patch))
                            return "patch: string expected";
                    }
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        {
                            var error = $root.google.api.CustomHttpPattern.verify(message.custom);
                            if (error)
                                return "custom." + error;
                        }
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        if (!$util.isString(message.body))
                            return "body: string expected";
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        if (!$util.isString(message.responseBody))
                            return "responseBody: string expected";
                    if (message.additionalBindings != null && message.hasOwnProperty("additionalBindings")) {
                        if (!Array.isArray(message.additionalBindings))
                            return "additionalBindings: array expected";
                        for (var i = 0; i < message.additionalBindings.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.additionalBindings[i]);
                            if (error)
                                return "additionalBindings." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.HttpRule} HttpRule
                 */
                HttpRule.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.HttpRule)
                        return object;
                    var message = new $root.google.api.HttpRule();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.get != null)
                        message.get = String(object.get);
                    if (object.put != null)
                        message.put = String(object.put);
                    if (object.post != null)
                        message.post = String(object.post);
                    if (object["delete"] != null)
                        message["delete"] = String(object["delete"]);
                    if (object.patch != null)
                        message.patch = String(object.patch);
                    if (object.custom != null) {
                        if (typeof object.custom !== "object")
                            throw TypeError(".google.api.HttpRule.custom: object expected");
                        message.custom = $root.google.api.CustomHttpPattern.fromObject(object.custom);
                    }
                    if (object.body != null)
                        message.body = String(object.body);
                    if (object.responseBody != null)
                        message.responseBody = String(object.responseBody);
                    if (object.additionalBindings) {
                        if (!Array.isArray(object.additionalBindings))
                            throw TypeError(".google.api.HttpRule.additionalBindings: array expected");
                        message.additionalBindings = [];
                        for (var i = 0; i < object.additionalBindings.length; ++i) {
                            if (typeof object.additionalBindings[i] !== "object")
                                throw TypeError(".google.api.HttpRule.additionalBindings: object expected");
                            message.additionalBindings[i] = $root.google.api.HttpRule.fromObject(object.additionalBindings[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a HttpRule message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.HttpRule} message HttpRule
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                HttpRule.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.additionalBindings = [];
                    if (options.defaults) {
                        object.selector = "";
                        object.body = "";
                        object.responseBody = "";
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.get != null && message.hasOwnProperty("get")) {
                        object.get = message.get;
                        if (options.oneofs)
                            object.pattern = "get";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        object.put = message.put;
                        if (options.oneofs)
                            object.pattern = "put";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        object.post = message.post;
                        if (options.oneofs)
                            object.pattern = "post";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        object["delete"] = message["delete"];
                        if (options.oneofs)
                            object.pattern = "delete";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        object.patch = message.patch;
                        if (options.oneofs)
                            object.pattern = "patch";
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        object.body = message.body;
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        object.custom = $root.google.api.CustomHttpPattern.toObject(message.custom, options);
                        if (options.oneofs)
                            object.pattern = "custom";
                    }
                    if (message.additionalBindings && message.additionalBindings.length) {
                        object.additionalBindings = [];
                        for (var j = 0; j < message.additionalBindings.length; ++j)
                            object.additionalBindings[j] = $root.google.api.HttpRule.toObject(message.additionalBindings[j], options);
                    }
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        object.responseBody = message.responseBody;
                    return object;
                };
    
                /**
                 * Converts this HttpRule to JSON.
                 * @function toJSON
                 * @memberof google.api.HttpRule
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                HttpRule.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for HttpRule
                 * @function getTypeUrl
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                HttpRule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.HttpRule";
                };
    
                return HttpRule;
            })();
    
            api.CustomHttpPattern = (function() {
    
                /**
                 * Properties of a CustomHttpPattern.
                 * @memberof google.api
                 * @interface ICustomHttpPattern
                 * @property {string|null} [kind] CustomHttpPattern kind
                 * @property {string|null} [path] CustomHttpPattern path
                 */
    
                /**
                 * Constructs a new CustomHttpPattern.
                 * @memberof google.api
                 * @classdesc Represents a CustomHttpPattern.
                 * @implements ICustomHttpPattern
                 * @constructor
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 */
                function CustomHttpPattern(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CustomHttpPattern kind.
                 * @member {string} kind
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.kind = "";
    
                /**
                 * CustomHttpPattern path.
                 * @member {string} path
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.path = "";
    
                /**
                 * Creates a new CustomHttpPattern instance using the specified properties.
                 * @function create
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern instance
                 */
                CustomHttpPattern.create = function create(properties) {
                    return new CustomHttpPattern(properties);
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                    if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);
                    return writer;
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message, length delimited. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CustomHttpPattern();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.kind = reader.string();
                                break;
                            }
                        case 2: {
                                message.path = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CustomHttpPattern message.
                 * @function verify
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CustomHttpPattern.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        if (!$util.isString(message.kind))
                            return "kind: string expected";
                    if (message.path != null && message.hasOwnProperty("path"))
                        if (!$util.isString(message.path))
                            return "path: string expected";
                    return null;
                };
    
                /**
                 * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 */
                CustomHttpPattern.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CustomHttpPattern)
                        return object;
                    var message = new $root.google.api.CustomHttpPattern();
                    if (object.kind != null)
                        message.kind = String(object.kind);
                    if (object.path != null)
                        message.path = String(object.path);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.CustomHttpPattern} message CustomHttpPattern
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CustomHttpPattern.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.kind = "";
                        object.path = "";
                    }
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        object.kind = message.kind;
                    if (message.path != null && message.hasOwnProperty("path"))
                        object.path = message.path;
                    return object;
                };
    
                /**
                 * Converts this CustomHttpPattern to JSON.
                 * @function toJSON
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CustomHttpPattern.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CustomHttpPattern
                 * @function getTypeUrl
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CustomHttpPattern.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CustomHttpPattern";
                };
    
                return CustomHttpPattern;
            })();
    
            api.MonitoredResourceDescriptor = (function() {
    
                /**
                 * Properties of a MonitoredResourceDescriptor.
                 * @memberof google.api
                 * @interface IMonitoredResourceDescriptor
                 * @property {string|null} [name] MonitoredResourceDescriptor name
                 * @property {string|null} [type] MonitoredResourceDescriptor type
                 * @property {string|null} [displayName] MonitoredResourceDescriptor displayName
                 * @property {string|null} [description] MonitoredResourceDescriptor description
                 * @property {Array.<google.api.ILabelDescriptor>|null} [labels] MonitoredResourceDescriptor labels
                 * @property {google.api.LaunchStage|null} [launchStage] MonitoredResourceDescriptor launchStage
                 */
    
                /**
                 * Constructs a new MonitoredResourceDescriptor.
                 * @memberof google.api
                 * @classdesc Represents a MonitoredResourceDescriptor.
                 * @implements IMonitoredResourceDescriptor
                 * @constructor
                 * @param {google.api.IMonitoredResourceDescriptor=} [properties] Properties to set
                 */
                function MonitoredResourceDescriptor(properties) {
                    this.labels = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MonitoredResourceDescriptor name.
                 * @member {string} name
                 * @memberof google.api.MonitoredResourceDescriptor
                 * @instance
                 */
                MonitoredResourceDescriptor.prototype.name = "";
    
                /**
                 * MonitoredResourceDescriptor type.
                 * @member {string} type
                 * @memberof google.api.MonitoredResourceDescriptor
                 * @instance
                 */
                MonitoredResourceDescriptor.prototype.type = "";
    
                /**
                 * MonitoredResourceDescriptor displayName.
                 * @member {string} displayName
                 * @memberof google.api.MonitoredResourceDescriptor
                 * @instance
                 */
                MonitoredResourceDescriptor.prototype.displayName = "";
    
                /**
                 * MonitoredResourceDescriptor description.
                 * @member {string} description
                 * @memberof google.api.MonitoredResourceDescriptor
                 * @instance
                 */
                MonitoredResourceDescriptor.prototype.description = "";
    
                /**
                 * MonitoredResourceDescriptor labels.
                 * @member {Array.<google.api.ILabelDescriptor>} labels
                 * @memberof google.api.MonitoredResourceDescriptor
                 * @instance
                 */
                MonitoredResourceDescriptor.prototype.labels = $util.emptyArray;
    
                /**
                 * MonitoredResourceDescriptor launchStage.
                 * @member {google.api.LaunchStage} launchStage
                 * @memberof google.api.MonitoredResourceDescriptor
                 * @instance
                 */
                MonitoredResourceDescriptor.prototype.launchStage = 0;
    
                /**
                 * Creates a new MonitoredResourceDescriptor instance using the specified properties.
                 * @function create
                 * @memberof google.api.MonitoredResourceDescriptor
                 * @static
                 * @param {google.api.IMonitoredResourceDescriptor=} [properties] Properties to set
                 * @returns {google.api.MonitoredResourceDescriptor} MonitoredResourceDescriptor instance
                 */
                MonitoredResourceDescriptor.create = function create(properties) {
                    return new MonitoredResourceDescriptor(properties);
                };
    
                /**
                 * Encodes the specified MonitoredResourceDescriptor message. Does not implicitly {@link google.api.MonitoredResourceDescriptor.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.MonitoredResourceDescriptor
                 * @static
                 * @param {google.api.IMonitoredResourceDescriptor} message MonitoredResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MonitoredResourceDescriptor.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.displayName);
                    if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.description);
                    if (message.labels != null && message.labels.length)
                        for (var i = 0; i < message.labels.length; ++i)
                            $root.google.api.LabelDescriptor.encode(message.labels[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.name);
                    if (message.launchStage != null && Object.hasOwnProperty.call(message, "launchStage"))
                        writer.uint32(/* id 7, wireType 0 =*/56).int32(message.launchStage);
                    return writer;
                };
    
                /**
                 * Encodes the specified MonitoredResourceDescriptor message, length delimited. Does not implicitly {@link google.api.MonitoredResourceDescriptor.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.MonitoredResourceDescriptor
                 * @static
                 * @param {google.api.IMonitoredResourceDescriptor} message MonitoredResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MonitoredResourceDescriptor.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MonitoredResourceDescriptor message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.MonitoredResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.MonitoredResourceDescriptor} MonitoredResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MonitoredResourceDescriptor.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.MonitoredResourceDescriptor();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 5: {
                                message.name = reader.string();
                                break;
                            }
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                message.displayName = reader.string();
                                break;
                            }
                        case 3: {
                                message.description = reader.string();
                                break;
                            }
                        case 4: {
                                if (!(message.labels && message.labels.length))
                                    message.labels = [];
                                message.labels.push($root.google.api.LabelDescriptor.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                message.launchStage = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MonitoredResourceDescriptor message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.MonitoredResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.MonitoredResourceDescriptor} MonitoredResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MonitoredResourceDescriptor.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MonitoredResourceDescriptor message.
                 * @function verify
                 * @memberof google.api.MonitoredResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MonitoredResourceDescriptor.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.displayName != null && message.hasOwnProperty("displayName"))
                        if (!$util.isString(message.displayName))
                            return "displayName: string expected";
                    if (message.description != null && message.hasOwnProperty("description"))
                        if (!$util.isString(message.description))
                            return "description: string expected";
                    if (message.labels != null && message.hasOwnProperty("labels")) {
                        if (!Array.isArray(message.labels))
                            return "labels: array expected";
                        for (var i = 0; i < message.labels.length; ++i) {
                            var error = $root.google.api.LabelDescriptor.verify(message.labels[i]);
                            if (error)
                                return "labels." + error;
                        }
                    }
                    if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                        switch (message.launchStage) {
                        default:
                            return "launchStage: enum value expected";
                        case 0:
                        case 6:
                        case 7:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                            break;
                        }
                    return null;
                };
    
                /**
                 * Creates a MonitoredResourceDescriptor message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.MonitoredResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.MonitoredResourceDescriptor} MonitoredResourceDescriptor
                 */
                MonitoredResourceDescriptor.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.MonitoredResourceDescriptor)
                        return object;
                    var message = new $root.google.api.MonitoredResourceDescriptor();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.displayName != null)
                        message.displayName = String(object.displayName);
                    if (object.description != null)
                        message.description = String(object.description);
                    if (object.labels) {
                        if (!Array.isArray(object.labels))
                            throw TypeError(".google.api.MonitoredResourceDescriptor.labels: array expected");
                        message.labels = [];
                        for (var i = 0; i < object.labels.length; ++i) {
                            if (typeof object.labels[i] !== "object")
                                throw TypeError(".google.api.MonitoredResourceDescriptor.labels: object expected");
                            message.labels[i] = $root.google.api.LabelDescriptor.fromObject(object.labels[i]);
                        }
                    }
                    switch (object.launchStage) {
                    default:
                        if (typeof object.launchStage === "number") {
                            message.launchStage = object.launchStage;
                            break;
                        }
                        break;
                    case "LAUNCH_STAGE_UNSPECIFIED":
                    case 0:
                        message.launchStage = 0;
                        break;
                    case "UNIMPLEMENTED":
                    case 6:
                        message.launchStage = 6;
                        break;
                    case "PRELAUNCH":
                    case 7:
                        message.launchStage = 7;
                        break;
                    case "EARLY_ACCESS":
                    case 1:
                        message.launchStage = 1;
                        break;
                    case "ALPHA":
                    case 2:
                        message.launchStage = 2;
                        break;
                    case "BETA":
                    case 3:
                        message.launchStage = 3;
                        break;
                    case "GA":
                    case 4:
                        message.launchStage = 4;
                        break;
                    case "DEPRECATED":
                    case 5:
                        message.launchStage = 5;
                        break;
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MonitoredResourceDescriptor message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.MonitoredResourceDescriptor
                 * @static
                 * @param {google.api.MonitoredResourceDescriptor} message MonitoredResourceDescriptor
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MonitoredResourceDescriptor.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.labels = [];
                    if (options.defaults) {
                        object.type = "";
                        object.displayName = "";
                        object.description = "";
                        object.name = "";
                        object.launchStage = options.enums === String ? "LAUNCH_STAGE_UNSPECIFIED" : 0;
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.displayName != null && message.hasOwnProperty("displayName"))
                        object.displayName = message.displayName;
                    if (message.description != null && message.hasOwnProperty("description"))
                        object.description = message.description;
                    if (message.labels && message.labels.length) {
                        object.labels = [];
                        for (var j = 0; j < message.labels.length; ++j)
                            object.labels[j] = $root.google.api.LabelDescriptor.toObject(message.labels[j], options);
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                        object.launchStage = options.enums === String ? $root.google.api.LaunchStage[message.launchStage] === undefined ? message.launchStage : $root.google.api.LaunchStage[message.launchStage] : message.launchStage;
                    return object;
                };
    
                /**
                 * Converts this MonitoredResourceDescriptor to JSON.
                 * @function toJSON
                 * @memberof google.api.MonitoredResourceDescriptor
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MonitoredResourceDescriptor.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MonitoredResourceDescriptor
                 * @function getTypeUrl
                 * @memberof google.api.MonitoredResourceDescriptor
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MonitoredResourceDescriptor.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.MonitoredResourceDescriptor";
                };
    
                return MonitoredResourceDescriptor;
            })();
    
            api.MonitoredResource = (function() {
    
                /**
                 * Properties of a MonitoredResource.
                 * @memberof google.api
                 * @interface IMonitoredResource
                 * @property {string|null} [type] MonitoredResource type
                 * @property {Object.<string,string>|null} [labels] MonitoredResource labels
                 */
    
                /**
                 * Constructs a new MonitoredResource.
                 * @memberof google.api
                 * @classdesc Represents a MonitoredResource.
                 * @implements IMonitoredResource
                 * @constructor
                 * @param {google.api.IMonitoredResource=} [properties] Properties to set
                 */
                function MonitoredResource(properties) {
                    this.labels = {};
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MonitoredResource type.
                 * @member {string} type
                 * @memberof google.api.MonitoredResource
                 * @instance
                 */
                MonitoredResource.prototype.type = "";
    
                /**
                 * MonitoredResource labels.
                 * @member {Object.<string,string>} labels
                 * @memberof google.api.MonitoredResource
                 * @instance
                 */
                MonitoredResource.prototype.labels = $util.emptyObject;
    
                /**
                 * Creates a new MonitoredResource instance using the specified properties.
                 * @function create
                 * @memberof google.api.MonitoredResource
                 * @static
                 * @param {google.api.IMonitoredResource=} [properties] Properties to set
                 * @returns {google.api.MonitoredResource} MonitoredResource instance
                 */
                MonitoredResource.create = function create(properties) {
                    return new MonitoredResource(properties);
                };
    
                /**
                 * Encodes the specified MonitoredResource message. Does not implicitly {@link google.api.MonitoredResource.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.MonitoredResource
                 * @static
                 * @param {google.api.IMonitoredResource} message MonitoredResource message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MonitoredResource.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                        for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MonitoredResource message, length delimited. Does not implicitly {@link google.api.MonitoredResource.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.MonitoredResource
                 * @static
                 * @param {google.api.IMonitoredResource} message MonitoredResource message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MonitoredResource.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MonitoredResource message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.MonitoredResource
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.MonitoredResource} MonitoredResource
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MonitoredResource.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.MonitoredResource(), key, value;
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                if (message.labels === $util.emptyObject)
                                    message.labels = {};
                                var end2 = reader.uint32() + reader.pos;
                                key = "";
                                value = "";
                                while (reader.pos < end2) {
                                    var tag2 = reader.uint32();
                                    switch (tag2 >>> 3) {
                                    case 1:
                                        key = reader.string();
                                        break;
                                    case 2:
                                        value = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag2 & 7);
                                        break;
                                    }
                                }
                                message.labels[key] = value;
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MonitoredResource message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.MonitoredResource
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.MonitoredResource} MonitoredResource
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MonitoredResource.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MonitoredResource message.
                 * @function verify
                 * @memberof google.api.MonitoredResource
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MonitoredResource.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.labels != null && message.hasOwnProperty("labels")) {
                        if (!$util.isObject(message.labels))
                            return "labels: object expected";
                        var key = Object.keys(message.labels);
                        for (var i = 0; i < key.length; ++i)
                            if (!$util.isString(message.labels[key[i]]))
                                return "labels: string{k:string} expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a MonitoredResource message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.MonitoredResource
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.MonitoredResource} MonitoredResource
                 */
                MonitoredResource.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.MonitoredResource)
                        return object;
                    var message = new $root.google.api.MonitoredResource();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.labels) {
                        if (typeof object.labels !== "object")
                            throw TypeError(".google.api.MonitoredResource.labels: object expected");
                        message.labels = {};
                        for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                            message.labels[keys[i]] = String(object.labels[keys[i]]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MonitoredResource message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.MonitoredResource
                 * @static
                 * @param {google.api.MonitoredResource} message MonitoredResource
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MonitoredResource.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.objects || options.defaults)
                        object.labels = {};
                    if (options.defaults)
                        object.type = "";
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    var keys2;
                    if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                        object.labels = {};
                        for (var j = 0; j < keys2.length; ++j)
                            object.labels[keys2[j]] = message.labels[keys2[j]];
                    }
                    return object;
                };
    
                /**
                 * Converts this MonitoredResource to JSON.
                 * @function toJSON
                 * @memberof google.api.MonitoredResource
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MonitoredResource.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MonitoredResource
                 * @function getTypeUrl
                 * @memberof google.api.MonitoredResource
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MonitoredResource.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.MonitoredResource";
                };
    
                return MonitoredResource;
            })();
    
            api.MonitoredResourceMetadata = (function() {
    
                /**
                 * Properties of a MonitoredResourceMetadata.
                 * @memberof google.api
                 * @interface IMonitoredResourceMetadata
                 * @property {google.protobuf.IStruct|null} [systemLabels] MonitoredResourceMetadata systemLabels
                 * @property {Object.<string,string>|null} [userLabels] MonitoredResourceMetadata userLabels
                 */
    
                /**
                 * Constructs a new MonitoredResourceMetadata.
                 * @memberof google.api
                 * @classdesc Represents a MonitoredResourceMetadata.
                 * @implements IMonitoredResourceMetadata
                 * @constructor
                 * @param {google.api.IMonitoredResourceMetadata=} [properties] Properties to set
                 */
                function MonitoredResourceMetadata(properties) {
                    this.userLabels = {};
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MonitoredResourceMetadata systemLabels.
                 * @member {google.protobuf.IStruct|null|undefined} systemLabels
                 * @memberof google.api.MonitoredResourceMetadata
                 * @instance
                 */
                MonitoredResourceMetadata.prototype.systemLabels = null;
    
                /**
                 * MonitoredResourceMetadata userLabels.
                 * @member {Object.<string,string>} userLabels
                 * @memberof google.api.MonitoredResourceMetadata
                 * @instance
                 */
                MonitoredResourceMetadata.prototype.userLabels = $util.emptyObject;
    
                /**
                 * Creates a new MonitoredResourceMetadata instance using the specified properties.
                 * @function create
                 * @memberof google.api.MonitoredResourceMetadata
                 * @static
                 * @param {google.api.IMonitoredResourceMetadata=} [properties] Properties to set
                 * @returns {google.api.MonitoredResourceMetadata} MonitoredResourceMetadata instance
                 */
                MonitoredResourceMetadata.create = function create(properties) {
                    return new MonitoredResourceMetadata(properties);
                };
    
                /**
                 * Encodes the specified MonitoredResourceMetadata message. Does not implicitly {@link google.api.MonitoredResourceMetadata.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.MonitoredResourceMetadata
                 * @static
                 * @param {google.api.IMonitoredResourceMetadata} message MonitoredResourceMetadata message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MonitoredResourceMetadata.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.systemLabels != null && Object.hasOwnProperty.call(message, "systemLabels"))
                        $root.google.protobuf.Struct.encode(message.systemLabels, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.userLabels != null && Object.hasOwnProperty.call(message, "userLabels"))
                        for (var keys = Object.keys(message.userLabels), i = 0; i < keys.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.userLabels[keys[i]]).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MonitoredResourceMetadata message, length delimited. Does not implicitly {@link google.api.MonitoredResourceMetadata.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.MonitoredResourceMetadata
                 * @static
                 * @param {google.api.IMonitoredResourceMetadata} message MonitoredResourceMetadata message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MonitoredResourceMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MonitoredResourceMetadata message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.MonitoredResourceMetadata
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.MonitoredResourceMetadata} MonitoredResourceMetadata
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MonitoredResourceMetadata.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.MonitoredResourceMetadata(), key, value;
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.systemLabels = $root.google.protobuf.Struct.decode(reader, reader.uint32());
                                break;
                            }
                        case 2: {
                                if (message.userLabels === $util.emptyObject)
                                    message.userLabels = {};
                                var end2 = reader.uint32() + reader.pos;
                                key = "";
                                value = "";
                                while (reader.pos < end2) {
                                    var tag2 = reader.uint32();
                                    switch (tag2 >>> 3) {
                                    case 1:
                                        key = reader.string();
                                        break;
                                    case 2:
                                        value = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag2 & 7);
                                        break;
                                    }
                                }
                                message.userLabels[key] = value;
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MonitoredResourceMetadata message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.MonitoredResourceMetadata
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.MonitoredResourceMetadata} MonitoredResourceMetadata
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MonitoredResourceMetadata.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MonitoredResourceMetadata message.
                 * @function verify
                 * @memberof google.api.MonitoredResourceMetadata
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MonitoredResourceMetadata.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.systemLabels != null && message.hasOwnProperty("systemLabels")) {
                        var error = $root.google.protobuf.Struct.verify(message.systemLabels);
                        if (error)
                            return "systemLabels." + error;
                    }
                    if (message.userLabels != null && message.hasOwnProperty("userLabels")) {
                        if (!$util.isObject(message.userLabels))
                            return "userLabels: object expected";
                        var key = Object.keys(message.userLabels);
                        for (var i = 0; i < key.length; ++i)
                            if (!$util.isString(message.userLabels[key[i]]))
                                return "userLabels: string{k:string} expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a MonitoredResourceMetadata message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.MonitoredResourceMetadata
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.MonitoredResourceMetadata} MonitoredResourceMetadata
                 */
                MonitoredResourceMetadata.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.MonitoredResourceMetadata)
                        return object;
                    var message = new $root.google.api.MonitoredResourceMetadata();
                    if (object.systemLabels != null) {
                        if (typeof object.systemLabels !== "object")
                            throw TypeError(".google.api.MonitoredResourceMetadata.systemLabels: object expected");
                        message.systemLabels = $root.google.protobuf.Struct.fromObject(object.systemLabels);
                    }
                    if (object.userLabels) {
                        if (typeof object.userLabels !== "object")
                            throw TypeError(".google.api.MonitoredResourceMetadata.userLabels: object expected");
                        message.userLabels = {};
                        for (var keys = Object.keys(object.userLabels), i = 0; i < keys.length; ++i)
                            message.userLabels[keys[i]] = String(object.userLabels[keys[i]]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MonitoredResourceMetadata message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.MonitoredResourceMetadata
                 * @static
                 * @param {google.api.MonitoredResourceMetadata} message MonitoredResourceMetadata
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MonitoredResourceMetadata.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.objects || options.defaults)
                        object.userLabels = {};
                    if (options.defaults)
                        object.systemLabels = null;
                    if (message.systemLabels != null && message.hasOwnProperty("systemLabels"))
                        object.systemLabels = $root.google.protobuf.Struct.toObject(message.systemLabels, options);
                    var keys2;
                    if (message.userLabels && (keys2 = Object.keys(message.userLabels)).length) {
                        object.userLabels = {};
                        for (var j = 0; j < keys2.length; ++j)
                            object.userLabels[keys2[j]] = message.userLabels[keys2[j]];
                    }
                    return object;
                };
    
                /**
                 * Converts this MonitoredResourceMetadata to JSON.
                 * @function toJSON
                 * @memberof google.api.MonitoredResourceMetadata
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MonitoredResourceMetadata.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MonitoredResourceMetadata
                 * @function getTypeUrl
                 * @memberof google.api.MonitoredResourceMetadata
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MonitoredResourceMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.MonitoredResourceMetadata";
                };
    
                return MonitoredResourceMetadata;
            })();
    
            api.LabelDescriptor = (function() {
    
                /**
                 * Properties of a LabelDescriptor.
                 * @memberof google.api
                 * @interface ILabelDescriptor
                 * @property {string|null} [key] LabelDescriptor key
                 * @property {google.api.LabelDescriptor.ValueType|null} [valueType] LabelDescriptor valueType
                 * @property {string|null} [description] LabelDescriptor description
                 */
    
                /**
                 * Constructs a new LabelDescriptor.
                 * @memberof google.api
                 * @classdesc Represents a LabelDescriptor.
                 * @implements ILabelDescriptor
                 * @constructor
                 * @param {google.api.ILabelDescriptor=} [properties] Properties to set
                 */
                function LabelDescriptor(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * LabelDescriptor key.
                 * @member {string} key
                 * @memberof google.api.LabelDescriptor
                 * @instance
                 */
                LabelDescriptor.prototype.key = "";
    
                /**
                 * LabelDescriptor valueType.
                 * @member {google.api.LabelDescriptor.ValueType} valueType
                 * @memberof google.api.LabelDescriptor
                 * @instance
                 */
                LabelDescriptor.prototype.valueType = 0;
    
                /**
                 * LabelDescriptor description.
                 * @member {string} description
                 * @memberof google.api.LabelDescriptor
                 * @instance
                 */
                LabelDescriptor.prototype.description = "";
    
                /**
                 * Creates a new LabelDescriptor instance using the specified properties.
                 * @function create
                 * @memberof google.api.LabelDescriptor
                 * @static
                 * @param {google.api.ILabelDescriptor=} [properties] Properties to set
                 * @returns {google.api.LabelDescriptor} LabelDescriptor instance
                 */
                LabelDescriptor.create = function create(properties) {
                    return new LabelDescriptor(properties);
                };
    
                /**
                 * Encodes the specified LabelDescriptor message. Does not implicitly {@link google.api.LabelDescriptor.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.LabelDescriptor
                 * @static
                 * @param {google.api.ILabelDescriptor} message LabelDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                LabelDescriptor.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.key != null && Object.hasOwnProperty.call(message, "key"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);
                    if (message.valueType != null && Object.hasOwnProperty.call(message, "valueType"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.valueType);
                    if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.description);
                    return writer;
                };
    
                /**
                 * Encodes the specified LabelDescriptor message, length delimited. Does not implicitly {@link google.api.LabelDescriptor.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.LabelDescriptor
                 * @static
                 * @param {google.api.ILabelDescriptor} message LabelDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                LabelDescriptor.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a LabelDescriptor message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.LabelDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.LabelDescriptor} LabelDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                LabelDescriptor.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.LabelDescriptor();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.key = reader.string();
                                break;
                            }
                        case 2: {
                                message.valueType = reader.int32();
                                break;
                            }
                        case 3: {
                                message.description = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a LabelDescriptor message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.LabelDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.LabelDescriptor} LabelDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                LabelDescriptor.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a LabelDescriptor message.
                 * @function verify
                 * @memberof google.api.LabelDescriptor
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                LabelDescriptor.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.key != null && message.hasOwnProperty("key"))
                        if (!$util.isString(message.key))
                            return "key: string expected";
                    if (message.valueType != null && message.hasOwnProperty("valueType"))
                        switch (message.valueType) {
                        default:
                            return "valueType: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.description != null && message.hasOwnProperty("description"))
                        if (!$util.isString(message.description))
                            return "description: string expected";
                    return null;
                };
    
                /**
                 * Creates a LabelDescriptor message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.LabelDescriptor
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.LabelDescriptor} LabelDescriptor
                 */
                LabelDescriptor.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.LabelDescriptor)
                        return object;
                    var message = new $root.google.api.LabelDescriptor();
                    if (object.key != null)
                        message.key = String(object.key);
                    switch (object.valueType) {
                    default:
                        if (typeof object.valueType === "number") {
                            message.valueType = object.valueType;
                            break;
                        }
                        break;
                    case "STRING":
                    case 0:
                        message.valueType = 0;
                        break;
                    case "BOOL":
                    case 1:
                        message.valueType = 1;
                        break;
                    case "INT64":
                    case 2:
                        message.valueType = 2;
                        break;
                    }
                    if (object.description != null)
                        message.description = String(object.description);
                    return message;
                };
    
                /**
                 * Creates a plain object from a LabelDescriptor message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.LabelDescriptor
                 * @static
                 * @param {google.api.LabelDescriptor} message LabelDescriptor
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                LabelDescriptor.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.key = "";
                        object.valueType = options.enums === String ? "STRING" : 0;
                        object.description = "";
                    }
                    if (message.key != null && message.hasOwnProperty("key"))
                        object.key = message.key;
                    if (message.valueType != null && message.hasOwnProperty("valueType"))
                        object.valueType = options.enums === String ? $root.google.api.LabelDescriptor.ValueType[message.valueType] === undefined ? message.valueType : $root.google.api.LabelDescriptor.ValueType[message.valueType] : message.valueType;
                    if (message.description != null && message.hasOwnProperty("description"))
                        object.description = message.description;
                    return object;
                };
    
                /**
                 * Converts this LabelDescriptor to JSON.
                 * @function toJSON
                 * @memberof google.api.LabelDescriptor
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                LabelDescriptor.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for LabelDescriptor
                 * @function getTypeUrl
                 * @memberof google.api.LabelDescriptor
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                LabelDescriptor.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.LabelDescriptor";
                };
    
                /**
                 * ValueType enum.
                 * @name google.api.LabelDescriptor.ValueType
                 * @enum {number}
                 * @property {number} STRING=0 STRING value
                 * @property {number} BOOL=1 BOOL value
                 * @property {number} INT64=2 INT64 value
                 */
                LabelDescriptor.ValueType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STRING"] = 0;
                    values[valuesById[1] = "BOOL"] = 1;
                    values[valuesById[2] = "INT64"] = 2;
                    return values;
                })();
    
                return LabelDescriptor;
            })();
    
            /**
             * LaunchStage enum.
             * @name google.api.LaunchStage
             * @enum {number}
             * @property {number} LAUNCH_STAGE_UNSPECIFIED=0 LAUNCH_STAGE_UNSPECIFIED value
             * @property {number} UNIMPLEMENTED=6 UNIMPLEMENTED value
             * @property {number} PRELAUNCH=7 PRELAUNCH value
             * @property {number} EARLY_ACCESS=1 EARLY_ACCESS value
             * @property {number} ALPHA=2 ALPHA value
             * @property {number} BETA=3 BETA value
             * @property {number} GA=4 GA value
             * @property {number} DEPRECATED=5 DEPRECATED value
             */
            api.LaunchStage = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "LAUNCH_STAGE_UNSPECIFIED"] = 0;
                values[valuesById[6] = "UNIMPLEMENTED"] = 6;
                values[valuesById[7] = "PRELAUNCH"] = 7;
                values[valuesById[1] = "EARLY_ACCESS"] = 1;
                values[valuesById[2] = "ALPHA"] = 2;
                values[valuesById[3] = "BETA"] = 3;
                values[valuesById[4] = "GA"] = 4;
                values[valuesById[5] = "DEPRECATED"] = 5;
                return values;
            })();
    
            api.MetricDescriptor = (function() {
    
                /**
                 * Properties of a MetricDescriptor.
                 * @memberof google.api
                 * @interface IMetricDescriptor
                 * @property {string|null} [name] MetricDescriptor name
                 * @property {string|null} [type] MetricDescriptor type
                 * @property {Array.<google.api.ILabelDescriptor>|null} [labels] MetricDescriptor labels
                 * @property {google.api.MetricDescriptor.MetricKind|null} [metricKind] MetricDescriptor metricKind
                 * @property {google.api.MetricDescriptor.ValueType|null} [valueType] MetricDescriptor valueType
                 * @property {string|null} [unit] MetricDescriptor unit
                 * @property {string|null} [description] MetricDescriptor description
                 * @property {string|null} [displayName] MetricDescriptor displayName
                 * @property {google.api.MetricDescriptor.IMetricDescriptorMetadata|null} [metadata] MetricDescriptor metadata
                 * @property {google.api.LaunchStage|null} [launchStage] MetricDescriptor launchStage
                 * @property {Array.<string>|null} [monitoredResourceTypes] MetricDescriptor monitoredResourceTypes
                 */
    
                /**
                 * Constructs a new MetricDescriptor.
                 * @memberof google.api
                 * @classdesc Represents a MetricDescriptor.
                 * @implements IMetricDescriptor
                 * @constructor
                 * @param {google.api.IMetricDescriptor=} [properties] Properties to set
                 */
                function MetricDescriptor(properties) {
                    this.labels = [];
                    this.monitoredResourceTypes = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MetricDescriptor name.
                 * @member {string} name
                 * @memberof google.api.MetricDescriptor
                 * @instance
                 */
                MetricDescriptor.prototype.name = "";
    
                /**
                 * MetricDescriptor type.
                 * @member {string} type
                 * @memberof google.api.MetricDescriptor
                 * @instance
                 */
                MetricDescriptor.prototype.type = "";
    
                /**
                 * MetricDescriptor labels.
                 * @member {Array.<google.api.ILabelDescriptor>} labels
                 * @memberof google.api.MetricDescriptor
                 * @instance
                 */
                MetricDescriptor.prototype.labels = $util.emptyArray;
    
                /**
                 * MetricDescriptor metricKind.
                 * @member {google.api.MetricDescriptor.MetricKind} metricKind
                 * @memberof google.api.MetricDescriptor
                 * @instance
                 */
                MetricDescriptor.prototype.metricKind = 0;
    
                /**
                 * MetricDescriptor valueType.
                 * @member {google.api.MetricDescriptor.ValueType} valueType
                 * @memberof google.api.MetricDescriptor
                 * @instance
                 */
                MetricDescriptor.prototype.valueType = 0;
    
                /**
                 * MetricDescriptor unit.
                 * @member {string} unit
                 * @memberof google.api.MetricDescriptor
                 * @instance
                 */
                MetricDescriptor.prototype.unit = "";
    
                /**
                 * MetricDescriptor description.
                 * @member {string} description
                 * @memberof google.api.MetricDescriptor
                 * @instance
                 */
                MetricDescriptor.prototype.description = "";
    
                /**
                 * MetricDescriptor displayName.
                 * @member {string} displayName
                 * @memberof google.api.MetricDescriptor
                 * @instance
                 */
                MetricDescriptor.prototype.displayName = "";
    
                /**
                 * MetricDescriptor metadata.
                 * @member {google.api.MetricDescriptor.IMetricDescriptorMetadata|null|undefined} metadata
                 * @memberof google.api.MetricDescriptor
                 * @instance
                 */
                MetricDescriptor.prototype.metadata = null;
    
                /**
                 * MetricDescriptor launchStage.
                 * @member {google.api.LaunchStage} launchStage
                 * @memberof google.api.MetricDescriptor
                 * @instance
                 */
                MetricDescriptor.prototype.launchStage = 0;
    
                /**
                 * MetricDescriptor monitoredResourceTypes.
                 * @member {Array.<string>} monitoredResourceTypes
                 * @memberof google.api.MetricDescriptor
                 * @instance
                 */
                MetricDescriptor.prototype.monitoredResourceTypes = $util.emptyArray;
    
                /**
                 * Creates a new MetricDescriptor instance using the specified properties.
                 * @function create
                 * @memberof google.api.MetricDescriptor
                 * @static
                 * @param {google.api.IMetricDescriptor=} [properties] Properties to set
                 * @returns {google.api.MetricDescriptor} MetricDescriptor instance
                 */
                MetricDescriptor.create = function create(properties) {
                    return new MetricDescriptor(properties);
                };
    
                /**
                 * Encodes the specified MetricDescriptor message. Does not implicitly {@link google.api.MetricDescriptor.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.MetricDescriptor
                 * @static
                 * @param {google.api.IMetricDescriptor} message MetricDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MetricDescriptor.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.labels != null && message.labels.length)
                        for (var i = 0; i < message.labels.length; ++i)
                            $root.google.api.LabelDescriptor.encode(message.labels[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.metricKind != null && Object.hasOwnProperty.call(message, "metricKind"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.metricKind);
                    if (message.valueType != null && Object.hasOwnProperty.call(message, "valueType"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.valueType);
                    if (message.unit != null && Object.hasOwnProperty.call(message, "unit"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.unit);
                    if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.description);
                    if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.displayName);
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.type);
                    if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                        $root.google.api.MetricDescriptor.MetricDescriptorMetadata.encode(message.metadata, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                    if (message.launchStage != null && Object.hasOwnProperty.call(message, "launchStage"))
                        writer.uint32(/* id 12, wireType 0 =*/96).int32(message.launchStage);
                    if (message.monitoredResourceTypes != null && message.monitoredResourceTypes.length)
                        for (var i = 0; i < message.monitoredResourceTypes.length; ++i)
                            writer.uint32(/* id 13, wireType 2 =*/106).string(message.monitoredResourceTypes[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified MetricDescriptor message, length delimited. Does not implicitly {@link google.api.MetricDescriptor.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.MetricDescriptor
                 * @static
                 * @param {google.api.IMetricDescriptor} message MetricDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MetricDescriptor.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MetricDescriptor message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.MetricDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.MetricDescriptor} MetricDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MetricDescriptor.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.MetricDescriptor();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 8: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.labels && message.labels.length))
                                    message.labels = [];
                                message.labels.push($root.google.api.LabelDescriptor.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.metricKind = reader.int32();
                                break;
                            }
                        case 4: {
                                message.valueType = reader.int32();
                                break;
                            }
                        case 5: {
                                message.unit = reader.string();
                                break;
                            }
                        case 6: {
                                message.description = reader.string();
                                break;
                            }
                        case 7: {
                                message.displayName = reader.string();
                                break;
                            }
                        case 10: {
                                message.metadata = $root.google.api.MetricDescriptor.MetricDescriptorMetadata.decode(reader, reader.uint32());
                                break;
                            }
                        case 12: {
                                message.launchStage = reader.int32();
                                break;
                            }
                        case 13: {
                                if (!(message.monitoredResourceTypes && message.monitoredResourceTypes.length))
                                    message.monitoredResourceTypes = [];
                                message.monitoredResourceTypes.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MetricDescriptor message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.MetricDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.MetricDescriptor} MetricDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MetricDescriptor.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MetricDescriptor message.
                 * @function verify
                 * @memberof google.api.MetricDescriptor
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MetricDescriptor.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.labels != null && message.hasOwnProperty("labels")) {
                        if (!Array.isArray(message.labels))
                            return "labels: array expected";
                        for (var i = 0; i < message.labels.length; ++i) {
                            var error = $root.google.api.LabelDescriptor.verify(message.labels[i]);
                            if (error)
                                return "labels." + error;
                        }
                    }
                    if (message.metricKind != null && message.hasOwnProperty("metricKind"))
                        switch (message.metricKind) {
                        default:
                            return "metricKind: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.valueType != null && message.hasOwnProperty("valueType"))
                        switch (message.valueType) {
                        default:
                            return "valueType: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                            break;
                        }
                    if (message.unit != null && message.hasOwnProperty("unit"))
                        if (!$util.isString(message.unit))
                            return "unit: string expected";
                    if (message.description != null && message.hasOwnProperty("description"))
                        if (!$util.isString(message.description))
                            return "description: string expected";
                    if (message.displayName != null && message.hasOwnProperty("displayName"))
                        if (!$util.isString(message.displayName))
                            return "displayName: string expected";
                    if (message.metadata != null && message.hasOwnProperty("metadata")) {
                        var error = $root.google.api.MetricDescriptor.MetricDescriptorMetadata.verify(message.metadata);
                        if (error)
                            return "metadata." + error;
                    }
                    if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                        switch (message.launchStage) {
                        default:
                            return "launchStage: enum value expected";
                        case 0:
                        case 6:
                        case 7:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                            break;
                        }
                    if (message.monitoredResourceTypes != null && message.hasOwnProperty("monitoredResourceTypes")) {
                        if (!Array.isArray(message.monitoredResourceTypes))
                            return "monitoredResourceTypes: array expected";
                        for (var i = 0; i < message.monitoredResourceTypes.length; ++i)
                            if (!$util.isString(message.monitoredResourceTypes[i]))
                                return "monitoredResourceTypes: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a MetricDescriptor message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.MetricDescriptor
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.MetricDescriptor} MetricDescriptor
                 */
                MetricDescriptor.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.MetricDescriptor)
                        return object;
                    var message = new $root.google.api.MetricDescriptor();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.labels) {
                        if (!Array.isArray(object.labels))
                            throw TypeError(".google.api.MetricDescriptor.labels: array expected");
                        message.labels = [];
                        for (var i = 0; i < object.labels.length; ++i) {
                            if (typeof object.labels[i] !== "object")
                                throw TypeError(".google.api.MetricDescriptor.labels: object expected");
                            message.labels[i] = $root.google.api.LabelDescriptor.fromObject(object.labels[i]);
                        }
                    }
                    switch (object.metricKind) {
                    default:
                        if (typeof object.metricKind === "number") {
                            message.metricKind = object.metricKind;
                            break;
                        }
                        break;
                    case "METRIC_KIND_UNSPECIFIED":
                    case 0:
                        message.metricKind = 0;
                        break;
                    case "GAUGE":
                    case 1:
                        message.metricKind = 1;
                        break;
                    case "DELTA":
                    case 2:
                        message.metricKind = 2;
                        break;
                    case "CUMULATIVE":
                    case 3:
                        message.metricKind = 3;
                        break;
                    }
                    switch (object.valueType) {
                    default:
                        if (typeof object.valueType === "number") {
                            message.valueType = object.valueType;
                            break;
                        }
                        break;
                    case "VALUE_TYPE_UNSPECIFIED":
                    case 0:
                        message.valueType = 0;
                        break;
                    case "BOOL":
                    case 1:
                        message.valueType = 1;
                        break;
                    case "INT64":
                    case 2:
                        message.valueType = 2;
                        break;
                    case "DOUBLE":
                    case 3:
                        message.valueType = 3;
                        break;
                    case "STRING":
                    case 4:
                        message.valueType = 4;
                        break;
                    case "DISTRIBUTION":
                    case 5:
                        message.valueType = 5;
                        break;
                    case "MONEY":
                    case 6:
                        message.valueType = 6;
                        break;
                    }
                    if (object.unit != null)
                        message.unit = String(object.unit);
                    if (object.description != null)
                        message.description = String(object.description);
                    if (object.displayName != null)
                        message.displayName = String(object.displayName);
                    if (object.metadata != null) {
                        if (typeof object.metadata !== "object")
                            throw TypeError(".google.api.MetricDescriptor.metadata: object expected");
                        message.metadata = $root.google.api.MetricDescriptor.MetricDescriptorMetadata.fromObject(object.metadata);
                    }
                    switch (object.launchStage) {
                    default:
                        if (typeof object.launchStage === "number") {
                            message.launchStage = object.launchStage;
                            break;
                        }
                        break;
                    case "LAUNCH_STAGE_UNSPECIFIED":
                    case 0:
                        message.launchStage = 0;
                        break;
                    case "UNIMPLEMENTED":
                    case 6:
                        message.launchStage = 6;
                        break;
                    case "PRELAUNCH":
                    case 7:
                        message.launchStage = 7;
                        break;
                    case "EARLY_ACCESS":
                    case 1:
                        message.launchStage = 1;
                        break;
                    case "ALPHA":
                    case 2:
                        message.launchStage = 2;
                        break;
                    case "BETA":
                    case 3:
                        message.launchStage = 3;
                        break;
                    case "GA":
                    case 4:
                        message.launchStage = 4;
                        break;
                    case "DEPRECATED":
                    case 5:
                        message.launchStage = 5;
                        break;
                    }
                    if (object.monitoredResourceTypes) {
                        if (!Array.isArray(object.monitoredResourceTypes))
                            throw TypeError(".google.api.MetricDescriptor.monitoredResourceTypes: array expected");
                        message.monitoredResourceTypes = [];
                        for (var i = 0; i < object.monitoredResourceTypes.length; ++i)
                            message.monitoredResourceTypes[i] = String(object.monitoredResourceTypes[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MetricDescriptor message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.MetricDescriptor
                 * @static
                 * @param {google.api.MetricDescriptor} message MetricDescriptor
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MetricDescriptor.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.labels = [];
                        object.monitoredResourceTypes = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.metricKind = options.enums === String ? "METRIC_KIND_UNSPECIFIED" : 0;
                        object.valueType = options.enums === String ? "VALUE_TYPE_UNSPECIFIED" : 0;
                        object.unit = "";
                        object.description = "";
                        object.displayName = "";
                        object.type = "";
                        object.metadata = null;
                        object.launchStage = options.enums === String ? "LAUNCH_STAGE_UNSPECIFIED" : 0;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.labels && message.labels.length) {
                        object.labels = [];
                        for (var j = 0; j < message.labels.length; ++j)
                            object.labels[j] = $root.google.api.LabelDescriptor.toObject(message.labels[j], options);
                    }
                    if (message.metricKind != null && message.hasOwnProperty("metricKind"))
                        object.metricKind = options.enums === String ? $root.google.api.MetricDescriptor.MetricKind[message.metricKind] === undefined ? message.metricKind : $root.google.api.MetricDescriptor.MetricKind[message.metricKind] : message.metricKind;
                    if (message.valueType != null && message.hasOwnProperty("valueType"))
                        object.valueType = options.enums === String ? $root.google.api.MetricDescriptor.ValueType[message.valueType] === undefined ? message.valueType : $root.google.api.MetricDescriptor.ValueType[message.valueType] : message.valueType;
                    if (message.unit != null && message.hasOwnProperty("unit"))
                        object.unit = message.unit;
                    if (message.description != null && message.hasOwnProperty("description"))
                        object.description = message.description;
                    if (message.displayName != null && message.hasOwnProperty("displayName"))
                        object.displayName = message.displayName;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.metadata != null && message.hasOwnProperty("metadata"))
                        object.metadata = $root.google.api.MetricDescriptor.MetricDescriptorMetadata.toObject(message.metadata, options);
                    if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                        object.launchStage = options.enums === String ? $root.google.api.LaunchStage[message.launchStage] === undefined ? message.launchStage : $root.google.api.LaunchStage[message.launchStage] : message.launchStage;
                    if (message.monitoredResourceTypes && message.monitoredResourceTypes.length) {
                        object.monitoredResourceTypes = [];
                        for (var j = 0; j < message.monitoredResourceTypes.length; ++j)
                            object.monitoredResourceTypes[j] = message.monitoredResourceTypes[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this MetricDescriptor to JSON.
                 * @function toJSON
                 * @memberof google.api.MetricDescriptor
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MetricDescriptor.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MetricDescriptor
                 * @function getTypeUrl
                 * @memberof google.api.MetricDescriptor
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MetricDescriptor.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.MetricDescriptor";
                };
    
                MetricDescriptor.MetricDescriptorMetadata = (function() {
    
                    /**
                     * Properties of a MetricDescriptorMetadata.
                     * @memberof google.api.MetricDescriptor
                     * @interface IMetricDescriptorMetadata
                     * @property {google.api.LaunchStage|null} [launchStage] MetricDescriptorMetadata launchStage
                     * @property {google.protobuf.IDuration|null} [samplePeriod] MetricDescriptorMetadata samplePeriod
                     * @property {google.protobuf.IDuration|null} [ingestDelay] MetricDescriptorMetadata ingestDelay
                     */
    
                    /**
                     * Constructs a new MetricDescriptorMetadata.
                     * @memberof google.api.MetricDescriptor
                     * @classdesc Represents a MetricDescriptorMetadata.
                     * @implements IMetricDescriptorMetadata
                     * @constructor
                     * @param {google.api.MetricDescriptor.IMetricDescriptorMetadata=} [properties] Properties to set
                     */
                    function MetricDescriptorMetadata(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * MetricDescriptorMetadata launchStage.
                     * @member {google.api.LaunchStage} launchStage
                     * @memberof google.api.MetricDescriptor.MetricDescriptorMetadata
                     * @instance
                     */
                    MetricDescriptorMetadata.prototype.launchStage = 0;
    
                    /**
                     * MetricDescriptorMetadata samplePeriod.
                     * @member {google.protobuf.IDuration|null|undefined} samplePeriod
                     * @memberof google.api.MetricDescriptor.MetricDescriptorMetadata
                     * @instance
                     */
                    MetricDescriptorMetadata.prototype.samplePeriod = null;
    
                    /**
                     * MetricDescriptorMetadata ingestDelay.
                     * @member {google.protobuf.IDuration|null|undefined} ingestDelay
                     * @memberof google.api.MetricDescriptor.MetricDescriptorMetadata
                     * @instance
                     */
                    MetricDescriptorMetadata.prototype.ingestDelay = null;
    
                    /**
                     * Creates a new MetricDescriptorMetadata instance using the specified properties.
                     * @function create
                     * @memberof google.api.MetricDescriptor.MetricDescriptorMetadata
                     * @static
                     * @param {google.api.MetricDescriptor.IMetricDescriptorMetadata=} [properties] Properties to set
                     * @returns {google.api.MetricDescriptor.MetricDescriptorMetadata} MetricDescriptorMetadata instance
                     */
                    MetricDescriptorMetadata.create = function create(properties) {
                        return new MetricDescriptorMetadata(properties);
                    };
    
                    /**
                     * Encodes the specified MetricDescriptorMetadata message. Does not implicitly {@link google.api.MetricDescriptor.MetricDescriptorMetadata.verify|verify} messages.
                     * @function encode
                     * @memberof google.api.MetricDescriptor.MetricDescriptorMetadata
                     * @static
                     * @param {google.api.MetricDescriptor.IMetricDescriptorMetadata} message MetricDescriptorMetadata message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MetricDescriptorMetadata.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.launchStage != null && Object.hasOwnProperty.call(message, "launchStage"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.launchStage);
                        if (message.samplePeriod != null && Object.hasOwnProperty.call(message, "samplePeriod"))
                            $root.google.protobuf.Duration.encode(message.samplePeriod, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.ingestDelay != null && Object.hasOwnProperty.call(message, "ingestDelay"))
                            $root.google.protobuf.Duration.encode(message.ingestDelay, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified MetricDescriptorMetadata message, length delimited. Does not implicitly {@link google.api.MetricDescriptor.MetricDescriptorMetadata.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.api.MetricDescriptor.MetricDescriptorMetadata
                     * @static
                     * @param {google.api.MetricDescriptor.IMetricDescriptorMetadata} message MetricDescriptorMetadata message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MetricDescriptorMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a MetricDescriptorMetadata message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.api.MetricDescriptor.MetricDescriptorMetadata
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.api.MetricDescriptor.MetricDescriptorMetadata} MetricDescriptorMetadata
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MetricDescriptorMetadata.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.MetricDescriptor.MetricDescriptorMetadata();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.launchStage = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.samplePeriod = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            case 3: {
                                    message.ingestDelay = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a MetricDescriptorMetadata message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.api.MetricDescriptor.MetricDescriptorMetadata
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.api.MetricDescriptor.MetricDescriptorMetadata} MetricDescriptorMetadata
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MetricDescriptorMetadata.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a MetricDescriptorMetadata message.
                     * @function verify
                     * @memberof google.api.MetricDescriptor.MetricDescriptorMetadata
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    MetricDescriptorMetadata.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                            switch (message.launchStage) {
                            default:
                                return "launchStage: enum value expected";
                            case 0:
                            case 6:
                            case 7:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                                break;
                            }
                        if (message.samplePeriod != null && message.hasOwnProperty("samplePeriod")) {
                            var error = $root.google.protobuf.Duration.verify(message.samplePeriod);
                            if (error)
                                return "samplePeriod." + error;
                        }
                        if (message.ingestDelay != null && message.hasOwnProperty("ingestDelay")) {
                            var error = $root.google.protobuf.Duration.verify(message.ingestDelay);
                            if (error)
                                return "ingestDelay." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a MetricDescriptorMetadata message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.api.MetricDescriptor.MetricDescriptorMetadata
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.api.MetricDescriptor.MetricDescriptorMetadata} MetricDescriptorMetadata
                     */
                    MetricDescriptorMetadata.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.api.MetricDescriptor.MetricDescriptorMetadata)
                            return object;
                        var message = new $root.google.api.MetricDescriptor.MetricDescriptorMetadata();
                        switch (object.launchStage) {
                        default:
                            if (typeof object.launchStage === "number") {
                                message.launchStage = object.launchStage;
                                break;
                            }
                            break;
                        case "LAUNCH_STAGE_UNSPECIFIED":
                        case 0:
                            message.launchStage = 0;
                            break;
                        case "UNIMPLEMENTED":
                        case 6:
                            message.launchStage = 6;
                            break;
                        case "PRELAUNCH":
                        case 7:
                            message.launchStage = 7;
                            break;
                        case "EARLY_ACCESS":
                        case 1:
                            message.launchStage = 1;
                            break;
                        case "ALPHA":
                        case 2:
                            message.launchStage = 2;
                            break;
                        case "BETA":
                        case 3:
                            message.launchStage = 3;
                            break;
                        case "GA":
                        case 4:
                            message.launchStage = 4;
                            break;
                        case "DEPRECATED":
                        case 5:
                            message.launchStage = 5;
                            break;
                        }
                        if (object.samplePeriod != null) {
                            if (typeof object.samplePeriod !== "object")
                                throw TypeError(".google.api.MetricDescriptor.MetricDescriptorMetadata.samplePeriod: object expected");
                            message.samplePeriod = $root.google.protobuf.Duration.fromObject(object.samplePeriod);
                        }
                        if (object.ingestDelay != null) {
                            if (typeof object.ingestDelay !== "object")
                                throw TypeError(".google.api.MetricDescriptor.MetricDescriptorMetadata.ingestDelay: object expected");
                            message.ingestDelay = $root.google.protobuf.Duration.fromObject(object.ingestDelay);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a MetricDescriptorMetadata message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.api.MetricDescriptor.MetricDescriptorMetadata
                     * @static
                     * @param {google.api.MetricDescriptor.MetricDescriptorMetadata} message MetricDescriptorMetadata
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    MetricDescriptorMetadata.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.launchStage = options.enums === String ? "LAUNCH_STAGE_UNSPECIFIED" : 0;
                            object.samplePeriod = null;
                            object.ingestDelay = null;
                        }
                        if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                            object.launchStage = options.enums === String ? $root.google.api.LaunchStage[message.launchStage] === undefined ? message.launchStage : $root.google.api.LaunchStage[message.launchStage] : message.launchStage;
                        if (message.samplePeriod != null && message.hasOwnProperty("samplePeriod"))
                            object.samplePeriod = $root.google.protobuf.Duration.toObject(message.samplePeriod, options);
                        if (message.ingestDelay != null && message.hasOwnProperty("ingestDelay"))
                            object.ingestDelay = $root.google.protobuf.Duration.toObject(message.ingestDelay, options);
                        return object;
                    };
    
                    /**
                     * Converts this MetricDescriptorMetadata to JSON.
                     * @function toJSON
                     * @memberof google.api.MetricDescriptor.MetricDescriptorMetadata
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    MetricDescriptorMetadata.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for MetricDescriptorMetadata
                     * @function getTypeUrl
                     * @memberof google.api.MetricDescriptor.MetricDescriptorMetadata
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    MetricDescriptorMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.api.MetricDescriptor.MetricDescriptorMetadata";
                    };
    
                    return MetricDescriptorMetadata;
                })();
    
                /**
                 * MetricKind enum.
                 * @name google.api.MetricDescriptor.MetricKind
                 * @enum {number}
                 * @property {number} METRIC_KIND_UNSPECIFIED=0 METRIC_KIND_UNSPECIFIED value
                 * @property {number} GAUGE=1 GAUGE value
                 * @property {number} DELTA=2 DELTA value
                 * @property {number} CUMULATIVE=3 CUMULATIVE value
                 */
                MetricDescriptor.MetricKind = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "METRIC_KIND_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "GAUGE"] = 1;
                    values[valuesById[2] = "DELTA"] = 2;
                    values[valuesById[3] = "CUMULATIVE"] = 3;
                    return values;
                })();
    
                /**
                 * ValueType enum.
                 * @name google.api.MetricDescriptor.ValueType
                 * @enum {number}
                 * @property {number} VALUE_TYPE_UNSPECIFIED=0 VALUE_TYPE_UNSPECIFIED value
                 * @property {number} BOOL=1 BOOL value
                 * @property {number} INT64=2 INT64 value
                 * @property {number} DOUBLE=3 DOUBLE value
                 * @property {number} STRING=4 STRING value
                 * @property {number} DISTRIBUTION=5 DISTRIBUTION value
                 * @property {number} MONEY=6 MONEY value
                 */
                MetricDescriptor.ValueType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "VALUE_TYPE_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "BOOL"] = 1;
                    values[valuesById[2] = "INT64"] = 2;
                    values[valuesById[3] = "DOUBLE"] = 3;
                    values[valuesById[4] = "STRING"] = 4;
                    values[valuesById[5] = "DISTRIBUTION"] = 5;
                    values[valuesById[6] = "MONEY"] = 6;
                    return values;
                })();
    
                return MetricDescriptor;
            })();
    
            api.Metric = (function() {
    
                /**
                 * Properties of a Metric.
                 * @memberof google.api
                 * @interface IMetric
                 * @property {string|null} [type] Metric type
                 * @property {Object.<string,string>|null} [labels] Metric labels
                 */
    
                /**
                 * Constructs a new Metric.
                 * @memberof google.api
                 * @classdesc Represents a Metric.
                 * @implements IMetric
                 * @constructor
                 * @param {google.api.IMetric=} [properties] Properties to set
                 */
                function Metric(properties) {
                    this.labels = {};
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Metric type.
                 * @member {string} type
                 * @memberof google.api.Metric
                 * @instance
                 */
                Metric.prototype.type = "";
    
                /**
                 * Metric labels.
                 * @member {Object.<string,string>} labels
                 * @memberof google.api.Metric
                 * @instance
                 */
                Metric.prototype.labels = $util.emptyObject;
    
                /**
                 * Creates a new Metric instance using the specified properties.
                 * @function create
                 * @memberof google.api.Metric
                 * @static
                 * @param {google.api.IMetric=} [properties] Properties to set
                 * @returns {google.api.Metric} Metric instance
                 */
                Metric.create = function create(properties) {
                    return new Metric(properties);
                };
    
                /**
                 * Encodes the specified Metric message. Does not implicitly {@link google.api.Metric.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Metric
                 * @static
                 * @param {google.api.IMetric} message Metric message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Metric.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                        for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.type);
                    return writer;
                };
    
                /**
                 * Encodes the specified Metric message, length delimited. Does not implicitly {@link google.api.Metric.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Metric
                 * @static
                 * @param {google.api.IMetric} message Metric message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Metric.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Metric message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Metric
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Metric} Metric
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Metric.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Metric(), key, value;
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 3: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                if (message.labels === $util.emptyObject)
                                    message.labels = {};
                                var end2 = reader.uint32() + reader.pos;
                                key = "";
                                value = "";
                                while (reader.pos < end2) {
                                    var tag2 = reader.uint32();
                                    switch (tag2 >>> 3) {
                                    case 1:
                                        key = reader.string();
                                        break;
                                    case 2:
                                        value = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag2 & 7);
                                        break;
                                    }
                                }
                                message.labels[key] = value;
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Metric message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Metric
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Metric} Metric
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Metric.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Metric message.
                 * @function verify
                 * @memberof google.api.Metric
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Metric.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.labels != null && message.hasOwnProperty("labels")) {
                        if (!$util.isObject(message.labels))
                            return "labels: object expected";
                        var key = Object.keys(message.labels);
                        for (var i = 0; i < key.length; ++i)
                            if (!$util.isString(message.labels[key[i]]))
                                return "labels: string{k:string} expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a Metric message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Metric
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Metric} Metric
                 */
                Metric.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Metric)
                        return object;
                    var message = new $root.google.api.Metric();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.labels) {
                        if (typeof object.labels !== "object")
                            throw TypeError(".google.api.Metric.labels: object expected");
                        message.labels = {};
                        for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                            message.labels[keys[i]] = String(object.labels[keys[i]]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Metric message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Metric
                 * @static
                 * @param {google.api.Metric} message Metric
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Metric.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.objects || options.defaults)
                        object.labels = {};
                    if (options.defaults)
                        object.type = "";
                    var keys2;
                    if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                        object.labels = {};
                        for (var j = 0; j < keys2.length; ++j)
                            object.labels[keys2[j]] = message.labels[keys2[j]];
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    return object;
                };
    
                /**
                 * Converts this Metric to JSON.
                 * @function toJSON
                 * @memberof google.api.Metric
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Metric.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Metric
                 * @function getTypeUrl
                 * @memberof google.api.Metric
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Metric.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.Metric";
                };
    
                return Metric;
            })();
    
            return api;
        })();
    
        google.protobuf = (function() {
    
            /**
             * Namespace protobuf.
             * @memberof google
             * @namespace
             */
            var protobuf = {};
    
            protobuf.FileDescriptorSet = (function() {
    
                /**
                 * Properties of a FileDescriptorSet.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorSet
                 * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file
                 */
    
                /**
                 * Constructs a new FileDescriptorSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorSet.
                 * @implements IFileDescriptorSet
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 */
                function FileDescriptorSet(properties) {
                    this.file = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorSet file.
                 * @member {Array.<google.protobuf.IFileDescriptorProto>} file
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 */
                FileDescriptorSet.prototype.file = $util.emptyArray;
    
                /**
                 * Creates a new FileDescriptorSet instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet instance
                 */
                FileDescriptorSet.create = function create(properties) {
                    return new FileDescriptorSet(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.file != null && message.file.length)
                        for (var i = 0; i < message.file.length; ++i)
                            $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.file && message.file.length))
                                    message.file = [];
                                message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorSet message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.file != null && message.hasOwnProperty("file")) {
                        if (!Array.isArray(message.file))
                            return "file: array expected";
                        for (var i = 0; i < message.file.length; ++i) {
                            var error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);
                            if (error)
                                return "file." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 */
                FileDescriptorSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorSet)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorSet();
                    if (object.file) {
                        if (!Array.isArray(object.file))
                            throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
                        message.file = [];
                        for (var i = 0; i < object.file.length; ++i) {
                            if (typeof object.file[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                            message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.file = [];
                    if (message.file && message.file.length) {
                        object.file = [];
                        for (var j = 0; j < message.file.length; ++j)
                            object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorSet
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorSet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorSet";
                };
    
                return FileDescriptorSet;
            })();
    
            protobuf.FileDescriptorProto = (function() {
    
                /**
                 * Properties of a FileDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorProto
                 * @property {string|null} [name] FileDescriptorProto name
                 * @property {string|null} ["package"] FileDescriptorProto package
                 * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency
                 * @property {Array.<number>|null} [publicDependency] FileDescriptorProto publicDependency
                 * @property {Array.<number>|null} [weakDependency] FileDescriptorProto weakDependency
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [messageType] FileDescriptorProto messageType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] FileDescriptorProto enumType
                 * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension
                 * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options
                 * @property {google.protobuf.ISourceCodeInfo|null} [sourceCodeInfo] FileDescriptorProto sourceCodeInfo
                 * @property {string|null} [syntax] FileDescriptorProto syntax
                 * @property {string|null} [edition] FileDescriptorProto edition
                 */
    
                /**
                 * Constructs a new FileDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorProto.
                 * @implements IFileDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 */
                function FileDescriptorProto(properties) {
                    this.dependency = [];
                    this.publicDependency = [];
                    this.weakDependency = [];
                    this.messageType = [];
                    this.enumType = [];
                    this.service = [];
                    this.extension = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.name = "";
    
                /**
                 * FileDescriptorProto package.
                 * @member {string} package
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype["package"] = "";
    
                /**
                 * FileDescriptorProto dependency.
                 * @member {Array.<string>} dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto publicDependency.
                 * @member {Array.<number>} publicDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.publicDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto weakDependency.
                 * @member {Array.<number>} weakDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.weakDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto messageType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} messageType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.messageType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto service.
                 * @member {Array.<google.protobuf.IServiceDescriptorProto>} service
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.service = $util.emptyArray;
    
                /**
                 * FileDescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * FileDescriptorProto options.
                 * @member {google.protobuf.IFileOptions|null|undefined} options
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.options = null;
    
                /**
                 * FileDescriptorProto sourceCodeInfo.
                 * @member {google.protobuf.ISourceCodeInfo|null|undefined} sourceCodeInfo
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.sourceCodeInfo = null;
    
                /**
                 * FileDescriptorProto syntax.
                 * @member {string} syntax
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.syntax = "";
    
                /**
                 * FileDescriptorProto edition.
                 * @member {string} edition
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.edition = "";
    
                /**
                 * Creates a new FileDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto instance
                 */
                FileDescriptorProto.create = function create(properties) {
                    return new FileDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message["package"] != null && Object.hasOwnProperty.call(message, "package"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message["package"]);
                    if (message.dependency != null && message.dependency.length)
                        for (var i = 0; i < message.dependency.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);
                    if (message.messageType != null && message.messageType.length)
                        for (var i = 0; i < message.messageType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.messageType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.service != null && message.service.length)
                        for (var i = 0; i < message.service.length; ++i)
                            $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.sourceCodeInfo != null && Object.hasOwnProperty.call(message, "sourceCodeInfo"))
                        $root.google.protobuf.SourceCodeInfo.encode(message.sourceCodeInfo, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.publicDependency != null && message.publicDependency.length)
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.publicDependency[i]);
                    if (message.weakDependency != null && message.weakDependency.length)
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.weakDependency[i]);
                    if (message.syntax != null && Object.hasOwnProperty.call(message, "syntax"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.syntax);
                    if (message.edition != null && Object.hasOwnProperty.call(message, "edition"))
                        writer.uint32(/* id 13, wireType 2 =*/106).string(message.edition);
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message["package"] = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.dependency && message.dependency.length))
                                    message.dependency = [];
                                message.dependency.push(reader.string());
                                break;
                            }
                        case 10: {
                                if (!(message.publicDependency && message.publicDependency.length))
                                    message.publicDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.publicDependency.push(reader.int32());
                                } else
                                    message.publicDependency.push(reader.int32());
                                break;
                            }
                        case 11: {
                                if (!(message.weakDependency && message.weakDependency.length))
                                    message.weakDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.weakDependency.push(reader.int32());
                                } else
                                    message.weakDependency.push(reader.int32());
                                break;
                            }
                        case 4: {
                                if (!(message.messageType && message.messageType.length))
                                    message.messageType = [];
                                message.messageType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.service && message.service.length))
                                    message.service = [];
                                message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());
                                break;
                            }
                        case 12: {
                                message.syntax = reader.string();
                                break;
                            }
                        case 13: {
                                message.edition = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        if (!$util.isString(message["package"]))
                            return "package: string expected";
                    if (message.dependency != null && message.hasOwnProperty("dependency")) {
                        if (!Array.isArray(message.dependency))
                            return "dependency: array expected";
                        for (var i = 0; i < message.dependency.length; ++i)
                            if (!$util.isString(message.dependency[i]))
                                return "dependency: string[] expected";
                    }
                    if (message.publicDependency != null && message.hasOwnProperty("publicDependency")) {
                        if (!Array.isArray(message.publicDependency))
                            return "publicDependency: array expected";
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            if (!$util.isInteger(message.publicDependency[i]))
                                return "publicDependency: integer[] expected";
                    }
                    if (message.weakDependency != null && message.hasOwnProperty("weakDependency")) {
                        if (!Array.isArray(message.weakDependency))
                            return "weakDependency: array expected";
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            if (!$util.isInteger(message.weakDependency[i]))
                                return "weakDependency: integer[] expected";
                    }
                    if (message.messageType != null && message.hasOwnProperty("messageType")) {
                        if (!Array.isArray(message.messageType))
                            return "messageType: array expected";
                        for (var i = 0; i < message.messageType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.messageType[i]);
                            if (error)
                                return "messageType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.service != null && message.hasOwnProperty("service")) {
                        if (!Array.isArray(message.service))
                            return "service: array expected";
                        for (var i = 0; i < message.service.length; ++i) {
                            var error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);
                            if (error)
                                return "service." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FileOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo")) {
                        var error = $root.google.protobuf.SourceCodeInfo.verify(message.sourceCodeInfo);
                        if (error)
                            return "sourceCodeInfo." + error;
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        if (!$util.isString(message.syntax))
                            return "syntax: string expected";
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        if (!$util.isString(message.edition))
                            return "edition: string expected";
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 */
                FileDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object["package"] != null)
                        message["package"] = String(object["package"]);
                    if (object.dependency) {
                        if (!Array.isArray(object.dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
                        message.dependency = [];
                        for (var i = 0; i < object.dependency.length; ++i)
                            message.dependency[i] = String(object.dependency[i]);
                    }
                    if (object.publicDependency) {
                        if (!Array.isArray(object.publicDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.publicDependency: array expected");
                        message.publicDependency = [];
                        for (var i = 0; i < object.publicDependency.length; ++i)
                            message.publicDependency[i] = object.publicDependency[i] | 0;
                    }
                    if (object.weakDependency) {
                        if (!Array.isArray(object.weakDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.weakDependency: array expected");
                        message.weakDependency = [];
                        for (var i = 0; i < object.weakDependency.length; ++i)
                            message.weakDependency[i] = object.weakDependency[i] | 0;
                    }
                    if (object.messageType) {
                        if (!Array.isArray(object.messageType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.messageType: array expected");
                        message.messageType = [];
                        for (var i = 0; i < object.messageType.length; ++i) {
                            if (typeof object.messageType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.messageType: object expected");
                            message.messageType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.messageType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.service) {
                        if (!Array.isArray(object.service))
                            throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
                        message.service = [];
                        for (var i = 0; i < object.service.length; ++i) {
                            if (typeof object.service[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                            message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FileOptions.fromObject(object.options);
                    }
                    if (object.sourceCodeInfo != null) {
                        if (typeof object.sourceCodeInfo !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.sourceCodeInfo: object expected");
                        message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.fromObject(object.sourceCodeInfo);
                    }
                    if (object.syntax != null)
                        message.syntax = String(object.syntax);
                    if (object.edition != null)
                        message.edition = String(object.edition);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.dependency = [];
                        object.messageType = [];
                        object.enumType = [];
                        object.service = [];
                        object.extension = [];
                        object.publicDependency = [];
                        object.weakDependency = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object["package"] = "";
                        object.options = null;
                        object.sourceCodeInfo = null;
                        object.syntax = "";
                        object.edition = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        object["package"] = message["package"];
                    if (message.dependency && message.dependency.length) {
                        object.dependency = [];
                        for (var j = 0; j < message.dependency.length; ++j)
                            object.dependency[j] = message.dependency[j];
                    }
                    if (message.messageType && message.messageType.length) {
                        object.messageType = [];
                        for (var j = 0; j < message.messageType.length; ++j)
                            object.messageType[j] = $root.google.protobuf.DescriptorProto.toObject(message.messageType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.service && message.service.length) {
                        object.service = [];
                        for (var j = 0; j < message.service.length; ++j)
                            object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo"))
                        object.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.toObject(message.sourceCodeInfo, options);
                    if (message.publicDependency && message.publicDependency.length) {
                        object.publicDependency = [];
                        for (var j = 0; j < message.publicDependency.length; ++j)
                            object.publicDependency[j] = message.publicDependency[j];
                    }
                    if (message.weakDependency && message.weakDependency.length) {
                        object.weakDependency = [];
                        for (var j = 0; j < message.weakDependency.length; ++j)
                            object.weakDependency[j] = message.weakDependency[j];
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        object.syntax = message.syntax;
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        object.edition = message.edition;
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorProto";
                };
    
                return FileDescriptorProto;
            })();
    
            protobuf.DescriptorProto = (function() {
    
                /**
                 * Properties of a DescriptorProto.
                 * @memberof google.protobuf
                 * @interface IDescriptorProto
                 * @property {string|null} [name] DescriptorProto name
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [nestedType] DescriptorProto nestedType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] DescriptorProto enumType
                 * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extensionRange] DescriptorProto extensionRange
                 * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneofDecl] DescriptorProto oneofDecl
                 * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options
                 * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reservedRange] DescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] DescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new DescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a DescriptorProto.
                 * @implements IDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 */
                function DescriptorProto(properties) {
                    this.field = [];
                    this.extension = [];
                    this.nestedType = [];
                    this.enumType = [];
                    this.extensionRange = [];
                    this.oneofDecl = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.name = "";
    
                /**
                 * DescriptorProto field.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} field
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.field = $util.emptyArray;
    
                /**
                 * DescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * DescriptorProto nestedType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} nestedType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.nestedType = $util.emptyArray;
    
                /**
                 * DescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * DescriptorProto extensionRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extensionRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extensionRange = $util.emptyArray;
    
                /**
                 * DescriptorProto oneofDecl.
                 * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneofDecl
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.oneofDecl = $util.emptyArray;
    
                /**
                 * DescriptorProto options.
                 * @member {google.protobuf.IMessageOptions|null|undefined} options
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.options = null;
    
                /**
                 * DescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reservedRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * DescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new DescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto instance
                 */
                DescriptorProto.create = function create(properties) {
                    return new DescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.field != null && message.field.length)
                        for (var i = 0; i < message.field.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.nestedType != null && message.nestedType.length)
                        for (var i = 0; i < message.nestedType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.nestedType[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.extensionRange != null && message.extensionRange.length)
                        for (var i = 0; i < message.extensionRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extensionRange[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.oneofDecl != null && message.oneofDecl.length)
                        for (var i = 0; i < message.oneofDecl.length; ++i)
                            $root.google.protobuf.OneofDescriptorProto.encode(message.oneofDecl[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.field && message.field.length))
                                    message.field = [];
                                message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                if (!(message.nestedType && message.nestedType.length))
                                    message.nestedType = [];
                                message.nestedType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 4: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.extensionRange && message.extensionRange.length))
                                    message.extensionRange = [];
                                message.extensionRange.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                if (!(message.oneofDecl && message.oneofDecl.length))
                                    message.oneofDecl = [];
                                message.oneofDecl.push($root.google.protobuf.OneofDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.DescriptorProto.ReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 10: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.field != null && message.hasOwnProperty("field")) {
                        if (!Array.isArray(message.field))
                            return "field: array expected";
                        for (var i = 0; i < message.field.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);
                            if (error)
                                return "field." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.nestedType != null && message.hasOwnProperty("nestedType")) {
                        if (!Array.isArray(message.nestedType))
                            return "nestedType: array expected";
                        for (var i = 0; i < message.nestedType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.nestedType[i]);
                            if (error)
                                return "nestedType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.extensionRange != null && message.hasOwnProperty("extensionRange")) {
                        if (!Array.isArray(message.extensionRange))
                            return "extensionRange: array expected";
                        for (var i = 0; i < message.extensionRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extensionRange[i]);
                            if (error)
                                return "extensionRange." + error;
                        }
                    }
                    if (message.oneofDecl != null && message.hasOwnProperty("oneofDecl")) {
                        if (!Array.isArray(message.oneofDecl))
                            return "oneofDecl: array expected";
                        for (var i = 0; i < message.oneofDecl.length; ++i) {
                            var error = $root.google.protobuf.OneofDescriptorProto.verify(message.oneofDecl[i]);
                            if (error)
                                return "oneofDecl." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MessageOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 */
                DescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.DescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.field) {
                        if (!Array.isArray(object.field))
                            throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
                        message.field = [];
                        for (var i = 0; i < object.field.length; ++i) {
                            if (typeof object.field[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                            message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.nestedType) {
                        if (!Array.isArray(object.nestedType))
                            throw TypeError(".google.protobuf.DescriptorProto.nestedType: array expected");
                        message.nestedType = [];
                        for (var i = 0; i < object.nestedType.length; ++i) {
                            if (typeof object.nestedType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.nestedType: object expected");
                            message.nestedType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nestedType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.DescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.extensionRange) {
                        if (!Array.isArray(object.extensionRange))
                            throw TypeError(".google.protobuf.DescriptorProto.extensionRange: array expected");
                        message.extensionRange = [];
                        for (var i = 0; i < object.extensionRange.length; ++i) {
                            if (typeof object.extensionRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extensionRange: object expected");
                            message.extensionRange[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extensionRange[i]);
                        }
                    }
                    if (object.oneofDecl) {
                        if (!Array.isArray(object.oneofDecl))
                            throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: array expected");
                        message.oneofDecl = [];
                        for (var i = 0; i < object.oneofDecl.length; ++i) {
                            if (typeof object.oneofDecl[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: object expected");
                            message.oneofDecl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneofDecl[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.DescriptorProto} message DescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.field = [];
                        object.nestedType = [];
                        object.enumType = [];
                        object.extensionRange = [];
                        object.extension = [];
                        object.oneofDecl = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.field && message.field.length) {
                        object.field = [];
                        for (var j = 0; j < message.field.length; ++j)
                            object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);
                    }
                    if (message.nestedType && message.nestedType.length) {
                        object.nestedType = [];
                        for (var j = 0; j < message.nestedType.length; ++j)
                            object.nestedType[j] = $root.google.protobuf.DescriptorProto.toObject(message.nestedType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.extensionRange && message.extensionRange.length) {
                        object.extensionRange = [];
                        for (var j = 0; j < message.extensionRange.length; ++j)
                            object.extensionRange[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extensionRange[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);
                    if (message.oneofDecl && message.oneofDecl.length) {
                        object.oneofDecl = [];
                        for (var j = 0; j < message.oneofDecl.length; ++j)
                            object.oneofDecl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneofDecl[j], options);
                    }
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this DescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.DescriptorProto";
                };
    
                DescriptorProto.ExtensionRange = (function() {
    
                    /**
                     * Properties of an ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IExtensionRange
                     * @property {number|null} [start] ExtensionRange start
                     * @property {number|null} [end] ExtensionRange end
                     * @property {google.protobuf.IExtensionRangeOptions|null} [options] ExtensionRange options
                     */
    
                    /**
                     * Constructs a new ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents an ExtensionRange.
                     * @implements IExtensionRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     */
                    function ExtensionRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ExtensionRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.start = 0;
    
                    /**
                     * ExtensionRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.end = 0;
    
                    /**
                     * ExtensionRange options.
                     * @member {google.protobuf.IExtensionRangeOptions|null|undefined} options
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.options = null;
    
                    /**
                     * Creates a new ExtensionRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange instance
                     */
                    ExtensionRange.create = function create(properties) {
                        return new ExtensionRange(properties);
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                            $root.google.protobuf.ExtensionRangeOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 3: {
                                    message.options = $root.google.protobuf.ExtensionRangeOptions.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an ExtensionRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ExtensionRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.options != null && message.hasOwnProperty("options")) {
                            var error = $root.google.protobuf.ExtensionRangeOptions.verify(message.options);
                            if (error)
                                return "options." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     */
                    ExtensionRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        if (object.options != null) {
                            if (typeof object.options !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.ExtensionRange.options: object expected");
                            message.options = $root.google.protobuf.ExtensionRangeOptions.fromObject(object.options);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ExtensionRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                            object.options = null;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.options != null && message.hasOwnProperty("options"))
                            object.options = $root.google.protobuf.ExtensionRangeOptions.toObject(message.options, options);
                        return object;
                    };
    
                    /**
                     * Converts this ExtensionRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ExtensionRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ExtensionRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ExtensionRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ExtensionRange";
                    };
    
                    return ExtensionRange;
                })();
    
                DescriptorProto.ReservedRange = (function() {
    
                    /**
                     * Properties of a ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IReservedRange
                     * @property {number|null} [start] ReservedRange start
                     * @property {number|null} [end] ReservedRange end
                     */
    
                    /**
                     * Constructs a new ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents a ReservedRange.
                     * @implements IReservedRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     */
                    function ReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.start = 0;
    
                    /**
                     * ReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new ReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange instance
                     */
                    ReservedRange.create = function create(properties) {
                        return new ReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     */
                    ReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ReservedRange";
                    };
    
                    return ReservedRange;
                })();
    
                return DescriptorProto;
            })();
    
            protobuf.ExtensionRangeOptions = (function() {
    
                /**
                 * Properties of an ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @interface IExtensionRangeOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ExtensionRangeOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an ExtensionRangeOptions.
                 * @implements IExtensionRangeOptions
                 * @constructor
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 */
                function ExtensionRangeOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ExtensionRangeOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 */
                ExtensionRangeOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new ExtensionRangeOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions instance
                 */
                ExtensionRangeOptions.create = function create(properties) {
                    return new ExtensionRangeOptions(properties);
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message, length delimited. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ExtensionRangeOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an ExtensionRangeOptions message.
                 * @function verify
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ExtensionRangeOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an ExtensionRangeOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 */
                ExtensionRangeOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ExtensionRangeOptions)
                        return object;
                    var message = new $root.google.protobuf.ExtensionRangeOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an ExtensionRangeOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.ExtensionRangeOptions} message ExtensionRangeOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ExtensionRangeOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ExtensionRangeOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ExtensionRangeOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ExtensionRangeOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ExtensionRangeOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ExtensionRangeOptions";
                };
    
                return ExtensionRangeOptions;
            })();
    
            protobuf.FieldDescriptorProto = (function() {
    
                /**
                 * Properties of a FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFieldDescriptorProto
                 * @property {string|null} [name] FieldDescriptorProto name
                 * @property {number|null} [number] FieldDescriptorProto number
                 * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label
                 * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type
                 * @property {string|null} [typeName] FieldDescriptorProto typeName
                 * @property {string|null} [extendee] FieldDescriptorProto extendee
                 * @property {string|null} [defaultValue] FieldDescriptorProto defaultValue
                 * @property {number|null} [oneofIndex] FieldDescriptorProto oneofIndex
                 * @property {string|null} [jsonName] FieldDescriptorProto jsonName
                 * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options
                 * @property {boolean|null} [proto3Optional] FieldDescriptorProto proto3Optional
                 */
    
                /**
                 * Constructs a new FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldDescriptorProto.
                 * @implements IFieldDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 */
                function FieldDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.name = "";
    
                /**
                 * FieldDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.number = 0;
    
                /**
                 * FieldDescriptorProto label.
                 * @member {google.protobuf.FieldDescriptorProto.Label} label
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.label = 1;
    
                /**
                 * FieldDescriptorProto type.
                 * @member {google.protobuf.FieldDescriptorProto.Type} type
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type = 1;
    
                /**
                 * FieldDescriptorProto typeName.
                 * @member {string} typeName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.typeName = "";
    
                /**
                 * FieldDescriptorProto extendee.
                 * @member {string} extendee
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.extendee = "";
    
                /**
                 * FieldDescriptorProto defaultValue.
                 * @member {string} defaultValue
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.defaultValue = "";
    
                /**
                 * FieldDescriptorProto oneofIndex.
                 * @member {number} oneofIndex
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.oneofIndex = 0;
    
                /**
                 * FieldDescriptorProto jsonName.
                 * @member {string} jsonName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.jsonName = "";
    
                /**
                 * FieldDescriptorProto options.
                 * @member {google.protobuf.IFieldOptions|null|undefined} options
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.options = null;
    
                /**
                 * FieldDescriptorProto proto3Optional.
                 * @member {boolean} proto3Optional
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.proto3Optional = false;
    
                /**
                 * Creates a new FieldDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto instance
                 */
                FieldDescriptorProto.create = function create(properties) {
                    return new FieldDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.extendee != null && Object.hasOwnProperty.call(message, "extendee"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);
                    if (message.label != null && Object.hasOwnProperty.call(message, "label"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                    if (message.typeName != null && Object.hasOwnProperty.call(message, "typeName"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.typeName);
                    if (message.defaultValue != null && Object.hasOwnProperty.call(message, "defaultValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.defaultValue);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.oneofIndex != null && Object.hasOwnProperty.call(message, "oneofIndex"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.oneofIndex);
                    if (message.jsonName != null && Object.hasOwnProperty.call(message, "jsonName"))
                        writer.uint32(/* id 10, wireType 2 =*/82).string(message.jsonName);
                    if (message.proto3Optional != null && Object.hasOwnProperty.call(message, "proto3Optional"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.proto3Optional);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 3: {
                                message.number = reader.int32();
                                break;
                            }
                        case 4: {
                                message.label = reader.int32();
                                break;
                            }
                        case 5: {
                                message.type = reader.int32();
                                break;
                            }
                        case 6: {
                                message.typeName = reader.string();
                                break;
                            }
                        case 2: {
                                message.extendee = reader.string();
                                break;
                            }
                        case 7: {
                                message.defaultValue = reader.string();
                                break;
                            }
                        case 9: {
                                message.oneofIndex = reader.int32();
                                break;
                            }
                        case 10: {
                                message.jsonName = reader.string();
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 17: {
                                message.proto3Optional = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.label != null && message.hasOwnProperty("label"))
                        switch (message.label) {
                        default:
                            return "label: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                            break;
                        }
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        if (!$util.isString(message.typeName))
                            return "typeName: string expected";
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        if (!$util.isString(message.extendee))
                            return "extendee: string expected";
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        if (!$util.isString(message.defaultValue))
                            return "defaultValue: string expected";
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        if (!$util.isInteger(message.oneofIndex))
                            return "oneofIndex: integer expected";
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        if (!$util.isString(message.jsonName))
                            return "jsonName: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FieldOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        if (typeof message.proto3Optional !== "boolean")
                            return "proto3Optional: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 */
                FieldDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FieldDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    switch (object.label) {
                    default:
                        if (typeof object.label === "number") {
                            message.label = object.label;
                            break;
                        }
                        break;
                    case "LABEL_OPTIONAL":
                    case 1:
                        message.label = 1;
                        break;
                    case "LABEL_REQUIRED":
                    case 2:
                        message.label = 2;
                        break;
                    case "LABEL_REPEATED":
                    case 3:
                        message.label = 3;
                        break;
                    }
                    switch (object.type) {
                    default:
                        if (typeof object.type === "number") {
                            message.type = object.type;
                            break;
                        }
                        break;
                    case "TYPE_DOUBLE":
                    case 1:
                        message.type = 1;
                        break;
                    case "TYPE_FLOAT":
                    case 2:
                        message.type = 2;
                        break;
                    case "TYPE_INT64":
                    case 3:
                        message.type = 3;
                        break;
                    case "TYPE_UINT64":
                    case 4:
                        message.type = 4;
                        break;
                    case "TYPE_INT32":
                    case 5:
                        message.type = 5;
                        break;
                    case "TYPE_FIXED64":
                    case 6:
                        message.type = 6;
                        break;
                    case "TYPE_FIXED32":
                    case 7:
                        message.type = 7;
                        break;
                    case "TYPE_BOOL":
                    case 8:
                        message.type = 8;
                        break;
                    case "TYPE_STRING":
                    case 9:
                        message.type = 9;
                        break;
                    case "TYPE_GROUP":
                    case 10:
                        message.type = 10;
                        break;
                    case "TYPE_MESSAGE":
                    case 11:
                        message.type = 11;
                        break;
                    case "TYPE_BYTES":
                    case 12:
                        message.type = 12;
                        break;
                    case "TYPE_UINT32":
                    case 13:
                        message.type = 13;
                        break;
                    case "TYPE_ENUM":
                    case 14:
                        message.type = 14;
                        break;
                    case "TYPE_SFIXED32":
                    case 15:
                        message.type = 15;
                        break;
                    case "TYPE_SFIXED64":
                    case 16:
                        message.type = 16;
                        break;
                    case "TYPE_SINT32":
                    case 17:
                        message.type = 17;
                        break;
                    case "TYPE_SINT64":
                    case 18:
                        message.type = 18;
                        break;
                    }
                    if (object.typeName != null)
                        message.typeName = String(object.typeName);
                    if (object.extendee != null)
                        message.extendee = String(object.extendee);
                    if (object.defaultValue != null)
                        message.defaultValue = String(object.defaultValue);
                    if (object.oneofIndex != null)
                        message.oneofIndex = object.oneofIndex | 0;
                    if (object.jsonName != null)
                        message.jsonName = String(object.jsonName);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);
                    }
                    if (object.proto3Optional != null)
                        message.proto3Optional = Boolean(object.proto3Optional);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.extendee = "";
                        object.number = 0;
                        object.label = options.enums === String ? "LABEL_OPTIONAL" : 1;
                        object.type = options.enums === String ? "TYPE_DOUBLE" : 1;
                        object.typeName = "";
                        object.defaultValue = "";
                        object.options = null;
                        object.oneofIndex = 0;
                        object.jsonName = "";
                        object.proto3Optional = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        object.extendee = message.extendee;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] === undefined ? message.label : $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] === undefined ? message.type : $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        object.typeName = message.typeName;
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        object.defaultValue = message.defaultValue;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        object.oneofIndex = message.oneofIndex;
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        object.jsonName = message.jsonName;
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        object.proto3Optional = message.proto3Optional;
                    return object;
                };
    
                /**
                 * Converts this FieldDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldDescriptorProto";
                };
    
                /**
                 * Type enum.
                 * @name google.protobuf.FieldDescriptorProto.Type
                 * @enum {number}
                 * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value
                 * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
                 * @property {number} TYPE_INT64=3 TYPE_INT64 value
                 * @property {number} TYPE_UINT64=4 TYPE_UINT64 value
                 * @property {number} TYPE_INT32=5 TYPE_INT32 value
                 * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value
                 * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value
                 * @property {number} TYPE_BOOL=8 TYPE_BOOL value
                 * @property {number} TYPE_STRING=9 TYPE_STRING value
                 * @property {number} TYPE_GROUP=10 TYPE_GROUP value
                 * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value
                 * @property {number} TYPE_BYTES=12 TYPE_BYTES value
                 * @property {number} TYPE_UINT32=13 TYPE_UINT32 value
                 * @property {number} TYPE_ENUM=14 TYPE_ENUM value
                 * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value
                 * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value
                 * @property {number} TYPE_SINT32=17 TYPE_SINT32 value
                 * @property {number} TYPE_SINT64=18 TYPE_SINT64 value
                 */
                FieldDescriptorProto.Type = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "TYPE_DOUBLE"] = 1;
                    values[valuesById[2] = "TYPE_FLOAT"] = 2;
                    values[valuesById[3] = "TYPE_INT64"] = 3;
                    values[valuesById[4] = "TYPE_UINT64"] = 4;
                    values[valuesById[5] = "TYPE_INT32"] = 5;
                    values[valuesById[6] = "TYPE_FIXED64"] = 6;
                    values[valuesById[7] = "TYPE_FIXED32"] = 7;
                    values[valuesById[8] = "TYPE_BOOL"] = 8;
                    values[valuesById[9] = "TYPE_STRING"] = 9;
                    values[valuesById[10] = "TYPE_GROUP"] = 10;
                    values[valuesById[11] = "TYPE_MESSAGE"] = 11;
                    values[valuesById[12] = "TYPE_BYTES"] = 12;
                    values[valuesById[13] = "TYPE_UINT32"] = 13;
                    values[valuesById[14] = "TYPE_ENUM"] = 14;
                    values[valuesById[15] = "TYPE_SFIXED32"] = 15;
                    values[valuesById[16] = "TYPE_SFIXED64"] = 16;
                    values[valuesById[17] = "TYPE_SINT32"] = 17;
                    values[valuesById[18] = "TYPE_SINT64"] = 18;
                    return values;
                })();
    
                /**
                 * Label enum.
                 * @name google.protobuf.FieldDescriptorProto.Label
                 * @enum {number}
                 * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value
                 * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value
                 * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value
                 */
                FieldDescriptorProto.Label = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "LABEL_OPTIONAL"] = 1;
                    values[valuesById[2] = "LABEL_REQUIRED"] = 2;
                    values[valuesById[3] = "LABEL_REPEATED"] = 3;
                    return values;
                })();
    
                return FieldDescriptorProto;
            })();
    
            protobuf.OneofDescriptorProto = (function() {
    
                /**
                 * Properties of an OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IOneofDescriptorProto
                 * @property {string|null} [name] OneofDescriptorProto name
                 * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options
                 */
    
                /**
                 * Constructs a new OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofDescriptorProto.
                 * @implements IOneofDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 */
                function OneofDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.name = "";
    
                /**
                 * OneofDescriptorProto options.
                 * @member {google.protobuf.IOneofOptions|null|undefined} options
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new OneofDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto instance
                 */
                OneofDescriptorProto.create = function create(properties) {
                    return new OneofDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.OneofOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.options = $root.google.protobuf.OneofOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.OneofOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 */
                OneofDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.OneofDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.OneofDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this OneofDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofDescriptorProto";
                };
    
                return OneofDescriptorProto;
            })();
    
            protobuf.EnumDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumDescriptorProto
                 * @property {string|null} [name] EnumDescriptorProto name
                 * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value
                 * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options
                 * @property {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>|null} [reservedRange] EnumDescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] EnumDescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumDescriptorProto.
                 * @implements IEnumDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 */
                function EnumDescriptorProto(properties) {
                    this.value = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.name = "";
    
                /**
                 * EnumDescriptorProto value.
                 * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.value = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto options.
                 * @member {google.protobuf.IEnumOptions|null|undefined} options
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.options = null;
    
                /**
                 * EnumDescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>} reservedRange
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new EnumDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto instance
                 */
                EnumDescriptorProto.create = function create(properties) {
                    return new EnumDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.value != null && message.value.length)
                        for (var i = 0; i < message.value.length; ++i)
                            $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.value && message.value.length))
                                    message.value = [];
                                message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 4: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.EnumDescriptorProto.EnumReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.value != null && message.hasOwnProperty("value")) {
                        if (!Array.isArray(message.value))
                            return "value: array expected";
                        for (var i = 0; i < message.value.length; ++i) {
                            var error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);
                            if (error)
                                return "value." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 */
                EnumDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.value) {
                        if (!Array.isArray(object.value))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
                        message.value = [];
                        for (var i = 0; i < object.value.length; ++i) {
                            if (typeof object.value[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                            message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.value = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.value && message.value.length) {
                        object.value = [];
                        for (var j = 0; j < message.value.length; ++j)
                            object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto";
                };
    
                EnumDescriptorProto.EnumReservedRange = (function() {
    
                    /**
                     * Properties of an EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @interface IEnumReservedRange
                     * @property {number|null} [start] EnumReservedRange start
                     * @property {number|null} [end] EnumReservedRange end
                     */
    
                    /**
                     * Constructs a new EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @classdesc Represents an EnumReservedRange.
                     * @implements IEnumReservedRange
                     * @constructor
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     */
                    function EnumReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * EnumReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.start = 0;
    
                    /**
                     * EnumReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new EnumReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange instance
                     */
                    EnumReservedRange.create = function create(properties) {
                        return new EnumReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an EnumReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    EnumReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an EnumReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     */
                    EnumReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.EnumDescriptorProto.EnumReservedRange)
                            return object;
                        var message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an EnumReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.EnumReservedRange} message EnumReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    EnumReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this EnumReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    EnumReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for EnumReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    EnumReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto.EnumReservedRange";
                    };
    
                    return EnumReservedRange;
                })();
    
                return EnumDescriptorProto;
            })();
    
            protobuf.EnumValueDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumValueDescriptorProto
                 * @property {string|null} [name] EnumValueDescriptorProto name
                 * @property {number|null} [number] EnumValueDescriptorProto number
                 * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueDescriptorProto.
                 * @implements IEnumValueDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 */
                function EnumValueDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.name = "";
    
                /**
                 * EnumValueDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.number = 0;
    
                /**
                 * EnumValueDescriptorProto options.
                 * @member {google.protobuf.IEnumValueOptions|null|undefined} options
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumValueDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto instance
                 */
                EnumValueDescriptorProto.create = function create(properties) {
                    return new EnumValueDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.number = reader.int32();
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumValueOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 */
                EnumValueDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumValueDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.number = 0;
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumValueDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueDescriptorProto";
                };
    
                return EnumValueDescriptorProto;
            })();
    
            protobuf.ServiceDescriptorProto = (function() {
    
                /**
                 * Properties of a ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IServiceDescriptorProto
                 * @property {string|null} [name] ServiceDescriptorProto name
                 * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method
                 * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options
                 */
    
                /**
                 * Constructs a new ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceDescriptorProto.
                 * @implements IServiceDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 */
                function ServiceDescriptorProto(properties) {
                    this.method = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.name = "";
    
                /**
                 * ServiceDescriptorProto method.
                 * @member {Array.<google.protobuf.IMethodDescriptorProto>} method
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.method = $util.emptyArray;
    
                /**
                 * ServiceDescriptorProto options.
                 * @member {google.protobuf.IServiceOptions|null|undefined} options
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new ServiceDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto instance
                 */
                ServiceDescriptorProto.create = function create(properties) {
                    return new ServiceDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.method != null && message.method.length)
                        for (var i = 0; i < message.method.length; ++i)
                            $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.method && message.method.length))
                                    message.method = [];
                                message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.method != null && message.hasOwnProperty("method")) {
                        if (!Array.isArray(message.method))
                            return "method: array expected";
                        for (var i = 0; i < message.method.length; ++i) {
                            var error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);
                            if (error)
                                return "method." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.ServiceOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 */
                ServiceDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.ServiceDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.method) {
                        if (!Array.isArray(object.method))
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
                        message.method = [];
                        for (var i = 0; i < object.method.length; ++i) {
                            if (typeof object.method[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                            message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.method = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.method && message.method.length) {
                        object.method = [];
                        for (var j = 0; j < message.method.length; ++j)
                            object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this ServiceDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceDescriptorProto";
                };
    
                return ServiceDescriptorProto;
            })();
    
            protobuf.MethodDescriptorProto = (function() {
    
                /**
                 * Properties of a MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IMethodDescriptorProto
                 * @property {string|null} [name] MethodDescriptorProto name
                 * @property {string|null} [inputType] MethodDescriptorProto inputType
                 * @property {string|null} [outputType] MethodDescriptorProto outputType
                 * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options
                 * @property {boolean|null} [clientStreaming] MethodDescriptorProto clientStreaming
                 * @property {boolean|null} [serverStreaming] MethodDescriptorProto serverStreaming
                 */
    
                /**
                 * Constructs a new MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodDescriptorProto.
                 * @implements IMethodDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 */
                function MethodDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.name = "";
    
                /**
                 * MethodDescriptorProto inputType.
                 * @member {string} inputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.inputType = "";
    
                /**
                 * MethodDescriptorProto outputType.
                 * @member {string} outputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.outputType = "";
    
                /**
                 * MethodDescriptorProto options.
                 * @member {google.protobuf.IMethodOptions|null|undefined} options
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.options = null;
    
                /**
                 * MethodDescriptorProto clientStreaming.
                 * @member {boolean} clientStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.clientStreaming = false;
    
                /**
                 * MethodDescriptorProto serverStreaming.
                 * @member {boolean} serverStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.serverStreaming = false;
    
                /**
                 * Creates a new MethodDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto instance
                 */
                MethodDescriptorProto.create = function create(properties) {
                    return new MethodDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.inputType != null && Object.hasOwnProperty.call(message, "inputType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.inputType);
                    if (message.outputType != null && Object.hasOwnProperty.call(message, "outputType"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.outputType);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.clientStreaming != null && Object.hasOwnProperty.call(message, "clientStreaming"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.clientStreaming);
                    if (message.serverStreaming != null && Object.hasOwnProperty.call(message, "serverStreaming"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.serverStreaming);
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.inputType = reader.string();
                                break;
                            }
                        case 3: {
                                message.outputType = reader.string();
                                break;
                            }
                        case 4: {
                                message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.clientStreaming = reader.bool();
                                break;
                            }
                        case 6: {
                                message.serverStreaming = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        if (!$util.isString(message.inputType))
                            return "inputType: string expected";
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        if (!$util.isString(message.outputType))
                            return "outputType: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MethodOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        if (typeof message.clientStreaming !== "boolean")
                            return "clientStreaming: boolean expected";
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        if (typeof message.serverStreaming !== "boolean")
                            return "serverStreaming: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 */
                MethodDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.MethodDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.inputType != null)
                        message.inputType = String(object.inputType);
                    if (object.outputType != null)
                        message.outputType = String(object.outputType);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);
                    }
                    if (object.clientStreaming != null)
                        message.clientStreaming = Boolean(object.clientStreaming);
                    if (object.serverStreaming != null)
                        message.serverStreaming = Boolean(object.serverStreaming);
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.inputType = "";
                        object.outputType = "";
                        object.options = null;
                        object.clientStreaming = false;
                        object.serverStreaming = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        object.inputType = message.inputType;
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        object.outputType = message.outputType;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        object.clientStreaming = message.clientStreaming;
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        object.serverStreaming = message.serverStreaming;
                    return object;
                };
    
                /**
                 * Converts this MethodDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodDescriptorProto";
                };
    
                return MethodDescriptorProto;
            })();
    
            protobuf.FileOptions = (function() {
    
                /**
                 * Properties of a FileOptions.
                 * @memberof google.protobuf
                 * @interface IFileOptions
                 * @property {string|null} [javaPackage] FileOptions javaPackage
                 * @property {string|null} [javaOuterClassname] FileOptions javaOuterClassname
                 * @property {boolean|null} [javaMultipleFiles] FileOptions javaMultipleFiles
                 * @property {boolean|null} [javaGenerateEqualsAndHash] FileOptions javaGenerateEqualsAndHash
                 * @property {boolean|null} [javaStringCheckUtf8] FileOptions javaStringCheckUtf8
                 * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimizeFor] FileOptions optimizeFor
                 * @property {string|null} [goPackage] FileOptions goPackage
                 * @property {boolean|null} [ccGenericServices] FileOptions ccGenericServices
                 * @property {boolean|null} [javaGenericServices] FileOptions javaGenericServices
                 * @property {boolean|null} [pyGenericServices] FileOptions pyGenericServices
                 * @property {boolean|null} [phpGenericServices] FileOptions phpGenericServices
                 * @property {boolean|null} [deprecated] FileOptions deprecated
                 * @property {boolean|null} [ccEnableArenas] FileOptions ccEnableArenas
                 * @property {string|null} [objcClassPrefix] FileOptions objcClassPrefix
                 * @property {string|null} [csharpNamespace] FileOptions csharpNamespace
                 * @property {string|null} [swiftPrefix] FileOptions swiftPrefix
                 * @property {string|null} [phpClassPrefix] FileOptions phpClassPrefix
                 * @property {string|null} [phpNamespace] FileOptions phpNamespace
                 * @property {string|null} [phpMetadataNamespace] FileOptions phpMetadataNamespace
                 * @property {string|null} [rubyPackage] FileOptions rubyPackage
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FileOptions uninterpretedOption
                 * @property {Array.<google.api.IResourceDescriptor>|null} [".google.api.resourceDefinition"] FileOptions .google.api.resourceDefinition
                 */
    
                /**
                 * Constructs a new FileOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileOptions.
                 * @implements IFileOptions
                 * @constructor
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 */
                function FileOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.resourceDefinition"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileOptions javaPackage.
                 * @member {string} javaPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaPackage = "";
    
                /**
                 * FileOptions javaOuterClassname.
                 * @member {string} javaOuterClassname
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaOuterClassname = "";
    
                /**
                 * FileOptions javaMultipleFiles.
                 * @member {boolean} javaMultipleFiles
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaMultipleFiles = false;
    
                /**
                 * FileOptions javaGenerateEqualsAndHash.
                 * @member {boolean} javaGenerateEqualsAndHash
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenerateEqualsAndHash = false;
    
                /**
                 * FileOptions javaStringCheckUtf8.
                 * @member {boolean} javaStringCheckUtf8
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaStringCheckUtf8 = false;
    
                /**
                 * FileOptions optimizeFor.
                 * @member {google.protobuf.FileOptions.OptimizeMode} optimizeFor
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.optimizeFor = 1;
    
                /**
                 * FileOptions goPackage.
                 * @member {string} goPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.goPackage = "";
    
                /**
                 * FileOptions ccGenericServices.
                 * @member {boolean} ccGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccGenericServices = false;
    
                /**
                 * FileOptions javaGenericServices.
                 * @member {boolean} javaGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenericServices = false;
    
                /**
                 * FileOptions pyGenericServices.
                 * @member {boolean} pyGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.pyGenericServices = false;
    
                /**
                 * FileOptions phpGenericServices.
                 * @member {boolean} phpGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpGenericServices = false;
    
                /**
                 * FileOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.deprecated = false;
    
                /**
                 * FileOptions ccEnableArenas.
                 * @member {boolean} ccEnableArenas
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccEnableArenas = true;
    
                /**
                 * FileOptions objcClassPrefix.
                 * @member {string} objcClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.objcClassPrefix = "";
    
                /**
                 * FileOptions csharpNamespace.
                 * @member {string} csharpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.csharpNamespace = "";
    
                /**
                 * FileOptions swiftPrefix.
                 * @member {string} swiftPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.swiftPrefix = "";
    
                /**
                 * FileOptions phpClassPrefix.
                 * @member {string} phpClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpClassPrefix = "";
    
                /**
                 * FileOptions phpNamespace.
                 * @member {string} phpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpNamespace = "";
    
                /**
                 * FileOptions phpMetadataNamespace.
                 * @member {string} phpMetadataNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpMetadataNamespace = "";
    
                /**
                 * FileOptions rubyPackage.
                 * @member {string} rubyPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.rubyPackage = "";
    
                /**
                 * FileOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FileOptions .google.api.resourceDefinition.
                 * @member {Array.<google.api.IResourceDescriptor>} .google.api.resourceDefinition
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".google.api.resourceDefinition"] = $util.emptyArray;
    
                /**
                 * Creates a new FileOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FileOptions} FileOptions instance
                 */
                FileOptions.create = function create(properties) {
                    return new FileOptions(properties);
                };
    
                /**
                 * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.javaPackage != null && Object.hasOwnProperty.call(message, "javaPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.javaPackage);
                    if (message.javaOuterClassname != null && Object.hasOwnProperty.call(message, "javaOuterClassname"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.javaOuterClassname);
                    if (message.optimizeFor != null && Object.hasOwnProperty.call(message, "optimizeFor"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimizeFor);
                    if (message.javaMultipleFiles != null && Object.hasOwnProperty.call(message, "javaMultipleFiles"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.javaMultipleFiles);
                    if (message.goPackage != null && Object.hasOwnProperty.call(message, "goPackage"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.goPackage);
                    if (message.ccGenericServices != null && Object.hasOwnProperty.call(message, "ccGenericServices"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.ccGenericServices);
                    if (message.javaGenericServices != null && Object.hasOwnProperty.call(message, "javaGenericServices"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.javaGenericServices);
                    if (message.pyGenericServices != null && Object.hasOwnProperty.call(message, "pyGenericServices"))
                        writer.uint32(/* id 18, wireType 0 =*/144).bool(message.pyGenericServices);
                    if (message.javaGenerateEqualsAndHash != null && Object.hasOwnProperty.call(message, "javaGenerateEqualsAndHash"))
                        writer.uint32(/* id 20, wireType 0 =*/160).bool(message.javaGenerateEqualsAndHash);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 23, wireType 0 =*/184).bool(message.deprecated);
                    if (message.javaStringCheckUtf8 != null && Object.hasOwnProperty.call(message, "javaStringCheckUtf8"))
                        writer.uint32(/* id 27, wireType 0 =*/216).bool(message.javaStringCheckUtf8);
                    if (message.ccEnableArenas != null && Object.hasOwnProperty.call(message, "ccEnableArenas"))
                        writer.uint32(/* id 31, wireType 0 =*/248).bool(message.ccEnableArenas);
                    if (message.objcClassPrefix != null && Object.hasOwnProperty.call(message, "objcClassPrefix"))
                        writer.uint32(/* id 36, wireType 2 =*/290).string(message.objcClassPrefix);
                    if (message.csharpNamespace != null && Object.hasOwnProperty.call(message, "csharpNamespace"))
                        writer.uint32(/* id 37, wireType 2 =*/298).string(message.csharpNamespace);
                    if (message.swiftPrefix != null && Object.hasOwnProperty.call(message, "swiftPrefix"))
                        writer.uint32(/* id 39, wireType 2 =*/314).string(message.swiftPrefix);
                    if (message.phpClassPrefix != null && Object.hasOwnProperty.call(message, "phpClassPrefix"))
                        writer.uint32(/* id 40, wireType 2 =*/322).string(message.phpClassPrefix);
                    if (message.phpNamespace != null && Object.hasOwnProperty.call(message, "phpNamespace"))
                        writer.uint32(/* id 41, wireType 2 =*/330).string(message.phpNamespace);
                    if (message.phpGenericServices != null && Object.hasOwnProperty.call(message, "phpGenericServices"))
                        writer.uint32(/* id 42, wireType 0 =*/336).bool(message.phpGenericServices);
                    if (message.phpMetadataNamespace != null && Object.hasOwnProperty.call(message, "phpMetadataNamespace"))
                        writer.uint32(/* id 44, wireType 2 =*/354).string(message.phpMetadataNamespace);
                    if (message.rubyPackage != null && Object.hasOwnProperty.call(message, "rubyPackage"))
                        writer.uint32(/* id 45, wireType 2 =*/362).string(message.rubyPackage);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resourceDefinition"] != null && message[".google.api.resourceDefinition"].length)
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i)
                            $root.google.api.ResourceDescriptor.encode(message[".google.api.resourceDefinition"][i], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.javaPackage = reader.string();
                                break;
                            }
                        case 8: {
                                message.javaOuterClassname = reader.string();
                                break;
                            }
                        case 10: {
                                message.javaMultipleFiles = reader.bool();
                                break;
                            }
                        case 20: {
                                message.javaGenerateEqualsAndHash = reader.bool();
                                break;
                            }
                        case 27: {
                                message.javaStringCheckUtf8 = reader.bool();
                                break;
                            }
                        case 9: {
                                message.optimizeFor = reader.int32();
                                break;
                            }
                        case 11: {
                                message.goPackage = reader.string();
                                break;
                            }
                        case 16: {
                                message.ccGenericServices = reader.bool();
                                break;
                            }
                        case 17: {
                                message.javaGenericServices = reader.bool();
                                break;
                            }
                        case 18: {
                                message.pyGenericServices = reader.bool();
                                break;
                            }
                        case 42: {
                                message.phpGenericServices = reader.bool();
                                break;
                            }
                        case 23: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 31: {
                                message.ccEnableArenas = reader.bool();
                                break;
                            }
                        case 36: {
                                message.objcClassPrefix = reader.string();
                                break;
                            }
                        case 37: {
                                message.csharpNamespace = reader.string();
                                break;
                            }
                        case 39: {
                                message.swiftPrefix = reader.string();
                                break;
                            }
                        case 40: {
                                message.phpClassPrefix = reader.string();
                                break;
                            }
                        case 41: {
                                message.phpNamespace = reader.string();
                                break;
                            }
                        case 44: {
                                message.phpMetadataNamespace = reader.string();
                                break;
                            }
                        case 45: {
                                message.rubyPackage = reader.string();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                if (!(message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length))
                                    message[".google.api.resourceDefinition"] = [];
                                message[".google.api.resourceDefinition"].push($root.google.api.ResourceDescriptor.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileOptions message.
                 * @function verify
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        if (!$util.isString(message.javaPackage))
                            return "javaPackage: string expected";
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        if (!$util.isString(message.javaOuterClassname))
                            return "javaOuterClassname: string expected";
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        if (typeof message.javaMultipleFiles !== "boolean")
                            return "javaMultipleFiles: boolean expected";
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        if (typeof message.javaGenerateEqualsAndHash !== "boolean")
                            return "javaGenerateEqualsAndHash: boolean expected";
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        if (typeof message.javaStringCheckUtf8 !== "boolean")
                            return "javaStringCheckUtf8: boolean expected";
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        switch (message.optimizeFor) {
                        default:
                            return "optimizeFor: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        if (!$util.isString(message.goPackage))
                            return "goPackage: string expected";
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        if (typeof message.ccGenericServices !== "boolean")
                            return "ccGenericServices: boolean expected";
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        if (typeof message.javaGenericServices !== "boolean")
                            return "javaGenericServices: boolean expected";
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        if (typeof message.pyGenericServices !== "boolean")
                            return "pyGenericServices: boolean expected";
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        if (typeof message.phpGenericServices !== "boolean")
                            return "phpGenericServices: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        if (typeof message.ccEnableArenas !== "boolean")
                            return "ccEnableArenas: boolean expected";
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        if (!$util.isString(message.objcClassPrefix))
                            return "objcClassPrefix: string expected";
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        if (!$util.isString(message.csharpNamespace))
                            return "csharpNamespace: string expected";
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        if (!$util.isString(message.swiftPrefix))
                            return "swiftPrefix: string expected";
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        if (!$util.isString(message.phpClassPrefix))
                            return "phpClassPrefix: string expected";
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        if (!$util.isString(message.phpNamespace))
                            return "phpNamespace: string expected";
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        if (!$util.isString(message.phpMetadataNamespace))
                            return "phpMetadataNamespace: string expected";
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        if (!$util.isString(message.rubyPackage))
                            return "rubyPackage: string expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resourceDefinition"] != null && message.hasOwnProperty(".google.api.resourceDefinition")) {
                        if (!Array.isArray(message[".google.api.resourceDefinition"]))
                            return ".google.api.resourceDefinition: array expected";
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i) {
                            var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resourceDefinition"][i]);
                            if (error)
                                return ".google.api.resourceDefinition." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileOptions} FileOptions
                 */
                FileOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileOptions)
                        return object;
                    var message = new $root.google.protobuf.FileOptions();
                    if (object.javaPackage != null)
                        message.javaPackage = String(object.javaPackage);
                    if (object.javaOuterClassname != null)
                        message.javaOuterClassname = String(object.javaOuterClassname);
                    if (object.javaMultipleFiles != null)
                        message.javaMultipleFiles = Boolean(object.javaMultipleFiles);
                    if (object.javaGenerateEqualsAndHash != null)
                        message.javaGenerateEqualsAndHash = Boolean(object.javaGenerateEqualsAndHash);
                    if (object.javaStringCheckUtf8 != null)
                        message.javaStringCheckUtf8 = Boolean(object.javaStringCheckUtf8);
                    switch (object.optimizeFor) {
                    default:
                        if (typeof object.optimizeFor === "number") {
                            message.optimizeFor = object.optimizeFor;
                            break;
                        }
                        break;
                    case "SPEED":
                    case 1:
                        message.optimizeFor = 1;
                        break;
                    case "CODE_SIZE":
                    case 2:
                        message.optimizeFor = 2;
                        break;
                    case "LITE_RUNTIME":
                    case 3:
                        message.optimizeFor = 3;
                        break;
                    }
                    if (object.goPackage != null)
                        message.goPackage = String(object.goPackage);
                    if (object.ccGenericServices != null)
                        message.ccGenericServices = Boolean(object.ccGenericServices);
                    if (object.javaGenericServices != null)
                        message.javaGenericServices = Boolean(object.javaGenericServices);
                    if (object.pyGenericServices != null)
                        message.pyGenericServices = Boolean(object.pyGenericServices);
                    if (object.phpGenericServices != null)
                        message.phpGenericServices = Boolean(object.phpGenericServices);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.ccEnableArenas != null)
                        message.ccEnableArenas = Boolean(object.ccEnableArenas);
                    if (object.objcClassPrefix != null)
                        message.objcClassPrefix = String(object.objcClassPrefix);
                    if (object.csharpNamespace != null)
                        message.csharpNamespace = String(object.csharpNamespace);
                    if (object.swiftPrefix != null)
                        message.swiftPrefix = String(object.swiftPrefix);
                    if (object.phpClassPrefix != null)
                        message.phpClassPrefix = String(object.phpClassPrefix);
                    if (object.phpNamespace != null)
                        message.phpNamespace = String(object.phpNamespace);
                    if (object.phpMetadataNamespace != null)
                        message.phpMetadataNamespace = String(object.phpMetadataNamespace);
                    if (object.rubyPackage != null)
                        message.rubyPackage = String(object.rubyPackage);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resourceDefinition"]) {
                        if (!Array.isArray(object[".google.api.resourceDefinition"]))
                            throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: array expected");
                        message[".google.api.resourceDefinition"] = [];
                        for (var i = 0; i < object[".google.api.resourceDefinition"].length; ++i) {
                            if (typeof object[".google.api.resourceDefinition"][i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: object expected");
                            message[".google.api.resourceDefinition"][i] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resourceDefinition"][i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.FileOptions} message FileOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.resourceDefinition"] = [];
                    }
                    if (options.defaults) {
                        object.javaPackage = "";
                        object.javaOuterClassname = "";
                        object.optimizeFor = options.enums === String ? "SPEED" : 1;
                        object.javaMultipleFiles = false;
                        object.goPackage = "";
                        object.ccGenericServices = false;
                        object.javaGenericServices = false;
                        object.pyGenericServices = false;
                        object.javaGenerateEqualsAndHash = false;
                        object.deprecated = false;
                        object.javaStringCheckUtf8 = false;
                        object.ccEnableArenas = true;
                        object.objcClassPrefix = "";
                        object.csharpNamespace = "";
                        object.swiftPrefix = "";
                        object.phpClassPrefix = "";
                        object.phpNamespace = "";
                        object.phpGenericServices = false;
                        object.phpMetadataNamespace = "";
                        object.rubyPackage = "";
                    }
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        object.javaPackage = message.javaPackage;
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        object.javaOuterClassname = message.javaOuterClassname;
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        object.optimizeFor = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] === undefined ? message.optimizeFor : $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] : message.optimizeFor;
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        object.javaMultipleFiles = message.javaMultipleFiles;
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        object.goPackage = message.goPackage;
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        object.ccGenericServices = message.ccGenericServices;
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        object.javaGenericServices = message.javaGenericServices;
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        object.pyGenericServices = message.pyGenericServices;
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        object.javaGenerateEqualsAndHash = message.javaGenerateEqualsAndHash;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        object.javaStringCheckUtf8 = message.javaStringCheckUtf8;
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        object.ccEnableArenas = message.ccEnableArenas;
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        object.objcClassPrefix = message.objcClassPrefix;
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        object.csharpNamespace = message.csharpNamespace;
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        object.swiftPrefix = message.swiftPrefix;
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        object.phpClassPrefix = message.phpClassPrefix;
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        object.phpNamespace = message.phpNamespace;
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        object.phpGenericServices = message.phpGenericServices;
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        object.phpMetadataNamespace = message.phpMetadataNamespace;
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        object.rubyPackage = message.rubyPackage;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length) {
                        object[".google.api.resourceDefinition"] = [];
                        for (var j = 0; j < message[".google.api.resourceDefinition"].length; ++j)
                            object[".google.api.resourceDefinition"][j] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resourceDefinition"][j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileOptions";
                };
    
                /**
                 * OptimizeMode enum.
                 * @name google.protobuf.FileOptions.OptimizeMode
                 * @enum {number}
                 * @property {number} SPEED=1 SPEED value
                 * @property {number} CODE_SIZE=2 CODE_SIZE value
                 * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value
                 */
                FileOptions.OptimizeMode = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "SPEED"] = 1;
                    values[valuesById[2] = "CODE_SIZE"] = 2;
                    values[valuesById[3] = "LITE_RUNTIME"] = 3;
                    return values;
                })();
    
                return FileOptions;
            })();
    
            protobuf.MessageOptions = (function() {
    
                /**
                 * Properties of a MessageOptions.
                 * @memberof google.protobuf
                 * @interface IMessageOptions
                 * @property {boolean|null} [messageSetWireFormat] MessageOptions messageSetWireFormat
                 * @property {boolean|null} [noStandardDescriptorAccessor] MessageOptions noStandardDescriptorAccessor
                 * @property {boolean|null} [deprecated] MessageOptions deprecated
                 * @property {boolean|null} [mapEntry] MessageOptions mapEntry
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MessageOptions uninterpretedOption
                 * @property {google.api.IResourceDescriptor|null} [".google.api.resource"] MessageOptions .google.api.resource
                 */
    
                /**
                 * Constructs a new MessageOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MessageOptions.
                 * @implements IMessageOptions
                 * @constructor
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 */
                function MessageOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MessageOptions messageSetWireFormat.
                 * @member {boolean} messageSetWireFormat
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.messageSetWireFormat = false;
    
                /**
                 * MessageOptions noStandardDescriptorAccessor.
                 * @member {boolean} noStandardDescriptorAccessor
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.noStandardDescriptorAccessor = false;
    
                /**
                 * MessageOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecated = false;
    
                /**
                 * MessageOptions mapEntry.
                 * @member {boolean} mapEntry
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.mapEntry = false;
    
                /**
                 * MessageOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MessageOptions .google.api.resource.
                 * @member {google.api.IResourceDescriptor|null|undefined} .google.api.resource
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".google.api.resource"] = null;
    
                /**
                 * Creates a new MessageOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MessageOptions} MessageOptions instance
                 */
                MessageOptions.create = function create(properties) {
                    return new MessageOptions(properties);
                };
    
                /**
                 * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.messageSetWireFormat != null && Object.hasOwnProperty.call(message, "messageSetWireFormat"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.messageSetWireFormat);
                    if (message.noStandardDescriptorAccessor != null && Object.hasOwnProperty.call(message, "noStandardDescriptorAccessor"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.noStandardDescriptorAccessor);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.mapEntry != null && Object.hasOwnProperty.call(message, "mapEntry"))
                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.mapEntry);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resource"] != null && Object.hasOwnProperty.call(message, ".google.api.resource"))
                        $root.google.api.ResourceDescriptor.encode(message[".google.api.resource"], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.messageSetWireFormat = reader.bool();
                                break;
                            }
                        case 2: {
                                message.noStandardDescriptorAccessor = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 7: {
                                message.mapEntry = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                message[".google.api.resource"] = $root.google.api.ResourceDescriptor.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MessageOptions message.
                 * @function verify
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MessageOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        if (typeof message.messageSetWireFormat !== "boolean")
                            return "messageSetWireFormat: boolean expected";
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        if (typeof message.noStandardDescriptorAccessor !== "boolean")
                            return "noStandardDescriptorAccessor: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        if (typeof message.mapEntry !== "boolean")
                            return "mapEntry: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource")) {
                        var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resource"]);
                        if (error)
                            return ".google.api.resource." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 */
                MessageOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MessageOptions)
                        return object;
                    var message = new $root.google.protobuf.MessageOptions();
                    if (object.messageSetWireFormat != null)
                        message.messageSetWireFormat = Boolean(object.messageSetWireFormat);
                    if (object.noStandardDescriptorAccessor != null)
                        message.noStandardDescriptorAccessor = Boolean(object.noStandardDescriptorAccessor);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.mapEntry != null)
                        message.mapEntry = Boolean(object.mapEntry);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resource"] != null) {
                        if (typeof object[".google.api.resource"] !== "object")
                            throw TypeError(".google.protobuf.MessageOptions..google.api.resource: object expected");
                        message[".google.api.resource"] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resource"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.MessageOptions} message MessageOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MessageOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.messageSetWireFormat = false;
                        object.noStandardDescriptorAccessor = false;
                        object.deprecated = false;
                        object.mapEntry = false;
                        object[".google.api.resource"] = null;
                    }
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        object.messageSetWireFormat = message.messageSetWireFormat;
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        object.noStandardDescriptorAccessor = message.noStandardDescriptorAccessor;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        object.mapEntry = message.mapEntry;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource"))
                        object[".google.api.resource"] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resource"], options);
                    return object;
                };
    
                /**
                 * Converts this MessageOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MessageOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MessageOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MessageOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MessageOptions";
                };
    
                return MessageOptions;
            })();
    
            protobuf.FieldOptions = (function() {
    
                /**
                 * Properties of a FieldOptions.
                 * @memberof google.protobuf
                 * @interface IFieldOptions
                 * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype
                 * @property {boolean|null} [packed] FieldOptions packed
                 * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype
                 * @property {boolean|null} [lazy] FieldOptions lazy
                 * @property {boolean|null} [unverifiedLazy] FieldOptions unverifiedLazy
                 * @property {boolean|null} [deprecated] FieldOptions deprecated
                 * @property {boolean|null} [weak] FieldOptions weak
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FieldOptions uninterpretedOption
                 * @property {Array.<google.api.FieldBehavior>|null} [".google.api.fieldBehavior"] FieldOptions .google.api.fieldBehavior
                 * @property {google.api.IResourceReference|null} [".google.api.resourceReference"] FieldOptions .google.api.resourceReference
                 */
    
                /**
                 * Constructs a new FieldOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldOptions.
                 * @implements IFieldOptions
                 * @constructor
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 */
                function FieldOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.fieldBehavior"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldOptions ctype.
                 * @member {google.protobuf.FieldOptions.CType} ctype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.ctype = 0;
    
                /**
                 * FieldOptions packed.
                 * @member {boolean} packed
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.packed = false;
    
                /**
                 * FieldOptions jstype.
                 * @member {google.protobuf.FieldOptions.JSType} jstype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.jstype = 0;
    
                /**
                 * FieldOptions lazy.
                 * @member {boolean} lazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.lazy = false;
    
                /**
                 * FieldOptions unverifiedLazy.
                 * @member {boolean} unverifiedLazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.unverifiedLazy = false;
    
                /**
                 * FieldOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.deprecated = false;
    
                /**
                 * FieldOptions weak.
                 * @member {boolean} weak
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.weak = false;
    
                /**
                 * FieldOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.fieldBehavior.
                 * @member {Array.<google.api.FieldBehavior>} .google.api.fieldBehavior
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.fieldBehavior"] = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.resourceReference.
                 * @member {google.api.IResourceReference|null|undefined} .google.api.resourceReference
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.resourceReference"] = null;
    
                /**
                 * Creates a new FieldOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FieldOptions} FieldOptions instance
                 */
                FieldOptions.create = function create(properties) {
                    return new FieldOptions(properties);
                };
    
                /**
                 * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.ctype != null && Object.hasOwnProperty.call(message, "ctype"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);
                    if (message.packed != null && Object.hasOwnProperty.call(message, "packed"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.lazy != null && Object.hasOwnProperty.call(message, "lazy"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.lazy);
                    if (message.jstype != null && Object.hasOwnProperty.call(message, "jstype"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jstype);
                    if (message.weak != null && Object.hasOwnProperty.call(message, "weak"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.weak);
                    if (message.unverifiedLazy != null && Object.hasOwnProperty.call(message, "unverifiedLazy"))
                        writer.uint32(/* id 15, wireType 0 =*/120).bool(message.unverifiedLazy);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.fieldBehavior"] != null && message[".google.api.fieldBehavior"].length) {
                        writer.uint32(/* id 1052, wireType 2 =*/8418).fork();
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            writer.int32(message[".google.api.fieldBehavior"][i]);
                        writer.ldelim();
                    }
                    if (message[".google.api.resourceReference"] != null && Object.hasOwnProperty.call(message, ".google.api.resourceReference"))
                        $root.google.api.ResourceReference.encode(message[".google.api.resourceReference"], writer.uint32(/* id 1055, wireType 2 =*/8442).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.ctype = reader.int32();
                                break;
                            }
                        case 2: {
                                message.packed = reader.bool();
                                break;
                            }
                        case 6: {
                                message.jstype = reader.int32();
                                break;
                            }
                        case 5: {
                                message.lazy = reader.bool();
                                break;
                            }
                        case 15: {
                                message.unverifiedLazy = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 10: {
                                message.weak = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1052: {
                                if (!(message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length))
                                    message[".google.api.fieldBehavior"] = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message[".google.api.fieldBehavior"].push(reader.int32());
                                } else
                                    message[".google.api.fieldBehavior"].push(reader.int32());
                                break;
                            }
                        case 1055: {
                                message[".google.api.resourceReference"] = $root.google.api.ResourceReference.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldOptions message.
                 * @function verify
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        switch (message.ctype) {
                        default:
                            return "ctype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        if (typeof message.packed !== "boolean")
                            return "packed: boolean expected";
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        switch (message.jstype) {
                        default:
                            return "jstype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        if (typeof message.lazy !== "boolean")
                            return "lazy: boolean expected";
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        if (typeof message.unverifiedLazy !== "boolean")
                            return "unverifiedLazy: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        if (typeof message.weak !== "boolean")
                            return "weak: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.fieldBehavior"] != null && message.hasOwnProperty(".google.api.fieldBehavior")) {
                        if (!Array.isArray(message[".google.api.fieldBehavior"]))
                            return ".google.api.fieldBehavior: array expected";
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            switch (message[".google.api.fieldBehavior"][i]) {
                            default:
                                return ".google.api.fieldBehavior: enum value[] expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                                break;
                            }
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference")) {
                        var error = $root.google.api.ResourceReference.verify(message[".google.api.resourceReference"]);
                        if (error)
                            return ".google.api.resourceReference." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 */
                FieldOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldOptions)
                        return object;
                    var message = new $root.google.protobuf.FieldOptions();
                    switch (object.ctype) {
                    default:
                        if (typeof object.ctype === "number") {
                            message.ctype = object.ctype;
                            break;
                        }
                        break;
                    case "STRING":
                    case 0:
                        message.ctype = 0;
                        break;
                    case "CORD":
                    case 1:
                        message.ctype = 1;
                        break;
                    case "STRING_PIECE":
                    case 2:
                        message.ctype = 2;
                        break;
                    }
                    if (object.packed != null)
                        message.packed = Boolean(object.packed);
                    switch (object.jstype) {
                    default:
                        if (typeof object.jstype === "number") {
                            message.jstype = object.jstype;
                            break;
                        }
                        break;
                    case "JS_NORMAL":
                    case 0:
                        message.jstype = 0;
                        break;
                    case "JS_STRING":
                    case 1:
                        message.jstype = 1;
                        break;
                    case "JS_NUMBER":
                    case 2:
                        message.jstype = 2;
                        break;
                    }
                    if (object.lazy != null)
                        message.lazy = Boolean(object.lazy);
                    if (object.unverifiedLazy != null)
                        message.unverifiedLazy = Boolean(object.unverifiedLazy);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.weak != null)
                        message.weak = Boolean(object.weak);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.fieldBehavior"]) {
                        if (!Array.isArray(object[".google.api.fieldBehavior"]))
                            throw TypeError(".google.protobuf.FieldOptions..google.api.fieldBehavior: array expected");
                        message[".google.api.fieldBehavior"] = [];
                        for (var i = 0; i < object[".google.api.fieldBehavior"].length; ++i)
                            switch (object[".google.api.fieldBehavior"][i]) {
                            default:
                                if (typeof object[".google.api.fieldBehavior"][i] === "number") {
                                    message[".google.api.fieldBehavior"][i] = object[".google.api.fieldBehavior"][i];
                                    break;
                                }
                            case "FIELD_BEHAVIOR_UNSPECIFIED":
                            case 0:
                                message[".google.api.fieldBehavior"][i] = 0;
                                break;
                            case "OPTIONAL":
                            case 1:
                                message[".google.api.fieldBehavior"][i] = 1;
                                break;
                            case "REQUIRED":
                            case 2:
                                message[".google.api.fieldBehavior"][i] = 2;
                                break;
                            case "OUTPUT_ONLY":
                            case 3:
                                message[".google.api.fieldBehavior"][i] = 3;
                                break;
                            case "INPUT_ONLY":
                            case 4:
                                message[".google.api.fieldBehavior"][i] = 4;
                                break;
                            case "IMMUTABLE":
                            case 5:
                                message[".google.api.fieldBehavior"][i] = 5;
                                break;
                            case "UNORDERED_LIST":
                            case 6:
                                message[".google.api.fieldBehavior"][i] = 6;
                                break;
                            case "NON_EMPTY_DEFAULT":
                            case 7:
                                message[".google.api.fieldBehavior"][i] = 7;
                                break;
                            }
                    }
                    if (object[".google.api.resourceReference"] != null) {
                        if (typeof object[".google.api.resourceReference"] !== "object")
                            throw TypeError(".google.protobuf.FieldOptions..google.api.resourceReference: object expected");
                        message[".google.api.resourceReference"] = $root.google.api.ResourceReference.fromObject(object[".google.api.resourceReference"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.FieldOptions} message FieldOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.fieldBehavior"] = [];
                    }
                    if (options.defaults) {
                        object.ctype = options.enums === String ? "STRING" : 0;
                        object.packed = false;
                        object.deprecated = false;
                        object.lazy = false;
                        object.jstype = options.enums === String ? "JS_NORMAL" : 0;
                        object.weak = false;
                        object.unverifiedLazy = false;
                        object[".google.api.resourceReference"] = null;
                    }
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] === undefined ? message.ctype : $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        object.packed = message.packed;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        object.lazy = message.lazy;
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] === undefined ? message.jstype : $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        object.weak = message.weak;
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        object.unverifiedLazy = message.unverifiedLazy;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length) {
                        object[".google.api.fieldBehavior"] = [];
                        for (var j = 0; j < message[".google.api.fieldBehavior"].length; ++j)
                            object[".google.api.fieldBehavior"][j] = options.enums === String ? $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] === undefined ? message[".google.api.fieldBehavior"][j] : $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] : message[".google.api.fieldBehavior"][j];
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference"))
                        object[".google.api.resourceReference"] = $root.google.api.ResourceReference.toObject(message[".google.api.resourceReference"], options);
                    return object;
                };
    
                /**
                 * Converts this FieldOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldOptions";
                };
    
                /**
                 * CType enum.
                 * @name google.protobuf.FieldOptions.CType
                 * @enum {number}
                 * @property {number} STRING=0 STRING value
                 * @property {number} CORD=1 CORD value
                 * @property {number} STRING_PIECE=2 STRING_PIECE value
                 */
                FieldOptions.CType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STRING"] = 0;
                    values[valuesById[1] = "CORD"] = 1;
                    values[valuesById[2] = "STRING_PIECE"] = 2;
                    return values;
                })();
    
                /**
                 * JSType enum.
                 * @name google.protobuf.FieldOptions.JSType
                 * @enum {number}
                 * @property {number} JS_NORMAL=0 JS_NORMAL value
                 * @property {number} JS_STRING=1 JS_STRING value
                 * @property {number} JS_NUMBER=2 JS_NUMBER value
                 */
                FieldOptions.JSType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "JS_NORMAL"] = 0;
                    values[valuesById[1] = "JS_STRING"] = 1;
                    values[valuesById[2] = "JS_NUMBER"] = 2;
                    return values;
                })();
    
                return FieldOptions;
            })();
    
            protobuf.OneofOptions = (function() {
    
                /**
                 * Properties of an OneofOptions.
                 * @memberof google.protobuf
                 * @interface IOneofOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] OneofOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new OneofOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofOptions.
                 * @implements IOneofOptions
                 * @constructor
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 */
                function OneofOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 */
                OneofOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new OneofOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 * @returns {google.protobuf.OneofOptions} OneofOptions instance
                 */
                OneofOptions.create = function create(properties) {
                    return new OneofOptions(properties);
                };
    
                /**
                 * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofOptions message.
                 * @function verify
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 */
                OneofOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofOptions)
                        return object;
                    var message = new $root.google.protobuf.OneofOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.OneofOptions} message OneofOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this OneofOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofOptions";
                };
    
                return OneofOptions;
            })();
    
            protobuf.EnumOptions = (function() {
    
                /**
                 * Properties of an EnumOptions.
                 * @memberof google.protobuf
                 * @interface IEnumOptions
                 * @property {boolean|null} [allowAlias] EnumOptions allowAlias
                 * @property {boolean|null} [deprecated] EnumOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumOptions.
                 * @implements IEnumOptions
                 * @constructor
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 */
                function EnumOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumOptions allowAlias.
                 * @member {boolean} allowAlias
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.allowAlias = false;
    
                /**
                 * EnumOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecated = false;
    
                /**
                 * EnumOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumOptions} EnumOptions instance
                 */
                EnumOptions.create = function create(properties) {
                    return new EnumOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.allowAlias != null && Object.hasOwnProperty.call(message, "allowAlias"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allowAlias);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                message.allowAlias = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        if (typeof message.allowAlias !== "boolean")
                            return "allowAlias: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 */
                EnumOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumOptions();
                    if (object.allowAlias != null)
                        message.allowAlias = Boolean(object.allowAlias);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.EnumOptions} message EnumOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.allowAlias = false;
                        object.deprecated = false;
                    }
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        object.allowAlias = message.allowAlias;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumOptions";
                };
    
                return EnumOptions;
            })();
    
            protobuf.EnumValueOptions = (function() {
    
                /**
                 * Properties of an EnumValueOptions.
                 * @memberof google.protobuf
                 * @interface IEnumValueOptions
                 * @property {boolean|null} [deprecated] EnumValueOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumValueOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumValueOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueOptions.
                 * @implements IEnumValueOptions
                 * @constructor
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 */
                function EnumValueOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.deprecated = false;
    
                /**
                 * EnumValueOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumValueOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions instance
                 */
                EnumValueOptions.create = function create(properties) {
                    return new EnumValueOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 */
                EnumValueOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumValueOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.EnumValueOptions} message EnumValueOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults)
                        object.deprecated = false;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumValueOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueOptions";
                };
    
                return EnumValueOptions;
            })();
    
            protobuf.ServiceOptions = (function() {
    
                /**
                 * Properties of a ServiceOptions.
                 * @memberof google.protobuf
                 * @interface IServiceOptions
                 * @property {boolean|null} [deprecated] ServiceOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ServiceOptions uninterpretedOption
                 * @property {string|null} [".google.api.defaultHost"] ServiceOptions .google.api.defaultHost
                 * @property {string|null} [".google.api.oauthScopes"] ServiceOptions .google.api.oauthScopes
                 */
    
                /**
                 * Constructs a new ServiceOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceOptions.
                 * @implements IServiceOptions
                 * @constructor
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 */
                function ServiceOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.deprecated = false;
    
                /**
                 * ServiceOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * ServiceOptions .google.api.defaultHost.
                 * @member {string} .google.api.defaultHost
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.defaultHost"] = "";
    
                /**
                 * ServiceOptions .google.api.oauthScopes.
                 * @member {string} .google.api.oauthScopes
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.oauthScopes"] = "";
    
                /**
                 * Creates a new ServiceOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions instance
                 */
                ServiceOptions.create = function create(properties) {
                    return new ServiceOptions(properties);
                };
    
                /**
                 * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.defaultHost"] != null && Object.hasOwnProperty.call(message, ".google.api.defaultHost"))
                        writer.uint32(/* id 1049, wireType 2 =*/8394).string(message[".google.api.defaultHost"]);
                    if (message[".google.api.oauthScopes"] != null && Object.hasOwnProperty.call(message, ".google.api.oauthScopes"))
                        writer.uint32(/* id 1050, wireType 2 =*/8402).string(message[".google.api.oauthScopes"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1049: {
                                message[".google.api.defaultHost"] = reader.string();
                                break;
                            }
                        case 1050: {
                                message[".google.api.oauthScopes"] = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceOptions message.
                 * @function verify
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        if (!$util.isString(message[".google.api.defaultHost"]))
                            return ".google.api.defaultHost: string expected";
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        if (!$util.isString(message[".google.api.oauthScopes"]))
                            return ".google.api.oauthScopes: string expected";
                    return null;
                };
    
                /**
                 * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 */
                ServiceOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceOptions)
                        return object;
                    var message = new $root.google.protobuf.ServiceOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.defaultHost"] != null)
                        message[".google.api.defaultHost"] = String(object[".google.api.defaultHost"]);
                    if (object[".google.api.oauthScopes"] != null)
                        message[".google.api.oauthScopes"] = String(object[".google.api.oauthScopes"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.ServiceOptions} message ServiceOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.deprecated = false;
                        object[".google.api.defaultHost"] = "";
                        object[".google.api.oauthScopes"] = "";
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        object[".google.api.defaultHost"] = message[".google.api.defaultHost"];
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        object[".google.api.oauthScopes"] = message[".google.api.oauthScopes"];
                    return object;
                };
    
                /**
                 * Converts this ServiceOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceOptions";
                };
    
                return ServiceOptions;
            })();
    
            protobuf.MethodOptions = (function() {
    
                /**
                 * Properties of a MethodOptions.
                 * @memberof google.protobuf
                 * @interface IMethodOptions
                 * @property {boolean|null} [deprecated] MethodOptions deprecated
                 * @property {google.protobuf.MethodOptions.IdempotencyLevel|null} [idempotencyLevel] MethodOptions idempotencyLevel
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MethodOptions uninterpretedOption
                 * @property {google.api.IHttpRule|null} [".google.api.http"] MethodOptions .google.api.http
                 * @property {Array.<string>|null} [".google.api.methodSignature"] MethodOptions .google.api.methodSignature
                 */
    
                /**
                 * Constructs a new MethodOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodOptions.
                 * @implements IMethodOptions
                 * @constructor
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 */
                function MethodOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.methodSignature"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.deprecated = false;
    
                /**
                 * MethodOptions idempotencyLevel.
                 * @member {google.protobuf.MethodOptions.IdempotencyLevel} idempotencyLevel
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.idempotencyLevel = 0;
    
                /**
                 * MethodOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MethodOptions .google.api.http.
                 * @member {google.api.IHttpRule|null|undefined} .google.api.http
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.http"] = null;
    
                /**
                 * MethodOptions .google.api.methodSignature.
                 * @member {Array.<string>} .google.api.methodSignature
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.methodSignature"] = $util.emptyArray;
    
                /**
                 * Creates a new MethodOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MethodOptions} MethodOptions instance
                 */
                MethodOptions.create = function create(properties) {
                    return new MethodOptions(properties);
                };
    
                /**
                 * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.idempotencyLevel != null && Object.hasOwnProperty.call(message, "idempotencyLevel"))
                        writer.uint32(/* id 34, wireType 0 =*/272).int32(message.idempotencyLevel);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.methodSignature"] != null && message[".google.api.methodSignature"].length)
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            writer.uint32(/* id 1051, wireType 2 =*/8410).string(message[".google.api.methodSignature"][i]);
                    if (message[".google.api.http"] != null && Object.hasOwnProperty.call(message, ".google.api.http"))
                        $root.google.api.HttpRule.encode(message[".google.api.http"], writer.uint32(/* id 72295728, wireType 2 =*/578365826).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 34: {
                                message.idempotencyLevel = reader.int32();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 72295728: {
                                message[".google.api.http"] = $root.google.api.HttpRule.decode(reader, reader.uint32());
                                break;
                            }
                        case 1051: {
                                if (!(message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length))
                                    message[".google.api.methodSignature"] = [];
                                message[".google.api.methodSignature"].push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodOptions message.
                 * @function verify
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        switch (message.idempotencyLevel) {
                        default:
                            return "idempotencyLevel: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http")) {
                        var error = $root.google.api.HttpRule.verify(message[".google.api.http"]);
                        if (error)
                            return ".google.api.http." + error;
                    }
                    if (message[".google.api.methodSignature"] != null && message.hasOwnProperty(".google.api.methodSignature")) {
                        if (!Array.isArray(message[".google.api.methodSignature"]))
                            return ".google.api.methodSignature: array expected";
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            if (!$util.isString(message[".google.api.methodSignature"][i]))
                                return ".google.api.methodSignature: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 */
                MethodOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodOptions)
                        return object;
                    var message = new $root.google.protobuf.MethodOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    switch (object.idempotencyLevel) {
                    default:
                        if (typeof object.idempotencyLevel === "number") {
                            message.idempotencyLevel = object.idempotencyLevel;
                            break;
                        }
                        break;
                    case "IDEMPOTENCY_UNKNOWN":
                    case 0:
                        message.idempotencyLevel = 0;
                        break;
                    case "NO_SIDE_EFFECTS":
                    case 1:
                        message.idempotencyLevel = 1;
                        break;
                    case "IDEMPOTENT":
                    case 2:
                        message.idempotencyLevel = 2;
                        break;
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.http"] != null) {
                        if (typeof object[".google.api.http"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.api.http: object expected");
                        message[".google.api.http"] = $root.google.api.HttpRule.fromObject(object[".google.api.http"]);
                    }
                    if (object[".google.api.methodSignature"]) {
                        if (!Array.isArray(object[".google.api.methodSignature"]))
                            throw TypeError(".google.protobuf.MethodOptions..google.api.methodSignature: array expected");
                        message[".google.api.methodSignature"] = [];
                        for (var i = 0; i < object[".google.api.methodSignature"].length; ++i)
                            message[".google.api.methodSignature"][i] = String(object[".google.api.methodSignature"][i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.MethodOptions} message MethodOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.methodSignature"] = [];
                    }
                    if (options.defaults) {
                        object.deprecated = false;
                        object.idempotencyLevel = options.enums === String ? "IDEMPOTENCY_UNKNOWN" : 0;
                        object[".google.api.http"] = null;
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        object.idempotencyLevel = options.enums === String ? $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] === undefined ? message.idempotencyLevel : $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] : message.idempotencyLevel;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length) {
                        object[".google.api.methodSignature"] = [];
                        for (var j = 0; j < message[".google.api.methodSignature"].length; ++j)
                            object[".google.api.methodSignature"][j] = message[".google.api.methodSignature"][j];
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http"))
                        object[".google.api.http"] = $root.google.api.HttpRule.toObject(message[".google.api.http"], options);
                    return object;
                };
    
                /**
                 * Converts this MethodOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodOptions";
                };
    
                /**
                 * IdempotencyLevel enum.
                 * @name google.protobuf.MethodOptions.IdempotencyLevel
                 * @enum {number}
                 * @property {number} IDEMPOTENCY_UNKNOWN=0 IDEMPOTENCY_UNKNOWN value
                 * @property {number} NO_SIDE_EFFECTS=1 NO_SIDE_EFFECTS value
                 * @property {number} IDEMPOTENT=2 IDEMPOTENT value
                 */
                MethodOptions.IdempotencyLevel = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "IDEMPOTENCY_UNKNOWN"] = 0;
                    values[valuesById[1] = "NO_SIDE_EFFECTS"] = 1;
                    values[valuesById[2] = "IDEMPOTENT"] = 2;
                    return values;
                })();
    
                return MethodOptions;
            })();
    
            protobuf.UninterpretedOption = (function() {
    
                /**
                 * Properties of an UninterpretedOption.
                 * @memberof google.protobuf
                 * @interface IUninterpretedOption
                 * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name
                 * @property {string|null} [identifierValue] UninterpretedOption identifierValue
                 * @property {number|Long|null} [positiveIntValue] UninterpretedOption positiveIntValue
                 * @property {number|Long|null} [negativeIntValue] UninterpretedOption negativeIntValue
                 * @property {number|null} [doubleValue] UninterpretedOption doubleValue
                 * @property {Uint8Array|null} [stringValue] UninterpretedOption stringValue
                 * @property {string|null} [aggregateValue] UninterpretedOption aggregateValue
                 */
    
                /**
                 * Constructs a new UninterpretedOption.
                 * @memberof google.protobuf
                 * @classdesc Represents an UninterpretedOption.
                 * @implements IUninterpretedOption
                 * @constructor
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 */
                function UninterpretedOption(properties) {
                    this.name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UninterpretedOption name.
                 * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.name = $util.emptyArray;
    
                /**
                 * UninterpretedOption identifierValue.
                 * @member {string} identifierValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.identifierValue = "";
    
                /**
                 * UninterpretedOption positiveIntValue.
                 * @member {number|Long} positiveIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.positiveIntValue = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * UninterpretedOption negativeIntValue.
                 * @member {number|Long} negativeIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.negativeIntValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * UninterpretedOption doubleValue.
                 * @member {number} doubleValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.doubleValue = 0;
    
                /**
                 * UninterpretedOption stringValue.
                 * @member {Uint8Array} stringValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.stringValue = $util.newBuffer([]);
    
                /**
                 * UninterpretedOption aggregateValue.
                 * @member {string} aggregateValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.aggregateValue = "";
    
                /**
                 * Creates a new UninterpretedOption instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption instance
                 */
                UninterpretedOption.create = function create(properties) {
                    return new UninterpretedOption(properties);
                };
    
                /**
                 * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.name.length)
                        for (var i = 0; i < message.name.length; ++i)
                            $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.identifierValue != null && Object.hasOwnProperty.call(message, "identifierValue"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifierValue);
                    if (message.positiveIntValue != null && Object.hasOwnProperty.call(message, "positiveIntValue"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positiveIntValue);
                    if (message.negativeIntValue != null && Object.hasOwnProperty.call(message, "negativeIntValue"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negativeIntValue);
                    if (message.doubleValue != null && Object.hasOwnProperty.call(message, "doubleValue"))
                        writer.uint32(/* id 6, wireType 1 =*/49).double(message.doubleValue);
                    if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.stringValue);
                    if (message.aggregateValue != null && Object.hasOwnProperty.call(message, "aggregateValue"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregateValue);
                    return writer;
                };
    
                /**
                 * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.name && message.name.length))
                                    message.name = [];
                                message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.identifierValue = reader.string();
                                break;
                            }
                        case 4: {
                                message.positiveIntValue = reader.uint64();
                                break;
                            }
                        case 5: {
                                message.negativeIntValue = reader.int64();
                                break;
                            }
                        case 6: {
                                message.doubleValue = reader.double();
                                break;
                            }
                        case 7: {
                                message.stringValue = reader.bytes();
                                break;
                            }
                        case 8: {
                                message.aggregateValue = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an UninterpretedOption message.
                 * @function verify
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UninterpretedOption.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name")) {
                        if (!Array.isArray(message.name))
                            return "name: array expected";
                        for (var i = 0; i < message.name.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);
                            if (error)
                                return "name." + error;
                        }
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        if (!$util.isString(message.identifierValue))
                            return "identifierValue: string expected";
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (!$util.isInteger(message.positiveIntValue) && !(message.positiveIntValue && $util.isInteger(message.positiveIntValue.low) && $util.isInteger(message.positiveIntValue.high)))
                            return "positiveIntValue: integer|Long expected";
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (!$util.isInteger(message.negativeIntValue) && !(message.negativeIntValue && $util.isInteger(message.negativeIntValue.low) && $util.isInteger(message.negativeIntValue.high)))
                            return "negativeIntValue: integer|Long expected";
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        if (typeof message.doubleValue !== "number")
                            return "doubleValue: number expected";
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        if (!(message.stringValue && typeof message.stringValue.length === "number" || $util.isString(message.stringValue)))
                            return "stringValue: buffer expected";
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        if (!$util.isString(message.aggregateValue))
                            return "aggregateValue: string expected";
                    return null;
                };
    
                /**
                 * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 */
                UninterpretedOption.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UninterpretedOption)
                        return object;
                    var message = new $root.google.protobuf.UninterpretedOption();
                    if (object.name) {
                        if (!Array.isArray(object.name))
                            throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
                        message.name = [];
                        for (var i = 0; i < object.name.length; ++i) {
                            if (typeof object.name[i] !== "object")
                                throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                            message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);
                        }
                    }
                    if (object.identifierValue != null)
                        message.identifierValue = String(object.identifierValue);
                    if (object.positiveIntValue != null)
                        if ($util.Long)
                            (message.positiveIntValue = $util.Long.fromValue(object.positiveIntValue)).unsigned = true;
                        else if (typeof object.positiveIntValue === "string")
                            message.positiveIntValue = parseInt(object.positiveIntValue, 10);
                        else if (typeof object.positiveIntValue === "number")
                            message.positiveIntValue = object.positiveIntValue;
                        else if (typeof object.positiveIntValue === "object")
                            message.positiveIntValue = new $util.LongBits(object.positiveIntValue.low >>> 0, object.positiveIntValue.high >>> 0).toNumber(true);
                    if (object.negativeIntValue != null)
                        if ($util.Long)
                            (message.negativeIntValue = $util.Long.fromValue(object.negativeIntValue)).unsigned = false;
                        else if (typeof object.negativeIntValue === "string")
                            message.negativeIntValue = parseInt(object.negativeIntValue, 10);
                        else if (typeof object.negativeIntValue === "number")
                            message.negativeIntValue = object.negativeIntValue;
                        else if (typeof object.negativeIntValue === "object")
                            message.negativeIntValue = new $util.LongBits(object.negativeIntValue.low >>> 0, object.negativeIntValue.high >>> 0).toNumber();
                    if (object.doubleValue != null)
                        message.doubleValue = Number(object.doubleValue);
                    if (object.stringValue != null)
                        if (typeof object.stringValue === "string")
                            $util.base64.decode(object.stringValue, message.stringValue = $util.newBuffer($util.base64.length(object.stringValue)), 0);
                        else if (object.stringValue.length >= 0)
                            message.stringValue = object.stringValue;
                    if (object.aggregateValue != null)
                        message.aggregateValue = String(object.aggregateValue);
                    return message;
                };
    
                /**
                 * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.UninterpretedOption} message UninterpretedOption
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UninterpretedOption.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.name = [];
                    if (options.defaults) {
                        object.identifierValue = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.positiveIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.positiveIntValue = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.negativeIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.negativeIntValue = options.longs === String ? "0" : 0;
                        object.doubleValue = 0;
                        if (options.bytes === String)
                            object.stringValue = "";
                        else {
                            object.stringValue = [];
                            if (options.bytes !== Array)
                                object.stringValue = $util.newBuffer(object.stringValue);
                        }
                        object.aggregateValue = "";
                    }
                    if (message.name && message.name.length) {
                        object.name = [];
                        for (var j = 0; j < message.name.length; ++j)
                            object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        object.identifierValue = message.identifierValue;
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (typeof message.positiveIntValue === "number")
                            object.positiveIntValue = options.longs === String ? String(message.positiveIntValue) : message.positiveIntValue;
                        else
                            object.positiveIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.positiveIntValue) : options.longs === Number ? new $util.LongBits(message.positiveIntValue.low >>> 0, message.positiveIntValue.high >>> 0).toNumber(true) : message.positiveIntValue;
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (typeof message.negativeIntValue === "number")
                            object.negativeIntValue = options.longs === String ? String(message.negativeIntValue) : message.negativeIntValue;
                        else
                            object.negativeIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.negativeIntValue) : options.longs === Number ? new $util.LongBits(message.negativeIntValue.low >>> 0, message.negativeIntValue.high >>> 0).toNumber() : message.negativeIntValue;
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        object.stringValue = options.bytes === String ? $util.base64.encode(message.stringValue, 0, message.stringValue.length) : options.bytes === Array ? Array.prototype.slice.call(message.stringValue) : message.stringValue;
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        object.aggregateValue = message.aggregateValue;
                    return object;
                };
    
                /**
                 * Converts this UninterpretedOption to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UninterpretedOption.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UninterpretedOption
                 * @function getTypeUrl
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UninterpretedOption.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UninterpretedOption";
                };
    
                UninterpretedOption.NamePart = (function() {
    
                    /**
                     * Properties of a NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @interface INamePart
                     * @property {string} namePart NamePart namePart
                     * @property {boolean} isExtension NamePart isExtension
                     */
    
                    /**
                     * Constructs a new NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @classdesc Represents a NamePart.
                     * @implements INamePart
                     * @constructor
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     */
                    function NamePart(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NamePart namePart.
                     * @member {string} namePart
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.namePart = "";
    
                    /**
                     * NamePart isExtension.
                     * @member {boolean} isExtension
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.isExtension = false;
    
                    /**
                     * Creates a new NamePart instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart instance
                     */
                    NamePart.create = function create(properties) {
                        return new NamePart(properties);
                    };
    
                    /**
                     * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.namePart);
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isExtension);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.namePart = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.isExtension = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        if (!message.hasOwnProperty("namePart"))
                            throw $util.ProtocolError("missing required 'namePart'", { instance: message });
                        if (!message.hasOwnProperty("isExtension"))
                            throw $util.ProtocolError("missing required 'isExtension'", { instance: message });
                        return message;
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NamePart message.
                     * @function verify
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NamePart.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (!$util.isString(message.namePart))
                            return "namePart: string expected";
                        if (typeof message.isExtension !== "boolean")
                            return "isExtension: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     */
                    NamePart.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)
                            return object;
                        var message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        if (object.namePart != null)
                            message.namePart = String(object.namePart);
                        if (object.isExtension != null)
                            message.isExtension = Boolean(object.isExtension);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NamePart.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.namePart = "";
                            object.isExtension = false;
                        }
                        if (message.namePart != null && message.hasOwnProperty("namePart"))
                            object.namePart = message.namePart;
                        if (message.isExtension != null && message.hasOwnProperty("isExtension"))
                            object.isExtension = message.isExtension;
                        return object;
                    };
    
                    /**
                     * Converts this NamePart to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NamePart.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NamePart
                     * @function getTypeUrl
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NamePart.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.UninterpretedOption.NamePart";
                    };
    
                    return NamePart;
                })();
    
                return UninterpretedOption;
            })();
    
            protobuf.SourceCodeInfo = (function() {
    
                /**
                 * Properties of a SourceCodeInfo.
                 * @memberof google.protobuf
                 * @interface ISourceCodeInfo
                 * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location
                 */
    
                /**
                 * Constructs a new SourceCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a SourceCodeInfo.
                 * @implements ISourceCodeInfo
                 * @constructor
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 */
                function SourceCodeInfo(properties) {
                    this.location = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * SourceCodeInfo location.
                 * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 */
                SourceCodeInfo.prototype.location = $util.emptyArray;
    
                /**
                 * Creates a new SourceCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo instance
                 */
                SourceCodeInfo.create = function create(properties) {
                    return new SourceCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.location != null && message.location.length)
                        for (var i = 0; i < message.location.length; ++i)
                            $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.location && message.location.length))
                                    message.location = [];
                                message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a SourceCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SourceCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.location != null && message.hasOwnProperty("location")) {
                        if (!Array.isArray(message.location))
                            return "location: array expected";
                        for (var i = 0; i < message.location.length; ++i) {
                            var error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);
                            if (error)
                                return "location." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 */
                SourceCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.SourceCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.SourceCodeInfo();
                    if (object.location) {
                        if (!Array.isArray(object.location))
                            throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
                        message.location = [];
                        for (var i = 0; i < object.location.length; ++i) {
                            if (typeof object.location[i] !== "object")
                                throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                            message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SourceCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.location = [];
                    if (message.location && message.location.length) {
                        object.location = [];
                        for (var j = 0; j < message.location.length; ++j)
                            object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this SourceCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SourceCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for SourceCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                SourceCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.SourceCodeInfo";
                };
    
                SourceCodeInfo.Location = (function() {
    
                    /**
                     * Properties of a Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @interface ILocation
                     * @property {Array.<number>|null} [path] Location path
                     * @property {Array.<number>|null} [span] Location span
                     * @property {string|null} [leadingComments] Location leadingComments
                     * @property {string|null} [trailingComments] Location trailingComments
                     * @property {Array.<string>|null} [leadingDetachedComments] Location leadingDetachedComments
                     */
    
                    /**
                     * Constructs a new Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @classdesc Represents a Location.
                     * @implements ILocation
                     * @constructor
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     */
                    function Location(properties) {
                        this.path = [];
                        this.span = [];
                        this.leadingDetachedComments = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Location path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.path = $util.emptyArray;
    
                    /**
                     * Location span.
                     * @member {Array.<number>} span
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.span = $util.emptyArray;
    
                    /**
                     * Location leadingComments.
                     * @member {string} leadingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingComments = "";
    
                    /**
                     * Location trailingComments.
                     * @member {string} trailingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.trailingComments = "";
    
                    /**
                     * Location leadingDetachedComments.
                     * @member {Array.<string>} leadingDetachedComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingDetachedComments = $util.emptyArray;
    
                    /**
                     * Creates a new Location instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location instance
                     */
                    Location.create = function create(properties) {
                        return new Location(properties);
                    };
    
                    /**
                     * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.span != null && message.span.length) {
                            writer.uint32(/* id 2, wireType 2 =*/18).fork();
                            for (var i = 0; i < message.span.length; ++i)
                                writer.int32(message.span[i]);
                            writer.ldelim();
                        }
                        if (message.leadingComments != null && Object.hasOwnProperty.call(message, "leadingComments"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.leadingComments);
                        if (message.trailingComments != null && Object.hasOwnProperty.call(message, "trailingComments"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trailingComments);
                        if (message.leadingDetachedComments != null && message.leadingDetachedComments.length)
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.leadingDetachedComments[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    if (!(message.span && message.span.length))
                                        message.span = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.span.push(reader.int32());
                                    } else
                                        message.span.push(reader.int32());
                                    break;
                                }
                            case 3: {
                                    message.leadingComments = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.trailingComments = reader.string();
                                    break;
                                }
                            case 6: {
                                    if (!(message.leadingDetachedComments && message.leadingDetachedComments.length))
                                        message.leadingDetachedComments = [];
                                    message.leadingDetachedComments.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Location message.
                     * @function verify
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Location.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.span != null && message.hasOwnProperty("span")) {
                            if (!Array.isArray(message.span))
                                return "span: array expected";
                            for (var i = 0; i < message.span.length; ++i)
                                if (!$util.isInteger(message.span[i]))
                                    return "span: integer[] expected";
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            if (!$util.isString(message.leadingComments))
                                return "leadingComments: string expected";
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            if (!$util.isString(message.trailingComments))
                                return "trailingComments: string expected";
                        if (message.leadingDetachedComments != null && message.hasOwnProperty("leadingDetachedComments")) {
                            if (!Array.isArray(message.leadingDetachedComments))
                                return "leadingDetachedComments: array expected";
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                if (!$util.isString(message.leadingDetachedComments[i]))
                                    return "leadingDetachedComments: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Location message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     */
                    Location.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)
                            return object;
                        var message = new $root.google.protobuf.SourceCodeInfo.Location();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.span) {
                            if (!Array.isArray(object.span))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
                            message.span = [];
                            for (var i = 0; i < object.span.length; ++i)
                                message.span[i] = object.span[i] | 0;
                        }
                        if (object.leadingComments != null)
                            message.leadingComments = String(object.leadingComments);
                        if (object.trailingComments != null)
                            message.trailingComments = String(object.trailingComments);
                        if (object.leadingDetachedComments) {
                            if (!Array.isArray(object.leadingDetachedComments))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.leadingDetachedComments: array expected");
                            message.leadingDetachedComments = [];
                            for (var i = 0; i < object.leadingDetachedComments.length; ++i)
                                message.leadingDetachedComments[i] = String(object.leadingDetachedComments[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Location message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.Location} message Location
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Location.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.path = [];
                            object.span = [];
                            object.leadingDetachedComments = [];
                        }
                        if (options.defaults) {
                            object.leadingComments = "";
                            object.trailingComments = "";
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.span && message.span.length) {
                            object.span = [];
                            for (var j = 0; j < message.span.length; ++j)
                                object.span[j] = message.span[j];
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            object.leadingComments = message.leadingComments;
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            object.trailingComments = message.trailingComments;
                        if (message.leadingDetachedComments && message.leadingDetachedComments.length) {
                            object.leadingDetachedComments = [];
                            for (var j = 0; j < message.leadingDetachedComments.length; ++j)
                                object.leadingDetachedComments[j] = message.leadingDetachedComments[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Location to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Location.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Location
                     * @function getTypeUrl
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Location.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.SourceCodeInfo.Location";
                    };
    
                    return Location;
                })();
    
                return SourceCodeInfo;
            })();
    
            protobuf.GeneratedCodeInfo = (function() {
    
                /**
                 * Properties of a GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @interface IGeneratedCodeInfo
                 * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation
                 */
    
                /**
                 * Constructs a new GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a GeneratedCodeInfo.
                 * @implements IGeneratedCodeInfo
                 * @constructor
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 */
                function GeneratedCodeInfo(properties) {
                    this.annotation = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GeneratedCodeInfo annotation.
                 * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 */
                GeneratedCodeInfo.prototype.annotation = $util.emptyArray;
    
                /**
                 * Creates a new GeneratedCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo instance
                 */
                GeneratedCodeInfo.create = function create(properties) {
                    return new GeneratedCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.annotation != null && message.annotation.length)
                        for (var i = 0; i < message.annotation.length; ++i)
                            $root.google.protobuf.GeneratedCodeInfo.Annotation.encode(message.annotation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.annotation && message.annotation.length))
                                    message.annotation = [];
                                message.annotation.push($root.google.protobuf.GeneratedCodeInfo.Annotation.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GeneratedCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GeneratedCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.annotation != null && message.hasOwnProperty("annotation")) {
                        if (!Array.isArray(message.annotation))
                            return "annotation: array expected";
                        for (var i = 0; i < message.annotation.length; ++i) {
                            var error = $root.google.protobuf.GeneratedCodeInfo.Annotation.verify(message.annotation[i]);
                            if (error)
                                return "annotation." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 */
                GeneratedCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.GeneratedCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.GeneratedCodeInfo();
                    if (object.annotation) {
                        if (!Array.isArray(object.annotation))
                            throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: array expected");
                        message.annotation = [];
                        for (var i = 0; i < object.annotation.length; ++i) {
                            if (typeof object.annotation[i] !== "object")
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: object expected");
                            message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GeneratedCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.annotation = [];
                    if (message.annotation && message.annotation.length) {
                        object.annotation = [];
                        for (var j = 0; j < message.annotation.length; ++j)
                            object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this GeneratedCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GeneratedCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GeneratedCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GeneratedCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo";
                };
    
                GeneratedCodeInfo.Annotation = (function() {
    
                    /**
                     * Properties of an Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @interface IAnnotation
                     * @property {Array.<number>|null} [path] Annotation path
                     * @property {string|null} [sourceFile] Annotation sourceFile
                     * @property {number|null} [begin] Annotation begin
                     * @property {number|null} [end] Annotation end
                     * @property {google.protobuf.GeneratedCodeInfo.Annotation.Semantic|null} [semantic] Annotation semantic
                     */
    
                    /**
                     * Constructs a new Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @classdesc Represents an Annotation.
                     * @implements IAnnotation
                     * @constructor
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     */
                    function Annotation(properties) {
                        this.path = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Annotation path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.path = $util.emptyArray;
    
                    /**
                     * Annotation sourceFile.
                     * @member {string} sourceFile
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.sourceFile = "";
    
                    /**
                     * Annotation begin.
                     * @member {number} begin
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.begin = 0;
    
                    /**
                     * Annotation end.
                     * @member {number} end
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.end = 0;
    
                    /**
                     * Annotation semantic.
                     * @member {google.protobuf.GeneratedCodeInfo.Annotation.Semantic} semantic
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.semantic = 0;
    
                    /**
                     * Creates a new Annotation instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation instance
                     */
                    Annotation.create = function create(properties) {
                        return new Annotation(properties);
                    };
    
                    /**
                     * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.sourceFile != null && Object.hasOwnProperty.call(message, "sourceFile"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.sourceFile);
                        if (message.begin != null && Object.hasOwnProperty.call(message, "begin"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.begin);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);
                        if (message.semantic != null && Object.hasOwnProperty.call(message, "semantic"))
                            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.semantic);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    message.sourceFile = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.begin = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 5: {
                                    message.semantic = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an Annotation message.
                     * @function verify
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Annotation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            if (!$util.isString(message.sourceFile))
                                return "sourceFile: string expected";
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            if (!$util.isInteger(message.begin))
                                return "begin: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            switch (message.semantic) {
                            default:
                                return "semantic: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     */
                    Annotation.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation)
                            return object;
                        var message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.sourceFile != null)
                            message.sourceFile = String(object.sourceFile);
                        if (object.begin != null)
                            message.begin = object.begin | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        switch (object.semantic) {
                        default:
                            if (typeof object.semantic === "number") {
                                message.semantic = object.semantic;
                                break;
                            }
                            break;
                        case "NONE":
                        case 0:
                            message.semantic = 0;
                            break;
                        case "SET":
                        case 1:
                            message.semantic = 1;
                            break;
                        case "ALIAS":
                        case 2:
                            message.semantic = 2;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Annotation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.path = [];
                        if (options.defaults) {
                            object.sourceFile = "";
                            object.begin = 0;
                            object.end = 0;
                            object.semantic = options.enums === String ? "NONE" : 0;
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            object.sourceFile = message.sourceFile;
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            object.begin = message.begin;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            object.semantic = options.enums === String ? $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] === undefined ? message.semantic : $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] : message.semantic;
                        return object;
                    };
    
                    /**
                     * Converts this Annotation to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Annotation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Annotation
                     * @function getTypeUrl
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Annotation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo.Annotation";
                    };
    
                    /**
                     * Semantic enum.
                     * @name google.protobuf.GeneratedCodeInfo.Annotation.Semantic
                     * @enum {number}
                     * @property {number} NONE=0 NONE value
                     * @property {number} SET=1 SET value
                     * @property {number} ALIAS=2 ALIAS value
                     */
                    Annotation.Semantic = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "NONE"] = 0;
                        values[valuesById[1] = "SET"] = 1;
                        values[valuesById[2] = "ALIAS"] = 2;
                        return values;
                    })();
    
                    return Annotation;
                })();
    
                return GeneratedCodeInfo;
            })();
    
            protobuf.Any = (function() {
    
                /**
                 * Properties of an Any.
                 * @memberof google.protobuf
                 * @interface IAny
                 * @property {string|null} [type_url] Any type_url
                 * @property {Uint8Array|null} [value] Any value
                 */
    
                /**
                 * Constructs a new Any.
                 * @memberof google.protobuf
                 * @classdesc Represents an Any.
                 * @implements IAny
                 * @constructor
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 */
                function Any(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Any type_url.
                 * @member {string} type_url
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.type_url = "";
    
                /**
                 * Any value.
                 * @member {Uint8Array} value
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.value = $util.newBuffer([]);
    
                /**
                 * Creates a new Any instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 * @returns {google.protobuf.Any} Any instance
                 */
                Any.create = function create(properties) {
                    return new Any(properties);
                };
    
                /**
                 * Encodes the specified Any message. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type_url != null && Object.hasOwnProperty.call(message, "type_url"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type_url);
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Any message, length delimited. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Any();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type_url = reader.string();
                                break;
                            }
                        case 2: {
                                message.value = reader.bytes();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Any message.
                 * @function verify
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Any.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        if (!$util.isString(message.type_url))
                            return "type_url: string expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                            return "value: buffer expected";
                    return null;
                };
    
                /**
                 * Creates an Any message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Any} Any
                 */
                Any.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Any)
                        return object;
                    var message = new $root.google.protobuf.Any();
                    if (object.type_url != null)
                        message.type_url = String(object.type_url);
                    if (object.value != null)
                        if (typeof object.value === "string")
                            $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                        else if (object.value.length >= 0)
                            message.value = object.value;
                    return message;
                };
    
                /**
                 * Creates a plain object from an Any message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.Any} message Any
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Any.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type_url = "";
                        if (options.bytes === String)
                            object.value = "";
                        else {
                            object.value = [];
                            if (options.bytes !== Array)
                                object.value = $util.newBuffer(object.value);
                        }
                    }
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        object.type_url = message.type_url;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this Any to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Any
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Any.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Any
                 * @function getTypeUrl
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Any.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Any";
                };
    
                return Any;
            })();
    
            protobuf.Timestamp = (function() {
    
                /**
                 * Properties of a Timestamp.
                 * @memberof google.protobuf
                 * @interface ITimestamp
                 * @property {number|Long|null} [seconds] Timestamp seconds
                 * @property {number|null} [nanos] Timestamp nanos
                 */
    
                /**
                 * Constructs a new Timestamp.
                 * @memberof google.protobuf
                 * @classdesc Represents a Timestamp.
                 * @implements ITimestamp
                 * @constructor
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 */
                function Timestamp(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Timestamp seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Timestamp nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.nanos = 0;
    
                /**
                 * Creates a new Timestamp instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 * @returns {google.protobuf.Timestamp} Timestamp instance
                 */
                Timestamp.create = function create(properties) {
                    return new Timestamp(properties);
                };
    
                /**
                 * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Timestamp();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Timestamp message.
                 * @function verify
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Timestamp.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Timestamp} Timestamp
                 */
                Timestamp.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Timestamp)
                        return object;
                    var message = new $root.google.protobuf.Timestamp();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.Timestamp} message Timestamp
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Timestamp.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Timestamp to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Timestamp.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Timestamp
                 * @function getTypeUrl
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Timestamp.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Timestamp";
                };
    
                return Timestamp;
            })();
    
            protobuf.Duration = (function() {
    
                /**
                 * Properties of a Duration.
                 * @memberof google.protobuf
                 * @interface IDuration
                 * @property {number|Long|null} [seconds] Duration seconds
                 * @property {number|null} [nanos] Duration nanos
                 */
    
                /**
                 * Constructs a new Duration.
                 * @memberof google.protobuf
                 * @classdesc Represents a Duration.
                 * @implements IDuration
                 * @constructor
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 */
                function Duration(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Duration seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Duration nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.nanos = 0;
    
                /**
                 * Creates a new Duration instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 * @returns {google.protobuf.Duration} Duration instance
                 */
                Duration.create = function create(properties) {
                    return new Duration(properties);
                };
    
                /**
                 * Encodes the specified Duration message. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Duration message, length delimited. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Duration();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Duration message.
                 * @function verify
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Duration.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Duration message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Duration} Duration
                 */
                Duration.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Duration)
                        return object;
                    var message = new $root.google.protobuf.Duration();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Duration message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.Duration} message Duration
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Duration.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Duration to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Duration
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Duration.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Duration
                 * @function getTypeUrl
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Duration.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Duration";
                };
    
                return Duration;
            })();
    
            protobuf.DoubleValue = (function() {
    
                /**
                 * Properties of a DoubleValue.
                 * @memberof google.protobuf
                 * @interface IDoubleValue
                 * @property {number|null} [value] DoubleValue value
                 */
    
                /**
                 * Constructs a new DoubleValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a DoubleValue.
                 * @implements IDoubleValue
                 * @constructor
                 * @param {google.protobuf.IDoubleValue=} [properties] Properties to set
                 */
                function DoubleValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DoubleValue value.
                 * @member {number} value
                 * @memberof google.protobuf.DoubleValue
                 * @instance
                 */
                DoubleValue.prototype.value = 0;
    
                /**
                 * Creates a new DoubleValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.IDoubleValue=} [properties] Properties to set
                 * @returns {google.protobuf.DoubleValue} DoubleValue instance
                 */
                DoubleValue.create = function create(properties) {
                    return new DoubleValue(properties);
                };
    
                /**
                 * Encodes the specified DoubleValue message. Does not implicitly {@link google.protobuf.DoubleValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.IDoubleValue} message DoubleValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DoubleValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 1 =*/9).double(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified DoubleValue message, length delimited. Does not implicitly {@link google.protobuf.DoubleValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.IDoubleValue} message DoubleValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DoubleValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DoubleValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DoubleValue} DoubleValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DoubleValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DoubleValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.double();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DoubleValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DoubleValue} DoubleValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DoubleValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DoubleValue message.
                 * @function verify
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DoubleValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value !== "number")
                            return "value: number expected";
                    return null;
                };
    
                /**
                 * Creates a DoubleValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DoubleValue} DoubleValue
                 */
                DoubleValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DoubleValue)
                        return object;
                    var message = new $root.google.protobuf.DoubleValue();
                    if (object.value != null)
                        message.value = Number(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a DoubleValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.DoubleValue} message DoubleValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DoubleValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this DoubleValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DoubleValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DoubleValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DoubleValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DoubleValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.DoubleValue";
                };
    
                return DoubleValue;
            })();
    
            protobuf.FloatValue = (function() {
    
                /**
                 * Properties of a FloatValue.
                 * @memberof google.protobuf
                 * @interface IFloatValue
                 * @property {number|null} [value] FloatValue value
                 */
    
                /**
                 * Constructs a new FloatValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a FloatValue.
                 * @implements IFloatValue
                 * @constructor
                 * @param {google.protobuf.IFloatValue=} [properties] Properties to set
                 */
                function FloatValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FloatValue value.
                 * @member {number} value
                 * @memberof google.protobuf.FloatValue
                 * @instance
                 */
                FloatValue.prototype.value = 0;
    
                /**
                 * Creates a new FloatValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.IFloatValue=} [properties] Properties to set
                 * @returns {google.protobuf.FloatValue} FloatValue instance
                 */
                FloatValue.create = function create(properties) {
                    return new FloatValue(properties);
                };
    
                /**
                 * Encodes the specified FloatValue message. Does not implicitly {@link google.protobuf.FloatValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.IFloatValue} message FloatValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FloatValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 5 =*/13).float(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified FloatValue message, length delimited. Does not implicitly {@link google.protobuf.FloatValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.IFloatValue} message FloatValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FloatValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FloatValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FloatValue} FloatValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FloatValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FloatValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.float();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FloatValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FloatValue} FloatValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FloatValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FloatValue message.
                 * @function verify
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FloatValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value !== "number")
                            return "value: number expected";
                    return null;
                };
    
                /**
                 * Creates a FloatValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FloatValue} FloatValue
                 */
                FloatValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FloatValue)
                        return object;
                    var message = new $root.google.protobuf.FloatValue();
                    if (object.value != null)
                        message.value = Number(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FloatValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.FloatValue} message FloatValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FloatValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this FloatValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FloatValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FloatValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FloatValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FloatValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FloatValue";
                };
    
                return FloatValue;
            })();
    
            protobuf.Int64Value = (function() {
    
                /**
                 * Properties of an Int64Value.
                 * @memberof google.protobuf
                 * @interface IInt64Value
                 * @property {number|Long|null} [value] Int64Value value
                 */
    
                /**
                 * Constructs a new Int64Value.
                 * @memberof google.protobuf
                 * @classdesc Represents an Int64Value.
                 * @implements IInt64Value
                 * @constructor
                 * @param {google.protobuf.IInt64Value=} [properties] Properties to set
                 */
                function Int64Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Int64Value value.
                 * @member {number|Long} value
                 * @memberof google.protobuf.Int64Value
                 * @instance
                 */
                Int64Value.prototype.value = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Creates a new Int64Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.IInt64Value=} [properties] Properties to set
                 * @returns {google.protobuf.Int64Value} Int64Value instance
                 */
                Int64Value.create = function create(properties) {
                    return new Int64Value(properties);
                };
    
                /**
                 * Encodes the specified Int64Value message. Does not implicitly {@link google.protobuf.Int64Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.IInt64Value} message Int64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int64Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Int64Value message, length delimited. Does not implicitly {@link google.protobuf.Int64Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.IInt64Value} message Int64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int64Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Int64Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Int64Value} Int64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int64Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Int64Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.int64();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Int64Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Int64Value} Int64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int64Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Int64Value message.
                 * @function verify
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Int64Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value) && !(message.value && $util.isInteger(message.value.low) && $util.isInteger(message.value.high)))
                            return "value: integer|Long expected";
                    return null;
                };
    
                /**
                 * Creates an Int64Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Int64Value} Int64Value
                 */
                Int64Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Int64Value)
                        return object;
                    var message = new $root.google.protobuf.Int64Value();
                    if (object.value != null)
                        if ($util.Long)
                            (message.value = $util.Long.fromValue(object.value)).unsigned = false;
                        else if (typeof object.value === "string")
                            message.value = parseInt(object.value, 10);
                        else if (typeof object.value === "number")
                            message.value = object.value;
                        else if (typeof object.value === "object")
                            message.value = new $util.LongBits(object.value.low >>> 0, object.value.high >>> 0).toNumber();
                    return message;
                };
    
                /**
                 * Creates a plain object from an Int64Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.Int64Value} message Int64Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Int64Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.value = options.longs === String ? "0" : 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value === "number")
                            object.value = options.longs === String ? String(message.value) : message.value;
                        else
                            object.value = options.longs === String ? $util.Long.prototype.toString.call(message.value) : options.longs === Number ? new $util.LongBits(message.value.low >>> 0, message.value.high >>> 0).toNumber() : message.value;
                    return object;
                };
    
                /**
                 * Converts this Int64Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Int64Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Int64Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Int64Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Int64Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Int64Value";
                };
    
                return Int64Value;
            })();
    
            protobuf.UInt64Value = (function() {
    
                /**
                 * Properties of a UInt64Value.
                 * @memberof google.protobuf
                 * @interface IUInt64Value
                 * @property {number|Long|null} [value] UInt64Value value
                 */
    
                /**
                 * Constructs a new UInt64Value.
                 * @memberof google.protobuf
                 * @classdesc Represents a UInt64Value.
                 * @implements IUInt64Value
                 * @constructor
                 * @param {google.protobuf.IUInt64Value=} [properties] Properties to set
                 */
                function UInt64Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UInt64Value value.
                 * @member {number|Long} value
                 * @memberof google.protobuf.UInt64Value
                 * @instance
                 */
                UInt64Value.prototype.value = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * Creates a new UInt64Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.IUInt64Value=} [properties] Properties to set
                 * @returns {google.protobuf.UInt64Value} UInt64Value instance
                 */
                UInt64Value.create = function create(properties) {
                    return new UInt64Value(properties);
                };
    
                /**
                 * Encodes the specified UInt64Value message. Does not implicitly {@link google.protobuf.UInt64Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.IUInt64Value} message UInt64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt64Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified UInt64Value message, length delimited. Does not implicitly {@link google.protobuf.UInt64Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.IUInt64Value} message UInt64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt64Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a UInt64Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UInt64Value} UInt64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt64Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UInt64Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.uint64();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a UInt64Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UInt64Value} UInt64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt64Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a UInt64Value message.
                 * @function verify
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UInt64Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value) && !(message.value && $util.isInteger(message.value.low) && $util.isInteger(message.value.high)))
                            return "value: integer|Long expected";
                    return null;
                };
    
                /**
                 * Creates a UInt64Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UInt64Value} UInt64Value
                 */
                UInt64Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UInt64Value)
                        return object;
                    var message = new $root.google.protobuf.UInt64Value();
                    if (object.value != null)
                        if ($util.Long)
                            (message.value = $util.Long.fromValue(object.value)).unsigned = true;
                        else if (typeof object.value === "string")
                            message.value = parseInt(object.value, 10);
                        else if (typeof object.value === "number")
                            message.value = object.value;
                        else if (typeof object.value === "object")
                            message.value = new $util.LongBits(object.value.low >>> 0, object.value.high >>> 0).toNumber(true);
                    return message;
                };
    
                /**
                 * Creates a plain object from a UInt64Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.UInt64Value} message UInt64Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UInt64Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.value = options.longs === String ? "0" : 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value === "number")
                            object.value = options.longs === String ? String(message.value) : message.value;
                        else
                            object.value = options.longs === String ? $util.Long.prototype.toString.call(message.value) : options.longs === Number ? new $util.LongBits(message.value.low >>> 0, message.value.high >>> 0).toNumber(true) : message.value;
                    return object;
                };
    
                /**
                 * Converts this UInt64Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UInt64Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UInt64Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UInt64Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UInt64Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UInt64Value";
                };
    
                return UInt64Value;
            })();
    
            protobuf.Int32Value = (function() {
    
                /**
                 * Properties of an Int32Value.
                 * @memberof google.protobuf
                 * @interface IInt32Value
                 * @property {number|null} [value] Int32Value value
                 */
    
                /**
                 * Constructs a new Int32Value.
                 * @memberof google.protobuf
                 * @classdesc Represents an Int32Value.
                 * @implements IInt32Value
                 * @constructor
                 * @param {google.protobuf.IInt32Value=} [properties] Properties to set
                 */
                function Int32Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Int32Value value.
                 * @member {number} value
                 * @memberof google.protobuf.Int32Value
                 * @instance
                 */
                Int32Value.prototype.value = 0;
    
                /**
                 * Creates a new Int32Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.IInt32Value=} [properties] Properties to set
                 * @returns {google.protobuf.Int32Value} Int32Value instance
                 */
                Int32Value.create = function create(properties) {
                    return new Int32Value(properties);
                };
    
                /**
                 * Encodes the specified Int32Value message. Does not implicitly {@link google.protobuf.Int32Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.IInt32Value} message Int32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int32Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Int32Value message, length delimited. Does not implicitly {@link google.protobuf.Int32Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.IInt32Value} message Int32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int32Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Int32Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Int32Value} Int32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int32Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Int32Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Int32Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Int32Value} Int32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int32Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Int32Value message.
                 * @function verify
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Int32Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value))
                            return "value: integer expected";
                    return null;
                };
    
                /**
                 * Creates an Int32Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Int32Value} Int32Value
                 */
                Int32Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Int32Value)
                        return object;
                    var message = new $root.google.protobuf.Int32Value();
                    if (object.value != null)
                        message.value = object.value | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from an Int32Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.Int32Value} message Int32Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Int32Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this Int32Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Int32Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Int32Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Int32Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Int32Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Int32Value";
                };
    
                return Int32Value;
            })();
    
            protobuf.UInt32Value = (function() {
    
                /**
                 * Properties of a UInt32Value.
                 * @memberof google.protobuf
                 * @interface IUInt32Value
                 * @property {number|null} [value] UInt32Value value
                 */
    
                /**
                 * Constructs a new UInt32Value.
                 * @memberof google.protobuf
                 * @classdesc Represents a UInt32Value.
                 * @implements IUInt32Value
                 * @constructor
                 * @param {google.protobuf.IUInt32Value=} [properties] Properties to set
                 */
                function UInt32Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UInt32Value value.
                 * @member {number} value
                 * @memberof google.protobuf.UInt32Value
                 * @instance
                 */
                UInt32Value.prototype.value = 0;
    
                /**
                 * Creates a new UInt32Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.IUInt32Value=} [properties] Properties to set
                 * @returns {google.protobuf.UInt32Value} UInt32Value instance
                 */
                UInt32Value.create = function create(properties) {
                    return new UInt32Value(properties);
                };
    
                /**
                 * Encodes the specified UInt32Value message. Does not implicitly {@link google.protobuf.UInt32Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.IUInt32Value} message UInt32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt32Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified UInt32Value message, length delimited. Does not implicitly {@link google.protobuf.UInt32Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.IUInt32Value} message UInt32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt32Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a UInt32Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UInt32Value} UInt32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt32Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UInt32Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.uint32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a UInt32Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UInt32Value} UInt32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt32Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a UInt32Value message.
                 * @function verify
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UInt32Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value))
                            return "value: integer expected";
                    return null;
                };
    
                /**
                 * Creates a UInt32Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UInt32Value} UInt32Value
                 */
                UInt32Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UInt32Value)
                        return object;
                    var message = new $root.google.protobuf.UInt32Value();
                    if (object.value != null)
                        message.value = object.value >>> 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a UInt32Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.UInt32Value} message UInt32Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UInt32Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this UInt32Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UInt32Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UInt32Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UInt32Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UInt32Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UInt32Value";
                };
    
                return UInt32Value;
            })();
    
            protobuf.BoolValue = (function() {
    
                /**
                 * Properties of a BoolValue.
                 * @memberof google.protobuf
                 * @interface IBoolValue
                 * @property {boolean|null} [value] BoolValue value
                 */
    
                /**
                 * Constructs a new BoolValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a BoolValue.
                 * @implements IBoolValue
                 * @constructor
                 * @param {google.protobuf.IBoolValue=} [properties] Properties to set
                 */
                function BoolValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * BoolValue value.
                 * @member {boolean} value
                 * @memberof google.protobuf.BoolValue
                 * @instance
                 */
                BoolValue.prototype.value = false;
    
                /**
                 * Creates a new BoolValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.IBoolValue=} [properties] Properties to set
                 * @returns {google.protobuf.BoolValue} BoolValue instance
                 */
                BoolValue.create = function create(properties) {
                    return new BoolValue(properties);
                };
    
                /**
                 * Encodes the specified BoolValue message. Does not implicitly {@link google.protobuf.BoolValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.IBoolValue} message BoolValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BoolValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified BoolValue message, length delimited. Does not implicitly {@link google.protobuf.BoolValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.IBoolValue} message BoolValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BoolValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a BoolValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.BoolValue} BoolValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BoolValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.BoolValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a BoolValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.BoolValue} BoolValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BoolValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a BoolValue message.
                 * @function verify
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                BoolValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value !== "boolean")
                            return "value: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a BoolValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.BoolValue} BoolValue
                 */
                BoolValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.BoolValue)
                        return object;
                    var message = new $root.google.protobuf.BoolValue();
                    if (object.value != null)
                        message.value = Boolean(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a BoolValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.BoolValue} message BoolValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                BoolValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = false;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this BoolValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.BoolValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                BoolValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for BoolValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                BoolValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.BoolValue";
                };
    
                return BoolValue;
            })();
    
            protobuf.StringValue = (function() {
    
                /**
                 * Properties of a StringValue.
                 * @memberof google.protobuf
                 * @interface IStringValue
                 * @property {string|null} [value] StringValue value
                 */
    
                /**
                 * Constructs a new StringValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a StringValue.
                 * @implements IStringValue
                 * @constructor
                 * @param {google.protobuf.IStringValue=} [properties] Properties to set
                 */
                function StringValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * StringValue value.
                 * @member {string} value
                 * @memberof google.protobuf.StringValue
                 * @instance
                 */
                StringValue.prototype.value = "";
    
                /**
                 * Creates a new StringValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.IStringValue=} [properties] Properties to set
                 * @returns {google.protobuf.StringValue} StringValue instance
                 */
                StringValue.create = function create(properties) {
                    return new StringValue(properties);
                };
    
                /**
                 * Encodes the specified StringValue message. Does not implicitly {@link google.protobuf.StringValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.IStringValue} message StringValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                StringValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified StringValue message, length delimited. Does not implicitly {@link google.protobuf.StringValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.IStringValue} message StringValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                StringValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a StringValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.StringValue} StringValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                StringValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.StringValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a StringValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.StringValue} StringValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                StringValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a StringValue message.
                 * @function verify
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                StringValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isString(message.value))
                            return "value: string expected";
                    return null;
                };
    
                /**
                 * Creates a StringValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.StringValue} StringValue
                 */
                StringValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.StringValue)
                        return object;
                    var message = new $root.google.protobuf.StringValue();
                    if (object.value != null)
                        message.value = String(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a StringValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.StringValue} message StringValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                StringValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = "";
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this StringValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.StringValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                StringValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for StringValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                StringValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.StringValue";
                };
    
                return StringValue;
            })();
    
            protobuf.BytesValue = (function() {
    
                /**
                 * Properties of a BytesValue.
                 * @memberof google.protobuf
                 * @interface IBytesValue
                 * @property {Uint8Array|null} [value] BytesValue value
                 */
    
                /**
                 * Constructs a new BytesValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a BytesValue.
                 * @implements IBytesValue
                 * @constructor
                 * @param {google.protobuf.IBytesValue=} [properties] Properties to set
                 */
                function BytesValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * BytesValue value.
                 * @member {Uint8Array} value
                 * @memberof google.protobuf.BytesValue
                 * @instance
                 */
                BytesValue.prototype.value = $util.newBuffer([]);
    
                /**
                 * Creates a new BytesValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.IBytesValue=} [properties] Properties to set
                 * @returns {google.protobuf.BytesValue} BytesValue instance
                 */
                BytesValue.create = function create(properties) {
                    return new BytesValue(properties);
                };
    
                /**
                 * Encodes the specified BytesValue message. Does not implicitly {@link google.protobuf.BytesValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.IBytesValue} message BytesValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BytesValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified BytesValue message, length delimited. Does not implicitly {@link google.protobuf.BytesValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.IBytesValue} message BytesValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BytesValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a BytesValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.BytesValue} BytesValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BytesValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.BytesValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.bytes();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a BytesValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.BytesValue} BytesValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BytesValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a BytesValue message.
                 * @function verify
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                BytesValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                            return "value: buffer expected";
                    return null;
                };
    
                /**
                 * Creates a BytesValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.BytesValue} BytesValue
                 */
                BytesValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.BytesValue)
                        return object;
                    var message = new $root.google.protobuf.BytesValue();
                    if (object.value != null)
                        if (typeof object.value === "string")
                            $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                        else if (object.value.length >= 0)
                            message.value = object.value;
                    return message;
                };
    
                /**
                 * Creates a plain object from a BytesValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.BytesValue} message BytesValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                BytesValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        if (options.bytes === String)
                            object.value = "";
                        else {
                            object.value = [];
                            if (options.bytes !== Array)
                                object.value = $util.newBuffer(object.value);
                        }
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this BytesValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.BytesValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                BytesValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for BytesValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                BytesValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.BytesValue";
                };
    
                return BytesValue;
            })();
    
            protobuf.Empty = (function() {
    
                /**
                 * Properties of an Empty.
                 * @memberof google.protobuf
                 * @interface IEmpty
                 */
    
                /**
                 * Constructs a new Empty.
                 * @memberof google.protobuf
                 * @classdesc Represents an Empty.
                 * @implements IEmpty
                 * @constructor
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 */
                function Empty(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Creates a new Empty instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 * @returns {google.protobuf.Empty} Empty instance
                 */
                Empty.create = function create(properties) {
                    return new Empty(properties);
                };
    
                /**
                 * Encodes the specified Empty message. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    return writer;
                };
    
                /**
                 * Encodes the specified Empty message, length delimited. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Empty();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Empty message.
                 * @function verify
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Empty.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    return null;
                };
    
                /**
                 * Creates an Empty message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Empty} Empty
                 */
                Empty.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Empty)
                        return object;
                    return new $root.google.protobuf.Empty();
                };
    
                /**
                 * Creates a plain object from an Empty message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.Empty} message Empty
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Empty.toObject = function toObject() {
                    return {};
                };
    
                /**
                 * Converts this Empty to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Empty
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Empty.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Empty
                 * @function getTypeUrl
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Empty.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Empty";
                };
    
                return Empty;
            })();
    
            protobuf.FieldMask = (function() {
    
                /**
                 * Properties of a FieldMask.
                 * @memberof google.protobuf
                 * @interface IFieldMask
                 * @property {Array.<string>|null} [paths] FieldMask paths
                 */
    
                /**
                 * Constructs a new FieldMask.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldMask.
                 * @implements IFieldMask
                 * @constructor
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 */
                function FieldMask(properties) {
                    this.paths = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldMask paths.
                 * @member {Array.<string>} paths
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 */
                FieldMask.prototype.paths = $util.emptyArray;
    
                /**
                 * Creates a new FieldMask instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 * @returns {google.protobuf.FieldMask} FieldMask instance
                 */
                FieldMask.create = function create(properties) {
                    return new FieldMask(properties);
                };
    
                /**
                 * Encodes the specified FieldMask message. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.paths != null && message.paths.length)
                        for (var i = 0; i < message.paths.length; ++i)
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.paths[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldMask message, length delimited. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldMask();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.paths && message.paths.length))
                                    message.paths = [];
                                message.paths.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldMask message.
                 * @function verify
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldMask.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.paths != null && message.hasOwnProperty("paths")) {
                        if (!Array.isArray(message.paths))
                            return "paths: array expected";
                        for (var i = 0; i < message.paths.length; ++i)
                            if (!$util.isString(message.paths[i]))
                                return "paths: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldMask message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldMask} FieldMask
                 */
                FieldMask.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldMask)
                        return object;
                    var message = new $root.google.protobuf.FieldMask();
                    if (object.paths) {
                        if (!Array.isArray(object.paths))
                            throw TypeError(".google.protobuf.FieldMask.paths: array expected");
                        message.paths = [];
                        for (var i = 0; i < object.paths.length; ++i)
                            message.paths[i] = String(object.paths[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldMask message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.FieldMask} message FieldMask
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldMask.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.paths = [];
                    if (message.paths && message.paths.length) {
                        object.paths = [];
                        for (var j = 0; j < message.paths.length; ++j)
                            object.paths[j] = message.paths[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this FieldMask to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldMask.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldMask
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldMask.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldMask";
                };
    
                return FieldMask;
            })();
    
            protobuf.Struct = (function() {
    
                /**
                 * Properties of a Struct.
                 * @memberof google.protobuf
                 * @interface IStruct
                 * @property {Object.<string,google.protobuf.IValue>|null} [fields] Struct fields
                 */
    
                /**
                 * Constructs a new Struct.
                 * @memberof google.protobuf
                 * @classdesc Represents a Struct.
                 * @implements IStruct
                 * @constructor
                 * @param {google.protobuf.IStruct=} [properties] Properties to set
                 */
                function Struct(properties) {
                    this.fields = {};
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Struct fields.
                 * @member {Object.<string,google.protobuf.IValue>} fields
                 * @memberof google.protobuf.Struct
                 * @instance
                 */
                Struct.prototype.fields = $util.emptyObject;
    
                /**
                 * Creates a new Struct instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Struct
                 * @static
                 * @param {google.protobuf.IStruct=} [properties] Properties to set
                 * @returns {google.protobuf.Struct} Struct instance
                 */
                Struct.create = function create(properties) {
                    return new Struct(properties);
                };
    
                /**
                 * Encodes the specified Struct message. Does not implicitly {@link google.protobuf.Struct.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Struct
                 * @static
                 * @param {google.protobuf.IStruct} message Struct message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Struct.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.fields != null && Object.hasOwnProperty.call(message, "fields"))
                        for (var keys = Object.keys(message.fields), i = 0; i < keys.length; ++i) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                            $root.google.protobuf.Value.encode(message.fields[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                        }
                    return writer;
                };
    
                /**
                 * Encodes the specified Struct message, length delimited. Does not implicitly {@link google.protobuf.Struct.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Struct
                 * @static
                 * @param {google.protobuf.IStruct} message Struct message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Struct.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Struct message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Struct
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Struct} Struct
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Struct.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Struct(), key, value;
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (message.fields === $util.emptyObject)
                                    message.fields = {};
                                var end2 = reader.uint32() + reader.pos;
                                key = "";
                                value = null;
                                while (reader.pos < end2) {
                                    var tag2 = reader.uint32();
                                    switch (tag2 >>> 3) {
                                    case 1:
                                        key = reader.string();
                                        break;
                                    case 2:
                                        value = $root.google.protobuf.Value.decode(reader, reader.uint32());
                                        break;
                                    default:
                                        reader.skipType(tag2 & 7);
                                        break;
                                    }
                                }
                                message.fields[key] = value;
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Struct message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Struct
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Struct} Struct
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Struct.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Struct message.
                 * @function verify
                 * @memberof google.protobuf.Struct
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Struct.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.fields != null && message.hasOwnProperty("fields")) {
                        if (!$util.isObject(message.fields))
                            return "fields: object expected";
                        var key = Object.keys(message.fields);
                        for (var i = 0; i < key.length; ++i) {
                            var error = $root.google.protobuf.Value.verify(message.fields[key[i]]);
                            if (error)
                                return "fields." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Struct message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Struct
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Struct} Struct
                 */
                Struct.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Struct)
                        return object;
                    var message = new $root.google.protobuf.Struct();
                    if (object.fields) {
                        if (typeof object.fields !== "object")
                            throw TypeError(".google.protobuf.Struct.fields: object expected");
                        message.fields = {};
                        for (var keys = Object.keys(object.fields), i = 0; i < keys.length; ++i) {
                            if (typeof object.fields[keys[i]] !== "object")
                                throw TypeError(".google.protobuf.Struct.fields: object expected");
                            message.fields[keys[i]] = $root.google.protobuf.Value.fromObject(object.fields[keys[i]]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Struct message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Struct
                 * @static
                 * @param {google.protobuf.Struct} message Struct
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Struct.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.objects || options.defaults)
                        object.fields = {};
                    var keys2;
                    if (message.fields && (keys2 = Object.keys(message.fields)).length) {
                        object.fields = {};
                        for (var j = 0; j < keys2.length; ++j)
                            object.fields[keys2[j]] = $root.google.protobuf.Value.toObject(message.fields[keys2[j]], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this Struct to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Struct
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Struct.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Struct
                 * @function getTypeUrl
                 * @memberof google.protobuf.Struct
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Struct.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Struct";
                };
    
                return Struct;
            })();
    
            protobuf.Value = (function() {
    
                /**
                 * Properties of a Value.
                 * @memberof google.protobuf
                 * @interface IValue
                 * @property {google.protobuf.NullValue|null} [nullValue] Value nullValue
                 * @property {number|null} [numberValue] Value numberValue
                 * @property {string|null} [stringValue] Value stringValue
                 * @property {boolean|null} [boolValue] Value boolValue
                 * @property {google.protobuf.IStruct|null} [structValue] Value structValue
                 * @property {google.protobuf.IListValue|null} [listValue] Value listValue
                 */
    
                /**
                 * Constructs a new Value.
                 * @memberof google.protobuf
                 * @classdesc Represents a Value.
                 * @implements IValue
                 * @constructor
                 * @param {google.protobuf.IValue=} [properties] Properties to set
                 */
                function Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Value nullValue.
                 * @member {google.protobuf.NullValue|null|undefined} nullValue
                 * @memberof google.protobuf.Value
                 * @instance
                 */
                Value.prototype.nullValue = null;
    
                /**
                 * Value numberValue.
                 * @member {number|null|undefined} numberValue
                 * @memberof google.protobuf.Value
                 * @instance
                 */
                Value.prototype.numberValue = null;
    
                /**
                 * Value stringValue.
                 * @member {string|null|undefined} stringValue
                 * @memberof google.protobuf.Value
                 * @instance
                 */
                Value.prototype.stringValue = null;
    
                /**
                 * Value boolValue.
                 * @member {boolean|null|undefined} boolValue
                 * @memberof google.protobuf.Value
                 * @instance
                 */
                Value.prototype.boolValue = null;
    
                /**
                 * Value structValue.
                 * @member {google.protobuf.IStruct|null|undefined} structValue
                 * @memberof google.protobuf.Value
                 * @instance
                 */
                Value.prototype.structValue = null;
    
                /**
                 * Value listValue.
                 * @member {google.protobuf.IListValue|null|undefined} listValue
                 * @memberof google.protobuf.Value
                 * @instance
                 */
                Value.prototype.listValue = null;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * Value kind.
                 * @member {"nullValue"|"numberValue"|"stringValue"|"boolValue"|"structValue"|"listValue"|undefined} kind
                 * @memberof google.protobuf.Value
                 * @instance
                 */
                Object.defineProperty(Value.prototype, "kind", {
                    get: $util.oneOfGetter($oneOfFields = ["nullValue", "numberValue", "stringValue", "boolValue", "structValue", "listValue"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Value
                 * @static
                 * @param {google.protobuf.IValue=} [properties] Properties to set
                 * @returns {google.protobuf.Value} Value instance
                 */
                Value.create = function create(properties) {
                    return new Value(properties);
                };
    
                /**
                 * Encodes the specified Value message. Does not implicitly {@link google.protobuf.Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Value
                 * @static
                 * @param {google.protobuf.IValue} message Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.nullValue != null && Object.hasOwnProperty.call(message, "nullValue"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.nullValue);
                    if (message.numberValue != null && Object.hasOwnProperty.call(message, "numberValue"))
                        writer.uint32(/* id 2, wireType 1 =*/17).double(message.numberValue);
                    if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.stringValue);
                    if (message.boolValue != null && Object.hasOwnProperty.call(message, "boolValue"))
                        writer.uint32(/* id 4, wireType 0 =*/32).bool(message.boolValue);
                    if (message.structValue != null && Object.hasOwnProperty.call(message, "structValue"))
                        $root.google.protobuf.Struct.encode(message.structValue, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.listValue != null && Object.hasOwnProperty.call(message, "listValue"))
                        $root.google.protobuf.ListValue.encode(message.listValue, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Value message, length delimited. Does not implicitly {@link google.protobuf.Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Value
                 * @static
                 * @param {google.protobuf.IValue} message Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Value} Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.nullValue = reader.int32();
                                break;
                            }
                        case 2: {
                                message.numberValue = reader.double();
                                break;
                            }
                        case 3: {
                                message.stringValue = reader.string();
                                break;
                            }
                        case 4: {
                                message.boolValue = reader.bool();
                                break;
                            }
                        case 5: {
                                message.structValue = $root.google.protobuf.Struct.decode(reader, reader.uint32());
                                break;
                            }
                        case 6: {
                                message.listValue = $root.google.protobuf.ListValue.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Value} Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Value message.
                 * @function verify
                 * @memberof google.protobuf.Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.nullValue != null && message.hasOwnProperty("nullValue")) {
                        properties.kind = 1;
                        switch (message.nullValue) {
                        default:
                            return "nullValue: enum value expected";
                        case 0:
                            break;
                        }
                    }
                    if (message.numberValue != null && message.hasOwnProperty("numberValue")) {
                        if (properties.kind === 1)
                            return "kind: multiple values";
                        properties.kind = 1;
                        if (typeof message.numberValue !== "number")
                            return "numberValue: number expected";
                    }
                    if (message.stringValue != null && message.hasOwnProperty("stringValue")) {
                        if (properties.kind === 1)
                            return "kind: multiple values";
                        properties.kind = 1;
                        if (!$util.isString(message.stringValue))
                            return "stringValue: string expected";
                    }
                    if (message.boolValue != null && message.hasOwnProperty("boolValue")) {
                        if (properties.kind === 1)
                            return "kind: multiple values";
                        properties.kind = 1;
                        if (typeof message.boolValue !== "boolean")
                            return "boolValue: boolean expected";
                    }
                    if (message.structValue != null && message.hasOwnProperty("structValue")) {
                        if (properties.kind === 1)
                            return "kind: multiple values";
                        properties.kind = 1;
                        {
                            var error = $root.google.protobuf.Struct.verify(message.structValue);
                            if (error)
                                return "structValue." + error;
                        }
                    }
                    if (message.listValue != null && message.hasOwnProperty("listValue")) {
                        if (properties.kind === 1)
                            return "kind: multiple values";
                        properties.kind = 1;
                        {
                            var error = $root.google.protobuf.ListValue.verify(message.listValue);
                            if (error)
                                return "listValue." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Value} Value
                 */
                Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Value)
                        return object;
                    var message = new $root.google.protobuf.Value();
                    switch (object.nullValue) {
                    default:
                        if (typeof object.nullValue === "number") {
                            message.nullValue = object.nullValue;
                            break;
                        }
                        break;
                    case "NULL_VALUE":
                    case 0:
                        message.nullValue = 0;
                        break;
                    }
                    if (object.numberValue != null)
                        message.numberValue = Number(object.numberValue);
                    if (object.stringValue != null)
                        message.stringValue = String(object.stringValue);
                    if (object.boolValue != null)
                        message.boolValue = Boolean(object.boolValue);
                    if (object.structValue != null) {
                        if (typeof object.structValue !== "object")
                            throw TypeError(".google.protobuf.Value.structValue: object expected");
                        message.structValue = $root.google.protobuf.Struct.fromObject(object.structValue);
                    }
                    if (object.listValue != null) {
                        if (typeof object.listValue !== "object")
                            throw TypeError(".google.protobuf.Value.listValue: object expected");
                        message.listValue = $root.google.protobuf.ListValue.fromObject(object.listValue);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Value
                 * @static
                 * @param {google.protobuf.Value} message Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (message.nullValue != null && message.hasOwnProperty("nullValue")) {
                        object.nullValue = options.enums === String ? $root.google.protobuf.NullValue[message.nullValue] === undefined ? message.nullValue : $root.google.protobuf.NullValue[message.nullValue] : message.nullValue;
                        if (options.oneofs)
                            object.kind = "nullValue";
                    }
                    if (message.numberValue != null && message.hasOwnProperty("numberValue")) {
                        object.numberValue = options.json && !isFinite(message.numberValue) ? String(message.numberValue) : message.numberValue;
                        if (options.oneofs)
                            object.kind = "numberValue";
                    }
                    if (message.stringValue != null && message.hasOwnProperty("stringValue")) {
                        object.stringValue = message.stringValue;
                        if (options.oneofs)
                            object.kind = "stringValue";
                    }
                    if (message.boolValue != null && message.hasOwnProperty("boolValue")) {
                        object.boolValue = message.boolValue;
                        if (options.oneofs)
                            object.kind = "boolValue";
                    }
                    if (message.structValue != null && message.hasOwnProperty("structValue")) {
                        object.structValue = $root.google.protobuf.Struct.toObject(message.structValue, options);
                        if (options.oneofs)
                            object.kind = "structValue";
                    }
                    if (message.listValue != null && message.hasOwnProperty("listValue")) {
                        object.listValue = $root.google.protobuf.ListValue.toObject(message.listValue, options);
                        if (options.oneofs)
                            object.kind = "listValue";
                    }
                    return object;
                };
    
                /**
                 * Converts this Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Value";
                };
    
                return Value;
            })();
    
            /**
             * NullValue enum.
             * @name google.protobuf.NullValue
             * @enum {number}
             * @property {number} NULL_VALUE=0 NULL_VALUE value
             */
            protobuf.NullValue = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "NULL_VALUE"] = 0;
                return values;
            })();
    
            protobuf.ListValue = (function() {
    
                /**
                 * Properties of a ListValue.
                 * @memberof google.protobuf
                 * @interface IListValue
                 * @property {Array.<google.protobuf.IValue>|null} [values] ListValue values
                 */
    
                /**
                 * Constructs a new ListValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a ListValue.
                 * @implements IListValue
                 * @constructor
                 * @param {google.protobuf.IListValue=} [properties] Properties to set
                 */
                function ListValue(properties) {
                    this.values = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ListValue values.
                 * @member {Array.<google.protobuf.IValue>} values
                 * @memberof google.protobuf.ListValue
                 * @instance
                 */
                ListValue.prototype.values = $util.emptyArray;
    
                /**
                 * Creates a new ListValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ListValue
                 * @static
                 * @param {google.protobuf.IListValue=} [properties] Properties to set
                 * @returns {google.protobuf.ListValue} ListValue instance
                 */
                ListValue.create = function create(properties) {
                    return new ListValue(properties);
                };
    
                /**
                 * Encodes the specified ListValue message. Does not implicitly {@link google.protobuf.ListValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ListValue
                 * @static
                 * @param {google.protobuf.IListValue} message ListValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.values != null && message.values.length)
                        for (var i = 0; i < message.values.length; ++i)
                            $root.google.protobuf.Value.encode(message.values[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ListValue message, length delimited. Does not implicitly {@link google.protobuf.ListValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ListValue
                 * @static
                 * @param {google.protobuf.IListValue} message ListValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ListValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ListValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ListValue} ListValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ListValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.values && message.values.length))
                                    message.values = [];
                                message.values.push($root.google.protobuf.Value.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ListValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ListValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ListValue} ListValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ListValue message.
                 * @function verify
                 * @memberof google.protobuf.ListValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.values != null && message.hasOwnProperty("values")) {
                        if (!Array.isArray(message.values))
                            return "values: array expected";
                        for (var i = 0; i < message.values.length; ++i) {
                            var error = $root.google.protobuf.Value.verify(message.values[i]);
                            if (error)
                                return "values." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a ListValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ListValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ListValue} ListValue
                 */
                ListValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ListValue)
                        return object;
                    var message = new $root.google.protobuf.ListValue();
                    if (object.values) {
                        if (!Array.isArray(object.values))
                            throw TypeError(".google.protobuf.ListValue.values: array expected");
                        message.values = [];
                        for (var i = 0; i < object.values.length; ++i) {
                            if (typeof object.values[i] !== "object")
                                throw TypeError(".google.protobuf.ListValue.values: object expected");
                            message.values[i] = $root.google.protobuf.Value.fromObject(object.values[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ListValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ListValue
                 * @static
                 * @param {google.protobuf.ListValue} message ListValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.values = [];
                    if (message.values && message.values.length) {
                        object.values = [];
                        for (var j = 0; j < message.values.length; ++j)
                            object.values[j] = $root.google.protobuf.Value.toObject(message.values[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ListValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ListValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ListValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.ListValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ListValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ListValue";
                };
    
                return ListValue;
            })();
    
            return protobuf;
        })();
    
        google.rpc = (function() {
    
            /**
             * Namespace rpc.
             * @memberof google
             * @namespace
             */
            var rpc = {};
    
            rpc.Status = (function() {
    
                /**
                 * Properties of a Status.
                 * @memberof google.rpc
                 * @interface IStatus
                 * @property {number|null} [code] Status code
                 * @property {string|null} [message] Status message
                 * @property {Array.<google.protobuf.IAny>|null} [details] Status details
                 */
    
                /**
                 * Constructs a new Status.
                 * @memberof google.rpc
                 * @classdesc Represents a Status.
                 * @implements IStatus
                 * @constructor
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 */
                function Status(properties) {
                    this.details = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Status code.
                 * @member {number} code
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.code = 0;
    
                /**
                 * Status message.
                 * @member {string} message
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.message = "";
    
                /**
                 * Status details.
                 * @member {Array.<google.protobuf.IAny>} details
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.details = $util.emptyArray;
    
                /**
                 * Creates a new Status instance using the specified properties.
                 * @function create
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 * @returns {google.rpc.Status} Status instance
                 */
                Status.create = function create(properties) {
                    return new Status(properties);
                };
    
                /**
                 * Encodes the specified Status message. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.code);
                    if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.message);
                    if (message.details != null && message.details.length)
                        for (var i = 0; i < message.details.length; ++i)
                            $root.google.protobuf.Any.encode(message.details[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Status message, length delimited. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.rpc.Status();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.code = reader.int32();
                                break;
                            }
                        case 2: {
                                message.message = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.details && message.details.length))
                                    message.details = [];
                                message.details.push($root.google.protobuf.Any.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Status message.
                 * @function verify
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Status.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.code != null && message.hasOwnProperty("code"))
                        if (!$util.isInteger(message.code))
                            return "code: integer expected";
                    if (message.message != null && message.hasOwnProperty("message"))
                        if (!$util.isString(message.message))
                            return "message: string expected";
                    if (message.details != null && message.hasOwnProperty("details")) {
                        if (!Array.isArray(message.details))
                            return "details: array expected";
                        for (var i = 0; i < message.details.length; ++i) {
                            var error = $root.google.protobuf.Any.verify(message.details[i]);
                            if (error)
                                return "details." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Status message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.rpc.Status} Status
                 */
                Status.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.rpc.Status)
                        return object;
                    var message = new $root.google.rpc.Status();
                    if (object.code != null)
                        message.code = object.code | 0;
                    if (object.message != null)
                        message.message = String(object.message);
                    if (object.details) {
                        if (!Array.isArray(object.details))
                            throw TypeError(".google.rpc.Status.details: array expected");
                        message.details = [];
                        for (var i = 0; i < object.details.length; ++i) {
                            if (typeof object.details[i] !== "object")
                                throw TypeError(".google.rpc.Status.details: object expected");
                            message.details[i] = $root.google.protobuf.Any.fromObject(object.details[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Status message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.Status} message Status
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Status.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.details = [];
                    if (options.defaults) {
                        object.code = 0;
                        object.message = "";
                    }
                    if (message.code != null && message.hasOwnProperty("code"))
                        object.code = message.code;
                    if (message.message != null && message.hasOwnProperty("message"))
                        object.message = message.message;
                    if (message.details && message.details.length) {
                        object.details = [];
                        for (var j = 0; j < message.details.length; ++j)
                            object.details[j] = $root.google.protobuf.Any.toObject(message.details[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this Status to JSON.
                 * @function toJSON
                 * @memberof google.rpc.Status
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Status.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Status
                 * @function getTypeUrl
                 * @memberof google.rpc.Status
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Status.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.rpc.Status";
                };
    
                return Status;
            })();
    
            return rpc;
        })();
    
        google.type = (function() {
    
            /**
             * Namespace type.
             * @memberof google
             * @namespace
             */
            var type = {};
    
            /**
             * CalendarPeriod enum.
             * @name google.type.CalendarPeriod
             * @enum {number}
             * @property {number} CALENDAR_PERIOD_UNSPECIFIED=0 CALENDAR_PERIOD_UNSPECIFIED value
             * @property {number} DAY=1 DAY value
             * @property {number} WEEK=2 WEEK value
             * @property {number} FORTNIGHT=3 FORTNIGHT value
             * @property {number} MONTH=4 MONTH value
             * @property {number} QUARTER=5 QUARTER value
             * @property {number} HALF=6 HALF value
             * @property {number} YEAR=7 YEAR value
             */
            type.CalendarPeriod = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "CALENDAR_PERIOD_UNSPECIFIED"] = 0;
                values[valuesById[1] = "DAY"] = 1;
                values[valuesById[2] = "WEEK"] = 2;
                values[valuesById[3] = "FORTNIGHT"] = 3;
                values[valuesById[4] = "MONTH"] = 4;
                values[valuesById[5] = "QUARTER"] = 5;
                values[valuesById[6] = "HALF"] = 6;
                values[valuesById[7] = "YEAR"] = 7;
                return values;
            })();
    
            return type;
        })();
    
        return google;
    })();

    return $root;
});
