// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(snooze, updateMask) {
  // [START monitoring_v3_generated_SnoozeService_UpdateSnooze_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The `Snooze` to update. Must have the name field present.
   */
  // const snooze = {}
  /**
   *  Required. The fields to update.
   *  For each field listed in `update_mask`:
   *    * If the `Snooze` object supplied in the `UpdateSnoozeRequest` has a
   *      value for that field, the value of the field in the existing `Snooze`
   *      will be set to the value of the field in the supplied `Snooze`.
   *    * If the field does not have a value in the supplied `Snooze`, the field
   *      in the existing `Snooze` is set to its default value.
   *  Fields not listed retain their existing value.
   *  The following are the field names that are accepted in `update_mask`:
   *    * `display_name`
   *    * `interval.start_time`
   *    * `interval.end_time`
   *  That said, the start time and end time of the `Snooze` determines which
   *  fields can legally be updated. Before attempting an update, users should
   *  consult the documentation for `UpdateSnoozeRequest`, which talks about
   *  which fields can be updated.
   */
  // const updateMask = {}

  // Imports the Monitoring library
  const {SnoozeServiceClient} = require('@google-cloud/monitoring').v3;

  // Instantiates a client
  const monitoringClient = new SnoozeServiceClient();

  async function callUpdateSnooze() {
    // Construct request
    const request = {
      snooze,
      updateMask,
    };

    // Run request
    const response = await monitoringClient.updateSnooze(request);
    console.log(response);
  }

  callUpdateSnooze();
  // [END monitoring_v3_generated_SnoozeService_UpdateSnooze_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
