// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(name) {
  // [START monitoring_v3_generated_AlertPolicyService_ListAlertPolicies_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The
   *  project (https://cloud.google.com/monitoring/api/v3#project_name) whose
   *  alert policies are to be listed. The format is:
   *      projects/[PROJECT_ID_OR_NUMBER]
   *  Note that this field names the parent container in which the alerting
   *  policies to be listed are stored. To retrieve a single alerting policy
   *  by name, use the
   *  GetAlertPolicy google.monitoring.v3.AlertPolicyService.GetAlertPolicy 
   *  operation, instead.
   */
  // const name = 'abc123'
  /**
   *  Optional. If provided, this field specifies the criteria that must be met
   *  by alert policies to be included in the response.
   *  For more details, see sorting and
   *  filtering (https://cloud.google.com/monitoring/api/v3/sorting-and-filtering).
   */
  // const filter = 'abc123'
  /**
   *  Optional. A comma-separated list of fields by which to sort the result.
   *  Supports the same set of field references as the `filter` field. Entries
   *  can be prefixed with a minus sign to sort by the field in descending order.
   *  For more details, see sorting and
   *  filtering (https://cloud.google.com/monitoring/api/v3/sorting-and-filtering).
   */
  // const orderBy = 'abc123'
  /**
   *  Optional. The maximum number of results to return in a single response.
   */
  // const pageSize = 1234
  /**
   *  Optional. If this field is not empty then it must contain the
   *  `nextPageToken` value returned by a previous call to this method.  Using
   *  this field causes the method to return more results from the previous
   *  method call.
   */
  // const pageToken = 'abc123'

  // Imports the Monitoring library
  const {AlertPolicyServiceClient} = require('@google-cloud/monitoring').v3;

  // Instantiates a client
  const monitoringClient = new AlertPolicyServiceClient();

  async function callListAlertPolicies() {
    // Construct request
    const request = {
      name,
    };

    // Run request
    const iterable = monitoringClient.listAlertPoliciesAsync(request);
    for await (const response of iterable) {
        console.log(response);
    }
  }

  callListAlertPolicies();
  // [END monitoring_v3_generated_AlertPolicyService_ListAlertPolicies_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
