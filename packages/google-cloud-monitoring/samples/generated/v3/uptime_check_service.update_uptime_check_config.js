// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(uptimeCheckConfig) {
  // [START monitoring_v3_generated_UptimeCheckService_UpdateUptimeCheckConfig_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Optional. If present, only the listed fields in the current Uptime check
   *  configuration are updated with values from the new configuration. If this
   *  field is empty, then the current configuration is completely replaced with
   *  the new configuration.
   */
  // const updateMask = {}
  /**
   *  Required. If an `updateMask` has been specified, this field gives
   *  the values for the set of fields mentioned in the `updateMask`. If an
   *  `updateMask` has not been given, this Uptime check configuration replaces
   *  the current configuration. If a field is mentioned in `updateMask` but
   *  the corresponding field is omitted in this partial Uptime check
   *  configuration, it has the effect of deleting/clearing the field from the
   *  configuration on the server.
   *  The following fields can be updated: `display_name`,
   *  `http_check`, `tcp_check`, `timeout`, `content_matchers`, and
   *  `selected_regions`.
   */
  // const uptimeCheckConfig = {}

  // Imports the Monitoring library
  const {UptimeCheckServiceClient} = require('@google-cloud/monitoring').v3;

  // Instantiates a client
  const monitoringClient = new UptimeCheckServiceClient();

  async function callUpdateUptimeCheckConfig() {
    // Construct request
    const request = {
      uptimeCheckConfig,
    };

    // Run request
    const response = await monitoringClient.updateUptimeCheckConfig(request);
    console.log(response);
  }

  callUpdateUptimeCheckConfig();
  // [END monitoring_v3_generated_UptimeCheckService_UpdateUptimeCheckConfig_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
