// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(name, modelResponseData) {
  // [START modelarmor_v1_generated_ModelArmor_SanitizeModelResponse_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. Represents resource name of template
   *  e.g. name=projects/sample-project/locations/us-central1/templates/templ01
   */
  // const name = 'abc123'
  /**
   *  Required. Model response data to sanitize.
   */
  // const modelResponseData = {}
  /**
   *  Optional. User Prompt associated with Model response.
   */
  // const userPrompt = 'abc123'

  // Imports the Modelarmor library
  const {ModelArmorClient} = require('@google-cloud/modelarmor').v1;

  // Instantiates a client
  const modelarmorClient = new ModelArmorClient();

  async function callSanitizeModelResponse() {
    // Construct request
    const request = {
      name,
      modelResponseData,
    };

    // Run request
    const response = await modelarmorClient.sanitizeModelResponse(request);
    console.log(response);
  }

  callSanitizeModelResponse();
  // [END modelarmor_v1_generated_ModelArmor_SanitizeModelResponse_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
