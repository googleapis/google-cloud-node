// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(vmName, vmMachineType, vmSubnet) {
  // [START datamigration_v1_generated_DataMigrationService_GenerateTcpProxyScript_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Name of the migration job resource to generate the TCP Proxy script.
   */
  // const migrationJob = 'abc123'
  /**
   *  Required. The name of the Compute instance that will host the proxy.
   */
  // const vmName = 'abc123'
  /**
   *  Required. The type of the Compute instance that will host the proxy.
   */
  // const vmMachineType = 'abc123'
  /**
   *  Optional. The Google Cloud Platform zone to create the VM in. The fully
   *  qualified name of the zone must be specified, including the region name,
   *  for example "us-central1-b". If not specified, uses the "-b" zone of the
   *  destination Connection Profile's region.
   */
  // const vmZone = 'abc123'
  /**
   *  Required. The name of the subnet the Compute instance will use for private
   *  connectivity. Must be supplied in the form of
   *  projects/{project}/regions/{region}/subnetworks/{subnetwork}.
   *  Note: the region for the subnet must match the Compute instance region.
   */
  // const vmSubnet = 'abc123'

  // Imports the Clouddms library
  const {DataMigrationServiceClient} = require('@google-cloud/dms').v1;

  // Instantiates a client
  const clouddmsClient = new DataMigrationServiceClient();

  async function callGenerateTcpProxyScript() {
    // Construct request
    const request = {
      vmName,
      vmMachineType,
      vmSubnet,
    };

    // Run request
    const response = await clouddmsClient.generateTcpProxyScript(request);
    console.log(response);
  }

  callGenerateTcpProxyScript();
  // [END datamigration_v1_generated_DataMigrationService_GenerateTcpProxyScript_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
