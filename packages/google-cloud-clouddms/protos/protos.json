{
  "nested": {
    "google": {
      "nested": {
        "cloud": {
          "nested": {
            "clouddms": {
              "nested": {
                "v1": {
                  "options": {
                    "csharp_namespace": "Google.Cloud.CloudDms.V1",
                    "go_package": "cloud.google.com/go/clouddms/apiv1/clouddmspb;clouddmspb",
                    "java_multiple_files": true,
                    "java_outer_classname": "ConversionWorkspaceResourcesProto",
                    "java_package": "com.google.cloud.clouddms.v1",
                    "php_namespace": "Google\\Cloud\\CloudDms\\V1",
                    "ruby_package": "Google::Cloud::CloudDMS::V1",
                    "(google.api.resource_definition).type": "compute.googleapis.com/Networks",
                    "(google.api.resource_definition).pattern": "projects/{project}/global/networks/{network}"
                  },
                  "nested": {
                    "DataMigrationService": {
                      "options": {
                        "(google.api.default_host)": "datamigration.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "ListMigrationJobs": {
                          "requestType": "ListMigrationJobsRequest",
                          "responseType": "ListMigrationJobsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/migrationJobs",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/migrationJobs"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetMigrationJob": {
                          "requestType": "GetMigrationJobRequest",
                          "responseType": "MigrationJob",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/migrationJobs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/migrationJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateMigrationJob": {
                          "requestType": "CreateMigrationJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/migrationJobs",
                            "(google.api.http).body": "migration_job",
                            "(google.api.method_signature)": "parent,migration_job,migration_job_id",
                            "(google.longrunning.operation_info).response_type": "MigrationJob",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/migrationJobs",
                                "body": "migration_job"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,migration_job,migration_job_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "MigrationJob",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpdateMigrationJob": {
                          "requestType": "UpdateMigrationJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1/{migration_job.name=projects/*/locations/*/migrationJobs/*}",
                            "(google.api.http).body": "migration_job",
                            "(google.api.method_signature)": "migration_job,update_mask",
                            "(google.longrunning.operation_info).response_type": "MigrationJob",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{migration_job.name=projects/*/locations/*/migrationJobs/*}",
                                "body": "migration_job"
                              }
                            },
                            {
                              "(google.api.method_signature)": "migration_job,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "MigrationJob",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteMigrationJob": {
                          "requestType": "DeleteMigrationJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/migrationJobs/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/migrationJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "StartMigrationJob": {
                          "requestType": "StartMigrationJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/migrationJobs/*}:start",
                            "(google.api.http).body": "*",
                            "(google.longrunning.operation_info).response_type": "MigrationJob",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/migrationJobs/*}:start",
                                "body": "*"
                              }
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "MigrationJob",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "StopMigrationJob": {
                          "requestType": "StopMigrationJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/migrationJobs/*}:stop",
                            "(google.api.http).body": "*",
                            "(google.longrunning.operation_info).response_type": "MigrationJob",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/migrationJobs/*}:stop",
                                "body": "*"
                              }
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "MigrationJob",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "ResumeMigrationJob": {
                          "requestType": "ResumeMigrationJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/migrationJobs/*}:resume",
                            "(google.api.http).body": "*",
                            "(google.longrunning.operation_info).response_type": "MigrationJob",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/migrationJobs/*}:resume",
                                "body": "*"
                              }
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "MigrationJob",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "PromoteMigrationJob": {
                          "requestType": "PromoteMigrationJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/migrationJobs/*}:promote",
                            "(google.api.http).body": "*",
                            "(google.longrunning.operation_info).response_type": "MigrationJob",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/migrationJobs/*}:promote",
                                "body": "*"
                              }
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "MigrationJob",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "VerifyMigrationJob": {
                          "requestType": "VerifyMigrationJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/migrationJobs/*}:verify",
                            "(google.api.http).body": "*",
                            "(google.longrunning.operation_info).response_type": "MigrationJob",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/migrationJobs/*}:verify",
                                "body": "*"
                              }
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "MigrationJob",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "RestartMigrationJob": {
                          "requestType": "RestartMigrationJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/migrationJobs/*}:restart",
                            "(google.api.http).body": "*",
                            "(google.longrunning.operation_info).response_type": "MigrationJob",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/migrationJobs/*}:restart",
                                "body": "*"
                              }
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "MigrationJob",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "GenerateSshScript": {
                          "requestType": "GenerateSshScriptRequest",
                          "responseType": "SshScript",
                          "options": {
                            "(google.api.http).post": "/v1/{migration_job=projects/*/locations/*/migrationJobs/*}:generateSshScript",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{migration_job=projects/*/locations/*/migrationJobs/*}:generateSshScript",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "GenerateTcpProxyScript": {
                          "requestType": "GenerateTcpProxyScriptRequest",
                          "responseType": "TcpProxyScript",
                          "options": {
                            "(google.api.http).post": "/v1/{migration_job=projects/*/locations/*/migrationJobs/*}:generateTcpProxyScript",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{migration_job=projects/*/locations/*/migrationJobs/*}:generateTcpProxyScript",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "ListConnectionProfiles": {
                          "requestType": "ListConnectionProfilesRequest",
                          "responseType": "ListConnectionProfilesResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/connectionProfiles",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/connectionProfiles"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetConnectionProfile": {
                          "requestType": "GetConnectionProfileRequest",
                          "responseType": "ConnectionProfile",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/connectionProfiles/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/connectionProfiles/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateConnectionProfile": {
                          "requestType": "CreateConnectionProfileRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/connectionProfiles",
                            "(google.api.http).body": "connection_profile",
                            "(google.api.method_signature)": "parent,connection_profile,connection_profile_id",
                            "(google.longrunning.operation_info).response_type": "ConnectionProfile",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/connectionProfiles",
                                "body": "connection_profile"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,connection_profile,connection_profile_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "ConnectionProfile",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpdateConnectionProfile": {
                          "requestType": "UpdateConnectionProfileRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1/{connection_profile.name=projects/*/locations/*/connectionProfiles/*}",
                            "(google.api.http).body": "connection_profile",
                            "(google.api.method_signature)": "connection_profile,update_mask",
                            "(google.longrunning.operation_info).response_type": "ConnectionProfile",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{connection_profile.name=projects/*/locations/*/connectionProfiles/*}",
                                "body": "connection_profile"
                              }
                            },
                            {
                              "(google.api.method_signature)": "connection_profile,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "ConnectionProfile",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteConnectionProfile": {
                          "requestType": "DeleteConnectionProfileRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/connectionProfiles/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/connectionProfiles/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "CreatePrivateConnection": {
                          "requestType": "CreatePrivateConnectionRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/privateConnections",
                            "(google.api.http).body": "private_connection",
                            "(google.api.method_signature)": "parent,private_connection,private_connection_id",
                            "(google.longrunning.operation_info).response_type": "PrivateConnection",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/privateConnections",
                                "body": "private_connection"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,private_connection,private_connection_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "PrivateConnection",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetPrivateConnection": {
                          "requestType": "GetPrivateConnectionRequest",
                          "responseType": "PrivateConnection",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/privateConnections/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/privateConnections/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListPrivateConnections": {
                          "requestType": "ListPrivateConnectionsRequest",
                          "responseType": "ListPrivateConnectionsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/privateConnections",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/privateConnections"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeletePrivateConnection": {
                          "requestType": "DeletePrivateConnectionRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/privateConnections/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/privateConnections/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetConversionWorkspace": {
                          "requestType": "GetConversionWorkspaceRequest",
                          "responseType": "ConversionWorkspace",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/conversionWorkspaces/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/conversionWorkspaces/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListConversionWorkspaces": {
                          "requestType": "ListConversionWorkspacesRequest",
                          "responseType": "ListConversionWorkspacesResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/conversionWorkspaces",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/conversionWorkspaces"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "CreateConversionWorkspace": {
                          "requestType": "CreateConversionWorkspaceRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/conversionWorkspaces",
                            "(google.api.http).body": "conversion_workspace",
                            "(google.api.method_signature)": "parent,conversion_workspace,conversion_workspace_id",
                            "(google.longrunning.operation_info).response_type": "ConversionWorkspace",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/conversionWorkspaces",
                                "body": "conversion_workspace"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,conversion_workspace,conversion_workspace_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "ConversionWorkspace",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpdateConversionWorkspace": {
                          "requestType": "UpdateConversionWorkspaceRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1/{conversion_workspace.name=projects/*/locations/*/conversionWorkspaces/*}",
                            "(google.api.http).body": "conversion_workspace",
                            "(google.api.method_signature)": "conversion_workspace,update_mask",
                            "(google.longrunning.operation_info).response_type": "ConversionWorkspace",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{conversion_workspace.name=projects/*/locations/*/conversionWorkspaces/*}",
                                "body": "conversion_workspace"
                              }
                            },
                            {
                              "(google.api.method_signature)": "conversion_workspace,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "ConversionWorkspace",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteConversionWorkspace": {
                          "requestType": "DeleteConversionWorkspaceRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/conversionWorkspaces/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/conversionWorkspaces/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "CreateMappingRule": {
                          "requestType": "CreateMappingRuleRequest",
                          "responseType": "MappingRule",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/conversionWorkspaces/*}/mappingRules",
                            "(google.api.http).body": "mapping_rule",
                            "(google.api.method_signature)": "parent,mapping_rule,mapping_rule_id"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/conversionWorkspaces/*}/mappingRules",
                                "body": "mapping_rule"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,mapping_rule,mapping_rule_id"
                            }
                          ]
                        },
                        "DeleteMappingRule": {
                          "requestType": "DeleteMappingRuleRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/conversionWorkspaces/*/mappingRules/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/conversionWorkspaces/*/mappingRules/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListMappingRules": {
                          "requestType": "ListMappingRulesRequest",
                          "responseType": "ListMappingRulesResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/conversionWorkspaces/*}/mappingRules",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/conversionWorkspaces/*}/mappingRules"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetMappingRule": {
                          "requestType": "GetMappingRuleRequest",
                          "responseType": "MappingRule",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/conversionWorkspaces/*/mappingRules/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/conversionWorkspaces/*/mappingRules/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "SeedConversionWorkspace": {
                          "requestType": "SeedConversionWorkspaceRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/conversionWorkspaces/*}:seed",
                            "(google.api.http).body": "*",
                            "(google.longrunning.operation_info).response_type": "ConversionWorkspace",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/conversionWorkspaces/*}:seed",
                                "body": "*"
                              }
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "ConversionWorkspace",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "ImportMappingRules": {
                          "requestType": "ImportMappingRulesRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/conversionWorkspaces/*}/mappingRules:import",
                            "(google.api.http).body": "*",
                            "(google.longrunning.operation_info).response_type": "ConversionWorkspace",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/conversionWorkspaces/*}/mappingRules:import",
                                "body": "*"
                              }
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "ConversionWorkspace",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "ConvertConversionWorkspace": {
                          "requestType": "ConvertConversionWorkspaceRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/conversionWorkspaces/*}:convert",
                            "(google.api.http).body": "*",
                            "(google.longrunning.operation_info).response_type": "ConversionWorkspace",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/conversionWorkspaces/*}:convert",
                                "body": "*"
                              }
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "ConversionWorkspace",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "CommitConversionWorkspace": {
                          "requestType": "CommitConversionWorkspaceRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/conversionWorkspaces/*}:commit",
                            "(google.api.http).body": "*",
                            "(google.longrunning.operation_info).response_type": "ConversionWorkspace",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/conversionWorkspaces/*}:commit",
                                "body": "*"
                              }
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "ConversionWorkspace",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "RollbackConversionWorkspace": {
                          "requestType": "RollbackConversionWorkspaceRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/conversionWorkspaces/*}:rollback",
                            "(google.api.http).body": "*",
                            "(google.longrunning.operation_info).response_type": "ConversionWorkspace",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/conversionWorkspaces/*}:rollback",
                                "body": "*"
                              }
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "ConversionWorkspace",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "ApplyConversionWorkspace": {
                          "requestType": "ApplyConversionWorkspaceRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/conversionWorkspaces/*}:apply",
                            "(google.api.http).body": "*",
                            "(google.longrunning.operation_info).response_type": "ConversionWorkspace",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/conversionWorkspaces/*}:apply",
                                "body": "*"
                              }
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "ConversionWorkspace",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "DescribeDatabaseEntities": {
                          "requestType": "DescribeDatabaseEntitiesRequest",
                          "responseType": "DescribeDatabaseEntitiesResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{conversion_workspace=projects/*/locations/*/conversionWorkspaces/*}:describeDatabaseEntities"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{conversion_workspace=projects/*/locations/*/conversionWorkspaces/*}:describeDatabaseEntities"
                              }
                            }
                          ]
                        },
                        "SearchBackgroundJobs": {
                          "requestType": "SearchBackgroundJobsRequest",
                          "responseType": "SearchBackgroundJobsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{conversion_workspace=projects/*/locations/*/conversionWorkspaces/*}:searchBackgroundJobs"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{conversion_workspace=projects/*/locations/*/conversionWorkspaces/*}:searchBackgroundJobs"
                              }
                            }
                          ]
                        },
                        "DescribeConversionWorkspaceRevisions": {
                          "requestType": "DescribeConversionWorkspaceRevisionsRequest",
                          "responseType": "DescribeConversionWorkspaceRevisionsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{conversion_workspace=projects/*/locations/*/conversionWorkspaces/*}:describeConversionWorkspaceRevisions"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{conversion_workspace=projects/*/locations/*/conversionWorkspaces/*}:describeConversionWorkspaceRevisions"
                              }
                            }
                          ]
                        },
                        "FetchStaticIps": {
                          "requestType": "FetchStaticIpsRequest",
                          "responseType": "FetchStaticIpsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*}:fetchStaticIps",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*}:fetchStaticIps"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        }
                      }
                    },
                    "ListMigrationJobsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "datamigration.googleapis.com/MigrationJob"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "filter": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "ListMigrationJobsResponse": {
                      "fields": {
                        "migrationJobs": {
                          "rule": "repeated",
                          "type": "MigrationJob",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "unreachable": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "GetMigrationJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datamigration.googleapis.com/MigrationJob"
                          }
                        }
                      }
                    },
                    "CreateMigrationJobRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "datamigration.googleapis.com/MigrationJob"
                          }
                        },
                        "migrationJobId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "migrationJob": {
                          "type": "MigrationJob",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "UpdateMigrationJobRequest": {
                      "fields": {
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "migrationJob": {
                          "type": "MigrationJob",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "DeleteMigrationJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datamigration.googleapis.com/MigrationJob"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 2
                        },
                        "force": {
                          "type": "bool",
                          "id": 3
                        }
                      }
                    },
                    "StartMigrationJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.resource_reference).type": "datamigration.googleapis.com/MigrationJob"
                          }
                        },
                        "skipValidation": {
                          "type": "bool",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "StopMigrationJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.resource_reference).type": "datamigration.googleapis.com/MigrationJob"
                          }
                        }
                      }
                    },
                    "ResumeMigrationJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.resource_reference).type": "datamigration.googleapis.com/MigrationJob"
                          }
                        }
                      }
                    },
                    "PromoteMigrationJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.resource_reference).type": "datamigration.googleapis.com/MigrationJob"
                          }
                        }
                      }
                    },
                    "VerifyMigrationJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.resource_reference).type": "datamigration.googleapis.com/MigrationJob"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "migrationJob": {
                          "type": "MigrationJob",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "RestartMigrationJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.resource_reference).type": "datamigration.googleapis.com/MigrationJob"
                          }
                        },
                        "skipValidation": {
                          "type": "bool",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "GenerateSshScriptRequest": {
                      "oneofs": {
                        "vmConfig": {
                          "oneof": [
                            "vmCreationConfig",
                            "vmSelectionConfig"
                          ]
                        }
                      },
                      "fields": {
                        "migrationJob": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.resource_reference).type": "datamigration.googleapis.com/MigrationJob"
                          }
                        },
                        "vm": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "vmCreationConfig": {
                          "type": "VmCreationConfig",
                          "id": 100
                        },
                        "vmSelectionConfig": {
                          "type": "VmSelectionConfig",
                          "id": 101
                        },
                        "vmPort": {
                          "type": "int32",
                          "id": 3
                        }
                      }
                    },
                    "VmCreationConfig": {
                      "fields": {
                        "vmMachineType": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "vmZone": {
                          "type": "string",
                          "id": 2
                        },
                        "subnet": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "VmSelectionConfig": {
                      "fields": {
                        "vmZone": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "SshScript": {
                      "fields": {
                        "script": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "GenerateTcpProxyScriptRequest": {
                      "fields": {
                        "migrationJob": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.resource_reference).type": "datamigration.googleapis.com/MigrationJob"
                          }
                        },
                        "vmName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "vmMachineType": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "vmZone": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "vmSubnet": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "TcpProxyScript": {
                      "fields": {
                        "script": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "ListConnectionProfilesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "datamigration.googleapis.com/ConnectionProfile"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "filter": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "ListConnectionProfilesResponse": {
                      "fields": {
                        "connectionProfiles": {
                          "rule": "repeated",
                          "type": "ConnectionProfile",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "unreachable": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "GetConnectionProfileRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datamigration.googleapis.com/ConnectionProfile"
                          }
                        }
                      }
                    },
                    "CreateConnectionProfileRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "datamigration.googleapis.com/ConnectionProfile"
                          }
                        },
                        "connectionProfileId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "connectionProfile": {
                          "type": "ConnectionProfile",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "validateOnly": {
                          "type": "bool",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "skipValidation": {
                          "type": "bool",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "UpdateConnectionProfileRequest": {
                      "fields": {
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "connectionProfile": {
                          "type": "ConnectionProfile",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "validateOnly": {
                          "type": "bool",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "skipValidation": {
                          "type": "bool",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "DeleteConnectionProfileRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datamigration.googleapis.com/ConnectionProfile"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 2
                        },
                        "force": {
                          "type": "bool",
                          "id": 3
                        }
                      }
                    },
                    "CreatePrivateConnectionRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "datamigration.googleapis.com/PrivateConnection"
                          }
                        },
                        "privateConnectionId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "privateConnection": {
                          "type": "PrivateConnection",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "skipValidation": {
                          "type": "bool",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListPrivateConnectionsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "datamigration.googleapis.com/PrivateConnection"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "filter": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "ListPrivateConnectionsResponse": {
                      "fields": {
                        "privateConnections": {
                          "rule": "repeated",
                          "type": "PrivateConnection",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "unreachable": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "DeletePrivateConnectionRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datamigration.googleapis.com/PrivateConnection"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "GetPrivateConnectionRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datamigration.googleapis.com/PrivateConnection"
                          }
                        }
                      }
                    },
                    "OperationMetadata": {
                      "fields": {
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "target": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "verb": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "statusMessage": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "requestedCancellation": {
                          "type": "bool",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "apiVersion": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "ListConversionWorkspacesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "datamigration.googleapis.com/ConversionWorkspace"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "filter": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "ListConversionWorkspacesResponse": {
                      "fields": {
                        "conversionWorkspaces": {
                          "rule": "repeated",
                          "type": "ConversionWorkspace",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "unreachable": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "GetConversionWorkspaceRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datamigration.googleapis.com/ConversionWorkspace"
                          }
                        }
                      }
                    },
                    "CreateConversionWorkspaceRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "datamigration.googleapis.com/ConversionWorkspace"
                          }
                        },
                        "conversionWorkspaceId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "conversionWorkspace": {
                          "type": "ConversionWorkspace",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "UpdateConversionWorkspaceRequest": {
                      "fields": {
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "conversionWorkspace": {
                          "type": "ConversionWorkspace",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "DeleteConversionWorkspaceRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datamigration.googleapis.com/ConversionWorkspace"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 2
                        },
                        "force": {
                          "type": "bool",
                          "id": 3
                        }
                      }
                    },
                    "CommitConversionWorkspaceRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datamigration.googleapis.com/ConversionWorkspace"
                          }
                        },
                        "commitName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "RollbackConversionWorkspaceRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datamigration.googleapis.com/ConversionWorkspace"
                          }
                        }
                      }
                    },
                    "ApplyConversionWorkspaceRequest": {
                      "oneofs": {
                        "destination": {
                          "oneof": [
                            "connectionProfile"
                          ]
                        }
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datamigration.googleapis.com/ConversionWorkspace"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "dryRun": {
                          "type": "bool",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "autoCommit": {
                          "type": "bool",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "connectionProfile": {
                          "type": "string",
                          "id": 100,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListMappingRulesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datamigration.googleapis.com/ConversionWorkspace"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ListMappingRulesResponse": {
                      "fields": {
                        "mappingRules": {
                          "rule": "repeated",
                          "type": "MappingRule",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GetMappingRuleRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datamigration.googleapis.com/MappingRule"
                          }
                        }
                      }
                    },
                    "SeedConversionWorkspaceRequest": {
                      "oneofs": {
                        "seedFrom": {
                          "oneof": [
                            "sourceConnectionProfile",
                            "destinationConnectionProfile"
                          ]
                        }
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.resource_reference).type": "datamigration.googleapis.com/ConversionWorkspace"
                          }
                        },
                        "autoCommit": {
                          "type": "bool",
                          "id": 2
                        },
                        "sourceConnectionProfile": {
                          "type": "string",
                          "id": 100,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "destinationConnectionProfile": {
                          "type": "string",
                          "id": 101,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ConvertConversionWorkspaceRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.resource_reference).type": "datamigration.googleapis.com/ConversionWorkspace"
                          }
                        },
                        "autoCommit": {
                          "type": "bool",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "convertFullPath": {
                          "type": "bool",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ImportMappingRulesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datamigration.googleapis.com/ConversionWorkspace"
                          }
                        },
                        "rulesFormat": {
                          "type": "ImportRulesFileFormat",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "rulesFiles": {
                          "rule": "repeated",
                          "type": "RulesFile",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "autoCommit": {
                          "type": "bool",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      },
                      "nested": {
                        "RulesFile": {
                          "fields": {
                            "rulesSourceFilename": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "rulesContent": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        }
                      }
                    },
                    "DescribeDatabaseEntitiesRequest": {
                      "fields": {
                        "conversionWorkspace": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datamigration.googleapis.com/ConversionWorkspace"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "tree": {
                          "type": "DBTreeType",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "uncommitted": {
                          "type": "bool",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "commitId": {
                          "type": "string",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "view": {
                          "type": "DatabaseEntityView",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "DBTreeType": {
                          "values": {
                            "DB_TREE_TYPE_UNSPECIFIED": 0,
                            "SOURCE_TREE": 1,
                            "DRAFT_TREE": 2,
                            "DESTINATION_TREE": 3
                          }
                        }
                      }
                    },
                    "DescribeDatabaseEntitiesResponse": {
                      "fields": {
                        "databaseEntities": {
                          "rule": "repeated",
                          "type": "DatabaseEntity",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "SearchBackgroundJobsRequest": {
                      "fields": {
                        "conversionWorkspace": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datamigration.googleapis.com/ConversionWorkspace"
                          }
                        },
                        "returnMostRecentPerJobType": {
                          "type": "bool",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "maxSize": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "completedUntilTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "SearchBackgroundJobsResponse": {
                      "fields": {
                        "jobs": {
                          "rule": "repeated",
                          "type": "BackgroundJobLogEntry",
                          "id": 1
                        }
                      }
                    },
                    "DescribeConversionWorkspaceRevisionsRequest": {
                      "fields": {
                        "conversionWorkspace": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datamigration.googleapis.com/ConversionWorkspace"
                          }
                        },
                        "commitId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "DescribeConversionWorkspaceRevisionsResponse": {
                      "fields": {
                        "revisions": {
                          "rule": "repeated",
                          "type": "ConversionWorkspace",
                          "id": 1
                        }
                      }
                    },
                    "CreateMappingRuleRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "datamigration.googleapis.com/MappingRule"
                          }
                        },
                        "mappingRuleId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "mappingRule": {
                          "type": "MappingRule",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "DeleteMappingRuleRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "datamigration.googleapis.com/MappingRule"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "FetchStaticIpsRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "FetchStaticIpsResponse": {
                      "fields": {
                        "staticIps": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DatabaseEntityView": {
                      "values": {
                        "DATABASE_ENTITY_VIEW_UNSPECIFIED": 0,
                        "DATABASE_ENTITY_VIEW_BASIC": 1,
                        "DATABASE_ENTITY_VIEW_FULL": 2,
                        "DATABASE_ENTITY_VIEW_ROOT_SUMMARY": 3
                      }
                    },
                    "SslConfig": {
                      "fields": {
                        "type": {
                          "type": "SslType",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "clientKey": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "INPUT_ONLY"
                          }
                        },
                        "clientCertificate": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "INPUT_ONLY"
                          }
                        },
                        "caCertificate": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      },
                      "nested": {
                        "SslType": {
                          "values": {
                            "SSL_TYPE_UNSPECIFIED": 0,
                            "SERVER_ONLY": 1,
                            "SERVER_CLIENT": 2
                          }
                        }
                      }
                    },
                    "MySqlConnectionProfile": {
                      "fields": {
                        "host": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "port": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "username": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "password": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "passwordSet": {
                          "type": "bool",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "ssl": {
                          "type": "SslConfig",
                          "id": 6
                        },
                        "cloudSqlId": {
                          "type": "string",
                          "id": 7
                        }
                      }
                    },
                    "NetworkArchitecture": {
                      "values": {
                        "NETWORK_ARCHITECTURE_UNSPECIFIED": 0,
                        "NETWORK_ARCHITECTURE_OLD_CSQL_PRODUCER": 1,
                        "NETWORK_ARCHITECTURE_NEW_CSQL_PRODUCER": 2
                      }
                    },
                    "PostgreSqlConnectionProfile": {
                      "oneofs": {
                        "connectivity": {
                          "oneof": [
                            "staticIpConnectivity",
                            "privateServiceConnectConnectivity"
                          ]
                        }
                      },
                      "fields": {
                        "host": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "port": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "username": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "password": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "passwordSet": {
                          "type": "bool",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "ssl": {
                          "type": "SslConfig",
                          "id": 6
                        },
                        "cloudSqlId": {
                          "type": "string",
                          "id": 7
                        },
                        "networkArchitecture": {
                          "type": "NetworkArchitecture",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "staticIpConnectivity": {
                          "type": "StaticIpConnectivity",
                          "id": 100
                        },
                        "privateServiceConnectConnectivity": {
                          "type": "PrivateServiceConnectConnectivity",
                          "id": 101
                        }
                      }
                    },
                    "OracleConnectionProfile": {
                      "oneofs": {
                        "connectivity": {
                          "oneof": [
                            "staticServiceIpConnectivity",
                            "forwardSshConnectivity",
                            "privateConnectivity"
                          ]
                        }
                      },
                      "fields": {
                        "host": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "port": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "username": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "password": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "passwordSet": {
                          "type": "bool",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "databaseService": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "ssl": {
                          "type": "SslConfig",
                          "id": 7
                        },
                        "staticServiceIpConnectivity": {
                          "type": "StaticServiceIpConnectivity",
                          "id": 100
                        },
                        "forwardSshConnectivity": {
                          "type": "ForwardSshTunnelConnectivity",
                          "id": 101
                        },
                        "privateConnectivity": {
                          "type": "PrivateConnectivity",
                          "id": 102
                        }
                      }
                    },
                    "CloudSqlConnectionProfile": {
                      "fields": {
                        "cloudSqlId": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "settings": {
                          "type": "CloudSqlSettings",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "privateIp": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "publicIp": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "additionalPublicIp": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "AlloyDbConnectionProfile": {
                      "fields": {
                        "clusterId": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "settings": {
                          "type": "AlloyDbSettings",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "SqlAclEntry": {
                      "oneofs": {
                        "expiration": {
                          "oneof": [
                            "expireTime",
                            "ttl"
                          ]
                        }
                      },
                      "fields": {
                        "value": {
                          "type": "string",
                          "id": 1
                        },
                        "expireTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 10
                        },
                        "ttl": {
                          "type": "google.protobuf.Duration",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "INPUT_ONLY"
                          }
                        },
                        "label": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "SqlIpConfig": {
                      "fields": {
                        "enableIpv4": {
                          "type": "google.protobuf.BoolValue",
                          "id": 1
                        },
                        "privateNetwork": {
                          "type": "string",
                          "id": 2
                        },
                        "allocatedIpRange": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "requireSsl": {
                          "type": "google.protobuf.BoolValue",
                          "id": 3
                        },
                        "authorizedNetworks": {
                          "rule": "repeated",
                          "type": "SqlAclEntry",
                          "id": 4
                        }
                      }
                    },
                    "CloudSqlSettings": {
                      "fields": {
                        "databaseVersion": {
                          "type": "SqlDatabaseVersion",
                          "id": 1
                        },
                        "userLabels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 2
                        },
                        "tier": {
                          "type": "string",
                          "id": 3
                        },
                        "storageAutoResizeLimit": {
                          "type": "google.protobuf.Int64Value",
                          "id": 4
                        },
                        "activationPolicy": {
                          "type": "SqlActivationPolicy",
                          "id": 5
                        },
                        "ipConfig": {
                          "type": "SqlIpConfig",
                          "id": 6
                        },
                        "autoStorageIncrease": {
                          "type": "google.protobuf.BoolValue",
                          "id": 7
                        },
                        "databaseFlags": {
                          "keyType": "string",
                          "type": "string",
                          "id": 8
                        },
                        "dataDiskType": {
                          "type": "SqlDataDiskType",
                          "id": 9
                        },
                        "dataDiskSizeGb": {
                          "type": "google.protobuf.Int64Value",
                          "id": 10
                        },
                        "zone": {
                          "type": "string",
                          "id": 11
                        },
                        "secondaryZone": {
                          "type": "string",
                          "id": 18,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "sourceId": {
                          "type": "string",
                          "id": 12
                        },
                        "rootPassword": {
                          "type": "string",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "INPUT_ONLY"
                          }
                        },
                        "rootPasswordSet": {
                          "type": "bool",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "collation": {
                          "type": "string",
                          "id": 15
                        },
                        "cmekKeyName": {
                          "type": "string",
                          "id": 16
                        },
                        "availabilityType": {
                          "type": "SqlAvailabilityType",
                          "id": 17,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "edition": {
                          "type": "Edition",
                          "id": 19,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "SqlActivationPolicy": {
                          "values": {
                            "SQL_ACTIVATION_POLICY_UNSPECIFIED": 0,
                            "ALWAYS": 1,
                            "NEVER": 2
                          }
                        },
                        "SqlDataDiskType": {
                          "values": {
                            "SQL_DATA_DISK_TYPE_UNSPECIFIED": 0,
                            "PD_SSD": 1,
                            "PD_HDD": 2
                          }
                        },
                        "SqlDatabaseVersion": {
                          "values": {
                            "SQL_DATABASE_VERSION_UNSPECIFIED": 0,
                            "MYSQL_5_6": 1,
                            "MYSQL_5_7": 2,
                            "POSTGRES_9_6": 3,
                            "POSTGRES_11": 4,
                            "POSTGRES_10": 5,
                            "MYSQL_8_0": 6,
                            "POSTGRES_12": 7,
                            "POSTGRES_13": 8,
                            "POSTGRES_14": 17,
                            "POSTGRES_15": 18
                          }
                        },
                        "SqlAvailabilityType": {
                          "values": {
                            "SQL_AVAILABILITY_TYPE_UNSPECIFIED": 0,
                            "ZONAL": 1,
                            "REGIONAL": 2
                          }
                        },
                        "Edition": {
                          "values": {
                            "EDITION_UNSPECIFIED": 0,
                            "ENTERPRISE": 2,
                            "ENTERPRISE_PLUS": 3
                          }
                        }
                      }
                    },
                    "AlloyDbSettings": {
                      "fields": {
                        "initialUser": {
                          "type": "UserPassword",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "INPUT_ONLY"
                          }
                        },
                        "vpcNetwork": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 3
                        },
                        "primaryInstanceSettings": {
                          "type": "PrimaryInstanceSettings",
                          "id": 4
                        },
                        "encryptionConfig": {
                          "type": "EncryptionConfig",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "UserPassword": {
                          "fields": {
                            "user": {
                              "type": "string",
                              "id": 1
                            },
                            "password": {
                              "type": "string",
                              "id": 2
                            },
                            "passwordSet": {
                              "type": "bool",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        },
                        "PrimaryInstanceSettings": {
                          "fields": {
                            "id": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "machineConfig": {
                              "type": "MachineConfig",
                              "id": 2
                            },
                            "databaseFlags": {
                              "keyType": "string",
                              "type": "string",
                              "id": 6
                            },
                            "labels": {
                              "keyType": "string",
                              "type": "string",
                              "id": 7
                            },
                            "privateIp": {
                              "type": "string",
                              "id": 8,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          },
                          "nested": {
                            "MachineConfig": {
                              "fields": {
                                "cpuCount": {
                                  "type": "int32",
                                  "id": 1
                                }
                              }
                            }
                          }
                        },
                        "EncryptionConfig": {
                          "fields": {
                            "kmsKeyName": {
                              "type": "string",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "StaticIpConnectivity": {
                      "fields": {}
                    },
                    "PrivateServiceConnectConnectivity": {
                      "fields": {
                        "serviceAttachment": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ReverseSshConnectivity": {
                      "fields": {
                        "vmIp": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "vmPort": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "vm": {
                          "type": "string",
                          "id": 3
                        },
                        "vpc": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "VpcPeeringConnectivity": {
                      "fields": {
                        "vpc": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "ForwardSshTunnelConnectivity": {
                      "oneofs": {
                        "authenticationMethod": {
                          "oneof": [
                            "password",
                            "privateKey"
                          ]
                        }
                      },
                      "fields": {
                        "hostname": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "username": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "port": {
                          "type": "int32",
                          "id": 3
                        },
                        "password": {
                          "type": "string",
                          "id": 100,
                          "options": {
                            "(google.api.field_behavior)": "INPUT_ONLY"
                          }
                        },
                        "privateKey": {
                          "type": "string",
                          "id": 101,
                          "options": {
                            "(google.api.field_behavior)": "INPUT_ONLY"
                          }
                        }
                      }
                    },
                    "StaticServiceIpConnectivity": {
                      "fields": {}
                    },
                    "PrivateConnectivity": {
                      "fields": {
                        "privateConnection": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DatabaseType": {
                      "fields": {
                        "provider": {
                          "type": "DatabaseProvider",
                          "id": 1
                        },
                        "engine": {
                          "type": "DatabaseEngine",
                          "id": 2
                        }
                      }
                    },
                    "MigrationJob": {
                      "options": {
                        "(google.api.resource).type": "datamigration.googleapis.com/MigrationJob",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/migrationJobs/{migration_job}"
                      },
                      "oneofs": {
                        "connectivity": {
                          "oneof": [
                            "reverseSshConnectivity",
                            "vpcPeeringConnectivity",
                            "staticIpConnectivity"
                          ]
                        }
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 4
                        },
                        "displayName": {
                          "type": "string",
                          "id": 5
                        },
                        "state": {
                          "type": "State",
                          "id": 6
                        },
                        "phase": {
                          "type": "Phase",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "type": {
                          "type": "Type",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "dumpPath": {
                          "type": "string",
                          "id": 9
                        },
                        "dumpFlags": {
                          "type": "DumpFlags",
                          "id": 17
                        },
                        "source": {
                          "type": "string",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "destination": {
                          "type": "string",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "reverseSshConnectivity": {
                          "type": "ReverseSshConnectivity",
                          "id": 101
                        },
                        "vpcPeeringConnectivity": {
                          "type": "VpcPeeringConnectivity",
                          "id": 102
                        },
                        "staticIpConnectivity": {
                          "type": "StaticIpConnectivity",
                          "id": 103
                        },
                        "duration": {
                          "type": "google.protobuf.Duration",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "error": {
                          "type": "google.rpc.Status",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "sourceDatabase": {
                          "type": "DatabaseType",
                          "id": 14
                        },
                        "destinationDatabase": {
                          "type": "DatabaseType",
                          "id": 15
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 16,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "conversionWorkspace": {
                          "type": "ConversionWorkspaceInfo",
                          "id": 18
                        },
                        "filter": {
                          "type": "string",
                          "id": 20
                        },
                        "cmekKeyName": {
                          "type": "string",
                          "id": 21
                        },
                        "performanceConfig": {
                          "type": "PerformanceConfig",
                          "id": 22,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "MAINTENANCE": 1,
                            "DRAFT": 2,
                            "CREATING": 3,
                            "NOT_STARTED": 4,
                            "RUNNING": 5,
                            "FAILED": 6,
                            "COMPLETED": 7,
                            "DELETING": 8,
                            "STOPPING": 9,
                            "STOPPED": 10,
                            "DELETED": 11,
                            "UPDATING": 12,
                            "STARTING": 13,
                            "RESTARTING": 14,
                            "RESUMING": 15
                          }
                        },
                        "Phase": {
                          "values": {
                            "PHASE_UNSPECIFIED": 0,
                            "FULL_DUMP": 1,
                            "CDC": 2,
                            "PROMOTE_IN_PROGRESS": 3,
                            "WAITING_FOR_SOURCE_WRITES_TO_STOP": 4,
                            "PREPARING_THE_DUMP": 5
                          }
                        },
                        "Type": {
                          "values": {
                            "TYPE_UNSPECIFIED": 0,
                            "ONE_TIME": 1,
                            "CONTINUOUS": 2
                          }
                        },
                        "DumpFlag": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "value": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "DumpFlags": {
                          "fields": {
                            "dumpFlags": {
                              "rule": "repeated",
                              "type": "DumpFlag",
                              "id": 1
                            }
                          }
                        },
                        "PerformanceConfig": {
                          "fields": {
                            "dumpParallelLevel": {
                              "type": "DumpParallelLevel",
                              "id": 1
                            }
                          },
                          "nested": {
                            "DumpParallelLevel": {
                              "values": {
                                "DUMP_PARALLEL_LEVEL_UNSPECIFIED": 0,
                                "MIN": 1,
                                "OPTIMAL": 2,
                                "MAX": 3
                              }
                            }
                          }
                        }
                      }
                    },
                    "ConversionWorkspaceInfo": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "commitId": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "ConnectionProfile": {
                      "options": {
                        "(google.api.resource).type": "datamigration.googleapis.com/ConnectionProfile",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/connectionProfiles/{connection_profile}"
                      },
                      "oneofs": {
                        "connectionProfile": {
                          "oneof": [
                            "mysql",
                            "postgresql",
                            "oracle",
                            "cloudsql",
                            "alloydb"
                          ]
                        }
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 4
                        },
                        "state": {
                          "type": "State",
                          "id": 5
                        },
                        "displayName": {
                          "type": "string",
                          "id": 6
                        },
                        "mysql": {
                          "type": "MySqlConnectionProfile",
                          "id": 100
                        },
                        "postgresql": {
                          "type": "PostgreSqlConnectionProfile",
                          "id": 101
                        },
                        "oracle": {
                          "type": "OracleConnectionProfile",
                          "id": 104
                        },
                        "cloudsql": {
                          "type": "CloudSqlConnectionProfile",
                          "id": 102
                        },
                        "alloydb": {
                          "type": "AlloyDbConnectionProfile",
                          "id": 105
                        },
                        "error": {
                          "type": "google.rpc.Status",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "provider": {
                          "type": "DatabaseProvider",
                          "id": 8
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "DRAFT": 1,
                            "CREATING": 2,
                            "READY": 3,
                            "UPDATING": 4,
                            "DELETING": 5,
                            "DELETED": 6,
                            "FAILED": 7
                          }
                        }
                      }
                    },
                    "MigrationJobVerificationError": {
                      "fields": {
                        "errorCode": {
                          "type": "ErrorCode",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "errorMessage": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "errorDetailMessage": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "ErrorCode": {
                          "values": {
                            "ERROR_CODE_UNSPECIFIED": 0,
                            "CONNECTION_FAILURE": 1,
                            "AUTHENTICATION_FAILURE": 2,
                            "INVALID_CONNECTION_PROFILE_CONFIG": 3,
                            "VERSION_INCOMPATIBILITY": 4,
                            "CONNECTION_PROFILE_TYPES_INCOMPATIBILITY": 5,
                            "NO_PGLOGICAL_INSTALLED": 7,
                            "PGLOGICAL_NODE_ALREADY_EXISTS": 8,
                            "INVALID_WAL_LEVEL": 9,
                            "INVALID_SHARED_PRELOAD_LIBRARY": 10,
                            "INSUFFICIENT_MAX_REPLICATION_SLOTS": 11,
                            "INSUFFICIENT_MAX_WAL_SENDERS": 12,
                            "INSUFFICIENT_MAX_WORKER_PROCESSES": 13,
                            "UNSUPPORTED_EXTENSIONS": 14,
                            "UNSUPPORTED_MIGRATION_TYPE": 15,
                            "INVALID_RDS_LOGICAL_REPLICATION": 16,
                            "UNSUPPORTED_GTID_MODE": 17,
                            "UNSUPPORTED_TABLE_DEFINITION": 18,
                            "UNSUPPORTED_DEFINER": 19,
                            "CANT_RESTART_RUNNING_MIGRATION": 21,
                            "SOURCE_ALREADY_SETUP": 23,
                            "TABLES_WITH_LIMITED_SUPPORT": 24,
                            "UNSUPPORTED_DATABASE_LOCALE": 25,
                            "UNSUPPORTED_DATABASE_FDW_CONFIG": 26,
                            "ERROR_RDBMS": 27,
                            "SOURCE_SIZE_EXCEEDS_THRESHOLD": 28,
                            "EXISTING_CONFLICTING_DATABASES": 29,
                            "PARALLEL_IMPORT_INSUFFICIENT_PRIVILEGE": 30
                          }
                        }
                      }
                    },
                    "DatabaseEngine": {
                      "values": {
                        "DATABASE_ENGINE_UNSPECIFIED": 0,
                        "MYSQL": 1,
                        "POSTGRESQL": 2,
                        "ORACLE": 4
                      }
                    },
                    "DatabaseProvider": {
                      "values": {
                        "DATABASE_PROVIDER_UNSPECIFIED": 0,
                        "CLOUDSQL": 1,
                        "RDS": 2,
                        "AURORA": 3,
                        "ALLOYDB": 4
                      }
                    },
                    "PrivateConnection": {
                      "options": {
                        "(google.api.resource).type": "datamigration.googleapis.com/PrivateConnection",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/privateConnections/{private_connection}"
                      },
                      "oneofs": {
                        "connectivity": {
                          "oneof": [
                            "vpcPeeringConfig"
                          ]
                        }
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 4
                        },
                        "displayName": {
                          "type": "string",
                          "id": 5
                        },
                        "state": {
                          "type": "State",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "error": {
                          "type": "google.rpc.Status",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "vpcPeeringConfig": {
                          "type": "VpcPeeringConfig",
                          "id": 100
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "CREATING": 1,
                            "CREATED": 2,
                            "FAILED": 3,
                            "DELETING": 4,
                            "FAILED_TO_DELETE": 5,
                            "DELETED": 6
                          }
                        }
                      }
                    },
                    "VpcPeeringConfig": {
                      "fields": {
                        "vpcName": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "compute.googleapis.com/Networks"
                          }
                        },
                        "subnet": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DatabaseEngineInfo": {
                      "fields": {
                        "engine": {
                          "type": "DatabaseEngine",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "version": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ConversionWorkspace": {
                      "options": {
                        "(google.api.resource).type": "datamigration.googleapis.com/ConversionWorkspace",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}",
                        "(google.api.resource).plural": "conversionWorkspaces",
                        "(google.api.resource).singular": "conversionWorkspace"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "source": {
                          "type": "DatabaseEngineInfo",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "destination": {
                          "type": "DatabaseEngineInfo",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "globalSettings": {
                          "keyType": "string",
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "hasUncommittedChanges": {
                          "type": "bool",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "latestCommitId": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "latestCommitTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "BackgroundJobLogEntry": {
                      "oneofs": {
                        "jobDetails": {
                          "oneof": [
                            "seedJobDetails",
                            "importRulesJobDetails",
                            "convertJobDetails",
                            "applyJobDetails"
                          ]
                        }
                      },
                      "fields": {
                        "id": {
                          "type": "string",
                          "id": 1
                        },
                        "jobType": {
                          "type": "BackgroundJobType",
                          "id": 2
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3
                        },
                        "finishTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4
                        },
                        "completionState": {
                          "type": "JobCompletionState",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "completionComment": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "requestAutocommit": {
                          "type": "bool",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "seedJobDetails": {
                          "type": "SeedJobDetails",
                          "id": 100,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "importRulesJobDetails": {
                          "type": "ImportRulesJobDetails",
                          "id": 101,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "convertJobDetails": {
                          "type": "ConvertJobDetails",
                          "id": 102,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "applyJobDetails": {
                          "type": "ApplyJobDetails",
                          "id": 103,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "JobCompletionState": {
                          "values": {
                            "JOB_COMPLETION_STATE_UNSPECIFIED": 0,
                            "SUCCEEDED": 1,
                            "FAILED": 2
                          }
                        },
                        "SeedJobDetails": {
                          "fields": {
                            "connectionProfile": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        },
                        "ImportRulesJobDetails": {
                          "fields": {
                            "files": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "fileFormat": {
                              "type": "ImportRulesFileFormat",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        },
                        "ConvertJobDetails": {
                          "fields": {
                            "filter": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        },
                        "ApplyJobDetails": {
                          "fields": {
                            "connectionProfile": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "filter": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        }
                      }
                    },
                    "MappingRuleFilter": {
                      "fields": {
                        "parentEntity": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "entityNamePrefix": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "entityNameSuffix": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "entityNameContains": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "entities": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "MappingRule": {
                      "options": {
                        "(google.api.resource).type": "datamigration.googleapis.com/MappingRule",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}/mappingRules/{mapping_rule}",
                        "(google.api.resource).plural": "mappingRules",
                        "(google.api.resource).singular": "mappingRule"
                      },
                      "oneofs": {
                        "details": {
                          "oneof": [
                            "singleEntityRename",
                            "multiEntityRename",
                            "entityMove",
                            "singleColumnChange",
                            "multiColumnDataTypeChange",
                            "conditionalColumnSetValue",
                            "convertRowidColumn",
                            "setTablePrimaryKey",
                            "singlePackageChange",
                            "sourceSqlChange",
                            "filterTableColumns"
                          ]
                        }
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "ruleScope": {
                          "type": "DatabaseEntityType",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "filter": {
                          "type": "MappingRuleFilter",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "ruleOrder": {
                          "type": "int64",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "revisionId": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "revisionCreateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "singleEntityRename": {
                          "type": "SingleEntityRename",
                          "id": 102,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "multiEntityRename": {
                          "type": "MultiEntityRename",
                          "id": 103,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "entityMove": {
                          "type": "EntityMove",
                          "id": 105,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "singleColumnChange": {
                          "type": "SingleColumnChange",
                          "id": 106,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "multiColumnDataTypeChange": {
                          "type": "MultiColumnDatatypeChange",
                          "id": 107,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "conditionalColumnSetValue": {
                          "type": "ConditionalColumnSetValue",
                          "id": 108,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "convertRowidColumn": {
                          "type": "ConvertRowIdToColumn",
                          "id": 114,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "setTablePrimaryKey": {
                          "type": "SetTablePrimaryKey",
                          "id": 115,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "singlePackageChange": {
                          "type": "SinglePackageChange",
                          "id": 116,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "sourceSqlChange": {
                          "type": "SourceSqlChange",
                          "id": 117,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "filterTableColumns": {
                          "type": "FilterTableColumns",
                          "id": 118,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "ENABLED": 1,
                            "DISABLED": 2,
                            "DELETED": 3
                          }
                        }
                      }
                    },
                    "SingleEntityRename": {
                      "fields": {
                        "newName": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "MultiEntityRename": {
                      "fields": {
                        "newNamePattern": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "sourceNameTransformation": {
                          "type": "EntityNameTransformation",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "EntityMove": {
                      "fields": {
                        "newSchema": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "SingleColumnChange": {
                      "fields": {
                        "dataType": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "charset": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "collation": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "length": {
                          "type": "int64",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "precision": {
                          "type": "int32",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "scale": {
                          "type": "int32",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "fractionalSecondsPrecision": {
                          "type": "int32",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "array": {
                          "type": "bool",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "arrayLength": {
                          "type": "int32",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "nullable": {
                          "type": "bool",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "autoGenerated": {
                          "type": "bool",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "udt": {
                          "type": "bool",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "customFeatures": {
                          "type": "google.protobuf.Struct",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "setValues": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "comment": {
                          "type": "string",
                          "id": 15,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "MultiColumnDatatypeChange": {
                      "oneofs": {
                        "sourceFilter": {
                          "oneof": [
                            "sourceTextFilter",
                            "sourceNumericFilter"
                          ]
                        }
                      },
                      "fields": {
                        "sourceDataTypeFilter": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "sourceTextFilter": {
                          "type": "SourceTextFilter",
                          "id": 100,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "sourceNumericFilter": {
                          "type": "SourceNumericFilter",
                          "id": 101,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "newDataType": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "overrideLength": {
                          "type": "int64",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "overrideScale": {
                          "type": "int32",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "overridePrecision": {
                          "type": "int32",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "overrideFractionalSecondsPrecision": {
                          "type": "int32",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "customFeatures": {
                          "type": "google.protobuf.Struct",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "SourceTextFilter": {
                      "fields": {
                        "sourceMinLengthFilter": {
                          "type": "int64",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "sourceMaxLengthFilter": {
                          "type": "int64",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "SourceNumericFilter": {
                      "fields": {
                        "sourceMinScaleFilter": {
                          "type": "int32",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "sourceMaxScaleFilter": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "sourceMinPrecisionFilter": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "sourceMaxPrecisionFilter": {
                          "type": "int32",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "numericFilterOption": {
                          "type": "NumericFilterOption",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ConditionalColumnSetValue": {
                      "oneofs": {
                        "sourceFilter": {
                          "oneof": [
                            "sourceTextFilter",
                            "sourceNumericFilter"
                          ]
                        }
                      },
                      "fields": {
                        "sourceTextFilter": {
                          "type": "SourceTextFilter",
                          "id": 100,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "sourceNumericFilter": {
                          "type": "SourceNumericFilter",
                          "id": 101,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "valueTransformation": {
                          "type": "ValueTransformation",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "customFeatures": {
                          "type": "google.protobuf.Struct",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ValueTransformation": {
                      "oneofs": {
                        "filter": {
                          "oneof": [
                            "isNull",
                            "valueList",
                            "intComparison",
                            "doubleComparison"
                          ]
                        },
                        "action": {
                          "oneof": [
                            "assignNull",
                            "assignSpecificValue",
                            "assignMinValue",
                            "assignMaxValue",
                            "roundScale",
                            "applyHash"
                          ]
                        }
                      },
                      "fields": {
                        "isNull": {
                          "type": "google.protobuf.Empty",
                          "id": 100,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "valueList": {
                          "type": "ValueListFilter",
                          "id": 101,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "intComparison": {
                          "type": "IntComparisonFilter",
                          "id": 102,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "doubleComparison": {
                          "type": "DoubleComparisonFilter",
                          "id": 103,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "assignNull": {
                          "type": "google.protobuf.Empty",
                          "id": 200,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "assignSpecificValue": {
                          "type": "AssignSpecificValue",
                          "id": 201,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "assignMinValue": {
                          "type": "google.protobuf.Empty",
                          "id": 202,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "assignMaxValue": {
                          "type": "google.protobuf.Empty",
                          "id": 203,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "roundScale": {
                          "type": "RoundToScale",
                          "id": 204,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "applyHash": {
                          "type": "ApplyHash",
                          "id": 205,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ConvertRowIdToColumn": {
                      "fields": {
                        "onlyIfNoPrimaryKey": {
                          "type": "bool",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "SetTablePrimaryKey": {
                      "fields": {
                        "primaryKeyColumns": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "primaryKey": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "SinglePackageChange": {
                      "fields": {
                        "packageDescription": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "packageBody": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "SourceSqlChange": {
                      "fields": {
                        "sqlCode": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "FilterTableColumns": {
                      "fields": {
                        "includeColumns": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "excludeColumns": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ValueListFilter": {
                      "fields": {
                        "valuePresentList": {
                          "type": "ValuePresentInList",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "values": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "ignoreCase": {
                          "type": "bool",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "IntComparisonFilter": {
                      "fields": {
                        "valueComparison": {
                          "type": "ValueComparison",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "value": {
                          "type": "int64",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DoubleComparisonFilter": {
                      "fields": {
                        "valueComparison": {
                          "type": "ValueComparison",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "value": {
                          "type": "double",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "AssignSpecificValue": {
                      "fields": {
                        "value": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ApplyHash": {
                      "oneofs": {
                        "hashFunction": {
                          "oneof": [
                            "uuidFromBytes"
                          ]
                        }
                      },
                      "fields": {
                        "uuidFromBytes": {
                          "type": "google.protobuf.Empty",
                          "id": 100,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "RoundToScale": {
                      "fields": {
                        "scale": {
                          "type": "int32",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DatabaseEntity": {
                      "oneofs": {
                        "entityBody": {
                          "oneof": [
                            "database",
                            "schema",
                            "table",
                            "view",
                            "sequence",
                            "storedProcedure",
                            "databaseFunction",
                            "synonym",
                            "databasePackage",
                            "udt",
                            "materializedView"
                          ]
                        }
                      },
                      "fields": {
                        "shortName": {
                          "type": "string",
                          "id": 1
                        },
                        "parentEntity": {
                          "type": "string",
                          "id": 2
                        },
                        "tree": {
                          "type": "TreeType",
                          "id": 3
                        },
                        "entityType": {
                          "type": "DatabaseEntityType",
                          "id": 4
                        },
                        "mappings": {
                          "rule": "repeated",
                          "type": "EntityMapping",
                          "id": 5
                        },
                        "entityDdl": {
                          "rule": "repeated",
                          "type": "EntityDdl",
                          "id": 6
                        },
                        "issues": {
                          "rule": "repeated",
                          "type": "EntityIssue",
                          "id": 7
                        },
                        "database": {
                          "type": "DatabaseInstanceEntity",
                          "id": 101
                        },
                        "schema": {
                          "type": "SchemaEntity",
                          "id": 102
                        },
                        "table": {
                          "type": "TableEntity",
                          "id": 103
                        },
                        "view": {
                          "type": "ViewEntity",
                          "id": 104
                        },
                        "sequence": {
                          "type": "SequenceEntity",
                          "id": 105
                        },
                        "storedProcedure": {
                          "type": "StoredProcedureEntity",
                          "id": 106
                        },
                        "databaseFunction": {
                          "type": "FunctionEntity",
                          "id": 107
                        },
                        "synonym": {
                          "type": "SynonymEntity",
                          "id": 108
                        },
                        "databasePackage": {
                          "type": "PackageEntity",
                          "id": 109
                        },
                        "udt": {
                          "type": "UDTEntity",
                          "id": 110
                        },
                        "materializedView": {
                          "type": "MaterializedViewEntity",
                          "id": 111
                        }
                      },
                      "nested": {
                        "TreeType": {
                          "values": {
                            "TREE_TYPE_UNSPECIFIED": 0,
                            "SOURCE": 1,
                            "DRAFT": 2,
                            "DESTINATION": 3
                          }
                        }
                      }
                    },
                    "DatabaseInstanceEntity": {
                      "fields": {
                        "customFeatures": {
                          "type": "google.protobuf.Struct",
                          "id": 1
                        }
                      }
                    },
                    "SchemaEntity": {
                      "fields": {
                        "customFeatures": {
                          "type": "google.protobuf.Struct",
                          "id": 1
                        }
                      }
                    },
                    "TableEntity": {
                      "fields": {
                        "columns": {
                          "rule": "repeated",
                          "type": "ColumnEntity",
                          "id": 1
                        },
                        "constraints": {
                          "rule": "repeated",
                          "type": "ConstraintEntity",
                          "id": 2
                        },
                        "indices": {
                          "rule": "repeated",
                          "type": "IndexEntity",
                          "id": 3
                        },
                        "triggers": {
                          "rule": "repeated",
                          "type": "TriggerEntity",
                          "id": 4
                        },
                        "customFeatures": {
                          "type": "google.protobuf.Struct",
                          "id": 5
                        },
                        "comment": {
                          "type": "string",
                          "id": 6
                        }
                      }
                    },
                    "ColumnEntity": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "dataType": {
                          "type": "string",
                          "id": 2
                        },
                        "charset": {
                          "type": "string",
                          "id": 3
                        },
                        "collation": {
                          "type": "string",
                          "id": 4
                        },
                        "length": {
                          "type": "int64",
                          "id": 5
                        },
                        "precision": {
                          "type": "int32",
                          "id": 6
                        },
                        "scale": {
                          "type": "int32",
                          "id": 7
                        },
                        "fractionalSecondsPrecision": {
                          "type": "int32",
                          "id": 8
                        },
                        "array": {
                          "type": "bool",
                          "id": 9
                        },
                        "arrayLength": {
                          "type": "int32",
                          "id": 10
                        },
                        "nullable": {
                          "type": "bool",
                          "id": 11
                        },
                        "autoGenerated": {
                          "type": "bool",
                          "id": 12
                        },
                        "udt": {
                          "type": "bool",
                          "id": 13
                        },
                        "customFeatures": {
                          "type": "google.protobuf.Struct",
                          "id": 14
                        },
                        "setValues": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 15
                        },
                        "comment": {
                          "type": "string",
                          "id": 16
                        },
                        "ordinalPosition": {
                          "type": "int32",
                          "id": 17
                        },
                        "defaultValue": {
                          "type": "string",
                          "id": 18
                        }
                      }
                    },
                    "ConstraintEntity": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "type": {
                          "type": "string",
                          "id": 2
                        },
                        "tableColumns": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        },
                        "customFeatures": {
                          "type": "google.protobuf.Struct",
                          "id": 4
                        },
                        "referenceColumns": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 5
                        },
                        "referenceTable": {
                          "type": "string",
                          "id": 6
                        },
                        "tableName": {
                          "type": "string",
                          "id": 7
                        }
                      }
                    },
                    "IndexEntity": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "type": {
                          "type": "string",
                          "id": 2
                        },
                        "tableColumns": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        },
                        "unique": {
                          "type": "bool",
                          "id": 4
                        },
                        "customFeatures": {
                          "type": "google.protobuf.Struct",
                          "id": 5
                        }
                      }
                    },
                    "TriggerEntity": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "triggeringEvents": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2
                        },
                        "triggerType": {
                          "type": "string",
                          "id": 3
                        },
                        "sqlCode": {
                          "type": "string",
                          "id": 4
                        },
                        "customFeatures": {
                          "type": "google.protobuf.Struct",
                          "id": 5
                        }
                      }
                    },
                    "ViewEntity": {
                      "fields": {
                        "sqlCode": {
                          "type": "string",
                          "id": 1
                        },
                        "customFeatures": {
                          "type": "google.protobuf.Struct",
                          "id": 2
                        },
                        "constraints": {
                          "rule": "repeated",
                          "type": "ConstraintEntity",
                          "id": 3
                        }
                      }
                    },
                    "SequenceEntity": {
                      "fields": {
                        "increment": {
                          "type": "int64",
                          "id": 1
                        },
                        "startValue": {
                          "type": "bytes",
                          "id": 2
                        },
                        "maxValue": {
                          "type": "bytes",
                          "id": 3
                        },
                        "minValue": {
                          "type": "bytes",
                          "id": 4
                        },
                        "cycle": {
                          "type": "bool",
                          "id": 5
                        },
                        "cache": {
                          "type": "int64",
                          "id": 6
                        },
                        "customFeatures": {
                          "type": "google.protobuf.Struct",
                          "id": 7
                        }
                      }
                    },
                    "StoredProcedureEntity": {
                      "fields": {
                        "sqlCode": {
                          "type": "string",
                          "id": 1
                        },
                        "customFeatures": {
                          "type": "google.protobuf.Struct",
                          "id": 2
                        }
                      }
                    },
                    "FunctionEntity": {
                      "fields": {
                        "sqlCode": {
                          "type": "string",
                          "id": 1
                        },
                        "customFeatures": {
                          "type": "google.protobuf.Struct",
                          "id": 2
                        }
                      }
                    },
                    "MaterializedViewEntity": {
                      "fields": {
                        "sqlCode": {
                          "type": "string",
                          "id": 1
                        },
                        "customFeatures": {
                          "type": "google.protobuf.Struct",
                          "id": 2
                        }
                      }
                    },
                    "SynonymEntity": {
                      "fields": {
                        "sourceEntity": {
                          "type": "string",
                          "id": 1
                        },
                        "sourceType": {
                          "type": "DatabaseEntityType",
                          "id": 2
                        },
                        "customFeatures": {
                          "type": "google.protobuf.Struct",
                          "id": 3
                        }
                      }
                    },
                    "PackageEntity": {
                      "fields": {
                        "packageSqlCode": {
                          "type": "string",
                          "id": 1
                        },
                        "packageBody": {
                          "type": "string",
                          "id": 2
                        },
                        "customFeatures": {
                          "type": "google.protobuf.Struct",
                          "id": 3
                        }
                      }
                    },
                    "UDTEntity": {
                      "fields": {
                        "udtSqlCode": {
                          "type": "string",
                          "id": 1
                        },
                        "udtBody": {
                          "type": "string",
                          "id": 2
                        },
                        "customFeatures": {
                          "type": "google.protobuf.Struct",
                          "id": 3
                        }
                      }
                    },
                    "EntityMapping": {
                      "fields": {
                        "sourceEntity": {
                          "type": "string",
                          "id": 1
                        },
                        "draftEntity": {
                          "type": "string",
                          "id": 2
                        },
                        "sourceType": {
                          "type": "DatabaseEntityType",
                          "id": 4
                        },
                        "draftType": {
                          "type": "DatabaseEntityType",
                          "id": 5
                        },
                        "mappingLog": {
                          "rule": "repeated",
                          "type": "EntityMappingLogEntry",
                          "id": 3
                        }
                      }
                    },
                    "EntityMappingLogEntry": {
                      "fields": {
                        "ruleId": {
                          "type": "string",
                          "id": 1
                        },
                        "ruleRevisionId": {
                          "type": "string",
                          "id": 2
                        },
                        "mappingComment": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "EntityDdl": {
                      "fields": {
                        "ddlType": {
                          "type": "string",
                          "id": 1
                        },
                        "entity": {
                          "type": "string",
                          "id": 2
                        },
                        "ddl": {
                          "type": "string",
                          "id": 3
                        },
                        "entityType": {
                          "type": "DatabaseEntityType",
                          "id": 4
                        },
                        "issueId": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 100
                        }
                      }
                    },
                    "EntityIssue": {
                      "oneofs": {
                        "_ddl": {
                          "oneof": [
                            "ddl"
                          ]
                        },
                        "_position": {
                          "oneof": [
                            "position"
                          ]
                        }
                      },
                      "fields": {
                        "id": {
                          "type": "string",
                          "id": 1
                        },
                        "type": {
                          "type": "IssueType",
                          "id": 2
                        },
                        "severity": {
                          "type": "IssueSeverity",
                          "id": 3
                        },
                        "message": {
                          "type": "string",
                          "id": 4
                        },
                        "code": {
                          "type": "string",
                          "id": 5
                        },
                        "ddl": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "position": {
                          "type": "Position",
                          "id": 7,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "entityType": {
                          "type": "DatabaseEntityType",
                          "id": 8
                        }
                      },
                      "nested": {
                        "IssueType": {
                          "values": {
                            "ISSUE_TYPE_UNSPECIFIED": 0,
                            "ISSUE_TYPE_DDL": 1,
                            "ISSUE_TYPE_APPLY": 2,
                            "ISSUE_TYPE_CONVERT": 3
                          }
                        },
                        "IssueSeverity": {
                          "values": {
                            "ISSUE_SEVERITY_UNSPECIFIED": 0,
                            "ISSUE_SEVERITY_INFO": 1,
                            "ISSUE_SEVERITY_WARNING": 2,
                            "ISSUE_SEVERITY_ERROR": 3
                          }
                        },
                        "Position": {
                          "fields": {
                            "line": {
                              "type": "int32",
                              "id": 1
                            },
                            "column": {
                              "type": "int32",
                              "id": 2
                            },
                            "offset": {
                              "type": "int32",
                              "id": 3
                            },
                            "length": {
                              "type": "int32",
                              "id": 4
                            }
                          }
                        }
                      }
                    },
                    "ValuePresentInList": {
                      "values": {
                        "VALUE_PRESENT_IN_LIST_UNSPECIFIED": 0,
                        "VALUE_PRESENT_IN_LIST_IF_VALUE_LIST": 1,
                        "VALUE_PRESENT_IN_LIST_IF_VALUE_NOT_LIST": 2
                      }
                    },
                    "DatabaseEntityType": {
                      "values": {
                        "DATABASE_ENTITY_TYPE_UNSPECIFIED": 0,
                        "DATABASE_ENTITY_TYPE_SCHEMA": 1,
                        "DATABASE_ENTITY_TYPE_TABLE": 2,
                        "DATABASE_ENTITY_TYPE_COLUMN": 3,
                        "DATABASE_ENTITY_TYPE_CONSTRAINT": 4,
                        "DATABASE_ENTITY_TYPE_INDEX": 5,
                        "DATABASE_ENTITY_TYPE_TRIGGER": 6,
                        "DATABASE_ENTITY_TYPE_VIEW": 7,
                        "DATABASE_ENTITY_TYPE_SEQUENCE": 8,
                        "DATABASE_ENTITY_TYPE_STORED_PROCEDURE": 9,
                        "DATABASE_ENTITY_TYPE_FUNCTION": 10,
                        "DATABASE_ENTITY_TYPE_SYNONYM": 11,
                        "DATABASE_ENTITY_TYPE_DATABASE_PACKAGE": 12,
                        "DATABASE_ENTITY_TYPE_UDT": 13,
                        "DATABASE_ENTITY_TYPE_MATERIALIZED_VIEW": 14,
                        "DATABASE_ENTITY_TYPE_DATABASE": 15
                      }
                    },
                    "EntityNameTransformation": {
                      "values": {
                        "ENTITY_NAME_TRANSFORMATION_UNSPECIFIED": 0,
                        "ENTITY_NAME_TRANSFORMATION_NO_TRANSFORMATION": 1,
                        "ENTITY_NAME_TRANSFORMATION_LOWER_CASE": 2,
                        "ENTITY_NAME_TRANSFORMATION_UPPER_CASE": 3,
                        "ENTITY_NAME_TRANSFORMATION_CAPITALIZED_CASE": 4
                      }
                    },
                    "BackgroundJobType": {
                      "values": {
                        "BACKGROUND_JOB_TYPE_UNSPECIFIED": 0,
                        "BACKGROUND_JOB_TYPE_SOURCE_SEED": 1,
                        "BACKGROUND_JOB_TYPE_CONVERT": 2,
                        "BACKGROUND_JOB_TYPE_APPLY_DESTINATION": 3,
                        "BACKGROUND_JOB_TYPE_IMPORT_RULES_FILE": 5
                      }
                    },
                    "ImportRulesFileFormat": {
                      "values": {
                        "IMPORT_RULES_FILE_FORMAT_UNSPECIFIED": 0,
                        "IMPORT_RULES_FILE_FORMAT_HARBOUR_BRIDGE_SESSION_FILE": 1,
                        "IMPORT_RULES_FILE_FORMAT_ORATOPG_CONFIG_FILE": 2
                      }
                    },
                    "ValueComparison": {
                      "values": {
                        "VALUE_COMPARISON_UNSPECIFIED": 0,
                        "VALUE_COMPARISON_IF_VALUE_SMALLER_THAN": 1,
                        "VALUE_COMPARISON_IF_VALUE_SMALLER_EQUAL_THAN": 2,
                        "VALUE_COMPARISON_IF_VALUE_LARGER_THAN": 3,
                        "VALUE_COMPARISON_IF_VALUE_LARGER_EQUAL_THAN": 4
                      }
                    },
                    "NumericFilterOption": {
                      "values": {
                        "NUMERIC_FILTER_OPTION_UNSPECIFIED": 0,
                        "NUMERIC_FILTER_OPTION_ALL": 1,
                        "NUMERIC_FILTER_OPTION_LIMIT": 2,
                        "NUMERIC_FILTER_OPTION_LIMITLESS": 3
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "api": {
          "options": {
            "go_package": "google.golang.org/genproto/googleapis/api/annotations;annotations",
            "java_multiple_files": true,
            "java_outer_classname": "ResourceProto",
            "java_package": "com.google.api",
            "objc_class_prefix": "GAPI",
            "cc_enable_arenas": true
          },
          "nested": {
            "http": {
              "type": "HttpRule",
              "id": 72295728,
              "extend": "google.protobuf.MethodOptions"
            },
            "Http": {
              "fields": {
                "rules": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 1
                },
                "fullyDecodeReservedExpansion": {
                  "type": "bool",
                  "id": 2
                }
              }
            },
            "HttpRule": {
              "oneofs": {
                "pattern": {
                  "oneof": [
                    "get",
                    "put",
                    "post",
                    "delete",
                    "patch",
                    "custom"
                  ]
                }
              },
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "get": {
                  "type": "string",
                  "id": 2
                },
                "put": {
                  "type": "string",
                  "id": 3
                },
                "post": {
                  "type": "string",
                  "id": 4
                },
                "delete": {
                  "type": "string",
                  "id": 5
                },
                "patch": {
                  "type": "string",
                  "id": 6
                },
                "custom": {
                  "type": "CustomHttpPattern",
                  "id": 8
                },
                "body": {
                  "type": "string",
                  "id": 7
                },
                "responseBody": {
                  "type": "string",
                  "id": 12
                },
                "additionalBindings": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 11
                }
              }
            },
            "CustomHttpPattern": {
              "fields": {
                "kind": {
                  "type": "string",
                  "id": 1
                },
                "path": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "methodSignature": {
              "rule": "repeated",
              "type": "string",
              "id": 1051,
              "extend": "google.protobuf.MethodOptions"
            },
            "defaultHost": {
              "type": "string",
              "id": 1049,
              "extend": "google.protobuf.ServiceOptions"
            },
            "oauthScopes": {
              "type": "string",
              "id": 1050,
              "extend": "google.protobuf.ServiceOptions"
            },
            "CommonLanguageSettings": {
              "fields": {
                "referenceDocsUri": {
                  "type": "string",
                  "id": 1,
                  "options": {
                    "deprecated": true
                  }
                },
                "destinations": {
                  "rule": "repeated",
                  "type": "ClientLibraryDestination",
                  "id": 2
                }
              }
            },
            "ClientLibrarySettings": {
              "fields": {
                "version": {
                  "type": "string",
                  "id": 1
                },
                "launchStage": {
                  "type": "LaunchStage",
                  "id": 2
                },
                "restNumericEnums": {
                  "type": "bool",
                  "id": 3
                },
                "javaSettings": {
                  "type": "JavaSettings",
                  "id": 21
                },
                "cppSettings": {
                  "type": "CppSettings",
                  "id": 22
                },
                "phpSettings": {
                  "type": "PhpSettings",
                  "id": 23
                },
                "pythonSettings": {
                  "type": "PythonSettings",
                  "id": 24
                },
                "nodeSettings": {
                  "type": "NodeSettings",
                  "id": 25
                },
                "dotnetSettings": {
                  "type": "DotnetSettings",
                  "id": 26
                },
                "rubySettings": {
                  "type": "RubySettings",
                  "id": 27
                },
                "goSettings": {
                  "type": "GoSettings",
                  "id": 28
                }
              }
            },
            "Publishing": {
              "fields": {
                "methodSettings": {
                  "rule": "repeated",
                  "type": "MethodSettings",
                  "id": 2
                },
                "newIssueUri": {
                  "type": "string",
                  "id": 101
                },
                "documentationUri": {
                  "type": "string",
                  "id": 102
                },
                "apiShortName": {
                  "type": "string",
                  "id": 103
                },
                "githubLabel": {
                  "type": "string",
                  "id": 104
                },
                "codeownerGithubTeams": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 105
                },
                "docTagPrefix": {
                  "type": "string",
                  "id": 106
                },
                "organization": {
                  "type": "ClientLibraryOrganization",
                  "id": 107
                },
                "librarySettings": {
                  "rule": "repeated",
                  "type": "ClientLibrarySettings",
                  "id": 109
                },
                "protoReferenceDocumentationUri": {
                  "type": "string",
                  "id": 110
                }
              }
            },
            "JavaSettings": {
              "fields": {
                "libraryPackage": {
                  "type": "string",
                  "id": 1
                },
                "serviceClassNames": {
                  "keyType": "string",
                  "type": "string",
                  "id": 2
                },
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 3
                }
              }
            },
            "CppSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "PhpSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "PythonSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "NodeSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "DotnetSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                },
                "renamedServices": {
                  "keyType": "string",
                  "type": "string",
                  "id": 2
                },
                "renamedResources": {
                  "keyType": "string",
                  "type": "string",
                  "id": 3
                },
                "ignoredResources": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 4
                },
                "forcedNamespaceAliases": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 5
                },
                "handwrittenSignatures": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 6
                }
              }
            },
            "RubySettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "GoSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "MethodSettings": {
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "longRunning": {
                  "type": "LongRunning",
                  "id": 2
                },
                "autoPopulatedFields": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 3
                }
              },
              "nested": {
                "LongRunning": {
                  "fields": {
                    "initialPollDelay": {
                      "type": "google.protobuf.Duration",
                      "id": 1
                    },
                    "pollDelayMultiplier": {
                      "type": "float",
                      "id": 2
                    },
                    "maxPollDelay": {
                      "type": "google.protobuf.Duration",
                      "id": 3
                    },
                    "totalPollTimeout": {
                      "type": "google.protobuf.Duration",
                      "id": 4
                    }
                  }
                }
              }
            },
            "ClientLibraryOrganization": {
              "values": {
                "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED": 0,
                "CLOUD": 1,
                "ADS": 2,
                "PHOTOS": 3,
                "STREET_VIEW": 4,
                "SHOPPING": 5,
                "GEO": 6,
                "GENERATIVE_AI": 7
              }
            },
            "ClientLibraryDestination": {
              "values": {
                "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED": 0,
                "GITHUB": 10,
                "PACKAGE_MANAGER": 20
              }
            },
            "LaunchStage": {
              "values": {
                "LAUNCH_STAGE_UNSPECIFIED": 0,
                "UNIMPLEMENTED": 6,
                "PRELAUNCH": 7,
                "EARLY_ACCESS": 1,
                "ALPHA": 2,
                "BETA": 3,
                "GA": 4,
                "DEPRECATED": 5
              }
            },
            "fieldBehavior": {
              "rule": "repeated",
              "type": "google.api.FieldBehavior",
              "id": 1052,
              "extend": "google.protobuf.FieldOptions"
            },
            "FieldBehavior": {
              "values": {
                "FIELD_BEHAVIOR_UNSPECIFIED": 0,
                "OPTIONAL": 1,
                "REQUIRED": 2,
                "OUTPUT_ONLY": 3,
                "INPUT_ONLY": 4,
                "IMMUTABLE": 5,
                "UNORDERED_LIST": 6,
                "NON_EMPTY_DEFAULT": 7,
                "IDENTIFIER": 8
              }
            },
            "resourceReference": {
              "type": "google.api.ResourceReference",
              "id": 1055,
              "extend": "google.protobuf.FieldOptions"
            },
            "resourceDefinition": {
              "rule": "repeated",
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.FileOptions"
            },
            "resource": {
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.MessageOptions"
            },
            "ResourceDescriptor": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "pattern": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 2
                },
                "nameField": {
                  "type": "string",
                  "id": 3
                },
                "history": {
                  "type": "History",
                  "id": 4
                },
                "plural": {
                  "type": "string",
                  "id": 5
                },
                "singular": {
                  "type": "string",
                  "id": 6
                },
                "style": {
                  "rule": "repeated",
                  "type": "Style",
                  "id": 10
                }
              },
              "nested": {
                "History": {
                  "values": {
                    "HISTORY_UNSPECIFIED": 0,
                    "ORIGINALLY_SINGLE_PATTERN": 1,
                    "FUTURE_MULTI_PATTERN": 2
                  }
                },
                "Style": {
                  "values": {
                    "STYLE_UNSPECIFIED": 0,
                    "DECLARATIVE_FRIENDLY": 1
                  }
                }
              }
            },
            "ResourceReference": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "childType": {
                  "type": "string",
                  "id": 2
                }
              }
            }
          }
        },
        "protobuf": {
          "options": {
            "go_package": "google.golang.org/protobuf/types/descriptorpb",
            "java_package": "com.google.protobuf",
            "java_outer_classname": "DescriptorProtos",
            "csharp_namespace": "Google.Protobuf.Reflection",
            "objc_class_prefix": "GPB",
            "cc_enable_arenas": true,
            "optimize_for": "SPEED"
          },
          "nested": {
            "FileDescriptorSet": {
              "fields": {
                "file": {
                  "rule": "repeated",
                  "type": "FileDescriptorProto",
                  "id": 1
                }
              }
            },
            "Edition": {
              "values": {
                "EDITION_UNKNOWN": 0,
                "EDITION_PROTO2": 998,
                "EDITION_PROTO3": 999,
                "EDITION_2023": 1000,
                "EDITION_2024": 1001,
                "EDITION_1_TEST_ONLY": 1,
                "EDITION_2_TEST_ONLY": 2,
                "EDITION_99997_TEST_ONLY": 99997,
                "EDITION_99998_TEST_ONLY": 99998,
                "EDITION_99999_TEST_ONLY": 99999,
                "EDITION_MAX": 2147483647
              }
            },
            "FileDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "package": {
                  "type": "string",
                  "id": 2
                },
                "dependency": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 3
                },
                "publicDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 10,
                  "options": {
                    "packed": false
                  }
                },
                "weakDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 11,
                  "options": {
                    "packed": false
                  }
                },
                "messageType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 4
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 5
                },
                "service": {
                  "rule": "repeated",
                  "type": "ServiceDescriptorProto",
                  "id": 6
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 7
                },
                "options": {
                  "type": "FileOptions",
                  "id": 8
                },
                "sourceCodeInfo": {
                  "type": "SourceCodeInfo",
                  "id": 9
                },
                "syntax": {
                  "type": "string",
                  "id": 12
                },
                "edition": {
                  "type": "Edition",
                  "id": 14
                }
              }
            },
            "DescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "field": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 2
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 6
                },
                "nestedType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 3
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 4
                },
                "extensionRange": {
                  "rule": "repeated",
                  "type": "ExtensionRange",
                  "id": 5
                },
                "oneofDecl": {
                  "rule": "repeated",
                  "type": "OneofDescriptorProto",
                  "id": 8
                },
                "options": {
                  "type": "MessageOptions",
                  "id": 7
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "ReservedRange",
                  "id": 9
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 10
                }
              },
              "nested": {
                "ExtensionRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    },
                    "options": {
                      "type": "ExtensionRangeOptions",
                      "id": 3
                    }
                  }
                },
                "ReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "ExtensionRangeOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                },
                "declaration": {
                  "rule": "repeated",
                  "type": "Declaration",
                  "id": 2,
                  "options": {
                    "retention": "RETENTION_SOURCE"
                  }
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 50
                },
                "verification": {
                  "type": "VerificationState",
                  "id": 3,
                  "options": {
                    "default": "UNVERIFIED",
                    "retention": "RETENTION_SOURCE"
                  }
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "nested": {
                "Declaration": {
                  "fields": {
                    "number": {
                      "type": "int32",
                      "id": 1
                    },
                    "fullName": {
                      "type": "string",
                      "id": 2
                    },
                    "type": {
                      "type": "string",
                      "id": 3
                    },
                    "reserved": {
                      "type": "bool",
                      "id": 5
                    },
                    "repeated": {
                      "type": "bool",
                      "id": 6
                    }
                  },
                  "reserved": [
                    [
                      4,
                      4
                    ]
                  ]
                },
                "VerificationState": {
                  "values": {
                    "DECLARATION": 0,
                    "UNVERIFIED": 1
                  }
                }
              }
            },
            "FieldDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 3
                },
                "label": {
                  "type": "Label",
                  "id": 4
                },
                "type": {
                  "type": "Type",
                  "id": 5
                },
                "typeName": {
                  "type": "string",
                  "id": 6
                },
                "extendee": {
                  "type": "string",
                  "id": 2
                },
                "defaultValue": {
                  "type": "string",
                  "id": 7
                },
                "oneofIndex": {
                  "type": "int32",
                  "id": 9
                },
                "jsonName": {
                  "type": "string",
                  "id": 10
                },
                "options": {
                  "type": "FieldOptions",
                  "id": 8
                },
                "proto3Optional": {
                  "type": "bool",
                  "id": 17
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_DOUBLE": 1,
                    "TYPE_FLOAT": 2,
                    "TYPE_INT64": 3,
                    "TYPE_UINT64": 4,
                    "TYPE_INT32": 5,
                    "TYPE_FIXED64": 6,
                    "TYPE_FIXED32": 7,
                    "TYPE_BOOL": 8,
                    "TYPE_STRING": 9,
                    "TYPE_GROUP": 10,
                    "TYPE_MESSAGE": 11,
                    "TYPE_BYTES": 12,
                    "TYPE_UINT32": 13,
                    "TYPE_ENUM": 14,
                    "TYPE_SFIXED32": 15,
                    "TYPE_SFIXED64": 16,
                    "TYPE_SINT32": 17,
                    "TYPE_SINT64": 18
                  }
                },
                "Label": {
                  "values": {
                    "LABEL_OPTIONAL": 1,
                    "LABEL_REPEATED": 3,
                    "LABEL_REQUIRED": 2
                  }
                }
              }
            },
            "OneofDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "options": {
                  "type": "OneofOptions",
                  "id": 2
                }
              }
            },
            "EnumDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "rule": "repeated",
                  "type": "EnumValueDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "EnumOptions",
                  "id": 3
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "EnumReservedRange",
                  "id": 4
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 5
                }
              },
              "nested": {
                "EnumReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "EnumValueDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 2
                },
                "options": {
                  "type": "EnumValueOptions",
                  "id": 3
                }
              }
            },
            "ServiceDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "method": {
                  "rule": "repeated",
                  "type": "MethodDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "ServiceOptions",
                  "id": 3
                }
              }
            },
            "MethodDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "inputType": {
                  "type": "string",
                  "id": 2
                },
                "outputType": {
                  "type": "string",
                  "id": 3
                },
                "options": {
                  "type": "MethodOptions",
                  "id": 4
                },
                "clientStreaming": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "serverStreaming": {
                  "type": "bool",
                  "id": 6,
                  "options": {
                    "default": false
                  }
                }
              }
            },
            "FileOptions": {
              "fields": {
                "javaPackage": {
                  "type": "string",
                  "id": 1
                },
                "javaOuterClassname": {
                  "type": "string",
                  "id": 8
                },
                "javaMultipleFiles": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "javaGenerateEqualsAndHash": {
                  "type": "bool",
                  "id": 20,
                  "options": {
                    "deprecated": true
                  }
                },
                "javaStringCheckUtf8": {
                  "type": "bool",
                  "id": 27,
                  "options": {
                    "default": false
                  }
                },
                "optimizeFor": {
                  "type": "OptimizeMode",
                  "id": 9,
                  "options": {
                    "default": "SPEED"
                  }
                },
                "goPackage": {
                  "type": "string",
                  "id": 11
                },
                "ccGenericServices": {
                  "type": "bool",
                  "id": 16,
                  "options": {
                    "default": false
                  }
                },
                "javaGenericServices": {
                  "type": "bool",
                  "id": 17,
                  "options": {
                    "default": false
                  }
                },
                "pyGenericServices": {
                  "type": "bool",
                  "id": 18,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 23,
                  "options": {
                    "default": false
                  }
                },
                "ccEnableArenas": {
                  "type": "bool",
                  "id": 31,
                  "options": {
                    "default": true
                  }
                },
                "objcClassPrefix": {
                  "type": "string",
                  "id": 36
                },
                "csharpNamespace": {
                  "type": "string",
                  "id": 37
                },
                "swiftPrefix": {
                  "type": "string",
                  "id": 39
                },
                "phpClassPrefix": {
                  "type": "string",
                  "id": 40
                },
                "phpNamespace": {
                  "type": "string",
                  "id": 41
                },
                "phpMetadataNamespace": {
                  "type": "string",
                  "id": 44
                },
                "rubyPackage": {
                  "type": "string",
                  "id": 45
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 50
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  42,
                  42
                ],
                [
                  38,
                  38
                ]
              ],
              "nested": {
                "OptimizeMode": {
                  "values": {
                    "SPEED": 1,
                    "CODE_SIZE": 2,
                    "LITE_RUNTIME": 3
                  }
                }
              }
            },
            "MessageOptions": {
              "fields": {
                "messageSetWireFormat": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "noStandardDescriptorAccessor": {
                  "type": "bool",
                  "id": 2,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "mapEntry": {
                  "type": "bool",
                  "id": 7
                },
                "deprecatedLegacyJsonFieldConflicts": {
                  "type": "bool",
                  "id": 11,
                  "options": {
                    "deprecated": true
                  }
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 12
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ],
                [
                  5,
                  5
                ],
                [
                  6,
                  6
                ],
                [
                  8,
                  8
                ],
                [
                  9,
                  9
                ]
              ]
            },
            "FieldOptions": {
              "fields": {
                "ctype": {
                  "type": "CType",
                  "id": 1,
                  "options": {
                    "default": "STRING"
                  }
                },
                "packed": {
                  "type": "bool",
                  "id": 2
                },
                "jstype": {
                  "type": "JSType",
                  "id": 6,
                  "options": {
                    "default": "JS_NORMAL"
                  }
                },
                "lazy": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "unverifiedLazy": {
                  "type": "bool",
                  "id": 15,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "weak": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "debugRedact": {
                  "type": "bool",
                  "id": 16,
                  "options": {
                    "default": false
                  }
                },
                "retention": {
                  "type": "OptionRetention",
                  "id": 17
                },
                "targets": {
                  "rule": "repeated",
                  "type": "OptionTargetType",
                  "id": 19,
                  "options": {
                    "packed": false
                  }
                },
                "editionDefaults": {
                  "rule": "repeated",
                  "type": "EditionDefault",
                  "id": 20
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 21
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ],
                [
                  18,
                  18
                ]
              ],
              "nested": {
                "CType": {
                  "values": {
                    "STRING": 0,
                    "CORD": 1,
                    "STRING_PIECE": 2
                  }
                },
                "JSType": {
                  "values": {
                    "JS_NORMAL": 0,
                    "JS_STRING": 1,
                    "JS_NUMBER": 2
                  }
                },
                "OptionRetention": {
                  "values": {
                    "RETENTION_UNKNOWN": 0,
                    "RETENTION_RUNTIME": 1,
                    "RETENTION_SOURCE": 2
                  }
                },
                "OptionTargetType": {
                  "values": {
                    "TARGET_TYPE_UNKNOWN": 0,
                    "TARGET_TYPE_FILE": 1,
                    "TARGET_TYPE_EXTENSION_RANGE": 2,
                    "TARGET_TYPE_MESSAGE": 3,
                    "TARGET_TYPE_FIELD": 4,
                    "TARGET_TYPE_ONEOF": 5,
                    "TARGET_TYPE_ENUM": 6,
                    "TARGET_TYPE_ENUM_ENTRY": 7,
                    "TARGET_TYPE_SERVICE": 8,
                    "TARGET_TYPE_METHOD": 9
                  }
                },
                "EditionDefault": {
                  "fields": {
                    "edition": {
                      "type": "Edition",
                      "id": 3
                    },
                    "value": {
                      "type": "string",
                      "id": 2
                    }
                  }
                }
              }
            },
            "OneofOptions": {
              "fields": {
                "features": {
                  "type": "FeatureSet",
                  "id": 1
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "EnumOptions": {
              "fields": {
                "allowAlias": {
                  "type": "bool",
                  "id": 2
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "deprecatedLegacyJsonFieldConflicts": {
                  "type": "bool",
                  "id": 6,
                  "options": {
                    "deprecated": true
                  }
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 7
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  5,
                  5
                ]
              ]
            },
            "EnumValueOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 2
                },
                "debugRedact": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "ServiceOptions": {
              "fields": {
                "features": {
                  "type": "FeatureSet",
                  "id": 34
                },
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "MethodOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "idempotencyLevel": {
                  "type": "IdempotencyLevel",
                  "id": 34,
                  "options": {
                    "default": "IDEMPOTENCY_UNKNOWN"
                  }
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 35
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "nested": {
                "IdempotencyLevel": {
                  "values": {
                    "IDEMPOTENCY_UNKNOWN": 0,
                    "NO_SIDE_EFFECTS": 1,
                    "IDEMPOTENT": 2
                  }
                }
              }
            },
            "UninterpretedOption": {
              "fields": {
                "name": {
                  "rule": "repeated",
                  "type": "NamePart",
                  "id": 2
                },
                "identifierValue": {
                  "type": "string",
                  "id": 3
                },
                "positiveIntValue": {
                  "type": "uint64",
                  "id": 4
                },
                "negativeIntValue": {
                  "type": "int64",
                  "id": 5
                },
                "doubleValue": {
                  "type": "double",
                  "id": 6
                },
                "stringValue": {
                  "type": "bytes",
                  "id": 7
                },
                "aggregateValue": {
                  "type": "string",
                  "id": 8
                }
              },
              "nested": {
                "NamePart": {
                  "fields": {
                    "namePart": {
                      "rule": "required",
                      "type": "string",
                      "id": 1
                    },
                    "isExtension": {
                      "rule": "required",
                      "type": "bool",
                      "id": 2
                    }
                  }
                }
              }
            },
            "FeatureSet": {
              "fields": {
                "fieldPresence": {
                  "type": "FieldPresence",
                  "id": 1,
                  "options": {
                    "retention": "RETENTION_RUNTIME",
                    "targets": "TARGET_TYPE_FILE",
                    "edition_defaults.edition": "EDITION_2023",
                    "edition_defaults.value": "EXPLICIT"
                  }
                },
                "enumType": {
                  "type": "EnumType",
                  "id": 2,
                  "options": {
                    "retention": "RETENTION_RUNTIME",
                    "targets": "TARGET_TYPE_FILE",
                    "edition_defaults.edition": "EDITION_PROTO3",
                    "edition_defaults.value": "OPEN"
                  }
                },
                "repeatedFieldEncoding": {
                  "type": "RepeatedFieldEncoding",
                  "id": 3,
                  "options": {
                    "retention": "RETENTION_RUNTIME",
                    "targets": "TARGET_TYPE_FILE",
                    "edition_defaults.edition": "EDITION_PROTO3",
                    "edition_defaults.value": "PACKED"
                  }
                },
                "utf8Validation": {
                  "type": "Utf8Validation",
                  "id": 4,
                  "options": {
                    "retention": "RETENTION_RUNTIME",
                    "targets": "TARGET_TYPE_FILE",
                    "edition_defaults.edition": "EDITION_PROTO3",
                    "edition_defaults.value": "VERIFY"
                  }
                },
                "messageEncoding": {
                  "type": "MessageEncoding",
                  "id": 5,
                  "options": {
                    "retention": "RETENTION_RUNTIME",
                    "targets": "TARGET_TYPE_FILE",
                    "edition_defaults.edition": "EDITION_PROTO2",
                    "edition_defaults.value": "LENGTH_PREFIXED"
                  }
                },
                "jsonFormat": {
                  "type": "JsonFormat",
                  "id": 6,
                  "options": {
                    "retention": "RETENTION_RUNTIME",
                    "targets": "TARGET_TYPE_FILE",
                    "edition_defaults.edition": "EDITION_PROTO3",
                    "edition_defaults.value": "ALLOW"
                  }
                }
              },
              "extensions": [
                [
                  1000,
                  1000
                ],
                [
                  1001,
                  1001
                ],
                [
                  9995,
                  9999
                ]
              ],
              "reserved": [
                [
                  999,
                  999
                ]
              ],
              "nested": {
                "FieldPresence": {
                  "values": {
                    "FIELD_PRESENCE_UNKNOWN": 0,
                    "EXPLICIT": 1,
                    "IMPLICIT": 2,
                    "LEGACY_REQUIRED": 3
                  }
                },
                "EnumType": {
                  "values": {
                    "ENUM_TYPE_UNKNOWN": 0,
                    "OPEN": 1,
                    "CLOSED": 2
                  }
                },
                "RepeatedFieldEncoding": {
                  "values": {
                    "REPEATED_FIELD_ENCODING_UNKNOWN": 0,
                    "PACKED": 1,
                    "EXPANDED": 2
                  }
                },
                "Utf8Validation": {
                  "values": {
                    "UTF8_VALIDATION_UNKNOWN": 0,
                    "VERIFY": 2,
                    "NONE": 3
                  }
                },
                "MessageEncoding": {
                  "values": {
                    "MESSAGE_ENCODING_UNKNOWN": 0,
                    "LENGTH_PREFIXED": 1,
                    "DELIMITED": 2
                  }
                },
                "JsonFormat": {
                  "values": {
                    "JSON_FORMAT_UNKNOWN": 0,
                    "ALLOW": 1,
                    "LEGACY_BEST_EFFORT": 2
                  }
                }
              }
            },
            "FeatureSetDefaults": {
              "fields": {
                "defaults": {
                  "rule": "repeated",
                  "type": "FeatureSetEditionDefault",
                  "id": 1
                },
                "minimumEdition": {
                  "type": "Edition",
                  "id": 4
                },
                "maximumEdition": {
                  "type": "Edition",
                  "id": 5
                }
              },
              "nested": {
                "FeatureSetEditionDefault": {
                  "fields": {
                    "edition": {
                      "type": "Edition",
                      "id": 3
                    },
                    "features": {
                      "type": "FeatureSet",
                      "id": 2
                    }
                  }
                }
              }
            },
            "SourceCodeInfo": {
              "fields": {
                "location": {
                  "rule": "repeated",
                  "type": "Location",
                  "id": 1
                }
              },
              "nested": {
                "Location": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "span": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 2
                    },
                    "leadingComments": {
                      "type": "string",
                      "id": 3
                    },
                    "trailingComments": {
                      "type": "string",
                      "id": 4
                    },
                    "leadingDetachedComments": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 6
                    }
                  }
                }
              }
            },
            "GeneratedCodeInfo": {
              "fields": {
                "annotation": {
                  "rule": "repeated",
                  "type": "Annotation",
                  "id": 1
                }
              },
              "nested": {
                "Annotation": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "sourceFile": {
                      "type": "string",
                      "id": 2
                    },
                    "begin": {
                      "type": "int32",
                      "id": 3
                    },
                    "end": {
                      "type": "int32",
                      "id": 4
                    },
                    "semantic": {
                      "type": "Semantic",
                      "id": 5
                    }
                  },
                  "nested": {
                    "Semantic": {
                      "values": {
                        "NONE": 0,
                        "SET": 1,
                        "ALIAS": 2
                      }
                    }
                  }
                }
              }
            },
            "Duration": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "Timestamp": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "DoubleValue": {
              "fields": {
                "value": {
                  "type": "double",
                  "id": 1
                }
              }
            },
            "FloatValue": {
              "fields": {
                "value": {
                  "type": "float",
                  "id": 1
                }
              }
            },
            "Int64Value": {
              "fields": {
                "value": {
                  "type": "int64",
                  "id": 1
                }
              }
            },
            "UInt64Value": {
              "fields": {
                "value": {
                  "type": "uint64",
                  "id": 1
                }
              }
            },
            "Int32Value": {
              "fields": {
                "value": {
                  "type": "int32",
                  "id": 1
                }
              }
            },
            "UInt32Value": {
              "fields": {
                "value": {
                  "type": "uint32",
                  "id": 1
                }
              }
            },
            "BoolValue": {
              "fields": {
                "value": {
                  "type": "bool",
                  "id": 1
                }
              }
            },
            "StringValue": {
              "fields": {
                "value": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "BytesValue": {
              "fields": {
                "value": {
                  "type": "bytes",
                  "id": 1
                }
              }
            },
            "Any": {
              "fields": {
                "type_url": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "type": "bytes",
                  "id": 2
                }
              }
            },
            "Empty": {
              "fields": {}
            },
            "Struct": {
              "fields": {
                "fields": {
                  "keyType": "string",
                  "type": "Value",
                  "id": 1
                }
              }
            },
            "Value": {
              "oneofs": {
                "kind": {
                  "oneof": [
                    "nullValue",
                    "numberValue",
                    "stringValue",
                    "boolValue",
                    "structValue",
                    "listValue"
                  ]
                }
              },
              "fields": {
                "nullValue": {
                  "type": "NullValue",
                  "id": 1
                },
                "numberValue": {
                  "type": "double",
                  "id": 2
                },
                "stringValue": {
                  "type": "string",
                  "id": 3
                },
                "boolValue": {
                  "type": "bool",
                  "id": 4
                },
                "structValue": {
                  "type": "Struct",
                  "id": 5
                },
                "listValue": {
                  "type": "ListValue",
                  "id": 6
                }
              }
            },
            "NullValue": {
              "values": {
                "NULL_VALUE": 0
              }
            },
            "ListValue": {
              "fields": {
                "values": {
                  "rule": "repeated",
                  "type": "Value",
                  "id": 1
                }
              }
            },
            "FieldMask": {
              "fields": {
                "paths": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 1
                }
              }
            }
          }
        },
        "rpc": {
          "options": {
            "cc_enable_arenas": true,
            "go_package": "google.golang.org/genproto/googleapis/rpc/status;status",
            "java_multiple_files": true,
            "java_outer_classname": "StatusProto",
            "java_package": "com.google.rpc",
            "objc_class_prefix": "RPC"
          },
          "nested": {
            "Status": {
              "fields": {
                "code": {
                  "type": "int32",
                  "id": 1
                },
                "message": {
                  "type": "string",
                  "id": 2
                },
                "details": {
                  "rule": "repeated",
                  "type": "google.protobuf.Any",
                  "id": 3
                }
              }
            }
          }
        },
        "longrunning": {
          "options": {
            "cc_enable_arenas": true,
            "csharp_namespace": "Google.LongRunning",
            "go_package": "cloud.google.com/go/longrunning/autogen/longrunningpb;longrunningpb",
            "java_multiple_files": true,
            "java_outer_classname": "OperationsProto",
            "java_package": "com.google.longrunning",
            "php_namespace": "Google\\LongRunning"
          },
          "nested": {
            "operationInfo": {
              "type": "google.longrunning.OperationInfo",
              "id": 1049,
              "extend": "google.protobuf.MethodOptions"
            },
            "Operations": {
              "options": {
                "(google.api.default_host)": "longrunning.googleapis.com"
              },
              "methods": {
                "ListOperations": {
                  "requestType": "ListOperationsRequest",
                  "responseType": "ListOperationsResponse",
                  "options": {
                    "(google.api.http).get": "/v1/{name=operations}",
                    "(google.api.method_signature)": "name,filter"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "get": "/v1/{name=operations}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name,filter"
                    }
                  ]
                },
                "GetOperation": {
                  "requestType": "GetOperationRequest",
                  "responseType": "Operation",
                  "options": {
                    "(google.api.http).get": "/v1/{name=operations/**}",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "get": "/v1/{name=operations/**}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "DeleteOperation": {
                  "requestType": "DeleteOperationRequest",
                  "responseType": "google.protobuf.Empty",
                  "options": {
                    "(google.api.http).delete": "/v1/{name=operations/**}",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "delete": "/v1/{name=operations/**}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "CancelOperation": {
                  "requestType": "CancelOperationRequest",
                  "responseType": "google.protobuf.Empty",
                  "options": {
                    "(google.api.http).post": "/v1/{name=operations/**}:cancel",
                    "(google.api.http).body": "*",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "post": "/v1/{name=operations/**}:cancel",
                        "body": "*"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "WaitOperation": {
                  "requestType": "WaitOperationRequest",
                  "responseType": "Operation"
                }
              }
            },
            "Operation": {
              "oneofs": {
                "result": {
                  "oneof": [
                    "error",
                    "response"
                  ]
                }
              },
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "metadata": {
                  "type": "google.protobuf.Any",
                  "id": 2
                },
                "done": {
                  "type": "bool",
                  "id": 3
                },
                "error": {
                  "type": "google.rpc.Status",
                  "id": 4
                },
                "response": {
                  "type": "google.protobuf.Any",
                  "id": 5
                }
              }
            },
            "GetOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "ListOperationsRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 4
                },
                "filter": {
                  "type": "string",
                  "id": 1
                },
                "pageSize": {
                  "type": "int32",
                  "id": 2
                },
                "pageToken": {
                  "type": "string",
                  "id": 3
                }
              }
            },
            "ListOperationsResponse": {
              "fields": {
                "operations": {
                  "rule": "repeated",
                  "type": "Operation",
                  "id": 1
                },
                "nextPageToken": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "CancelOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "DeleteOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "WaitOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "timeout": {
                  "type": "google.protobuf.Duration",
                  "id": 2
                }
              }
            },
            "OperationInfo": {
              "fields": {
                "responseType": {
                  "type": "string",
                  "id": 1
                },
                "metadataType": {
                  "type": "string",
                  "id": 2
                }
              }
            }
          }
        }
      }
    }
  }
}