// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

import * as gax from 'google-gax';
import {
  Callback,
  CallOptions,
  Descriptors,
  ClientOptions,
  PaginationCallback,
  GaxCall,
  IamClient,
  IamProtos,
} from 'google-gax';
import * as path from 'path';

import {Transform} from 'stream';
import {RequestType} from 'google-gax/build/src/apitypes';
import * as protos from '../../protos/protos';
import * as gapicConfig from './key_management_service_client_config.json';

const version = require('../../../package.json').version;

/**
 *  Google Cloud Key Management Service
 *
 *  Manages cryptographic keys and operations using those keys. Implements a REST
 *  model with the following objects:
 *
 *  * {@link google.cloud.kms.v1.KeyRing|KeyRing}
 *  * {@link google.cloud.kms.v1.CryptoKey|CryptoKey}
 *  * {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion}
 *  * {@link google.cloud.kms.v1.ImportJob|ImportJob}
 *
 *  If you are using manual gRPC libraries, see
 *  [Using gRPC with Cloud KMS](https://cloud.google.com/kms/docs/grpc).
 * @class
 * @memberof v1
 */
export class KeyManagementServiceClient {
  private _terminated = false;
  private _opts: ClientOptions;
  private _gaxModule: typeof gax | typeof gax.fallback;
  private _gaxGrpc: gax.GrpcClient | gax.fallback.GrpcClient;
  private _protos: {};
  private _defaults: {[method: string]: gax.CallSettings};
  auth: gax.GoogleAuth;
  descriptors: Descriptors = {
    page: {},
    stream: {},
    longrunning: {},
    batching: {},
  };
  innerApiCalls: {[name: string]: Function};
  iamClient: IamClient;
  pathTemplates: {[name: string]: gax.PathTemplate};
  keyManagementServiceStub?: Promise<{[name: string]: Function}>;

  /**
   * Construct an instance of KeyManagementServiceClient.
   *
   * @param {object} [options] - The configuration object. See the subsequent
   *   parameters for more details.
   * @param {object} [options.credentials] - Credentials object.
   * @param {string} [options.credentials.client_email]
   * @param {string} [options.credentials.private_key]
   * @param {string} [options.email] - Account email address. Required when
   *     using a .pem or .p12 keyFilename.
   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
   *     .p12 key downloaded from the Google Developers Console. If you provide
   *     a path to a JSON file, the projectId option below is not necessary.
   *     NOTE: .pem and .p12 require you to specify options.email as well.
   * @param {number} [options.port] - The port on which to connect to
   *     the remote host.
   * @param {string} [options.projectId] - The project ID from the Google
   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
   *     the environment variable GCLOUD_PROJECT for your project ID. If your
   *     app is running in an environment which supports
   *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
   *     your project ID will be detected automatically.
   * @param {string} [options.apiEndpoint] - The domain name of the
   *     API remote host.
   */

  constructor(opts?: ClientOptions) {
    // Ensure that options include the service address and port.
    const staticMembers = this.constructor as typeof KeyManagementServiceClient;
    const servicePath =
      opts && opts.servicePath
        ? opts.servicePath
        : opts && opts.apiEndpoint
        ? opts.apiEndpoint
        : staticMembers.servicePath;
    const port = opts && opts.port ? opts.port : staticMembers.port;

    if (!opts) {
      opts = {servicePath, port};
    }
    opts.servicePath = opts.servicePath || servicePath;
    opts.port = opts.port || port;

    // users can override the config from client side, like retry codes name.
    // The detailed structure of the clientConfig can be found here: https://github.com/googleapis/gax-nodejs/blob/master/src/gax.ts#L546
    // The way to override client config for Showcase API:
    //
    // const customConfig = {"interfaces": {"google.showcase.v1beta1.Echo": {"methods": {"Echo": {"retry_codes_name": "idempotent", "retry_params_name": "default"}}}}}
    // const showcaseClient = new showcaseClient({ projectId, customConfig });
    opts.clientConfig = opts.clientConfig || {};

    const isBrowser = typeof window !== 'undefined';
    if (isBrowser) {
      opts.fallback = true;
    }
    // If we are in browser, we are already using fallback because of the
    // "browser" field in package.json.
    // But if we were explicitly requested to use fallback, let's do it now.
    this._gaxModule = !isBrowser && opts.fallback ? gax.fallback : gax;

    // Create a `gaxGrpc` object, with any grpc-specific options
    // sent to the client.
    opts.scopes = (this
      .constructor as typeof KeyManagementServiceClient).scopes;
    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);

    // Save options to use in initialize() method.
    this._opts = opts;

    // Save the auth object to the client, for use by other methods.
    this.auth = this._gaxGrpc.auth as gax.GoogleAuth;
    this.iamClient = new IamClient(this._gaxGrpc, opts);

    // Determine the client header string.
    const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];
    if (typeof process !== 'undefined' && 'versions' in process) {
      clientHeader.push(`gl-node/${process.versions.node}`);
    } else {
      clientHeader.push(`gl-web/${this._gaxModule.version}`);
    }
    if (!opts.fallback) {
      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);
    }
    if (opts.libName && opts.libVersion) {
      clientHeader.push(`${opts.libName}/${opts.libVersion}`);
    }
    // Load the applicable protos.
    // For Node.js, pass the path to JSON proto file.
    // For browsers, pass the JSON content.

    const nodejsProtoPath = path.join(
      __dirname,
      '..',
      '..',
      'protos',
      'protos.json'
    );
    this._protos = this._gaxGrpc.loadProto(
      opts.fallback
        ? // eslint-disable-next-line @typescript-eslint/no-var-requires
          require('../../protos/protos.json')
        : nodejsProtoPath
    );

    // This API contains "path templates"; forward-slash-separated
    // identifiers to uniquely identify resources within the API.
    // Create useful helper objects for these.
    this.pathTemplates = {
      cryptoKeyPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}'
      ),
      cryptoKeyVersionPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}/cryptoKeyVersions/{crypto_key_version}'
      ),
      importJobPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/keyRings/{key_ring}/importJobs/{import_job}'
      ),
      keyRingPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/keyRings/{key_ring}'
      ),
      locationPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}'
      ),
      publicKeyPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}/cryptoKeyVersions/{crypto_key_version}/publicKey'
      ),
    };

    // Some of the methods on this service return "paged" results,
    // (e.g. 50 results at a time, with tokens to get subsequent
    // pages). Denote the keys used for pagination and results.
    this.descriptors.page = {
      listKeyRings: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'keyRings'
      ),
      listCryptoKeys: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'cryptoKeys'
      ),
      listCryptoKeyVersions: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'cryptoKeyVersions'
      ),
      listImportJobs: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'importJobs'
      ),
    };

    // Put together the default options sent with requests.
    this._defaults = this._gaxGrpc.constructSettings(
      'google.cloud.kms.v1.KeyManagementService',
      gapicConfig as gax.ClientConfig,
      opts.clientConfig || {},
      {'x-goog-api-client': clientHeader.join(' ')}
    );

    // Set up a dictionary of "inner API calls"; the core implementation
    // of calling the API is handled in `google-gax`, with this code
    // merely providing the destination and request information.
    this.innerApiCalls = {};
  }

  /**
   * Initialize the client.
   * Performs asynchronous operations (such as authentication) and prepares the client.
   * This function will be called automatically when any class method is called for the
   * first time, but if you need to initialize it before calling an actual method,
   * feel free to call initialize() directly.
   *
   * You can await on this method if you want to make sure the client is initialized.
   *
   * @returns {Promise} A promise that resolves to an authenticated service stub.
   */
  initialize() {
    // If the client stub promise is already initialized, return immediately.
    if (this.keyManagementServiceStub) {
      return this.keyManagementServiceStub;
    }

    // Put together the "service stub" for
    // google.cloud.kms.v1.KeyManagementService.
    this.keyManagementServiceStub = this._gaxGrpc.createStub(
      this._opts.fallback
        ? (this._protos as protobuf.Root).lookupService(
            'google.cloud.kms.v1.KeyManagementService'
          )
        : // eslint-disable-next-line @typescript-eslint/no-explicit-any
          (this._protos as any).google.cloud.kms.v1.KeyManagementService,
      this._opts
    ) as Promise<{[method: string]: Function}>;

    // Iterate over each of the methods that the service provides
    // and create an API call method for each.
    const keyManagementServiceStubMethods = [
      'listKeyRings',
      'listCryptoKeys',
      'listCryptoKeyVersions',
      'listImportJobs',
      'getKeyRing',
      'getCryptoKey',
      'getCryptoKeyVersion',
      'getPublicKey',
      'getImportJob',
      'createKeyRing',
      'createCryptoKey',
      'createCryptoKeyVersion',
      'importCryptoKeyVersion',
      'createImportJob',
      'updateCryptoKey',
      'updateCryptoKeyVersion',
      'encrypt',
      'decrypt',
      'asymmetricSign',
      'asymmetricDecrypt',
      'updateCryptoKeyPrimaryVersion',
      'destroyCryptoKeyVersion',
      'restoreCryptoKeyVersion',
    ];
    for (const methodName of keyManagementServiceStubMethods) {
      const callPromise = this.keyManagementServiceStub.then(
        stub => (...args: Array<{}>) => {
          if (this._terminated) {
            return Promise.reject('The client has already been closed.');
          }
          const func = stub[methodName];
          return func.apply(stub, args);
        },
        (err: Error | null | undefined) => () => {
          throw err;
        }
      );

      const apiCall = this._gaxModule.createApiCall(
        callPromise,
        this._defaults[methodName],
        this.descriptors.page[methodName] ||
          this.descriptors.stream[methodName] ||
          this.descriptors.longrunning[methodName]
      );

      this.innerApiCalls[methodName] = apiCall;
    }

    return this.keyManagementServiceStub;
  }

  /**
   * The DNS address for this API service.
   */
  static get servicePath() {
    return 'cloudkms.googleapis.com';
  }

  /**
   * The DNS address for this API service - same as servicePath(),
   * exists for compatibility reasons.
   */
  static get apiEndpoint() {
    return 'cloudkms.googleapis.com';
  }

  /**
   * The port for this API service.
   */
  static get port() {
    return 443;
  }

  /**
   * The scopes needed to make gRPC calls for every method defined
   * in this service.
   */
  static get scopes() {
    return [
      'https://www.googleapis.com/auth/cloud-platform',
      'https://www.googleapis.com/auth/cloudkms',
    ];
  }

  getProjectId(): Promise<string>;
  getProjectId(callback: Callback<string, undefined, undefined>): void;
  /**
   * Return the project ID used by this class.
   * @param {function(Error, string)} callback - the callback to
   *   be called with the current project Id.
   */
  getProjectId(
    callback?: Callback<string, undefined, undefined>
  ): Promise<string> | void {
    if (callback) {
      this.auth.getProjectId(callback);
      return;
    }
    return this.auth.getProjectId();
  }

  // -------------------
  // -- Service calls --
  // -------------------
  getKeyRing(
    request: protos.google.cloud.kms.v1.IGetKeyRingRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.cloud.kms.v1.IKeyRing,
      protos.google.cloud.kms.v1.IGetKeyRingRequest | undefined,
      {} | undefined
    ]
  >;
  getKeyRing(
    request: protos.google.cloud.kms.v1.IGetKeyRingRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.cloud.kms.v1.IKeyRing,
      protos.google.cloud.kms.v1.IGetKeyRingRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getKeyRing(
    request: protos.google.cloud.kms.v1.IGetKeyRingRequest,
    callback: Callback<
      protos.google.cloud.kms.v1.IKeyRing,
      protos.google.cloud.kms.v1.IGetKeyRingRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Returns metadata for a given {@link google.cloud.kms.v1.KeyRing|KeyRing}.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The {@link google.cloud.kms.v1.KeyRing.name|name} of the {@link google.cloud.kms.v1.KeyRing|KeyRing} to get.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [KeyRing]{@link google.cloud.kms.v1.KeyRing}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  getKeyRing(
    request: protos.google.cloud.kms.v1.IGetKeyRingRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.cloud.kms.v1.IKeyRing,
          protos.google.cloud.kms.v1.IGetKeyRingRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.kms.v1.IKeyRing,
      protos.google.cloud.kms.v1.IGetKeyRingRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.kms.v1.IKeyRing,
      protos.google.cloud.kms.v1.IGetKeyRingRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.getKeyRing(request, options, callback);
  }
  getCryptoKey(
    request: protos.google.cloud.kms.v1.IGetCryptoKeyRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.cloud.kms.v1.ICryptoKey,
      protos.google.cloud.kms.v1.IGetCryptoKeyRequest | undefined,
      {} | undefined
    ]
  >;
  getCryptoKey(
    request: protos.google.cloud.kms.v1.IGetCryptoKeyRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.cloud.kms.v1.ICryptoKey,
      protos.google.cloud.kms.v1.IGetCryptoKeyRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getCryptoKey(
    request: protos.google.cloud.kms.v1.IGetCryptoKeyRequest,
    callback: Callback<
      protos.google.cloud.kms.v1.ICryptoKey,
      protos.google.cloud.kms.v1.IGetCryptoKeyRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Returns metadata for a given {@link google.cloud.kms.v1.CryptoKey|CryptoKey}, as well as its
   * {@link google.cloud.kms.v1.CryptoKey.primary|primary} {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion}.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The {@link google.cloud.kms.v1.CryptoKey.name|name} of the {@link google.cloud.kms.v1.CryptoKey|CryptoKey} to get.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [CryptoKey]{@link google.cloud.kms.v1.CryptoKey}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  getCryptoKey(
    request: protos.google.cloud.kms.v1.IGetCryptoKeyRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.cloud.kms.v1.ICryptoKey,
          protos.google.cloud.kms.v1.IGetCryptoKeyRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.kms.v1.ICryptoKey,
      protos.google.cloud.kms.v1.IGetCryptoKeyRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.kms.v1.ICryptoKey,
      protos.google.cloud.kms.v1.IGetCryptoKeyRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.getCryptoKey(request, options, callback);
  }
  getCryptoKeyVersion(
    request: protos.google.cloud.kms.v1.IGetCryptoKeyVersionRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.cloud.kms.v1.ICryptoKeyVersion,
      protos.google.cloud.kms.v1.IGetCryptoKeyVersionRequest | undefined,
      {} | undefined
    ]
  >;
  getCryptoKeyVersion(
    request: protos.google.cloud.kms.v1.IGetCryptoKeyVersionRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.cloud.kms.v1.ICryptoKeyVersion,
      protos.google.cloud.kms.v1.IGetCryptoKeyVersionRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getCryptoKeyVersion(
    request: protos.google.cloud.kms.v1.IGetCryptoKeyVersionRequest,
    callback: Callback<
      protos.google.cloud.kms.v1.ICryptoKeyVersion,
      protos.google.cloud.kms.v1.IGetCryptoKeyVersionRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Returns metadata for a given {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion}.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The {@link google.cloud.kms.v1.CryptoKeyVersion.name|name} of the {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion} to get.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [CryptoKeyVersion]{@link google.cloud.kms.v1.CryptoKeyVersion}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  getCryptoKeyVersion(
    request: protos.google.cloud.kms.v1.IGetCryptoKeyVersionRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.cloud.kms.v1.ICryptoKeyVersion,
          | protos.google.cloud.kms.v1.IGetCryptoKeyVersionRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.kms.v1.ICryptoKeyVersion,
      protos.google.cloud.kms.v1.IGetCryptoKeyVersionRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.kms.v1.ICryptoKeyVersion,
      protos.google.cloud.kms.v1.IGetCryptoKeyVersionRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.getCryptoKeyVersion(request, options, callback);
  }
  getPublicKey(
    request: protos.google.cloud.kms.v1.IGetPublicKeyRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.cloud.kms.v1.IPublicKey,
      protos.google.cloud.kms.v1.IGetPublicKeyRequest | undefined,
      {} | undefined
    ]
  >;
  getPublicKey(
    request: protos.google.cloud.kms.v1.IGetPublicKeyRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.cloud.kms.v1.IPublicKey,
      protos.google.cloud.kms.v1.IGetPublicKeyRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getPublicKey(
    request: protos.google.cloud.kms.v1.IGetPublicKeyRequest,
    callback: Callback<
      protos.google.cloud.kms.v1.IPublicKey,
      protos.google.cloud.kms.v1.IGetPublicKeyRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Returns the public key for the given {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion}. The
   * {@link google.cloud.kms.v1.CryptoKey.purpose|CryptoKey.purpose} must be
   * {@link google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose.ASYMMETRIC_SIGN|ASYMMETRIC_SIGN} or
   * {@link google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose.ASYMMETRIC_DECRYPT|ASYMMETRIC_DECRYPT}.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The {@link google.cloud.kms.v1.CryptoKeyVersion.name|name} of the {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion} public key to
   *   get.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [PublicKey]{@link google.cloud.kms.v1.PublicKey}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  getPublicKey(
    request: protos.google.cloud.kms.v1.IGetPublicKeyRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.cloud.kms.v1.IPublicKey,
          protos.google.cloud.kms.v1.IGetPublicKeyRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.kms.v1.IPublicKey,
      protos.google.cloud.kms.v1.IGetPublicKeyRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.kms.v1.IPublicKey,
      protos.google.cloud.kms.v1.IGetPublicKeyRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.getPublicKey(request, options, callback);
  }
  getImportJob(
    request: protos.google.cloud.kms.v1.IGetImportJobRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.cloud.kms.v1.IImportJob,
      protos.google.cloud.kms.v1.IGetImportJobRequest | undefined,
      {} | undefined
    ]
  >;
  getImportJob(
    request: protos.google.cloud.kms.v1.IGetImportJobRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.cloud.kms.v1.IImportJob,
      protos.google.cloud.kms.v1.IGetImportJobRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getImportJob(
    request: protos.google.cloud.kms.v1.IGetImportJobRequest,
    callback: Callback<
      protos.google.cloud.kms.v1.IImportJob,
      protos.google.cloud.kms.v1.IGetImportJobRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Returns metadata for a given {@link google.cloud.kms.v1.ImportJob|ImportJob}.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The {@link google.cloud.kms.v1.ImportJob.name|name} of the {@link google.cloud.kms.v1.ImportJob|ImportJob} to get.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [ImportJob]{@link google.cloud.kms.v1.ImportJob}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  getImportJob(
    request: protos.google.cloud.kms.v1.IGetImportJobRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.cloud.kms.v1.IImportJob,
          protos.google.cloud.kms.v1.IGetImportJobRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.kms.v1.IImportJob,
      protos.google.cloud.kms.v1.IGetImportJobRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.kms.v1.IImportJob,
      protos.google.cloud.kms.v1.IGetImportJobRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.getImportJob(request, options, callback);
  }
  createKeyRing(
    request: protos.google.cloud.kms.v1.ICreateKeyRingRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.cloud.kms.v1.IKeyRing,
      protos.google.cloud.kms.v1.ICreateKeyRingRequest | undefined,
      {} | undefined
    ]
  >;
  createKeyRing(
    request: protos.google.cloud.kms.v1.ICreateKeyRingRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.cloud.kms.v1.IKeyRing,
      protos.google.cloud.kms.v1.ICreateKeyRingRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  createKeyRing(
    request: protos.google.cloud.kms.v1.ICreateKeyRingRequest,
    callback: Callback<
      protos.google.cloud.kms.v1.IKeyRing,
      protos.google.cloud.kms.v1.ICreateKeyRingRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Create a new {@link google.cloud.kms.v1.KeyRing|KeyRing} in a given Project and Location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the location associated with the
   *   {@link google.cloud.kms.v1.KeyRing|KeyRings}, in the format `projects/* /locations/*`.
   * @param {string} request.keyRingId
   *   Required. It must be unique within a location and match the regular
   *   expression `[a-zA-Z0-9_-]{1,63}`
   * @param {google.cloud.kms.v1.KeyRing} request.keyRing
   *   Required. A {@link google.cloud.kms.v1.KeyRing|KeyRing} with initial field values.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [KeyRing]{@link google.cloud.kms.v1.KeyRing}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  createKeyRing(
    request: protos.google.cloud.kms.v1.ICreateKeyRingRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.cloud.kms.v1.IKeyRing,
          protos.google.cloud.kms.v1.ICreateKeyRingRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.kms.v1.IKeyRing,
      protos.google.cloud.kms.v1.ICreateKeyRingRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.kms.v1.IKeyRing,
      protos.google.cloud.kms.v1.ICreateKeyRingRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.createKeyRing(request, options, callback);
  }
  createCryptoKey(
    request: protos.google.cloud.kms.v1.ICreateCryptoKeyRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.cloud.kms.v1.ICryptoKey,
      protos.google.cloud.kms.v1.ICreateCryptoKeyRequest | undefined,
      {} | undefined
    ]
  >;
  createCryptoKey(
    request: protos.google.cloud.kms.v1.ICreateCryptoKeyRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.cloud.kms.v1.ICryptoKey,
      protos.google.cloud.kms.v1.ICreateCryptoKeyRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  createCryptoKey(
    request: protos.google.cloud.kms.v1.ICreateCryptoKeyRequest,
    callback: Callback<
      protos.google.cloud.kms.v1.ICryptoKey,
      protos.google.cloud.kms.v1.ICreateCryptoKeyRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Create a new {@link google.cloud.kms.v1.CryptoKey|CryptoKey} within a {@link google.cloud.kms.v1.KeyRing|KeyRing}.
   *
   * {@link google.cloud.kms.v1.CryptoKey.purpose|CryptoKey.purpose} and
   * {@link google.cloud.kms.v1.CryptoKeyVersionTemplate.algorithm|CryptoKey.version_template.algorithm}
   * are required.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The {@link google.cloud.kms.v1.KeyRing.name|name} of the KeyRing associated with the
   *   {@link google.cloud.kms.v1.CryptoKey|CryptoKeys}.
   * @param {string} request.cryptoKeyId
   *   Required. It must be unique within a KeyRing and match the regular
   *   expression `[a-zA-Z0-9_-]{1,63}`
   * @param {google.cloud.kms.v1.CryptoKey} request.cryptoKey
   *   Required. A {@link google.cloud.kms.v1.CryptoKey|CryptoKey} with initial field values.
   * @param {boolean} request.skipInitialVersionCreation
   *   If set to true, the request will create a {@link google.cloud.kms.v1.CryptoKey|CryptoKey} without any
   *   {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersions}. You must manually call
   *   {@link google.cloud.kms.v1.KeyManagementService.CreateCryptoKeyVersion|CreateCryptoKeyVersion} or
   *   {@link google.cloud.kms.v1.KeyManagementService.ImportCryptoKeyVersion|ImportCryptoKeyVersion}
   *   before you can use this {@link google.cloud.kms.v1.CryptoKey|CryptoKey}.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [CryptoKey]{@link google.cloud.kms.v1.CryptoKey}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  createCryptoKey(
    request: protos.google.cloud.kms.v1.ICreateCryptoKeyRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.cloud.kms.v1.ICryptoKey,
          protos.google.cloud.kms.v1.ICreateCryptoKeyRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.kms.v1.ICryptoKey,
      protos.google.cloud.kms.v1.ICreateCryptoKeyRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.kms.v1.ICryptoKey,
      protos.google.cloud.kms.v1.ICreateCryptoKeyRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.createCryptoKey(request, options, callback);
  }
  createCryptoKeyVersion(
    request: protos.google.cloud.kms.v1.ICreateCryptoKeyVersionRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.cloud.kms.v1.ICryptoKeyVersion,
      protos.google.cloud.kms.v1.ICreateCryptoKeyVersionRequest | undefined,
      {} | undefined
    ]
  >;
  createCryptoKeyVersion(
    request: protos.google.cloud.kms.v1.ICreateCryptoKeyVersionRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.cloud.kms.v1.ICryptoKeyVersion,
      | protos.google.cloud.kms.v1.ICreateCryptoKeyVersionRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createCryptoKeyVersion(
    request: protos.google.cloud.kms.v1.ICreateCryptoKeyVersionRequest,
    callback: Callback<
      protos.google.cloud.kms.v1.ICryptoKeyVersion,
      | protos.google.cloud.kms.v1.ICreateCryptoKeyVersionRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Create a new {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion} in a {@link google.cloud.kms.v1.CryptoKey|CryptoKey}.
   *
   * The server will assign the next sequential id. If unset,
   * {@link google.cloud.kms.v1.CryptoKeyVersion.state|state} will be set to
   * {@link google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.ENABLED|ENABLED}.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The {@link google.cloud.kms.v1.CryptoKey.name|name} of the {@link google.cloud.kms.v1.CryptoKey|CryptoKey} associated with
   *   the {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersions}.
   * @param {google.cloud.kms.v1.CryptoKeyVersion} request.cryptoKeyVersion
   *   Required. A {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion} with initial field values.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [CryptoKeyVersion]{@link google.cloud.kms.v1.CryptoKeyVersion}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  createCryptoKeyVersion(
    request: protos.google.cloud.kms.v1.ICreateCryptoKeyVersionRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.cloud.kms.v1.ICryptoKeyVersion,
          | protos.google.cloud.kms.v1.ICreateCryptoKeyVersionRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.kms.v1.ICryptoKeyVersion,
      | protos.google.cloud.kms.v1.ICreateCryptoKeyVersionRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.kms.v1.ICryptoKeyVersion,
      protos.google.cloud.kms.v1.ICreateCryptoKeyVersionRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.createCryptoKeyVersion(
      request,
      options,
      callback
    );
  }
  importCryptoKeyVersion(
    request: protos.google.cloud.kms.v1.IImportCryptoKeyVersionRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.cloud.kms.v1.ICryptoKeyVersion,
      protos.google.cloud.kms.v1.IImportCryptoKeyVersionRequest | undefined,
      {} | undefined
    ]
  >;
  importCryptoKeyVersion(
    request: protos.google.cloud.kms.v1.IImportCryptoKeyVersionRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.cloud.kms.v1.ICryptoKeyVersion,
      | protos.google.cloud.kms.v1.IImportCryptoKeyVersionRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  importCryptoKeyVersion(
    request: protos.google.cloud.kms.v1.IImportCryptoKeyVersionRequest,
    callback: Callback<
      protos.google.cloud.kms.v1.ICryptoKeyVersion,
      | protos.google.cloud.kms.v1.IImportCryptoKeyVersionRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Imports a new {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion} into an existing {@link google.cloud.kms.v1.CryptoKey|CryptoKey} using the
   * wrapped key material provided in the request.
   *
   * The version ID will be assigned the next sequential id within the
   * {@link google.cloud.kms.v1.CryptoKey|CryptoKey}.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The {@link google.cloud.kms.v1.CryptoKey.name|name} of the {@link google.cloud.kms.v1.CryptoKey|CryptoKey} to
   *   be imported into.
   * @param {google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionAlgorithm} request.algorithm
   *   Required. The {@link google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionAlgorithm|algorithm} of
   *   the key being imported. This does not need to match the
   *   {@link google.cloud.kms.v1.CryptoKey.version_template|version_template} of the {@link google.cloud.kms.v1.CryptoKey|CryptoKey} this
   *   version imports into.
   * @param {string} request.importJob
   *   Required. The {@link google.cloud.kms.v1.ImportJob.name|name} of the {@link google.cloud.kms.v1.ImportJob|ImportJob} that was used to
   *   wrap this key material.
   * @param {Buffer} request.rsaAesWrappedKey
   *   Wrapped key material produced with
   *   {@link google.cloud.kms.v1.ImportJob.ImportMethod.RSA_OAEP_3072_SHA1_AES_256|RSA_OAEP_3072_SHA1_AES_256}
   *   or
   *   {@link google.cloud.kms.v1.ImportJob.ImportMethod.RSA_OAEP_4096_SHA1_AES_256|RSA_OAEP_4096_SHA1_AES_256}.
   *
   *   This field contains the concatenation of two wrapped keys:
   *   <ol>
   *     <li>An ephemeral AES-256 wrapping key wrapped with the
   *         {@link google.cloud.kms.v1.ImportJob.public_key|public_key} using RSAES-OAEP with SHA-1,
   *         MGF1 with SHA-1, and an empty label.
   *     </li>
   *     <li>The key to be imported, wrapped with the ephemeral AES-256 key
   *         using AES-KWP (RFC 5649).
   *     </li>
   *   </ol>
   *
   *   If importing symmetric key material, it is expected that the unwrapped
   *   key contains plain bytes. If importing asymmetric key material, it is
   *   expected that the unwrapped key is in PKCS#8-encoded DER format (the
   *   PrivateKeyInfo structure from RFC 5208).
   *
   *   This format is the same as the format produced by PKCS#11 mechanism
   *   CKM_RSA_AES_KEY_WRAP.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [CryptoKeyVersion]{@link google.cloud.kms.v1.CryptoKeyVersion}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  importCryptoKeyVersion(
    request: protos.google.cloud.kms.v1.IImportCryptoKeyVersionRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.cloud.kms.v1.ICryptoKeyVersion,
          | protos.google.cloud.kms.v1.IImportCryptoKeyVersionRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.kms.v1.ICryptoKeyVersion,
      | protos.google.cloud.kms.v1.IImportCryptoKeyVersionRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.kms.v1.ICryptoKeyVersion,
      protos.google.cloud.kms.v1.IImportCryptoKeyVersionRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.importCryptoKeyVersion(
      request,
      options,
      callback
    );
  }
  createImportJob(
    request: protos.google.cloud.kms.v1.ICreateImportJobRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.cloud.kms.v1.IImportJob,
      protos.google.cloud.kms.v1.ICreateImportJobRequest | undefined,
      {} | undefined
    ]
  >;
  createImportJob(
    request: protos.google.cloud.kms.v1.ICreateImportJobRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.cloud.kms.v1.IImportJob,
      protos.google.cloud.kms.v1.ICreateImportJobRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  createImportJob(
    request: protos.google.cloud.kms.v1.ICreateImportJobRequest,
    callback: Callback<
      protos.google.cloud.kms.v1.IImportJob,
      protos.google.cloud.kms.v1.ICreateImportJobRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Create a new {@link google.cloud.kms.v1.ImportJob|ImportJob} within a {@link google.cloud.kms.v1.KeyRing|KeyRing}.
   *
   * {@link google.cloud.kms.v1.ImportJob.import_method|ImportJob.import_method} is required.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The {@link google.cloud.kms.v1.KeyRing.name|name} of the {@link google.cloud.kms.v1.KeyRing|KeyRing} associated with the
   *   {@link google.cloud.kms.v1.ImportJob|ImportJobs}.
   * @param {string} request.importJobId
   *   Required. It must be unique within a KeyRing and match the regular
   *   expression `[a-zA-Z0-9_-]{1,63}`
   * @param {google.cloud.kms.v1.ImportJob} request.importJob
   *   Required. An {@link google.cloud.kms.v1.ImportJob|ImportJob} with initial field values.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [ImportJob]{@link google.cloud.kms.v1.ImportJob}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  createImportJob(
    request: protos.google.cloud.kms.v1.ICreateImportJobRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.cloud.kms.v1.IImportJob,
          protos.google.cloud.kms.v1.ICreateImportJobRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.kms.v1.IImportJob,
      protos.google.cloud.kms.v1.ICreateImportJobRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.kms.v1.IImportJob,
      protos.google.cloud.kms.v1.ICreateImportJobRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.createImportJob(request, options, callback);
  }
  updateCryptoKey(
    request: protos.google.cloud.kms.v1.IUpdateCryptoKeyRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.cloud.kms.v1.ICryptoKey,
      protos.google.cloud.kms.v1.IUpdateCryptoKeyRequest | undefined,
      {} | undefined
    ]
  >;
  updateCryptoKey(
    request: protos.google.cloud.kms.v1.IUpdateCryptoKeyRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.cloud.kms.v1.ICryptoKey,
      protos.google.cloud.kms.v1.IUpdateCryptoKeyRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateCryptoKey(
    request: protos.google.cloud.kms.v1.IUpdateCryptoKeyRequest,
    callback: Callback<
      protos.google.cloud.kms.v1.ICryptoKey,
      protos.google.cloud.kms.v1.IUpdateCryptoKeyRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Update a {@link google.cloud.kms.v1.CryptoKey|CryptoKey}.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.kms.v1.CryptoKey} request.cryptoKey
   *   Required. {@link google.cloud.kms.v1.CryptoKey|CryptoKey} with updated values.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   Required. List of fields to be updated in this request.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [CryptoKey]{@link google.cloud.kms.v1.CryptoKey}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  updateCryptoKey(
    request: protos.google.cloud.kms.v1.IUpdateCryptoKeyRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.cloud.kms.v1.ICryptoKey,
          protos.google.cloud.kms.v1.IUpdateCryptoKeyRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.kms.v1.ICryptoKey,
      protos.google.cloud.kms.v1.IUpdateCryptoKeyRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.kms.v1.ICryptoKey,
      protos.google.cloud.kms.v1.IUpdateCryptoKeyRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'crypto_key.name': request.cryptoKey!.name || '',
    });
    this.initialize();
    return this.innerApiCalls.updateCryptoKey(request, options, callback);
  }
  updateCryptoKeyVersion(
    request: protos.google.cloud.kms.v1.IUpdateCryptoKeyVersionRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.cloud.kms.v1.ICryptoKeyVersion,
      protos.google.cloud.kms.v1.IUpdateCryptoKeyVersionRequest | undefined,
      {} | undefined
    ]
  >;
  updateCryptoKeyVersion(
    request: protos.google.cloud.kms.v1.IUpdateCryptoKeyVersionRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.cloud.kms.v1.ICryptoKeyVersion,
      | protos.google.cloud.kms.v1.IUpdateCryptoKeyVersionRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateCryptoKeyVersion(
    request: protos.google.cloud.kms.v1.IUpdateCryptoKeyVersionRequest,
    callback: Callback<
      protos.google.cloud.kms.v1.ICryptoKeyVersion,
      | protos.google.cloud.kms.v1.IUpdateCryptoKeyVersionRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Update a {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion}'s metadata.
   *
   * {@link google.cloud.kms.v1.CryptoKeyVersion.state|state} may be changed between
   * {@link google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.ENABLED|ENABLED} and
   * {@link google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.DISABLED|DISABLED} using this
   * method. See {@link google.cloud.kms.v1.KeyManagementService.DestroyCryptoKeyVersion|DestroyCryptoKeyVersion} and {@link google.cloud.kms.v1.KeyManagementService.RestoreCryptoKeyVersion|RestoreCryptoKeyVersion} to
   * move between other states.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.kms.v1.CryptoKeyVersion} request.cryptoKeyVersion
   *   Required. {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion} with updated values.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   Required. List of fields to be updated in this request.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [CryptoKeyVersion]{@link google.cloud.kms.v1.CryptoKeyVersion}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  updateCryptoKeyVersion(
    request: protos.google.cloud.kms.v1.IUpdateCryptoKeyVersionRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.cloud.kms.v1.ICryptoKeyVersion,
          | protos.google.cloud.kms.v1.IUpdateCryptoKeyVersionRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.kms.v1.ICryptoKeyVersion,
      | protos.google.cloud.kms.v1.IUpdateCryptoKeyVersionRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.kms.v1.ICryptoKeyVersion,
      protos.google.cloud.kms.v1.IUpdateCryptoKeyVersionRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'crypto_key_version.name': request.cryptoKeyVersion!.name || '',
    });
    this.initialize();
    return this.innerApiCalls.updateCryptoKeyVersion(
      request,
      options,
      callback
    );
  }
  encrypt(
    request: protos.google.cloud.kms.v1.IEncryptRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.cloud.kms.v1.IEncryptResponse,
      protos.google.cloud.kms.v1.IEncryptRequest | undefined,
      {} | undefined
    ]
  >;
  encrypt(
    request: protos.google.cloud.kms.v1.IEncryptRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.cloud.kms.v1.IEncryptResponse,
      protos.google.cloud.kms.v1.IEncryptRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  encrypt(
    request: protos.google.cloud.kms.v1.IEncryptRequest,
    callback: Callback<
      protos.google.cloud.kms.v1.IEncryptResponse,
      protos.google.cloud.kms.v1.IEncryptRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Encrypts data, so that it can only be recovered by a call to {@link google.cloud.kms.v1.KeyManagementService.Decrypt|Decrypt}.
   * The {@link google.cloud.kms.v1.CryptoKey.purpose|CryptoKey.purpose} must be
   * {@link google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose.ENCRYPT_DECRYPT|ENCRYPT_DECRYPT}.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the {@link google.cloud.kms.v1.CryptoKey|CryptoKey} or {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion}
   *   to use for encryption.
   *
   *   If a {@link google.cloud.kms.v1.CryptoKey|CryptoKey} is specified, the server will use its
   *   {@link google.cloud.kms.v1.CryptoKey.primary|primary version}.
   * @param {Buffer} request.plaintext
   *   Required. The data to encrypt. Must be no larger than 64KiB.
   *
   *   The maximum size depends on the key version's
   *   {@link google.cloud.kms.v1.CryptoKeyVersionTemplate.protection_level|protection_level}. For
   *   {@link google.cloud.kms.v1.ProtectionLevel.SOFTWARE|SOFTWARE} keys, the plaintext must be no larger
   *   than 64KiB. For {@link google.cloud.kms.v1.ProtectionLevel.HSM|HSM} keys, the combined length of the
   *   plaintext and additional_authenticated_data fields must be no larger than
   *   8KiB.
   * @param {Buffer} [request.additionalAuthenticatedData]
   *   Optional. Optional data that, if specified, must also be provided during decryption
   *   through {@link google.cloud.kms.v1.DecryptRequest.additional_authenticated_data|DecryptRequest.additional_authenticated_data}.
   *
   *   The maximum size depends on the key version's
   *   {@link google.cloud.kms.v1.CryptoKeyVersionTemplate.protection_level|protection_level}. For
   *   {@link google.cloud.kms.v1.ProtectionLevel.SOFTWARE|SOFTWARE} keys, the AAD must be no larger than
   *   64KiB. For {@link google.cloud.kms.v1.ProtectionLevel.HSM|HSM} keys, the combined length of the
   *   plaintext and additional_authenticated_data fields must be no larger than
   *   8KiB.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [EncryptResponse]{@link google.cloud.kms.v1.EncryptResponse}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  encrypt(
    request: protos.google.cloud.kms.v1.IEncryptRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.cloud.kms.v1.IEncryptResponse,
          protos.google.cloud.kms.v1.IEncryptRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.kms.v1.IEncryptResponse,
      protos.google.cloud.kms.v1.IEncryptRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.kms.v1.IEncryptResponse,
      protos.google.cloud.kms.v1.IEncryptRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.encrypt(request, options, callback);
  }
  decrypt(
    request: protos.google.cloud.kms.v1.IDecryptRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.cloud.kms.v1.IDecryptResponse,
      protos.google.cloud.kms.v1.IDecryptRequest | undefined,
      {} | undefined
    ]
  >;
  decrypt(
    request: protos.google.cloud.kms.v1.IDecryptRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.cloud.kms.v1.IDecryptResponse,
      protos.google.cloud.kms.v1.IDecryptRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  decrypt(
    request: protos.google.cloud.kms.v1.IDecryptRequest,
    callback: Callback<
      protos.google.cloud.kms.v1.IDecryptResponse,
      protos.google.cloud.kms.v1.IDecryptRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Decrypts data that was protected by {@link google.cloud.kms.v1.KeyManagementService.Encrypt|Encrypt}. The {@link google.cloud.kms.v1.CryptoKey.purpose|CryptoKey.purpose}
   * must be {@link google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose.ENCRYPT_DECRYPT|ENCRYPT_DECRYPT}.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the {@link google.cloud.kms.v1.CryptoKey|CryptoKey} to use for decryption.
   *   The server will choose the appropriate version.
   * @param {Buffer} request.ciphertext
   *   Required. The encrypted data originally returned in
   *   {@link google.cloud.kms.v1.EncryptResponse.ciphertext|EncryptResponse.ciphertext}.
   * @param {Buffer} [request.additionalAuthenticatedData]
   *   Optional. Optional data that must match the data originally supplied in
   *   {@link google.cloud.kms.v1.EncryptRequest.additional_authenticated_data|EncryptRequest.additional_authenticated_data}.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [DecryptResponse]{@link google.cloud.kms.v1.DecryptResponse}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  decrypt(
    request: protos.google.cloud.kms.v1.IDecryptRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.cloud.kms.v1.IDecryptResponse,
          protos.google.cloud.kms.v1.IDecryptRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.kms.v1.IDecryptResponse,
      protos.google.cloud.kms.v1.IDecryptRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.kms.v1.IDecryptResponse,
      protos.google.cloud.kms.v1.IDecryptRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.decrypt(request, options, callback);
  }
  asymmetricSign(
    request: protos.google.cloud.kms.v1.IAsymmetricSignRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.cloud.kms.v1.IAsymmetricSignResponse,
      protos.google.cloud.kms.v1.IAsymmetricSignRequest | undefined,
      {} | undefined
    ]
  >;
  asymmetricSign(
    request: protos.google.cloud.kms.v1.IAsymmetricSignRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.cloud.kms.v1.IAsymmetricSignResponse,
      protos.google.cloud.kms.v1.IAsymmetricSignRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  asymmetricSign(
    request: protos.google.cloud.kms.v1.IAsymmetricSignRequest,
    callback: Callback<
      protos.google.cloud.kms.v1.IAsymmetricSignResponse,
      protos.google.cloud.kms.v1.IAsymmetricSignRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Signs data using a {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion} with {@link google.cloud.kms.v1.CryptoKey.purpose|CryptoKey.purpose}
   * ASYMMETRIC_SIGN, producing a signature that can be verified with the public
   * key retrieved from {@link google.cloud.kms.v1.KeyManagementService.GetPublicKey|GetPublicKey}.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion} to use for signing.
   * @param {google.cloud.kms.v1.Digest} request.digest
   *   Required. The digest of the data to sign. The digest must be produced with
   *   the same digest algorithm as specified by the key version's
   *   {@link google.cloud.kms.v1.CryptoKeyVersion.algorithm|algorithm}.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [AsymmetricSignResponse]{@link google.cloud.kms.v1.AsymmetricSignResponse}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  asymmetricSign(
    request: protos.google.cloud.kms.v1.IAsymmetricSignRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.cloud.kms.v1.IAsymmetricSignResponse,
          protos.google.cloud.kms.v1.IAsymmetricSignRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.kms.v1.IAsymmetricSignResponse,
      protos.google.cloud.kms.v1.IAsymmetricSignRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.kms.v1.IAsymmetricSignResponse,
      protos.google.cloud.kms.v1.IAsymmetricSignRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.asymmetricSign(request, options, callback);
  }
  asymmetricDecrypt(
    request: protos.google.cloud.kms.v1.IAsymmetricDecryptRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.cloud.kms.v1.IAsymmetricDecryptResponse,
      protos.google.cloud.kms.v1.IAsymmetricDecryptRequest | undefined,
      {} | undefined
    ]
  >;
  asymmetricDecrypt(
    request: protos.google.cloud.kms.v1.IAsymmetricDecryptRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.cloud.kms.v1.IAsymmetricDecryptResponse,
      protos.google.cloud.kms.v1.IAsymmetricDecryptRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  asymmetricDecrypt(
    request: protos.google.cloud.kms.v1.IAsymmetricDecryptRequest,
    callback: Callback<
      protos.google.cloud.kms.v1.IAsymmetricDecryptResponse,
      protos.google.cloud.kms.v1.IAsymmetricDecryptRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Decrypts data that was encrypted with a public key retrieved from
   * {@link google.cloud.kms.v1.KeyManagementService.GetPublicKey|GetPublicKey} corresponding to a {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion} with
   * {@link google.cloud.kms.v1.CryptoKey.purpose|CryptoKey.purpose} ASYMMETRIC_DECRYPT.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion} to use for
   *   decryption.
   * @param {Buffer} request.ciphertext
   *   Required. The data encrypted with the named {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion}'s public
   *   key using OAEP.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [AsymmetricDecryptResponse]{@link google.cloud.kms.v1.AsymmetricDecryptResponse}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  asymmetricDecrypt(
    request: protos.google.cloud.kms.v1.IAsymmetricDecryptRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.cloud.kms.v1.IAsymmetricDecryptResponse,
          | protos.google.cloud.kms.v1.IAsymmetricDecryptRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.kms.v1.IAsymmetricDecryptResponse,
      protos.google.cloud.kms.v1.IAsymmetricDecryptRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.kms.v1.IAsymmetricDecryptResponse,
      protos.google.cloud.kms.v1.IAsymmetricDecryptRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.asymmetricDecrypt(request, options, callback);
  }
  updateCryptoKeyPrimaryVersion(
    request: protos.google.cloud.kms.v1.IUpdateCryptoKeyPrimaryVersionRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.cloud.kms.v1.ICryptoKey,
      (
        | protos.google.cloud.kms.v1.IUpdateCryptoKeyPrimaryVersionRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  updateCryptoKeyPrimaryVersion(
    request: protos.google.cloud.kms.v1.IUpdateCryptoKeyPrimaryVersionRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.cloud.kms.v1.ICryptoKey,
      | protos.google.cloud.kms.v1.IUpdateCryptoKeyPrimaryVersionRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateCryptoKeyPrimaryVersion(
    request: protos.google.cloud.kms.v1.IUpdateCryptoKeyPrimaryVersionRequest,
    callback: Callback<
      protos.google.cloud.kms.v1.ICryptoKey,
      | protos.google.cloud.kms.v1.IUpdateCryptoKeyPrimaryVersionRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Update the version of a {@link google.cloud.kms.v1.CryptoKey|CryptoKey} that will be used in {@link google.cloud.kms.v1.KeyManagementService.Encrypt|Encrypt}.
   *
   * Returns an error if called on an asymmetric key.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the {@link google.cloud.kms.v1.CryptoKey|CryptoKey} to update.
   * @param {string} request.cryptoKeyVersionId
   *   Required. The id of the child {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion} to use as primary.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [CryptoKey]{@link google.cloud.kms.v1.CryptoKey}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  updateCryptoKeyPrimaryVersion(
    request: protos.google.cloud.kms.v1.IUpdateCryptoKeyPrimaryVersionRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.cloud.kms.v1.ICryptoKey,
          | protos.google.cloud.kms.v1.IUpdateCryptoKeyPrimaryVersionRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.kms.v1.ICryptoKey,
      | protos.google.cloud.kms.v1.IUpdateCryptoKeyPrimaryVersionRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.kms.v1.ICryptoKey,
      (
        | protos.google.cloud.kms.v1.IUpdateCryptoKeyPrimaryVersionRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.updateCryptoKeyPrimaryVersion(
      request,
      options,
      callback
    );
  }
  destroyCryptoKeyVersion(
    request: protos.google.cloud.kms.v1.IDestroyCryptoKeyVersionRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.cloud.kms.v1.ICryptoKeyVersion,
      protos.google.cloud.kms.v1.IDestroyCryptoKeyVersionRequest | undefined,
      {} | undefined
    ]
  >;
  destroyCryptoKeyVersion(
    request: protos.google.cloud.kms.v1.IDestroyCryptoKeyVersionRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.cloud.kms.v1.ICryptoKeyVersion,
      | protos.google.cloud.kms.v1.IDestroyCryptoKeyVersionRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  destroyCryptoKeyVersion(
    request: protos.google.cloud.kms.v1.IDestroyCryptoKeyVersionRequest,
    callback: Callback<
      protos.google.cloud.kms.v1.ICryptoKeyVersion,
      | protos.google.cloud.kms.v1.IDestroyCryptoKeyVersionRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Schedule a {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion} for destruction.
   *
   * Upon calling this method, {@link google.cloud.kms.v1.CryptoKeyVersion.state|CryptoKeyVersion.state} will be set to
   * {@link google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.DESTROY_SCHEDULED|DESTROY_SCHEDULED}
   * and {@link google.cloud.kms.v1.CryptoKeyVersion.destroy_time|destroy_time} will be set to a time 24
   * hours in the future, at which point the {@link google.cloud.kms.v1.CryptoKeyVersion.state|state}
   * will be changed to
   * {@link google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.DESTROYED|DESTROYED}, and the key
   * material will be irrevocably destroyed.
   *
   * Before the {@link google.cloud.kms.v1.CryptoKeyVersion.destroy_time|destroy_time} is reached,
   * {@link google.cloud.kms.v1.KeyManagementService.RestoreCryptoKeyVersion|RestoreCryptoKeyVersion} may be called to reverse the process.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion} to destroy.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [CryptoKeyVersion]{@link google.cloud.kms.v1.CryptoKeyVersion}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  destroyCryptoKeyVersion(
    request: protos.google.cloud.kms.v1.IDestroyCryptoKeyVersionRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.cloud.kms.v1.ICryptoKeyVersion,
          | protos.google.cloud.kms.v1.IDestroyCryptoKeyVersionRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.kms.v1.ICryptoKeyVersion,
      | protos.google.cloud.kms.v1.IDestroyCryptoKeyVersionRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.kms.v1.ICryptoKeyVersion,
      protos.google.cloud.kms.v1.IDestroyCryptoKeyVersionRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.destroyCryptoKeyVersion(
      request,
      options,
      callback
    );
  }
  restoreCryptoKeyVersion(
    request: protos.google.cloud.kms.v1.IRestoreCryptoKeyVersionRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.cloud.kms.v1.ICryptoKeyVersion,
      protos.google.cloud.kms.v1.IRestoreCryptoKeyVersionRequest | undefined,
      {} | undefined
    ]
  >;
  restoreCryptoKeyVersion(
    request: protos.google.cloud.kms.v1.IRestoreCryptoKeyVersionRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.cloud.kms.v1.ICryptoKeyVersion,
      | protos.google.cloud.kms.v1.IRestoreCryptoKeyVersionRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  restoreCryptoKeyVersion(
    request: protos.google.cloud.kms.v1.IRestoreCryptoKeyVersionRequest,
    callback: Callback<
      protos.google.cloud.kms.v1.ICryptoKeyVersion,
      | protos.google.cloud.kms.v1.IRestoreCryptoKeyVersionRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Restore a {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion} in the
   * {@link google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.DESTROY_SCHEDULED|DESTROY_SCHEDULED}
   * state.
   *
   * Upon restoration of the CryptoKeyVersion, {@link google.cloud.kms.v1.CryptoKeyVersion.state|state}
   * will be set to {@link google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.DISABLED|DISABLED},
   * and {@link google.cloud.kms.v1.CryptoKeyVersion.destroy_time|destroy_time} will be cleared.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion} to restore.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [CryptoKeyVersion]{@link google.cloud.kms.v1.CryptoKeyVersion}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  restoreCryptoKeyVersion(
    request: protos.google.cloud.kms.v1.IRestoreCryptoKeyVersionRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.cloud.kms.v1.ICryptoKeyVersion,
          | protos.google.cloud.kms.v1.IRestoreCryptoKeyVersionRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.kms.v1.ICryptoKeyVersion,
      | protos.google.cloud.kms.v1.IRestoreCryptoKeyVersionRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.kms.v1.ICryptoKeyVersion,
      protos.google.cloud.kms.v1.IRestoreCryptoKeyVersionRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.restoreCryptoKeyVersion(
      request,
      options,
      callback
    );
  }

  listKeyRings(
    request: protos.google.cloud.kms.v1.IListKeyRingsRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.cloud.kms.v1.IKeyRing[],
      protos.google.cloud.kms.v1.IListKeyRingsRequest | null,
      protos.google.cloud.kms.v1.IListKeyRingsResponse
    ]
  >;
  listKeyRings(
    request: protos.google.cloud.kms.v1.IListKeyRingsRequest,
    options: gax.CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.kms.v1.IListKeyRingsRequest,
      protos.google.cloud.kms.v1.IListKeyRingsResponse | null | undefined,
      protos.google.cloud.kms.v1.IKeyRing
    >
  ): void;
  listKeyRings(
    request: protos.google.cloud.kms.v1.IListKeyRingsRequest,
    callback: PaginationCallback<
      protos.google.cloud.kms.v1.IListKeyRingsRequest,
      protos.google.cloud.kms.v1.IListKeyRingsResponse | null | undefined,
      protos.google.cloud.kms.v1.IKeyRing
    >
  ): void;
  /**
   * Lists {@link google.cloud.kms.v1.KeyRing|KeyRings}.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the location associated with the
   *   {@link google.cloud.kms.v1.KeyRing|KeyRings}, in the format `projects/* /locations/*`.
   * @param {number} [request.pageSize]
   *   Optional. Optional limit on the number of {@link google.cloud.kms.v1.KeyRing|KeyRings} to include in the
   *   response.  Further {@link google.cloud.kms.v1.KeyRing|KeyRings} can subsequently be obtained by
   *   including the {@link google.cloud.kms.v1.ListKeyRingsResponse.next_page_token|ListKeyRingsResponse.next_page_token} in a subsequent
   *   request.  If unspecified, the server will pick an appropriate default.
   * @param {string} [request.pageToken]
   *   Optional. Optional pagination token, returned earlier via
   *   {@link google.cloud.kms.v1.ListKeyRingsResponse.next_page_token|ListKeyRingsResponse.next_page_token}.
   * @param {string} [request.filter]
   *   Optional. Only include resources that match the filter in the response. For
   *   more information, see
   *   [Sorting and filtering list
   *   results](https://cloud.google.com/kms/docs/sorting-and-filtering).
   * @param {string} [request.orderBy]
   *   Optional. Specify how the results should be sorted. If not specified, the
   *   results will be sorted in the default order.  For more information, see
   *   [Sorting and filtering list
   *   results](https://cloud.google.com/kms/docs/sorting-and-filtering).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [KeyRing]{@link google.cloud.kms.v1.KeyRing}.
   *   The client library support auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *
   *   When autoPaginate: false is specified through options, the array has three elements.
   *   The first element is Array of [KeyRing]{@link google.cloud.kms.v1.KeyRing} that corresponds to
   *   the one page received from the API server.
   *   If the second element is not null it contains the request object of type [ListKeyRingsRequest]{@link google.cloud.kms.v1.ListKeyRingsRequest}
   *   that can be used to obtain the next page of the results.
   *   If it is null, the next page does not exist.
   *   The third element contains the raw response received from the API server. Its type is
   *   [ListKeyRingsResponse]{@link google.cloud.kms.v1.ListKeyRingsResponse}.
   *
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  listKeyRings(
    request: protos.google.cloud.kms.v1.IListKeyRingsRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | PaginationCallback<
          protos.google.cloud.kms.v1.IListKeyRingsRequest,
          protos.google.cloud.kms.v1.IListKeyRingsResponse | null | undefined,
          protos.google.cloud.kms.v1.IKeyRing
        >,
    callback?: PaginationCallback<
      protos.google.cloud.kms.v1.IListKeyRingsRequest,
      protos.google.cloud.kms.v1.IListKeyRingsResponse | null | undefined,
      protos.google.cloud.kms.v1.IKeyRing
    >
  ): Promise<
    [
      protos.google.cloud.kms.v1.IKeyRing[],
      protos.google.cloud.kms.v1.IListKeyRingsRequest | null,
      protos.google.cloud.kms.v1.IListKeyRingsResponse
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.listKeyRings(request, options, callback);
  }

  /**
   * Equivalent to {@link listKeyRings}, but returns a NodeJS Stream object.
   *
   * This fetches the paged responses for {@link listKeyRings} continuously
   * and invokes the callback registered for 'data' event for each element in the
   * responses.
   *
   * The returned object has 'end' method when no more elements are required.
   *
   * autoPaginate option will be ignored.
   *
   * @see {@link https://nodejs.org/api/stream.html}
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the location associated with the
   *   {@link google.cloud.kms.v1.KeyRing|KeyRings}, in the format `projects/* /locations/*`.
   * @param {number} [request.pageSize]
   *   Optional. Optional limit on the number of {@link google.cloud.kms.v1.KeyRing|KeyRings} to include in the
   *   response.  Further {@link google.cloud.kms.v1.KeyRing|KeyRings} can subsequently be obtained by
   *   including the {@link google.cloud.kms.v1.ListKeyRingsResponse.next_page_token|ListKeyRingsResponse.next_page_token} in a subsequent
   *   request.  If unspecified, the server will pick an appropriate default.
   * @param {string} [request.pageToken]
   *   Optional. Optional pagination token, returned earlier via
   *   {@link google.cloud.kms.v1.ListKeyRingsResponse.next_page_token|ListKeyRingsResponse.next_page_token}.
   * @param {string} [request.filter]
   *   Optional. Only include resources that match the filter in the response. For
   *   more information, see
   *   [Sorting and filtering list
   *   results](https://cloud.google.com/kms/docs/sorting-and-filtering).
   * @param {string} [request.orderBy]
   *   Optional. Specify how the results should be sorted. If not specified, the
   *   results will be sorted in the default order.  For more information, see
   *   [Sorting and filtering list
   *   results](https://cloud.google.com/kms/docs/sorting-and-filtering).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [KeyRing]{@link google.cloud.kms.v1.KeyRing} on 'data' event.
   */
  listKeyRingsStream(
    request?: protos.google.cloud.kms.v1.IListKeyRingsRequest,
    options?: gax.CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.listKeyRings.createStream(
      this.innerApiCalls.listKeyRings as gax.GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to {@link listKeyRings}, but returns an iterable object.
   *
   * for-await-of syntax is used with the iterable to recursively get response element on-demand.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the location associated with the
   *   {@link google.cloud.kms.v1.KeyRing|KeyRings}, in the format `projects/* /locations/*`.
   * @param {number} [request.pageSize]
   *   Optional. Optional limit on the number of {@link google.cloud.kms.v1.KeyRing|KeyRings} to include in the
   *   response.  Further {@link google.cloud.kms.v1.KeyRing|KeyRings} can subsequently be obtained by
   *   including the {@link google.cloud.kms.v1.ListKeyRingsResponse.next_page_token|ListKeyRingsResponse.next_page_token} in a subsequent
   *   request.  If unspecified, the server will pick an appropriate default.
   * @param {string} [request.pageToken]
   *   Optional. Optional pagination token, returned earlier via
   *   {@link google.cloud.kms.v1.ListKeyRingsResponse.next_page_token|ListKeyRingsResponse.next_page_token}.
   * @param {string} [request.filter]
   *   Optional. Only include resources that match the filter in the response. For
   *   more information, see
   *   [Sorting and filtering list
   *   results](https://cloud.google.com/kms/docs/sorting-and-filtering).
   * @param {string} [request.orderBy]
   *   Optional. Specify how the results should be sorted. If not specified, the
   *   results will be sorted in the default order.  For more information, see
   *   [Sorting and filtering list
   *   results](https://cloud.google.com/kms/docs/sorting-and-filtering).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that conforms to @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols.
   */
  listKeyRingsAsync(
    request?: protos.google.cloud.kms.v1.IListKeyRingsRequest,
    options?: gax.CallOptions
  ): AsyncIterable<protos.google.cloud.kms.v1.IKeyRing> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    options = options || {};
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.listKeyRings.asyncIterate(
      this.innerApiCalls['listKeyRings'] as GaxCall,
      (request as unknown) as RequestType,
      callSettings
    ) as AsyncIterable<protos.google.cloud.kms.v1.IKeyRing>;
  }
  listCryptoKeys(
    request: protos.google.cloud.kms.v1.IListCryptoKeysRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.cloud.kms.v1.ICryptoKey[],
      protos.google.cloud.kms.v1.IListCryptoKeysRequest | null,
      protos.google.cloud.kms.v1.IListCryptoKeysResponse
    ]
  >;
  listCryptoKeys(
    request: protos.google.cloud.kms.v1.IListCryptoKeysRequest,
    options: gax.CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.kms.v1.IListCryptoKeysRequest,
      protos.google.cloud.kms.v1.IListCryptoKeysResponse | null | undefined,
      protos.google.cloud.kms.v1.ICryptoKey
    >
  ): void;
  listCryptoKeys(
    request: protos.google.cloud.kms.v1.IListCryptoKeysRequest,
    callback: PaginationCallback<
      protos.google.cloud.kms.v1.IListCryptoKeysRequest,
      protos.google.cloud.kms.v1.IListCryptoKeysResponse | null | undefined,
      protos.google.cloud.kms.v1.ICryptoKey
    >
  ): void;
  /**
   * Lists {@link google.cloud.kms.v1.CryptoKey|CryptoKeys}.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the {@link google.cloud.kms.v1.KeyRing|KeyRing} to list, in the format
   *   `projects/* /locations/* /keyRings/*`.
   * @param {number} [request.pageSize]
   *   Optional. Optional limit on the number of {@link google.cloud.kms.v1.CryptoKey|CryptoKeys} to include in the
   *   response.  Further {@link google.cloud.kms.v1.CryptoKey|CryptoKeys} can subsequently be obtained by
   *   including the {@link google.cloud.kms.v1.ListCryptoKeysResponse.next_page_token|ListCryptoKeysResponse.next_page_token} in a subsequent
   *   request.  If unspecified, the server will pick an appropriate default.
   * @param {string} [request.pageToken]
   *   Optional. Optional pagination token, returned earlier via
   *   {@link google.cloud.kms.v1.ListCryptoKeysResponse.next_page_token|ListCryptoKeysResponse.next_page_token}.
   * @param {google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionView} request.versionView
   *   The fields of the primary version to include in the response.
   * @param {string} [request.filter]
   *   Optional. Only include resources that match the filter in the response. For
   *   more information, see
   *   [Sorting and filtering list
   *   results](https://cloud.google.com/kms/docs/sorting-and-filtering).
   * @param {string} [request.orderBy]
   *   Optional. Specify how the results should be sorted. If not specified, the
   *   results will be sorted in the default order. For more information, see
   *   [Sorting and filtering list
   *   results](https://cloud.google.com/kms/docs/sorting-and-filtering).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [CryptoKey]{@link google.cloud.kms.v1.CryptoKey}.
   *   The client library support auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *
   *   When autoPaginate: false is specified through options, the array has three elements.
   *   The first element is Array of [CryptoKey]{@link google.cloud.kms.v1.CryptoKey} that corresponds to
   *   the one page received from the API server.
   *   If the second element is not null it contains the request object of type [ListCryptoKeysRequest]{@link google.cloud.kms.v1.ListCryptoKeysRequest}
   *   that can be used to obtain the next page of the results.
   *   If it is null, the next page does not exist.
   *   The third element contains the raw response received from the API server. Its type is
   *   [ListCryptoKeysResponse]{@link google.cloud.kms.v1.ListCryptoKeysResponse}.
   *
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  listCryptoKeys(
    request: protos.google.cloud.kms.v1.IListCryptoKeysRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | PaginationCallback<
          protos.google.cloud.kms.v1.IListCryptoKeysRequest,
          protos.google.cloud.kms.v1.IListCryptoKeysResponse | null | undefined,
          protos.google.cloud.kms.v1.ICryptoKey
        >,
    callback?: PaginationCallback<
      protos.google.cloud.kms.v1.IListCryptoKeysRequest,
      protos.google.cloud.kms.v1.IListCryptoKeysResponse | null | undefined,
      protos.google.cloud.kms.v1.ICryptoKey
    >
  ): Promise<
    [
      protos.google.cloud.kms.v1.ICryptoKey[],
      protos.google.cloud.kms.v1.IListCryptoKeysRequest | null,
      protos.google.cloud.kms.v1.IListCryptoKeysResponse
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.listCryptoKeys(request, options, callback);
  }

  /**
   * Equivalent to {@link listCryptoKeys}, but returns a NodeJS Stream object.
   *
   * This fetches the paged responses for {@link listCryptoKeys} continuously
   * and invokes the callback registered for 'data' event for each element in the
   * responses.
   *
   * The returned object has 'end' method when no more elements are required.
   *
   * autoPaginate option will be ignored.
   *
   * @see {@link https://nodejs.org/api/stream.html}
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the {@link google.cloud.kms.v1.KeyRing|KeyRing} to list, in the format
   *   `projects/* /locations/* /keyRings/*`.
   * @param {number} [request.pageSize]
   *   Optional. Optional limit on the number of {@link google.cloud.kms.v1.CryptoKey|CryptoKeys} to include in the
   *   response.  Further {@link google.cloud.kms.v1.CryptoKey|CryptoKeys} can subsequently be obtained by
   *   including the {@link google.cloud.kms.v1.ListCryptoKeysResponse.next_page_token|ListCryptoKeysResponse.next_page_token} in a subsequent
   *   request.  If unspecified, the server will pick an appropriate default.
   * @param {string} [request.pageToken]
   *   Optional. Optional pagination token, returned earlier via
   *   {@link google.cloud.kms.v1.ListCryptoKeysResponse.next_page_token|ListCryptoKeysResponse.next_page_token}.
   * @param {google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionView} request.versionView
   *   The fields of the primary version to include in the response.
   * @param {string} [request.filter]
   *   Optional. Only include resources that match the filter in the response. For
   *   more information, see
   *   [Sorting and filtering list
   *   results](https://cloud.google.com/kms/docs/sorting-and-filtering).
   * @param {string} [request.orderBy]
   *   Optional. Specify how the results should be sorted. If not specified, the
   *   results will be sorted in the default order. For more information, see
   *   [Sorting and filtering list
   *   results](https://cloud.google.com/kms/docs/sorting-and-filtering).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [CryptoKey]{@link google.cloud.kms.v1.CryptoKey} on 'data' event.
   */
  listCryptoKeysStream(
    request?: protos.google.cloud.kms.v1.IListCryptoKeysRequest,
    options?: gax.CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.listCryptoKeys.createStream(
      this.innerApiCalls.listCryptoKeys as gax.GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to {@link listCryptoKeys}, but returns an iterable object.
   *
   * for-await-of syntax is used with the iterable to recursively get response element on-demand.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the {@link google.cloud.kms.v1.KeyRing|KeyRing} to list, in the format
   *   `projects/* /locations/* /keyRings/*`.
   * @param {number} [request.pageSize]
   *   Optional. Optional limit on the number of {@link google.cloud.kms.v1.CryptoKey|CryptoKeys} to include in the
   *   response.  Further {@link google.cloud.kms.v1.CryptoKey|CryptoKeys} can subsequently be obtained by
   *   including the {@link google.cloud.kms.v1.ListCryptoKeysResponse.next_page_token|ListCryptoKeysResponse.next_page_token} in a subsequent
   *   request.  If unspecified, the server will pick an appropriate default.
   * @param {string} [request.pageToken]
   *   Optional. Optional pagination token, returned earlier via
   *   {@link google.cloud.kms.v1.ListCryptoKeysResponse.next_page_token|ListCryptoKeysResponse.next_page_token}.
   * @param {google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionView} request.versionView
   *   The fields of the primary version to include in the response.
   * @param {string} [request.filter]
   *   Optional. Only include resources that match the filter in the response. For
   *   more information, see
   *   [Sorting and filtering list
   *   results](https://cloud.google.com/kms/docs/sorting-and-filtering).
   * @param {string} [request.orderBy]
   *   Optional. Specify how the results should be sorted. If not specified, the
   *   results will be sorted in the default order. For more information, see
   *   [Sorting and filtering list
   *   results](https://cloud.google.com/kms/docs/sorting-and-filtering).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that conforms to @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols.
   */
  listCryptoKeysAsync(
    request?: protos.google.cloud.kms.v1.IListCryptoKeysRequest,
    options?: gax.CallOptions
  ): AsyncIterable<protos.google.cloud.kms.v1.ICryptoKey> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    options = options || {};
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.listCryptoKeys.asyncIterate(
      this.innerApiCalls['listCryptoKeys'] as GaxCall,
      (request as unknown) as RequestType,
      callSettings
    ) as AsyncIterable<protos.google.cloud.kms.v1.ICryptoKey>;
  }
  listCryptoKeyVersions(
    request: protos.google.cloud.kms.v1.IListCryptoKeyVersionsRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.cloud.kms.v1.ICryptoKeyVersion[],
      protos.google.cloud.kms.v1.IListCryptoKeyVersionsRequest | null,
      protos.google.cloud.kms.v1.IListCryptoKeyVersionsResponse
    ]
  >;
  listCryptoKeyVersions(
    request: protos.google.cloud.kms.v1.IListCryptoKeyVersionsRequest,
    options: gax.CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.kms.v1.IListCryptoKeyVersionsRequest,
      | protos.google.cloud.kms.v1.IListCryptoKeyVersionsResponse
      | null
      | undefined,
      protos.google.cloud.kms.v1.ICryptoKeyVersion
    >
  ): void;
  listCryptoKeyVersions(
    request: protos.google.cloud.kms.v1.IListCryptoKeyVersionsRequest,
    callback: PaginationCallback<
      protos.google.cloud.kms.v1.IListCryptoKeyVersionsRequest,
      | protos.google.cloud.kms.v1.IListCryptoKeyVersionsResponse
      | null
      | undefined,
      protos.google.cloud.kms.v1.ICryptoKeyVersion
    >
  ): void;
  /**
   * Lists {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersions}.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the {@link google.cloud.kms.v1.CryptoKey|CryptoKey} to list, in the format
   *   `projects/* /locations/* /keyRings/* /cryptoKeys/*`.
   * @param {number} [request.pageSize]
   *   Optional. Optional limit on the number of {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersions} to
   *   include in the response. Further {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersions} can
   *   subsequently be obtained by including the
   *   {@link google.cloud.kms.v1.ListCryptoKeyVersionsResponse.next_page_token|ListCryptoKeyVersionsResponse.next_page_token} in a subsequent request.
   *   If unspecified, the server will pick an appropriate default.
   * @param {string} [request.pageToken]
   *   Optional. Optional pagination token, returned earlier via
   *   {@link google.cloud.kms.v1.ListCryptoKeyVersionsResponse.next_page_token|ListCryptoKeyVersionsResponse.next_page_token}.
   * @param {google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionView} request.view
   *   The fields to include in the response.
   * @param {string} [request.filter]
   *   Optional. Only include resources that match the filter in the response. For
   *   more information, see
   *   [Sorting and filtering list
   *   results](https://cloud.google.com/kms/docs/sorting-and-filtering).
   * @param {string} [request.orderBy]
   *   Optional. Specify how the results should be sorted. If not specified, the
   *   results will be sorted in the default order. For more information, see
   *   [Sorting and filtering list
   *   results](https://cloud.google.com/kms/docs/sorting-and-filtering).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [CryptoKeyVersion]{@link google.cloud.kms.v1.CryptoKeyVersion}.
   *   The client library support auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *
   *   When autoPaginate: false is specified through options, the array has three elements.
   *   The first element is Array of [CryptoKeyVersion]{@link google.cloud.kms.v1.CryptoKeyVersion} that corresponds to
   *   the one page received from the API server.
   *   If the second element is not null it contains the request object of type [ListCryptoKeyVersionsRequest]{@link google.cloud.kms.v1.ListCryptoKeyVersionsRequest}
   *   that can be used to obtain the next page of the results.
   *   If it is null, the next page does not exist.
   *   The third element contains the raw response received from the API server. Its type is
   *   [ListCryptoKeyVersionsResponse]{@link google.cloud.kms.v1.ListCryptoKeyVersionsResponse}.
   *
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  listCryptoKeyVersions(
    request: protos.google.cloud.kms.v1.IListCryptoKeyVersionsRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | PaginationCallback<
          protos.google.cloud.kms.v1.IListCryptoKeyVersionsRequest,
          | protos.google.cloud.kms.v1.IListCryptoKeyVersionsResponse
          | null
          | undefined,
          protos.google.cloud.kms.v1.ICryptoKeyVersion
        >,
    callback?: PaginationCallback<
      protos.google.cloud.kms.v1.IListCryptoKeyVersionsRequest,
      | protos.google.cloud.kms.v1.IListCryptoKeyVersionsResponse
      | null
      | undefined,
      protos.google.cloud.kms.v1.ICryptoKeyVersion
    >
  ): Promise<
    [
      protos.google.cloud.kms.v1.ICryptoKeyVersion[],
      protos.google.cloud.kms.v1.IListCryptoKeyVersionsRequest | null,
      protos.google.cloud.kms.v1.IListCryptoKeyVersionsResponse
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.listCryptoKeyVersions(request, options, callback);
  }

  /**
   * Equivalent to {@link listCryptoKeyVersions}, but returns a NodeJS Stream object.
   *
   * This fetches the paged responses for {@link listCryptoKeyVersions} continuously
   * and invokes the callback registered for 'data' event for each element in the
   * responses.
   *
   * The returned object has 'end' method when no more elements are required.
   *
   * autoPaginate option will be ignored.
   *
   * @see {@link https://nodejs.org/api/stream.html}
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the {@link google.cloud.kms.v1.CryptoKey|CryptoKey} to list, in the format
   *   `projects/* /locations/* /keyRings/* /cryptoKeys/*`.
   * @param {number} [request.pageSize]
   *   Optional. Optional limit on the number of {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersions} to
   *   include in the response. Further {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersions} can
   *   subsequently be obtained by including the
   *   {@link google.cloud.kms.v1.ListCryptoKeyVersionsResponse.next_page_token|ListCryptoKeyVersionsResponse.next_page_token} in a subsequent request.
   *   If unspecified, the server will pick an appropriate default.
   * @param {string} [request.pageToken]
   *   Optional. Optional pagination token, returned earlier via
   *   {@link google.cloud.kms.v1.ListCryptoKeyVersionsResponse.next_page_token|ListCryptoKeyVersionsResponse.next_page_token}.
   * @param {google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionView} request.view
   *   The fields to include in the response.
   * @param {string} [request.filter]
   *   Optional. Only include resources that match the filter in the response. For
   *   more information, see
   *   [Sorting and filtering list
   *   results](https://cloud.google.com/kms/docs/sorting-and-filtering).
   * @param {string} [request.orderBy]
   *   Optional. Specify how the results should be sorted. If not specified, the
   *   results will be sorted in the default order. For more information, see
   *   [Sorting and filtering list
   *   results](https://cloud.google.com/kms/docs/sorting-and-filtering).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [CryptoKeyVersion]{@link google.cloud.kms.v1.CryptoKeyVersion} on 'data' event.
   */
  listCryptoKeyVersionsStream(
    request?: protos.google.cloud.kms.v1.IListCryptoKeyVersionsRequest,
    options?: gax.CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.listCryptoKeyVersions.createStream(
      this.innerApiCalls.listCryptoKeyVersions as gax.GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to {@link listCryptoKeyVersions}, but returns an iterable object.
   *
   * for-await-of syntax is used with the iterable to recursively get response element on-demand.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the {@link google.cloud.kms.v1.CryptoKey|CryptoKey} to list, in the format
   *   `projects/* /locations/* /keyRings/* /cryptoKeys/*`.
   * @param {number} [request.pageSize]
   *   Optional. Optional limit on the number of {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersions} to
   *   include in the response. Further {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersions} can
   *   subsequently be obtained by including the
   *   {@link google.cloud.kms.v1.ListCryptoKeyVersionsResponse.next_page_token|ListCryptoKeyVersionsResponse.next_page_token} in a subsequent request.
   *   If unspecified, the server will pick an appropriate default.
   * @param {string} [request.pageToken]
   *   Optional. Optional pagination token, returned earlier via
   *   {@link google.cloud.kms.v1.ListCryptoKeyVersionsResponse.next_page_token|ListCryptoKeyVersionsResponse.next_page_token}.
   * @param {google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionView} request.view
   *   The fields to include in the response.
   * @param {string} [request.filter]
   *   Optional. Only include resources that match the filter in the response. For
   *   more information, see
   *   [Sorting and filtering list
   *   results](https://cloud.google.com/kms/docs/sorting-and-filtering).
   * @param {string} [request.orderBy]
   *   Optional. Specify how the results should be sorted. If not specified, the
   *   results will be sorted in the default order. For more information, see
   *   [Sorting and filtering list
   *   results](https://cloud.google.com/kms/docs/sorting-and-filtering).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that conforms to @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols.
   */
  listCryptoKeyVersionsAsync(
    request?: protos.google.cloud.kms.v1.IListCryptoKeyVersionsRequest,
    options?: gax.CallOptions
  ): AsyncIterable<protos.google.cloud.kms.v1.ICryptoKeyVersion> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    options = options || {};
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.listCryptoKeyVersions.asyncIterate(
      this.innerApiCalls['listCryptoKeyVersions'] as GaxCall,
      (request as unknown) as RequestType,
      callSettings
    ) as AsyncIterable<protos.google.cloud.kms.v1.ICryptoKeyVersion>;
  }
  listImportJobs(
    request: protos.google.cloud.kms.v1.IListImportJobsRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.cloud.kms.v1.IImportJob[],
      protos.google.cloud.kms.v1.IListImportJobsRequest | null,
      protos.google.cloud.kms.v1.IListImportJobsResponse
    ]
  >;
  listImportJobs(
    request: protos.google.cloud.kms.v1.IListImportJobsRequest,
    options: gax.CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.kms.v1.IListImportJobsRequest,
      protos.google.cloud.kms.v1.IListImportJobsResponse | null | undefined,
      protos.google.cloud.kms.v1.IImportJob
    >
  ): void;
  listImportJobs(
    request: protos.google.cloud.kms.v1.IListImportJobsRequest,
    callback: PaginationCallback<
      protos.google.cloud.kms.v1.IListImportJobsRequest,
      protos.google.cloud.kms.v1.IListImportJobsResponse | null | undefined,
      protos.google.cloud.kms.v1.IImportJob
    >
  ): void;
  /**
   * Lists {@link google.cloud.kms.v1.ImportJob|ImportJobs}.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the {@link google.cloud.kms.v1.KeyRing|KeyRing} to list, in the format
   *   `projects/* /locations/* /keyRings/*`.
   * @param {number} [request.pageSize]
   *   Optional. Optional limit on the number of {@link google.cloud.kms.v1.ImportJob|ImportJobs} to include in the
   *   response. Further {@link google.cloud.kms.v1.ImportJob|ImportJobs} can subsequently be obtained by
   *   including the {@link google.cloud.kms.v1.ListImportJobsResponse.next_page_token|ListImportJobsResponse.next_page_token} in a subsequent
   *   request. If unspecified, the server will pick an appropriate default.
   * @param {string} [request.pageToken]
   *   Optional. Optional pagination token, returned earlier via
   *   {@link google.cloud.kms.v1.ListImportJobsResponse.next_page_token|ListImportJobsResponse.next_page_token}.
   * @param {string} [request.filter]
   *   Optional. Only include resources that match the filter in the response. For
   *   more information, see
   *   [Sorting and filtering list
   *   results](https://cloud.google.com/kms/docs/sorting-and-filtering).
   * @param {string} [request.orderBy]
   *   Optional. Specify how the results should be sorted. If not specified, the
   *   results will be sorted in the default order. For more information, see
   *   [Sorting and filtering list
   *   results](https://cloud.google.com/kms/docs/sorting-and-filtering).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [ImportJob]{@link google.cloud.kms.v1.ImportJob}.
   *   The client library support auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *
   *   When autoPaginate: false is specified through options, the array has three elements.
   *   The first element is Array of [ImportJob]{@link google.cloud.kms.v1.ImportJob} that corresponds to
   *   the one page received from the API server.
   *   If the second element is not null it contains the request object of type [ListImportJobsRequest]{@link google.cloud.kms.v1.ListImportJobsRequest}
   *   that can be used to obtain the next page of the results.
   *   If it is null, the next page does not exist.
   *   The third element contains the raw response received from the API server. Its type is
   *   [ListImportJobsResponse]{@link google.cloud.kms.v1.ListImportJobsResponse}.
   *
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  listImportJobs(
    request: protos.google.cloud.kms.v1.IListImportJobsRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | PaginationCallback<
          protos.google.cloud.kms.v1.IListImportJobsRequest,
          protos.google.cloud.kms.v1.IListImportJobsResponse | null | undefined,
          protos.google.cloud.kms.v1.IImportJob
        >,
    callback?: PaginationCallback<
      protos.google.cloud.kms.v1.IListImportJobsRequest,
      protos.google.cloud.kms.v1.IListImportJobsResponse | null | undefined,
      protos.google.cloud.kms.v1.IImportJob
    >
  ): Promise<
    [
      protos.google.cloud.kms.v1.IImportJob[],
      protos.google.cloud.kms.v1.IListImportJobsRequest | null,
      protos.google.cloud.kms.v1.IListImportJobsResponse
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.listImportJobs(request, options, callback);
  }

  /**
   * Equivalent to {@link listImportJobs}, but returns a NodeJS Stream object.
   *
   * This fetches the paged responses for {@link listImportJobs} continuously
   * and invokes the callback registered for 'data' event for each element in the
   * responses.
   *
   * The returned object has 'end' method when no more elements are required.
   *
   * autoPaginate option will be ignored.
   *
   * @see {@link https://nodejs.org/api/stream.html}
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the {@link google.cloud.kms.v1.KeyRing|KeyRing} to list, in the format
   *   `projects/* /locations/* /keyRings/*`.
   * @param {number} [request.pageSize]
   *   Optional. Optional limit on the number of {@link google.cloud.kms.v1.ImportJob|ImportJobs} to include in the
   *   response. Further {@link google.cloud.kms.v1.ImportJob|ImportJobs} can subsequently be obtained by
   *   including the {@link google.cloud.kms.v1.ListImportJobsResponse.next_page_token|ListImportJobsResponse.next_page_token} in a subsequent
   *   request. If unspecified, the server will pick an appropriate default.
   * @param {string} [request.pageToken]
   *   Optional. Optional pagination token, returned earlier via
   *   {@link google.cloud.kms.v1.ListImportJobsResponse.next_page_token|ListImportJobsResponse.next_page_token}.
   * @param {string} [request.filter]
   *   Optional. Only include resources that match the filter in the response. For
   *   more information, see
   *   [Sorting and filtering list
   *   results](https://cloud.google.com/kms/docs/sorting-and-filtering).
   * @param {string} [request.orderBy]
   *   Optional. Specify how the results should be sorted. If not specified, the
   *   results will be sorted in the default order. For more information, see
   *   [Sorting and filtering list
   *   results](https://cloud.google.com/kms/docs/sorting-and-filtering).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [ImportJob]{@link google.cloud.kms.v1.ImportJob} on 'data' event.
   */
  listImportJobsStream(
    request?: protos.google.cloud.kms.v1.IListImportJobsRequest,
    options?: gax.CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.listImportJobs.createStream(
      this.innerApiCalls.listImportJobs as gax.GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to {@link listImportJobs}, but returns an iterable object.
   *
   * for-await-of syntax is used with the iterable to recursively get response element on-demand.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the {@link google.cloud.kms.v1.KeyRing|KeyRing} to list, in the format
   *   `projects/* /locations/* /keyRings/*`.
   * @param {number} [request.pageSize]
   *   Optional. Optional limit on the number of {@link google.cloud.kms.v1.ImportJob|ImportJobs} to include in the
   *   response. Further {@link google.cloud.kms.v1.ImportJob|ImportJobs} can subsequently be obtained by
   *   including the {@link google.cloud.kms.v1.ListImportJobsResponse.next_page_token|ListImportJobsResponse.next_page_token} in a subsequent
   *   request. If unspecified, the server will pick an appropriate default.
   * @param {string} [request.pageToken]
   *   Optional. Optional pagination token, returned earlier via
   *   {@link google.cloud.kms.v1.ListImportJobsResponse.next_page_token|ListImportJobsResponse.next_page_token}.
   * @param {string} [request.filter]
   *   Optional. Only include resources that match the filter in the response. For
   *   more information, see
   *   [Sorting and filtering list
   *   results](https://cloud.google.com/kms/docs/sorting-and-filtering).
   * @param {string} [request.orderBy]
   *   Optional. Specify how the results should be sorted. If not specified, the
   *   results will be sorted in the default order. For more information, see
   *   [Sorting and filtering list
   *   results](https://cloud.google.com/kms/docs/sorting-and-filtering).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that conforms to @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols.
   */
  listImportJobsAsync(
    request?: protos.google.cloud.kms.v1.IListImportJobsRequest,
    options?: gax.CallOptions
  ): AsyncIterable<protos.google.cloud.kms.v1.IImportJob> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    options = options || {};
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.listImportJobs.asyncIterate(
      this.innerApiCalls['listImportJobs'] as GaxCall,
      (request as unknown) as RequestType,
      callSettings
    ) as AsyncIterable<protos.google.cloud.kms.v1.IImportJob>;
  }
  /**
   * Gets the access control policy for a resource. Returns an empty policy
   * if the resource exists and does not have a policy set.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.resource
   *   REQUIRED: The resource for which the policy is being requested.
   *   See the operation documentation for the appropriate value for this field.
   * @param {Object} [request.options]
   *   OPTIONAL: A `GetPolicyOptions` object for specifying options to
   *   `GetIamPolicy`. This field is only used by Cloud IAM.
   *
   *   This object should have the same structure as [GetPolicyOptions]{@link google.iam.v1.GetPolicyOptions}
   * @param {Object} [options]
   *   Optional parameters. You can override the default settings for this call, e.g, timeout,
   *   retries, paginations, etc. See [gax.CallOptions]{@link https://googleapis.github.io/gax-nodejs/interfaces/CallOptions.html} for the details.
   * @param {function(?Error, ?Object)} [callback]
   *   The function which will be called with the result of the API call.
   *
   *   The second parameter to the callback is an object representing [Policy]{@link google.iam.v1.Policy}.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Policy]{@link google.iam.v1.Policy}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  getIamPolicy(
    request: IamProtos.google.iam.v1.GetIamPolicyRequest,
    options?:
      | gax.CallOptions
      | Callback<
          IamProtos.google.iam.v1.Policy,
          IamProtos.google.iam.v1.GetIamPolicyRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      IamProtos.google.iam.v1.Policy,
      IamProtos.google.iam.v1.GetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<IamProtos.google.iam.v1.Policy> {
    return this.iamClient.getIamPolicy(request, options, callback);
  }

  /**
   * Returns permissions that a caller has on the specified resource. If the
   * resource does not exist, this will return an empty set of
   * permissions, not a NOT_FOUND error.
   *
   * Note: This operation is designed to be used for building
   * permission-aware UIs and command-line tools, not for authorization
   * checking. This operation may "fail open" without warning.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.resource
   *   REQUIRED: The resource for which the policy detail is being requested.
   *   See the operation documentation for the appropriate value for this field.
   * @param {string[]} request.permissions
   *   The set of permissions to check for the `resource`. Permissions with
   *   wildcards (such as '*' or 'storage.*') are not allowed. For more
   *   information see
   *   [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
   * @param {Object} [options]
   *   Optional parameters. You can override the default settings for this call, e.g, timeout,
   *   retries, paginations, etc. See [gax.CallOptions]{@link https://googleapis.github.io/gax-nodejs/interfaces/CallOptions.html} for the details.
   * @param {function(?Error, ?Object)} [callback]
   *   The function which will be called with the result of the API call.
   *
   *   The second parameter to the callback is an object representing [TestIamPermissionsResponse]{@link google.iam.v1.TestIamPermissionsResponse}.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [TestIamPermissionsResponse]{@link google.iam.v1.TestIamPermissionsResponse}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  setIamPolicy(
    request: IamProtos.google.iam.v1.SetIamPolicyRequest,
    options?:
      | gax.CallOptions
      | Callback<
          IamProtos.google.iam.v1.Policy,
          IamProtos.google.iam.v1.SetIamPolicyRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      IamProtos.google.iam.v1.Policy,
      IamProtos.google.iam.v1.SetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<IamProtos.google.iam.v1.Policy> {
    return this.iamClient.setIamPolicy(request, options, callback);
  }

  /**
   * Returns permissions that a caller has on the specified resource. If the
   * resource does not exist, this will return an empty set of
   * permissions, not a NOT_FOUND error.
   *
   * Note: This operation is designed to be used for building
   * permission-aware UIs and command-line tools, not for authorization
   * checking. This operation may "fail open" without warning.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.resource
   *   REQUIRED: The resource for which the policy detail is being requested.
   *   See the operation documentation for the appropriate value for this field.
   * @param {string[]} request.permissions
   *   The set of permissions to check for the `resource`. Permissions with
   *   wildcards (such as '*' or 'storage.*') are not allowed. For more
   *   information see
   *   [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
   * @param {Object} [options]
   *   Optional parameters. You can override the default settings for this call, e.g, timeout,
   *   retries, paginations, etc. See [gax.CallOptions]{@link https://googleapis.github.io/gax-nodejs/interfaces/CallOptions.html} for the details.
   * @param {function(?Error, ?Object)} [callback]
   *   The function which will be called with the result of the API call.
   *
   *   The second parameter to the callback is an object representing [TestIamPermissionsResponse]{@link google.iam.v1.TestIamPermissionsResponse}.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [TestIamPermissionsResponse]{@link google.iam.v1.TestIamPermissionsResponse}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   *
   */
  testIamPermissions(
    request: IamProtos.google.iam.v1.TestIamPermissionsRequest,
    options?:
      | gax.CallOptions
      | Callback<
          IamProtos.google.iam.v1.TestIamPermissionsResponse,
          IamProtos.google.iam.v1.TestIamPermissionsRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      IamProtos.google.iam.v1.TestIamPermissionsResponse,
      IamProtos.google.iam.v1.TestIamPermissionsRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<IamProtos.google.iam.v1.TestIamPermissionsResponse> {
    return this.iamClient.testIamPermissions(request, options, callback);
  }

  // --------------------
  // -- Path templates --
  // --------------------

  /**
   * Return a fully-qualified cryptoKey resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} key_ring
   * @param {string} crypto_key
   * @returns {string} Resource name string.
   */
  cryptoKeyPath(
    project: string,
    location: string,
    keyRing: string,
    cryptoKey: string
  ) {
    return this.pathTemplates.cryptoKeyPathTemplate.render({
      project: project,
      location: location,
      key_ring: keyRing,
      crypto_key: cryptoKey,
    });
  }

  /**
   * Parse the project from CryptoKey resource.
   *
   * @param {string} cryptoKeyName
   *   A fully-qualified path representing CryptoKey resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromCryptoKeyName(cryptoKeyName: string) {
    return this.pathTemplates.cryptoKeyPathTemplate.match(cryptoKeyName)
      .project;
  }

  /**
   * Parse the location from CryptoKey resource.
   *
   * @param {string} cryptoKeyName
   *   A fully-qualified path representing CryptoKey resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromCryptoKeyName(cryptoKeyName: string) {
    return this.pathTemplates.cryptoKeyPathTemplate.match(cryptoKeyName)
      .location;
  }

  /**
   * Parse the key_ring from CryptoKey resource.
   *
   * @param {string} cryptoKeyName
   *   A fully-qualified path representing CryptoKey resource.
   * @returns {string} A string representing the key_ring.
   */
  matchKeyRingFromCryptoKeyName(cryptoKeyName: string) {
    return this.pathTemplates.cryptoKeyPathTemplate.match(cryptoKeyName)
      .key_ring;
  }

  /**
   * Parse the crypto_key from CryptoKey resource.
   *
   * @param {string} cryptoKeyName
   *   A fully-qualified path representing CryptoKey resource.
   * @returns {string} A string representing the crypto_key.
   */
  matchCryptoKeyFromCryptoKeyName(cryptoKeyName: string) {
    return this.pathTemplates.cryptoKeyPathTemplate.match(cryptoKeyName)
      .crypto_key;
  }

  /**
   * Return a fully-qualified cryptoKeyVersion resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} key_ring
   * @param {string} crypto_key
   * @param {string} crypto_key_version
   * @returns {string} Resource name string.
   */
  cryptoKeyVersionPath(
    project: string,
    location: string,
    keyRing: string,
    cryptoKey: string,
    cryptoKeyVersion: string
  ) {
    return this.pathTemplates.cryptoKeyVersionPathTemplate.render({
      project: project,
      location: location,
      key_ring: keyRing,
      crypto_key: cryptoKey,
      crypto_key_version: cryptoKeyVersion,
    });
  }

  /**
   * Parse the project from CryptoKeyVersion resource.
   *
   * @param {string} cryptoKeyVersionName
   *   A fully-qualified path representing CryptoKeyVersion resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromCryptoKeyVersionName(cryptoKeyVersionName: string) {
    return this.pathTemplates.cryptoKeyVersionPathTemplate.match(
      cryptoKeyVersionName
    ).project;
  }

  /**
   * Parse the location from CryptoKeyVersion resource.
   *
   * @param {string} cryptoKeyVersionName
   *   A fully-qualified path representing CryptoKeyVersion resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromCryptoKeyVersionName(cryptoKeyVersionName: string) {
    return this.pathTemplates.cryptoKeyVersionPathTemplate.match(
      cryptoKeyVersionName
    ).location;
  }

  /**
   * Parse the key_ring from CryptoKeyVersion resource.
   *
   * @param {string} cryptoKeyVersionName
   *   A fully-qualified path representing CryptoKeyVersion resource.
   * @returns {string} A string representing the key_ring.
   */
  matchKeyRingFromCryptoKeyVersionName(cryptoKeyVersionName: string) {
    return this.pathTemplates.cryptoKeyVersionPathTemplate.match(
      cryptoKeyVersionName
    ).key_ring;
  }

  /**
   * Parse the crypto_key from CryptoKeyVersion resource.
   *
   * @param {string} cryptoKeyVersionName
   *   A fully-qualified path representing CryptoKeyVersion resource.
   * @returns {string} A string representing the crypto_key.
   */
  matchCryptoKeyFromCryptoKeyVersionName(cryptoKeyVersionName: string) {
    return this.pathTemplates.cryptoKeyVersionPathTemplate.match(
      cryptoKeyVersionName
    ).crypto_key;
  }

  /**
   * Parse the crypto_key_version from CryptoKeyVersion resource.
   *
   * @param {string} cryptoKeyVersionName
   *   A fully-qualified path representing CryptoKeyVersion resource.
   * @returns {string} A string representing the crypto_key_version.
   */
  matchCryptoKeyVersionFromCryptoKeyVersionName(cryptoKeyVersionName: string) {
    return this.pathTemplates.cryptoKeyVersionPathTemplate.match(
      cryptoKeyVersionName
    ).crypto_key_version;
  }

  /**
   * Return a fully-qualified importJob resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} key_ring
   * @param {string} import_job
   * @returns {string} Resource name string.
   */
  importJobPath(
    project: string,
    location: string,
    keyRing: string,
    importJob: string
  ) {
    return this.pathTemplates.importJobPathTemplate.render({
      project: project,
      location: location,
      key_ring: keyRing,
      import_job: importJob,
    });
  }

  /**
   * Parse the project from ImportJob resource.
   *
   * @param {string} importJobName
   *   A fully-qualified path representing ImportJob resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromImportJobName(importJobName: string) {
    return this.pathTemplates.importJobPathTemplate.match(importJobName)
      .project;
  }

  /**
   * Parse the location from ImportJob resource.
   *
   * @param {string} importJobName
   *   A fully-qualified path representing ImportJob resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromImportJobName(importJobName: string) {
    return this.pathTemplates.importJobPathTemplate.match(importJobName)
      .location;
  }

  /**
   * Parse the key_ring from ImportJob resource.
   *
   * @param {string} importJobName
   *   A fully-qualified path representing ImportJob resource.
   * @returns {string} A string representing the key_ring.
   */
  matchKeyRingFromImportJobName(importJobName: string) {
    return this.pathTemplates.importJobPathTemplate.match(importJobName)
      .key_ring;
  }

  /**
   * Parse the import_job from ImportJob resource.
   *
   * @param {string} importJobName
   *   A fully-qualified path representing ImportJob resource.
   * @returns {string} A string representing the import_job.
   */
  matchImportJobFromImportJobName(importJobName: string) {
    return this.pathTemplates.importJobPathTemplate.match(importJobName)
      .import_job;
  }

  /**
   * Return a fully-qualified keyRing resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} key_ring
   * @returns {string} Resource name string.
   */
  keyRingPath(project: string, location: string, keyRing: string) {
    return this.pathTemplates.keyRingPathTemplate.render({
      project: project,
      location: location,
      key_ring: keyRing,
    });
  }

  /**
   * Parse the project from KeyRing resource.
   *
   * @param {string} keyRingName
   *   A fully-qualified path representing KeyRing resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromKeyRingName(keyRingName: string) {
    return this.pathTemplates.keyRingPathTemplate.match(keyRingName).project;
  }

  /**
   * Parse the location from KeyRing resource.
   *
   * @param {string} keyRingName
   *   A fully-qualified path representing KeyRing resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromKeyRingName(keyRingName: string) {
    return this.pathTemplates.keyRingPathTemplate.match(keyRingName).location;
  }

  /**
   * Parse the key_ring from KeyRing resource.
   *
   * @param {string} keyRingName
   *   A fully-qualified path representing KeyRing resource.
   * @returns {string} A string representing the key_ring.
   */
  matchKeyRingFromKeyRingName(keyRingName: string) {
    return this.pathTemplates.keyRingPathTemplate.match(keyRingName).key_ring;
  }

  /**
   * Return a fully-qualified location resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @returns {string} Resource name string.
   */
  locationPath(project: string, location: string) {
    return this.pathTemplates.locationPathTemplate.render({
      project: project,
      location: location,
    });
  }

  /**
   * Parse the project from Location resource.
   *
   * @param {string} locationName
   *   A fully-qualified path representing Location resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromLocationName(locationName: string) {
    return this.pathTemplates.locationPathTemplate.match(locationName).project;
  }

  /**
   * Parse the location from Location resource.
   *
   * @param {string} locationName
   *   A fully-qualified path representing Location resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromLocationName(locationName: string) {
    return this.pathTemplates.locationPathTemplate.match(locationName).location;
  }

  /**
   * Return a fully-qualified publicKey resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} key_ring
   * @param {string} crypto_key
   * @param {string} crypto_key_version
   * @returns {string} Resource name string.
   */
  publicKeyPath(
    project: string,
    location: string,
    keyRing: string,
    cryptoKey: string,
    cryptoKeyVersion: string
  ) {
    return this.pathTemplates.publicKeyPathTemplate.render({
      project: project,
      location: location,
      key_ring: keyRing,
      crypto_key: cryptoKey,
      crypto_key_version: cryptoKeyVersion,
    });
  }

  /**
   * Parse the project from PublicKey resource.
   *
   * @param {string} publicKeyName
   *   A fully-qualified path representing PublicKey resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromPublicKeyName(publicKeyName: string) {
    return this.pathTemplates.publicKeyPathTemplate.match(publicKeyName)
      .project;
  }

  /**
   * Parse the location from PublicKey resource.
   *
   * @param {string} publicKeyName
   *   A fully-qualified path representing PublicKey resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromPublicKeyName(publicKeyName: string) {
    return this.pathTemplates.publicKeyPathTemplate.match(publicKeyName)
      .location;
  }

  /**
   * Parse the key_ring from PublicKey resource.
   *
   * @param {string} publicKeyName
   *   A fully-qualified path representing PublicKey resource.
   * @returns {string} A string representing the key_ring.
   */
  matchKeyRingFromPublicKeyName(publicKeyName: string) {
    return this.pathTemplates.publicKeyPathTemplate.match(publicKeyName)
      .key_ring;
  }

  /**
   * Parse the crypto_key from PublicKey resource.
   *
   * @param {string} publicKeyName
   *   A fully-qualified path representing PublicKey resource.
   * @returns {string} A string representing the crypto_key.
   */
  matchCryptoKeyFromPublicKeyName(publicKeyName: string) {
    return this.pathTemplates.publicKeyPathTemplate.match(publicKeyName)
      .crypto_key;
  }

  /**
   * Parse the crypto_key_version from PublicKey resource.
   *
   * @param {string} publicKeyName
   *   A fully-qualified path representing PublicKey resource.
   * @returns {string} A string representing the crypto_key_version.
   */
  matchCryptoKeyVersionFromPublicKeyName(publicKeyName: string) {
    return this.pathTemplates.publicKeyPathTemplate.match(publicKeyName)
      .crypto_key_version;
  }

  /**
   * Terminate the GRPC channel and close the client.
   *
   * The client will no longer be usable and all future behavior is undefined.
   */
  close(): Promise<void> {
    this.initialize();
    if (!this._terminated) {
      return this.keyManagementServiceStub!.then(stub => {
        this._terminated = true;
        stub.close();
      });
    }
    return Promise.resolve();
  }
}
