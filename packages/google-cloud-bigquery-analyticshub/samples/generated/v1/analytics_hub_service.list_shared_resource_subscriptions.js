// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(resource) {
  // [START analyticshub_v1_generated_AnalyticsHubService_ListSharedResourceSubscriptions_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. Resource name of the requested target. This resource may be
   *  either a Listing or a DataExchange. e.g.
   *  projects/123/locations/US/dataExchanges/456 OR e.g.
   *  projects/123/locations/US/dataExchanges/456/listings/789
   */
  // const resource = 'abc123'
  /**
   *  If selected, includes deleted subscriptions in the response
   *  (up to 63 days after deletion).
   */
  // const includeDeletedSubscriptions = true
  /**
   *  The maximum number of results to return in a single response page.
   */
  // const pageSize = 1234
  /**
   *  Page token, returned by a previous call.
   */
  // const pageToken = 'abc123'

  // Imports the Analyticshub library
  const {AnalyticsHubServiceClient} = require('@google-cloud/bigquery-analyticshub').v1;

  // Instantiates a client
  const analyticshubClient = new AnalyticsHubServiceClient();

  async function callListSharedResourceSubscriptions() {
    // Construct request
    const request = {
      resource,
    };

    // Run request
    const iterable = analyticshubClient.listSharedResourceSubscriptionsAsync(request);
    for await (const response of iterable) {
        console.log(response);
    }
  }

  callListSharedResourceSubscriptions();
  // [END analyticshub_v1_generated_AnalyticsHubService_ListSharedResourceSubscriptions_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
