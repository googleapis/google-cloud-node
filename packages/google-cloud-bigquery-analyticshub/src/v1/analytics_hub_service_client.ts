// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

/* global window */
import type * as gax from 'google-gax';
import type {
  Callback,
  CallOptions,
  Descriptors,
  ClientOptions,
  PaginationCallback,
  GaxCall,
} from 'google-gax';
import {Transform} from 'stream';
import * as protos from '../../protos/protos';
import jsonProtos = require('../../protos/protos.json');
/**
 * Client JSON configuration object, loaded from
 * `src/v1/analytics_hub_service_client_config.json`.
 * This file defines retry strategy and timeouts for all API methods in this library.
 */
import * as gapicConfig from './analytics_hub_service_client_config.json';
const version = require('../../../package.json').version;

/**
 *  The `AnalyticsHubService` API facilitates data sharing within and across
 *  organizations. It allows data providers to publish listings that reference
 *  shared datasets. With Analytics Hub, users can discover and search for
 *  listings that they have access to. Subscribers can view and subscribe to
 *  listings. When you subscribe to a listing, Analytics Hub creates a linked
 *  dataset in your project.
 * @class
 * @memberof v1
 */
export class AnalyticsHubServiceClient {
  private _terminated = false;
  private _opts: ClientOptions;
  private _providedCustomServicePath: boolean;
  private _gaxModule: typeof gax | typeof gax.fallback;
  private _gaxGrpc: gax.GrpcClient | gax.fallback.GrpcClient;
  private _protos: {};
  private _defaults: {[method: string]: gax.CallSettings};
  auth: gax.GoogleAuth;
  descriptors: Descriptors = {
    page: {},
    stream: {},
    longrunning: {},
    batching: {},
  };
  warn: (code: string, message: string, warnType?: string) => void;
  innerApiCalls: {[name: string]: Function};
  pathTemplates: {[name: string]: gax.PathTemplate};
  analyticsHubServiceStub?: Promise<{[name: string]: Function}>;

  /**
   * Construct an instance of AnalyticsHubServiceClient.
   *
   * @param {object} [options] - The configuration object.
   * The options accepted by the constructor are described in detail
   * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
   * The common options are:
   * @param {object} [options.credentials] - Credentials object.
   * @param {string} [options.credentials.client_email]
   * @param {string} [options.credentials.private_key]
   * @param {string} [options.email] - Account email address. Required when
   *     using a .pem or .p12 keyFilename.
   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
   *     .p12 key downloaded from the Google Developers Console. If you provide
   *     a path to a JSON file, the projectId option below is not necessary.
   *     NOTE: .pem and .p12 require you to specify options.email as well.
   * @param {number} [options.port] - The port on which to connect to
   *     the remote host.
   * @param {string} [options.projectId] - The project ID from the Google
   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
   *     the environment variable GCLOUD_PROJECT for your project ID. If your
   *     app is running in an environment which supports
   *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
   *     your project ID will be detected automatically.
   * @param {string} [options.apiEndpoint] - The domain name of the
   *     API remote host.
   * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
   *     Follows the structure of {@link gapicConfig}.
   * @param {boolean | "rest"} [options.fallback] - Use HTTP fallback mode.
   *     Pass "rest" to use HTTP/1.1 REST API instead of gRPC.
   *     For more information, please check the
   *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
   * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
   *     need to avoid loading the default gRPC version and want to use the fallback
   *     HTTP implementation. Load only fallback version and pass it to the constructor:
   *     ```
   *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
   *     const client = new AnalyticsHubServiceClient({fallback: 'rest'}, gax);
   *     ```
   */
  constructor(
    opts?: ClientOptions,
    gaxInstance?: typeof gax | typeof gax.fallback
  ) {
    // Ensure that options include all the required fields.
    const staticMembers = this.constructor as typeof AnalyticsHubServiceClient;
    const servicePath =
      opts?.servicePath || opts?.apiEndpoint || staticMembers.servicePath;
    this._providedCustomServicePath = !!(
      opts?.servicePath || opts?.apiEndpoint
    );
    const port = opts?.port || staticMembers.port;
    const clientConfig = opts?.clientConfig ?? {};
    const fallback =
      opts?.fallback ??
      (typeof window !== 'undefined' && typeof window?.fetch === 'function');
    opts = Object.assign({servicePath, port, clientConfig, fallback}, opts);

    // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.
    if (servicePath !== staticMembers.servicePath && !('scopes' in opts)) {
      opts['scopes'] = staticMembers.scopes;
    }

    // Load google-gax module synchronously if needed
    if (!gaxInstance) {
      gaxInstance = require('google-gax') as typeof gax;
    }

    // Choose either gRPC or proto-over-HTTP implementation of google-gax.
    this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;

    // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.
    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);

    // Save options to use in initialize() method.
    this._opts = opts;

    // Save the auth object to the client, for use by other methods.
    this.auth = this._gaxGrpc.auth as gax.GoogleAuth;

    // Set useJWTAccessWithScope on the auth object.
    this.auth.useJWTAccessWithScope = true;

    // Set defaultServicePath on the auth object.
    this.auth.defaultServicePath = staticMembers.servicePath;

    // Set the default scopes in auth client if needed.
    if (servicePath === staticMembers.servicePath) {
      this.auth.defaultScopes = staticMembers.scopes;
    }

    // Determine the client header string.
    const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];
    if (typeof process !== 'undefined' && 'versions' in process) {
      clientHeader.push(`gl-node/${process.versions.node}`);
    } else {
      clientHeader.push(`gl-web/${this._gaxModule.version}`);
    }
    if (!opts.fallback) {
      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);
    } else if (opts.fallback === 'rest') {
      clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);
    }
    if (opts.libName && opts.libVersion) {
      clientHeader.push(`${opts.libName}/${opts.libVersion}`);
    }
    // Load the applicable protos.
    this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);

    // This API contains "path templates"; forward-slash-separated
    // identifiers to uniquely identify resources within the API.
    // Create useful helper objects for these.
    this.pathTemplates = {
      dataExchangePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/dataExchanges/{data_exchange}'
      ),
      listingPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/dataExchanges/{data_exchange}/listings/{listing}'
      ),
      locationPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}'
      ),
    };

    // Some of the methods on this service return "paged" results,
    // (e.g. 50 results at a time, with tokens to get subsequent
    // pages). Denote the keys used for pagination and results.
    this.descriptors.page = {
      listDataExchanges: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'dataExchanges'
      ),
      listOrgDataExchanges: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'dataExchanges'
      ),
      listListings: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'listings'
      ),
    };

    // Put together the default options sent with requests.
    this._defaults = this._gaxGrpc.constructSettings(
      'google.cloud.bigquery.analyticshub.v1.AnalyticsHubService',
      gapicConfig as gax.ClientConfig,
      opts.clientConfig || {},
      {'x-goog-api-client': clientHeader.join(' ')}
    );

    // Set up a dictionary of "inner API calls"; the core implementation
    // of calling the API is handled in `google-gax`, with this code
    // merely providing the destination and request information.
    this.innerApiCalls = {};

    // Add a warn function to the client constructor so it can be easily tested.
    this.warn = this._gaxModule.warn;
  }

  /**
   * Initialize the client.
   * Performs asynchronous operations (such as authentication) and prepares the client.
   * This function will be called automatically when any class method is called for the
   * first time, but if you need to initialize it before calling an actual method,
   * feel free to call initialize() directly.
   *
   * You can await on this method if you want to make sure the client is initialized.
   *
   * @returns {Promise} A promise that resolves to an authenticated service stub.
   */
  initialize() {
    // If the client stub promise is already initialized, return immediately.
    if (this.analyticsHubServiceStub) {
      return this.analyticsHubServiceStub;
    }

    // Put together the "service stub" for
    // google.cloud.bigquery.analyticshub.v1.AnalyticsHubService.
    this.analyticsHubServiceStub = this._gaxGrpc.createStub(
      this._opts.fallback
        ? (this._protos as protobuf.Root).lookupService(
            'google.cloud.bigquery.analyticshub.v1.AnalyticsHubService'
          )
        : // eslint-disable-next-line @typescript-eslint/no-explicit-any
          (this._protos as any).google.cloud.bigquery.analyticshub.v1
            .AnalyticsHubService,
      this._opts,
      this._providedCustomServicePath
    ) as Promise<{[method: string]: Function}>;

    // Iterate over each of the methods that the service provides
    // and create an API call method for each.
    const analyticsHubServiceStubMethods = [
      'listDataExchanges',
      'listOrgDataExchanges',
      'getDataExchange',
      'createDataExchange',
      'updateDataExchange',
      'deleteDataExchange',
      'listListings',
      'getListing',
      'createListing',
      'updateListing',
      'deleteListing',
      'subscribeListing',
      'getIamPolicy',
      'setIamPolicy',
      'testIamPermissions',
    ];
    for (const methodName of analyticsHubServiceStubMethods) {
      const callPromise = this.analyticsHubServiceStub.then(
        stub =>
          (...args: Array<{}>) => {
            if (this._terminated) {
              return Promise.reject('The client has already been closed.');
            }
            const func = stub[methodName];
            return func.apply(stub, args);
          },
        (err: Error | null | undefined) => () => {
          throw err;
        }
      );

      const descriptor = this.descriptors.page[methodName] || undefined;
      const apiCall = this._gaxModule.createApiCall(
        callPromise,
        this._defaults[methodName],
        descriptor,
        this._opts.fallback
      );

      this.innerApiCalls[methodName] = apiCall;
    }

    return this.analyticsHubServiceStub;
  }

  /**
   * The DNS address for this API service.
   * @returns {string} The DNS address for this service.
   */
  static get servicePath() {
    return 'analyticshub.googleapis.com';
  }

  /**
   * The DNS address for this API service - same as servicePath(),
   * exists for compatibility reasons.
   * @returns {string} The DNS address for this service.
   */
  static get apiEndpoint() {
    return 'analyticshub.googleapis.com';
  }

  /**
   * The port for this API service.
   * @returns {number} The default port for this service.
   */
  static get port() {
    return 443;
  }

  /**
   * The scopes needed to make gRPC calls for every method defined
   * in this service.
   * @returns {string[]} List of default scopes.
   */
  static get scopes() {
    return [
      'https://www.googleapis.com/auth/bigquery',
      'https://www.googleapis.com/auth/cloud-platform',
    ];
  }

  getProjectId(): Promise<string>;
  getProjectId(callback: Callback<string, undefined, undefined>): void;
  /**
   * Return the project ID used by this class.
   * @returns {Promise} A promise that resolves to string containing the project ID.
   */
  getProjectId(
    callback?: Callback<string, undefined, undefined>
  ): Promise<string> | void {
    if (callback) {
      this.auth.getProjectId(callback);
      return;
    }
    return this.auth.getProjectId();
  }

  // -------------------
  // -- Service calls --
  // -------------------
  /**
   * Gets the details of a data exchange.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the data exchange.
   *   e.g. `projects/myproject/locations/US/dataExchanges/123`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [DataExchange]{@link google.cloud.bigquery.analyticshub.v1.DataExchange}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/analytics_hub_service.get_data_exchange.js</caption>
   * region_tag:analyticshub_v1_generated_AnalyticsHubService_GetDataExchange_async
   */
  getDataExchange(
    request?: protos.google.cloud.bigquery.analyticshub.v1.IGetDataExchangeRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.bigquery.analyticshub.v1.IDataExchange,
      (
        | protos.google.cloud.bigquery.analyticshub.v1.IGetDataExchangeRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  getDataExchange(
    request: protos.google.cloud.bigquery.analyticshub.v1.IGetDataExchangeRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.bigquery.analyticshub.v1.IDataExchange,
      | protos.google.cloud.bigquery.analyticshub.v1.IGetDataExchangeRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getDataExchange(
    request: protos.google.cloud.bigquery.analyticshub.v1.IGetDataExchangeRequest,
    callback: Callback<
      protos.google.cloud.bigquery.analyticshub.v1.IDataExchange,
      | protos.google.cloud.bigquery.analyticshub.v1.IGetDataExchangeRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getDataExchange(
    request?: protos.google.cloud.bigquery.analyticshub.v1.IGetDataExchangeRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.bigquery.analyticshub.v1.IDataExchange,
          | protos.google.cloud.bigquery.analyticshub.v1.IGetDataExchangeRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.bigquery.analyticshub.v1.IDataExchange,
      | protos.google.cloud.bigquery.analyticshub.v1.IGetDataExchangeRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.bigquery.analyticshub.v1.IDataExchange,
      (
        | protos.google.cloud.bigquery.analyticshub.v1.IGetDataExchangeRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getDataExchange(request, options, callback);
  }
  /**
   * Creates a new data exchange.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent resource path of the data exchange.
   *   e.g. `projects/myproject/locations/US`.
   * @param {string} request.dataExchangeId
   *   Required. The ID of the data exchange.
   *   Must contain only Unicode letters, numbers (0-9), underscores (_).
   *   Should not use characters that require URL-escaping, or characters
   *   outside of ASCII, spaces.
   *   Max length: 100 bytes.
   * @param {google.cloud.bigquery.analyticshub.v1.DataExchange} request.dataExchange
   *   Required. The data exchange to create.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [DataExchange]{@link google.cloud.bigquery.analyticshub.v1.DataExchange}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/analytics_hub_service.create_data_exchange.js</caption>
   * region_tag:analyticshub_v1_generated_AnalyticsHubService_CreateDataExchange_async
   */
  createDataExchange(
    request?: protos.google.cloud.bigquery.analyticshub.v1.ICreateDataExchangeRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.bigquery.analyticshub.v1.IDataExchange,
      (
        | protos.google.cloud.bigquery.analyticshub.v1.ICreateDataExchangeRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  createDataExchange(
    request: protos.google.cloud.bigquery.analyticshub.v1.ICreateDataExchangeRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.bigquery.analyticshub.v1.IDataExchange,
      | protos.google.cloud.bigquery.analyticshub.v1.ICreateDataExchangeRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createDataExchange(
    request: protos.google.cloud.bigquery.analyticshub.v1.ICreateDataExchangeRequest,
    callback: Callback<
      protos.google.cloud.bigquery.analyticshub.v1.IDataExchange,
      | protos.google.cloud.bigquery.analyticshub.v1.ICreateDataExchangeRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createDataExchange(
    request?: protos.google.cloud.bigquery.analyticshub.v1.ICreateDataExchangeRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.bigquery.analyticshub.v1.IDataExchange,
          | protos.google.cloud.bigquery.analyticshub.v1.ICreateDataExchangeRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.bigquery.analyticshub.v1.IDataExchange,
      | protos.google.cloud.bigquery.analyticshub.v1.ICreateDataExchangeRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.bigquery.analyticshub.v1.IDataExchange,
      (
        | protos.google.cloud.bigquery.analyticshub.v1.ICreateDataExchangeRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createDataExchange(request, options, callback);
  }
  /**
   * Updates an existing data exchange.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   Required. Field mask specifies the fields to update in the data exchange
   *   resource. The fields specified in the
   *   `updateMask` are relative to the resource and are not a full request.
   * @param {google.cloud.bigquery.analyticshub.v1.DataExchange} request.dataExchange
   *   Required. The data exchange to update.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [DataExchange]{@link google.cloud.bigquery.analyticshub.v1.DataExchange}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/analytics_hub_service.update_data_exchange.js</caption>
   * region_tag:analyticshub_v1_generated_AnalyticsHubService_UpdateDataExchange_async
   */
  updateDataExchange(
    request?: protos.google.cloud.bigquery.analyticshub.v1.IUpdateDataExchangeRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.bigquery.analyticshub.v1.IDataExchange,
      (
        | protos.google.cloud.bigquery.analyticshub.v1.IUpdateDataExchangeRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  updateDataExchange(
    request: protos.google.cloud.bigquery.analyticshub.v1.IUpdateDataExchangeRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.bigquery.analyticshub.v1.IDataExchange,
      | protos.google.cloud.bigquery.analyticshub.v1.IUpdateDataExchangeRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateDataExchange(
    request: protos.google.cloud.bigquery.analyticshub.v1.IUpdateDataExchangeRequest,
    callback: Callback<
      protos.google.cloud.bigquery.analyticshub.v1.IDataExchange,
      | protos.google.cloud.bigquery.analyticshub.v1.IUpdateDataExchangeRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateDataExchange(
    request?: protos.google.cloud.bigquery.analyticshub.v1.IUpdateDataExchangeRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.bigquery.analyticshub.v1.IDataExchange,
          | protos.google.cloud.bigquery.analyticshub.v1.IUpdateDataExchangeRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.bigquery.analyticshub.v1.IDataExchange,
      | protos.google.cloud.bigquery.analyticshub.v1.IUpdateDataExchangeRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.bigquery.analyticshub.v1.IDataExchange,
      (
        | protos.google.cloud.bigquery.analyticshub.v1.IUpdateDataExchangeRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'data_exchange.name': request.dataExchange!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateDataExchange(request, options, callback);
  }
  /**
   * Deletes an existing data exchange.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The full name of the data exchange resource that you want to delete.
   *   For example, `projects/myproject/locations/US/dataExchanges/123`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/analytics_hub_service.delete_data_exchange.js</caption>
   * region_tag:analyticshub_v1_generated_AnalyticsHubService_DeleteDataExchange_async
   */
  deleteDataExchange(
    request?: protos.google.cloud.bigquery.analyticshub.v1.IDeleteDataExchangeRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.bigquery.analyticshub.v1.IDeleteDataExchangeRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  deleteDataExchange(
    request: protos.google.cloud.bigquery.analyticshub.v1.IDeleteDataExchangeRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.bigquery.analyticshub.v1.IDeleteDataExchangeRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteDataExchange(
    request: protos.google.cloud.bigquery.analyticshub.v1.IDeleteDataExchangeRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.bigquery.analyticshub.v1.IDeleteDataExchangeRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteDataExchange(
    request?: protos.google.cloud.bigquery.analyticshub.v1.IDeleteDataExchangeRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.cloud.bigquery.analyticshub.v1.IDeleteDataExchangeRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.bigquery.analyticshub.v1.IDeleteDataExchangeRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.bigquery.analyticshub.v1.IDeleteDataExchangeRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deleteDataExchange(request, options, callback);
  }
  /**
   * Gets the details of a listing.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the listing.
   *   e.g. `projects/myproject/locations/US/dataExchanges/123/listings/456`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Listing]{@link google.cloud.bigquery.analyticshub.v1.Listing}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/analytics_hub_service.get_listing.js</caption>
   * region_tag:analyticshub_v1_generated_AnalyticsHubService_GetListing_async
   */
  getListing(
    request?: protos.google.cloud.bigquery.analyticshub.v1.IGetListingRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.bigquery.analyticshub.v1.IListing,
      (
        | protos.google.cloud.bigquery.analyticshub.v1.IGetListingRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  getListing(
    request: protos.google.cloud.bigquery.analyticshub.v1.IGetListingRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.bigquery.analyticshub.v1.IListing,
      | protos.google.cloud.bigquery.analyticshub.v1.IGetListingRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getListing(
    request: protos.google.cloud.bigquery.analyticshub.v1.IGetListingRequest,
    callback: Callback<
      protos.google.cloud.bigquery.analyticshub.v1.IListing,
      | protos.google.cloud.bigquery.analyticshub.v1.IGetListingRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getListing(
    request?: protos.google.cloud.bigquery.analyticshub.v1.IGetListingRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.bigquery.analyticshub.v1.IListing,
          | protos.google.cloud.bigquery.analyticshub.v1.IGetListingRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.bigquery.analyticshub.v1.IListing,
      | protos.google.cloud.bigquery.analyticshub.v1.IGetListingRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.bigquery.analyticshub.v1.IListing,
      (
        | protos.google.cloud.bigquery.analyticshub.v1.IGetListingRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getListing(request, options, callback);
  }
  /**
   * Creates a new listing.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent resource path of the listing.
   *   e.g. `projects/myproject/locations/US/dataExchanges/123`.
   * @param {string} request.listingId
   *   Required. The ID of the listing to create.
   *   Must contain only Unicode letters, numbers (0-9), underscores (_).
   *   Should not use characters that require URL-escaping, or characters
   *   outside of ASCII, spaces.
   *   Max length: 100 bytes.
   * @param {google.cloud.bigquery.analyticshub.v1.Listing} request.listing
   *   Required. The listing to create.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Listing]{@link google.cloud.bigquery.analyticshub.v1.Listing}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/analytics_hub_service.create_listing.js</caption>
   * region_tag:analyticshub_v1_generated_AnalyticsHubService_CreateListing_async
   */
  createListing(
    request?: protos.google.cloud.bigquery.analyticshub.v1.ICreateListingRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.bigquery.analyticshub.v1.IListing,
      (
        | protos.google.cloud.bigquery.analyticshub.v1.ICreateListingRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  createListing(
    request: protos.google.cloud.bigquery.analyticshub.v1.ICreateListingRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.bigquery.analyticshub.v1.IListing,
      | protos.google.cloud.bigquery.analyticshub.v1.ICreateListingRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createListing(
    request: protos.google.cloud.bigquery.analyticshub.v1.ICreateListingRequest,
    callback: Callback<
      protos.google.cloud.bigquery.analyticshub.v1.IListing,
      | protos.google.cloud.bigquery.analyticshub.v1.ICreateListingRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createListing(
    request?: protos.google.cloud.bigquery.analyticshub.v1.ICreateListingRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.bigquery.analyticshub.v1.IListing,
          | protos.google.cloud.bigquery.analyticshub.v1.ICreateListingRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.bigquery.analyticshub.v1.IListing,
      | protos.google.cloud.bigquery.analyticshub.v1.ICreateListingRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.bigquery.analyticshub.v1.IListing,
      (
        | protos.google.cloud.bigquery.analyticshub.v1.ICreateListingRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createListing(request, options, callback);
  }
  /**
   * Updates an existing listing.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   Required. Field mask specifies the fields to update in the listing resource. The
   *   fields specified in the `updateMask` are relative to the resource and are
   *   not a full request.
   * @param {google.cloud.bigquery.analyticshub.v1.Listing} request.listing
   *   Required. The listing to update.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Listing]{@link google.cloud.bigquery.analyticshub.v1.Listing}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/analytics_hub_service.update_listing.js</caption>
   * region_tag:analyticshub_v1_generated_AnalyticsHubService_UpdateListing_async
   */
  updateListing(
    request?: protos.google.cloud.bigquery.analyticshub.v1.IUpdateListingRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.bigquery.analyticshub.v1.IListing,
      (
        | protos.google.cloud.bigquery.analyticshub.v1.IUpdateListingRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  updateListing(
    request: protos.google.cloud.bigquery.analyticshub.v1.IUpdateListingRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.bigquery.analyticshub.v1.IListing,
      | protos.google.cloud.bigquery.analyticshub.v1.IUpdateListingRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateListing(
    request: protos.google.cloud.bigquery.analyticshub.v1.IUpdateListingRequest,
    callback: Callback<
      protos.google.cloud.bigquery.analyticshub.v1.IListing,
      | protos.google.cloud.bigquery.analyticshub.v1.IUpdateListingRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateListing(
    request?: protos.google.cloud.bigquery.analyticshub.v1.IUpdateListingRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.bigquery.analyticshub.v1.IListing,
          | protos.google.cloud.bigquery.analyticshub.v1.IUpdateListingRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.bigquery.analyticshub.v1.IListing,
      | protos.google.cloud.bigquery.analyticshub.v1.IUpdateListingRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.bigquery.analyticshub.v1.IListing,
      (
        | protos.google.cloud.bigquery.analyticshub.v1.IUpdateListingRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'listing.name': request.listing!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateListing(request, options, callback);
  }
  /**
   * Deletes a listing.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Resource name of the listing to delete.
   *   e.g. `projects/myproject/locations/US/dataExchanges/123/listings/456`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/analytics_hub_service.delete_listing.js</caption>
   * region_tag:analyticshub_v1_generated_AnalyticsHubService_DeleteListing_async
   */
  deleteListing(
    request?: protos.google.cloud.bigquery.analyticshub.v1.IDeleteListingRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.bigquery.analyticshub.v1.IDeleteListingRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  deleteListing(
    request: protos.google.cloud.bigquery.analyticshub.v1.IDeleteListingRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.bigquery.analyticshub.v1.IDeleteListingRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteListing(
    request: protos.google.cloud.bigquery.analyticshub.v1.IDeleteListingRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.bigquery.analyticshub.v1.IDeleteListingRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteListing(
    request?: protos.google.cloud.bigquery.analyticshub.v1.IDeleteListingRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.cloud.bigquery.analyticshub.v1.IDeleteListingRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.bigquery.analyticshub.v1.IDeleteListingRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.bigquery.analyticshub.v1.IDeleteListingRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deleteListing(request, options, callback);
  }
  /**
   * Subscribes to a listing.
   *
   * Currently, with Analytics Hub, you can create listings that
   * reference only BigQuery datasets.
   * Upon subscription to a listing for a BigQuery dataset, Analytics Hub
   * creates a linked dataset in the subscriber's project.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.bigquery.analyticshub.v1.DestinationDataset} request.destinationDataset
   *   BigQuery destination dataset to create for the subscriber.
   * @param {string} request.name
   *   Required. Resource name of the listing that you want to subscribe to.
   *   e.g. `projects/myproject/locations/US/dataExchanges/123/listings/456`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [SubscribeListingResponse]{@link google.cloud.bigquery.analyticshub.v1.SubscribeListingResponse}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/analytics_hub_service.subscribe_listing.js</caption>
   * region_tag:analyticshub_v1_generated_AnalyticsHubService_SubscribeListing_async
   */
  subscribeListing(
    request?: protos.google.cloud.bigquery.analyticshub.v1.ISubscribeListingRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.bigquery.analyticshub.v1.ISubscribeListingResponse,
      (
        | protos.google.cloud.bigquery.analyticshub.v1.ISubscribeListingRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  subscribeListing(
    request: protos.google.cloud.bigquery.analyticshub.v1.ISubscribeListingRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.bigquery.analyticshub.v1.ISubscribeListingResponse,
      | protos.google.cloud.bigquery.analyticshub.v1.ISubscribeListingRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  subscribeListing(
    request: protos.google.cloud.bigquery.analyticshub.v1.ISubscribeListingRequest,
    callback: Callback<
      protos.google.cloud.bigquery.analyticshub.v1.ISubscribeListingResponse,
      | protos.google.cloud.bigquery.analyticshub.v1.ISubscribeListingRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  subscribeListing(
    request?: protos.google.cloud.bigquery.analyticshub.v1.ISubscribeListingRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.bigquery.analyticshub.v1.ISubscribeListingResponse,
          | protos.google.cloud.bigquery.analyticshub.v1.ISubscribeListingRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.bigquery.analyticshub.v1.ISubscribeListingResponse,
      | protos.google.cloud.bigquery.analyticshub.v1.ISubscribeListingRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.bigquery.analyticshub.v1.ISubscribeListingResponse,
      (
        | protos.google.cloud.bigquery.analyticshub.v1.ISubscribeListingRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.subscribeListing(request, options, callback);
  }
  /**
   * Gets the IAM policy.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.resource
   *   REQUIRED: The resource for which the policy is being requested.
   *   See the operation documentation for the appropriate value for this field.
   * @param {google.iam.v1.GetPolicyOptions} request.options
   *   OPTIONAL: A `GetPolicyOptions` object for specifying options to
   *   `GetIamPolicy`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Policy]{@link google.iam.v1.Policy}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/analytics_hub_service.get_iam_policy.js</caption>
   * region_tag:analyticshub_v1_generated_AnalyticsHubService_GetIamPolicy_async
   */
  getIamPolicy(
    request?: protos.google.iam.v1.IGetIamPolicyRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.IGetIamPolicyRequest | undefined,
      {} | undefined
    ]
  >;
  getIamPolicy(
    request: protos.google.iam.v1.IGetIamPolicyRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.IGetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getIamPolicy(
    request: protos.google.iam.v1.IGetIamPolicyRequest,
    callback: Callback<
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.IGetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getIamPolicy(
    request?: protos.google.iam.v1.IGetIamPolicyRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.iam.v1.IPolicy,
          protos.google.iam.v1.IGetIamPolicyRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.IGetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.IGetIamPolicyRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        resource: request.resource ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getIamPolicy(request, options, callback);
  }
  /**
   * Sets the IAM policy.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.resource
   *   REQUIRED: The resource for which the policy is being specified.
   *   See the operation documentation for the appropriate value for this field.
   * @param {google.iam.v1.Policy} request.policy
   *   REQUIRED: The complete policy to be applied to the `resource`. The size of
   *   the policy is limited to a few 10s of KB. An empty policy is a
   *   valid policy but certain Cloud Platform services (such as Projects)
   *   might reject them.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only
   *   the fields in the mask will be modified. If no mask is provided, the
   *   following default mask is used:
   *
   *   `paths: "bindings, etag"`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Policy]{@link google.iam.v1.Policy}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/analytics_hub_service.set_iam_policy.js</caption>
   * region_tag:analyticshub_v1_generated_AnalyticsHubService_SetIamPolicy_async
   */
  setIamPolicy(
    request?: protos.google.iam.v1.ISetIamPolicyRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.ISetIamPolicyRequest | undefined,
      {} | undefined
    ]
  >;
  setIamPolicy(
    request: protos.google.iam.v1.ISetIamPolicyRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.ISetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  setIamPolicy(
    request: protos.google.iam.v1.ISetIamPolicyRequest,
    callback: Callback<
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.ISetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  setIamPolicy(
    request?: protos.google.iam.v1.ISetIamPolicyRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.iam.v1.IPolicy,
          protos.google.iam.v1.ISetIamPolicyRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.ISetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.ISetIamPolicyRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        resource: request.resource ?? '',
      });
    this.initialize();
    return this.innerApiCalls.setIamPolicy(request, options, callback);
  }
  /**
   * Returns the permissions that a caller has.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.resource
   *   REQUIRED: The resource for which the policy detail is being requested.
   *   See the operation documentation for the appropriate value for this field.
   * @param {string[]} request.permissions
   *   The set of permissions to check for the `resource`. Permissions with
   *   wildcards (such as '*' or 'storage.*') are not allowed. For more
   *   information see
   *   [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [TestIamPermissionsResponse]{@link google.iam.v1.TestIamPermissionsResponse}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/analytics_hub_service.test_iam_permissions.js</caption>
   * region_tag:analyticshub_v1_generated_AnalyticsHubService_TestIamPermissions_async
   */
  testIamPermissions(
    request?: protos.google.iam.v1.ITestIamPermissionsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.iam.v1.ITestIamPermissionsResponse,
      protos.google.iam.v1.ITestIamPermissionsRequest | undefined,
      {} | undefined
    ]
  >;
  testIamPermissions(
    request: protos.google.iam.v1.ITestIamPermissionsRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.iam.v1.ITestIamPermissionsResponse,
      protos.google.iam.v1.ITestIamPermissionsRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  testIamPermissions(
    request: protos.google.iam.v1.ITestIamPermissionsRequest,
    callback: Callback<
      protos.google.iam.v1.ITestIamPermissionsResponse,
      protos.google.iam.v1.ITestIamPermissionsRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  testIamPermissions(
    request?: protos.google.iam.v1.ITestIamPermissionsRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.iam.v1.ITestIamPermissionsResponse,
          protos.google.iam.v1.ITestIamPermissionsRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.iam.v1.ITestIamPermissionsResponse,
      protos.google.iam.v1.ITestIamPermissionsRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.iam.v1.ITestIamPermissionsResponse,
      protos.google.iam.v1.ITestIamPermissionsRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        resource: request.resource ?? '',
      });
    this.initialize();
    return this.innerApiCalls.testIamPermissions(request, options, callback);
  }

  /**
   * Lists all data exchanges in a given project and location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent resource path of the data exchanges.
   *   e.g. `projects/myproject/locations/US`.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response page. Leverage
   *   the page tokens to iterate through the entire collection.
   * @param {string} request.pageToken
   *   Page token, returned by a previous call, to request the next page of
   *   results.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [DataExchange]{@link google.cloud.bigquery.analyticshub.v1.DataExchange}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listDataExchangesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listDataExchanges(
    request?: protos.google.cloud.bigquery.analyticshub.v1.IListDataExchangesRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.bigquery.analyticshub.v1.IDataExchange[],
      protos.google.cloud.bigquery.analyticshub.v1.IListDataExchangesRequest | null,
      protos.google.cloud.bigquery.analyticshub.v1.IListDataExchangesResponse
    ]
  >;
  listDataExchanges(
    request: protos.google.cloud.bigquery.analyticshub.v1.IListDataExchangesRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.bigquery.analyticshub.v1.IListDataExchangesRequest,
      | protos.google.cloud.bigquery.analyticshub.v1.IListDataExchangesResponse
      | null
      | undefined,
      protos.google.cloud.bigquery.analyticshub.v1.IDataExchange
    >
  ): void;
  listDataExchanges(
    request: protos.google.cloud.bigquery.analyticshub.v1.IListDataExchangesRequest,
    callback: PaginationCallback<
      protos.google.cloud.bigquery.analyticshub.v1.IListDataExchangesRequest,
      | protos.google.cloud.bigquery.analyticshub.v1.IListDataExchangesResponse
      | null
      | undefined,
      protos.google.cloud.bigquery.analyticshub.v1.IDataExchange
    >
  ): void;
  listDataExchanges(
    request?: protos.google.cloud.bigquery.analyticshub.v1.IListDataExchangesRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.bigquery.analyticshub.v1.IListDataExchangesRequest,
          | protos.google.cloud.bigquery.analyticshub.v1.IListDataExchangesResponse
          | null
          | undefined,
          protos.google.cloud.bigquery.analyticshub.v1.IDataExchange
        >,
    callback?: PaginationCallback<
      protos.google.cloud.bigquery.analyticshub.v1.IListDataExchangesRequest,
      | protos.google.cloud.bigquery.analyticshub.v1.IListDataExchangesResponse
      | null
      | undefined,
      protos.google.cloud.bigquery.analyticshub.v1.IDataExchange
    >
  ): Promise<
    [
      protos.google.cloud.bigquery.analyticshub.v1.IDataExchange[],
      protos.google.cloud.bigquery.analyticshub.v1.IListDataExchangesRequest | null,
      protos.google.cloud.bigquery.analyticshub.v1.IListDataExchangesResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listDataExchanges(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent resource path of the data exchanges.
   *   e.g. `projects/myproject/locations/US`.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response page. Leverage
   *   the page tokens to iterate through the entire collection.
   * @param {string} request.pageToken
   *   Page token, returned by a previous call, to request the next page of
   *   results.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [DataExchange]{@link google.cloud.bigquery.analyticshub.v1.DataExchange} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listDataExchangesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listDataExchangesStream(
    request?: protos.google.cloud.bigquery.analyticshub.v1.IListDataExchangesRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listDataExchanges'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listDataExchanges.createStream(
      this.innerApiCalls.listDataExchanges as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listDataExchanges`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent resource path of the data exchanges.
   *   e.g. `projects/myproject/locations/US`.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response page. Leverage
   *   the page tokens to iterate through the entire collection.
   * @param {string} request.pageToken
   *   Page token, returned by a previous call, to request the next page of
   *   results.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [DataExchange]{@link google.cloud.bigquery.analyticshub.v1.DataExchange}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/analytics_hub_service.list_data_exchanges.js</caption>
   * region_tag:analyticshub_v1_generated_AnalyticsHubService_ListDataExchanges_async
   */
  listDataExchangesAsync(
    request?: protos.google.cloud.bigquery.analyticshub.v1.IListDataExchangesRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.bigquery.analyticshub.v1.IDataExchange> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listDataExchanges'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listDataExchanges.asyncIterate(
      this.innerApiCalls['listDataExchanges'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.bigquery.analyticshub.v1.IDataExchange>;
  }
  /**
   * Lists all data exchanges from projects in a given organization and
   * location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.organization
   *   Required. The organization resource path of the projects containing DataExchanges.
   *   e.g. `organizations/myorg/locations/US`.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response page. Leverage
   *   the page tokens to iterate through the entire collection.
   * @param {string} request.pageToken
   *   Page token, returned by a previous call, to request the next page of
   *   results.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [DataExchange]{@link google.cloud.bigquery.analyticshub.v1.DataExchange}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listOrgDataExchangesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listOrgDataExchanges(
    request?: protos.google.cloud.bigquery.analyticshub.v1.IListOrgDataExchangesRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.bigquery.analyticshub.v1.IDataExchange[],
      protos.google.cloud.bigquery.analyticshub.v1.IListOrgDataExchangesRequest | null,
      protos.google.cloud.bigquery.analyticshub.v1.IListOrgDataExchangesResponse
    ]
  >;
  listOrgDataExchanges(
    request: protos.google.cloud.bigquery.analyticshub.v1.IListOrgDataExchangesRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.bigquery.analyticshub.v1.IListOrgDataExchangesRequest,
      | protos.google.cloud.bigquery.analyticshub.v1.IListOrgDataExchangesResponse
      | null
      | undefined,
      protos.google.cloud.bigquery.analyticshub.v1.IDataExchange
    >
  ): void;
  listOrgDataExchanges(
    request: protos.google.cloud.bigquery.analyticshub.v1.IListOrgDataExchangesRequest,
    callback: PaginationCallback<
      protos.google.cloud.bigquery.analyticshub.v1.IListOrgDataExchangesRequest,
      | protos.google.cloud.bigquery.analyticshub.v1.IListOrgDataExchangesResponse
      | null
      | undefined,
      protos.google.cloud.bigquery.analyticshub.v1.IDataExchange
    >
  ): void;
  listOrgDataExchanges(
    request?: protos.google.cloud.bigquery.analyticshub.v1.IListOrgDataExchangesRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.bigquery.analyticshub.v1.IListOrgDataExchangesRequest,
          | protos.google.cloud.bigquery.analyticshub.v1.IListOrgDataExchangesResponse
          | null
          | undefined,
          protos.google.cloud.bigquery.analyticshub.v1.IDataExchange
        >,
    callback?: PaginationCallback<
      protos.google.cloud.bigquery.analyticshub.v1.IListOrgDataExchangesRequest,
      | protos.google.cloud.bigquery.analyticshub.v1.IListOrgDataExchangesResponse
      | null
      | undefined,
      protos.google.cloud.bigquery.analyticshub.v1.IDataExchange
    >
  ): Promise<
    [
      protos.google.cloud.bigquery.analyticshub.v1.IDataExchange[],
      protos.google.cloud.bigquery.analyticshub.v1.IListOrgDataExchangesRequest | null,
      protos.google.cloud.bigquery.analyticshub.v1.IListOrgDataExchangesResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        organization: request.organization ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listOrgDataExchanges(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.organization
   *   Required. The organization resource path of the projects containing DataExchanges.
   *   e.g. `organizations/myorg/locations/US`.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response page. Leverage
   *   the page tokens to iterate through the entire collection.
   * @param {string} request.pageToken
   *   Page token, returned by a previous call, to request the next page of
   *   results.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [DataExchange]{@link google.cloud.bigquery.analyticshub.v1.DataExchange} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listOrgDataExchangesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listOrgDataExchangesStream(
    request?: protos.google.cloud.bigquery.analyticshub.v1.IListOrgDataExchangesRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        organization: request.organization ?? '',
      });
    const defaultCallSettings = this._defaults['listOrgDataExchanges'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listOrgDataExchanges.createStream(
      this.innerApiCalls.listOrgDataExchanges as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listOrgDataExchanges`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.organization
   *   Required. The organization resource path of the projects containing DataExchanges.
   *   e.g. `organizations/myorg/locations/US`.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response page. Leverage
   *   the page tokens to iterate through the entire collection.
   * @param {string} request.pageToken
   *   Page token, returned by a previous call, to request the next page of
   *   results.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [DataExchange]{@link google.cloud.bigquery.analyticshub.v1.DataExchange}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/analytics_hub_service.list_org_data_exchanges.js</caption>
   * region_tag:analyticshub_v1_generated_AnalyticsHubService_ListOrgDataExchanges_async
   */
  listOrgDataExchangesAsync(
    request?: protos.google.cloud.bigquery.analyticshub.v1.IListOrgDataExchangesRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.bigquery.analyticshub.v1.IDataExchange> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        organization: request.organization ?? '',
      });
    const defaultCallSettings = this._defaults['listOrgDataExchanges'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listOrgDataExchanges.asyncIterate(
      this.innerApiCalls['listOrgDataExchanges'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.bigquery.analyticshub.v1.IDataExchange>;
  }
  /**
   * Lists all listings in a given project and location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent resource path of the listing.
   *   e.g. `projects/myproject/locations/US/dataExchanges/123`.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response page. Leverage
   *   the page tokens to iterate through the entire collection.
   * @param {string} request.pageToken
   *   Page token, returned by a previous call, to request the next page of
   *   results.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [Listing]{@link google.cloud.bigquery.analyticshub.v1.Listing}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listListingsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listListings(
    request?: protos.google.cloud.bigquery.analyticshub.v1.IListListingsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.bigquery.analyticshub.v1.IListing[],
      protos.google.cloud.bigquery.analyticshub.v1.IListListingsRequest | null,
      protos.google.cloud.bigquery.analyticshub.v1.IListListingsResponse
    ]
  >;
  listListings(
    request: protos.google.cloud.bigquery.analyticshub.v1.IListListingsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.bigquery.analyticshub.v1.IListListingsRequest,
      | protos.google.cloud.bigquery.analyticshub.v1.IListListingsResponse
      | null
      | undefined,
      protos.google.cloud.bigquery.analyticshub.v1.IListing
    >
  ): void;
  listListings(
    request: protos.google.cloud.bigquery.analyticshub.v1.IListListingsRequest,
    callback: PaginationCallback<
      protos.google.cloud.bigquery.analyticshub.v1.IListListingsRequest,
      | protos.google.cloud.bigquery.analyticshub.v1.IListListingsResponse
      | null
      | undefined,
      protos.google.cloud.bigquery.analyticshub.v1.IListing
    >
  ): void;
  listListings(
    request?: protos.google.cloud.bigquery.analyticshub.v1.IListListingsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.bigquery.analyticshub.v1.IListListingsRequest,
          | protos.google.cloud.bigquery.analyticshub.v1.IListListingsResponse
          | null
          | undefined,
          protos.google.cloud.bigquery.analyticshub.v1.IListing
        >,
    callback?: PaginationCallback<
      protos.google.cloud.bigquery.analyticshub.v1.IListListingsRequest,
      | protos.google.cloud.bigquery.analyticshub.v1.IListListingsResponse
      | null
      | undefined,
      protos.google.cloud.bigquery.analyticshub.v1.IListing
    >
  ): Promise<
    [
      protos.google.cloud.bigquery.analyticshub.v1.IListing[],
      protos.google.cloud.bigquery.analyticshub.v1.IListListingsRequest | null,
      protos.google.cloud.bigquery.analyticshub.v1.IListListingsResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listListings(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent resource path of the listing.
   *   e.g. `projects/myproject/locations/US/dataExchanges/123`.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response page. Leverage
   *   the page tokens to iterate through the entire collection.
   * @param {string} request.pageToken
   *   Page token, returned by a previous call, to request the next page of
   *   results.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [Listing]{@link google.cloud.bigquery.analyticshub.v1.Listing} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listListingsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listListingsStream(
    request?: protos.google.cloud.bigquery.analyticshub.v1.IListListingsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listListings'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listListings.createStream(
      this.innerApiCalls.listListings as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listListings`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent resource path of the listing.
   *   e.g. `projects/myproject/locations/US/dataExchanges/123`.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response page. Leverage
   *   the page tokens to iterate through the entire collection.
   * @param {string} request.pageToken
   *   Page token, returned by a previous call, to request the next page of
   *   results.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [Listing]{@link google.cloud.bigquery.analyticshub.v1.Listing}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/analytics_hub_service.list_listings.js</caption>
   * region_tag:analyticshub_v1_generated_AnalyticsHubService_ListListings_async
   */
  listListingsAsync(
    request?: protos.google.cloud.bigquery.analyticshub.v1.IListListingsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.bigquery.analyticshub.v1.IListing> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listListings'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listListings.asyncIterate(
      this.innerApiCalls['listListings'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.bigquery.analyticshub.v1.IListing>;
  }
  // --------------------
  // -- Path templates --
  // --------------------

  /**
   * Return a fully-qualified dataExchange resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} data_exchange
   * @returns {string} Resource name string.
   */
  dataExchangePath(project: string, location: string, dataExchange: string) {
    return this.pathTemplates.dataExchangePathTemplate.render({
      project: project,
      location: location,
      data_exchange: dataExchange,
    });
  }

  /**
   * Parse the project from DataExchange resource.
   *
   * @param {string} dataExchangeName
   *   A fully-qualified path representing DataExchange resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromDataExchangeName(dataExchangeName: string) {
    return this.pathTemplates.dataExchangePathTemplate.match(dataExchangeName)
      .project;
  }

  /**
   * Parse the location from DataExchange resource.
   *
   * @param {string} dataExchangeName
   *   A fully-qualified path representing DataExchange resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromDataExchangeName(dataExchangeName: string) {
    return this.pathTemplates.dataExchangePathTemplate.match(dataExchangeName)
      .location;
  }

  /**
   * Parse the data_exchange from DataExchange resource.
   *
   * @param {string} dataExchangeName
   *   A fully-qualified path representing DataExchange resource.
   * @returns {string} A string representing the data_exchange.
   */
  matchDataExchangeFromDataExchangeName(dataExchangeName: string) {
    return this.pathTemplates.dataExchangePathTemplate.match(dataExchangeName)
      .data_exchange;
  }

  /**
   * Return a fully-qualified listing resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} data_exchange
   * @param {string} listing
   * @returns {string} Resource name string.
   */
  listingPath(
    project: string,
    location: string,
    dataExchange: string,
    listing: string
  ) {
    return this.pathTemplates.listingPathTemplate.render({
      project: project,
      location: location,
      data_exchange: dataExchange,
      listing: listing,
    });
  }

  /**
   * Parse the project from Listing resource.
   *
   * @param {string} listingName
   *   A fully-qualified path representing Listing resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromListingName(listingName: string) {
    return this.pathTemplates.listingPathTemplate.match(listingName).project;
  }

  /**
   * Parse the location from Listing resource.
   *
   * @param {string} listingName
   *   A fully-qualified path representing Listing resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromListingName(listingName: string) {
    return this.pathTemplates.listingPathTemplate.match(listingName).location;
  }

  /**
   * Parse the data_exchange from Listing resource.
   *
   * @param {string} listingName
   *   A fully-qualified path representing Listing resource.
   * @returns {string} A string representing the data_exchange.
   */
  matchDataExchangeFromListingName(listingName: string) {
    return this.pathTemplates.listingPathTemplate.match(listingName)
      .data_exchange;
  }

  /**
   * Parse the listing from Listing resource.
   *
   * @param {string} listingName
   *   A fully-qualified path representing Listing resource.
   * @returns {string} A string representing the listing.
   */
  matchListingFromListingName(listingName: string) {
    return this.pathTemplates.listingPathTemplate.match(listingName).listing;
  }

  /**
   * Return a fully-qualified location resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @returns {string} Resource name string.
   */
  locationPath(project: string, location: string) {
    return this.pathTemplates.locationPathTemplate.render({
      project: project,
      location: location,
    });
  }

  /**
   * Parse the project from Location resource.
   *
   * @param {string} locationName
   *   A fully-qualified path representing Location resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromLocationName(locationName: string) {
    return this.pathTemplates.locationPathTemplate.match(locationName).project;
  }

  /**
   * Parse the location from Location resource.
   *
   * @param {string} locationName
   *   A fully-qualified path representing Location resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromLocationName(locationName: string) {
    return this.pathTemplates.locationPathTemplate.match(locationName).location;
  }

  /**
   * Terminate the gRPC channel and close the client.
   *
   * The client will no longer be usable and all future behavior is undefined.
   * @returns {Promise} A promise that resolves when the client is closed.
   */
  close(): Promise<void> {
    if (this.analyticsHubServiceStub && !this._terminated) {
      return this.analyticsHubServiceStub.then(stub => {
        this._terminated = true;
        stub.close();
      });
    }
    return Promise.resolve();
  }
}
