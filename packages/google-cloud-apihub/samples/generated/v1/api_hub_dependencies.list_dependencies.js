// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(parent) {
  // [START apihub_v1_generated_ApiHubDependencies_ListDependencies_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The parent which owns this collection of dependency resources.
   *  Format: `projects/{project}/locations/{location}`
   */
  // const parent = 'abc123'
  /**
   *  Optional. An expression that filters the list of Dependencies.
   *  A filter expression consists of a field name, a comparison operator, and
   *  a value for filtering. The value must be a string. Allowed comparison
   *  operator is `=`. Filters are not case sensitive.
   *  The following fields in the `Dependency` are eligible for filtering:
   *    * `consumer.operation_resource_name` - The operation resource name for
   *    the consumer entity involved in a dependency. Allowed comparison
   *    operators: `=`.
   *    * `consumer.external_api_resource_name` - The external api resource name
   *    for the consumer entity involved in a dependency. Allowed comparison
   *    operators: `=`.
   *    * `supplier.operation_resource_name` - The operation resource name for
   *    the supplier entity involved in a dependency. Allowed comparison
   *    operators: `=`.
   *    * `supplier.external_api_resource_name` - The external api resource name
   *    for the supplier entity involved in a dependency. Allowed comparison
   *    operators: `=`.
   *  Expressions are combined with either `AND` logic operator or `OR` logical
   *  operator but not both of them together i.e. only one of the `AND` or `OR`
   *  operator can be used throughout the filter string and both the operators
   *  cannot be used together. No other logical operators are supported. At most
   *  three filter fields are allowed in the filter string and if provided
   *  more than that then `INVALID_ARGUMENT` error is returned by the API.
   *  For example, `consumer.operation_resource_name =
   *  \"projects/p1/locations/global/apis/a1/versions/v1/operations/o1\" OR
   *  supplier.operation_resource_name =
   *  \"projects/p1/locations/global/apis/a1/versions/v1/operations/o1\"` - The
   *  dependencies with either consumer or supplier operation resource name as
   *  _projects/p1/locations/global/apis/a1/versions/v1/operations/o1_.
   */
  // const filter = 'abc123'
  /**
   *  Optional. The maximum number of dependency resources to return. The service
   *  may return fewer than this value. If unspecified, at most 50 dependencies
   *  will be returned. The maximum value is 1000; values above 1000 will be
   *  coerced to 1000.
   */
  // const pageSize = 1234
  /**
   *  Optional. A page token, received from a previous `ListDependencies` call.
   *  Provide this to retrieve the subsequent page.
   *  When paginating, all other parameters provided to `ListDependencies` must
   *  match the call that provided the page token.
   */
  // const pageToken = 'abc123'

  // Imports the Apihub library
  const {ApiHubDependenciesClient} = require('@google-cloud/apihub').v1;

  // Instantiates a client
  const apihubClient = new ApiHubDependenciesClient();

  async function callListDependencies() {
    // Construct request
    const request = {
      parent,
    };

    // Run request
    const iterable = apihubClient.listDependenciesAsync(request);
    for await (const response of iterable) {
        console.log(response);
    }
  }

  callListDependencies();
  // [END apihub_v1_generated_ApiHubDependencies_ListDependencies_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
