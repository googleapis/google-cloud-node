// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("google-gax/build/src/protobuf").protobufMinimal);

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots._google_cloud_datastream_protos || ($protobuf.roots._google_cloud_datastream_protos = {});
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.cloud = (function() {
    
            /**
             * Namespace cloud.
             * @memberof google
             * @namespace
             */
            var cloud = {};
    
            cloud.datastream = (function() {
    
                /**
                 * Namespace datastream.
                 * @memberof google.cloud
                 * @namespace
                 */
                var datastream = {};
    
                datastream.v1 = (function() {
    
                    /**
                     * Namespace v1.
                     * @memberof google.cloud.datastream
                     * @namespace
                     */
                    var v1 = {};
    
                    v1.Datastream = (function() {
    
                        /**
                         * Constructs a new Datastream service.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a Datastream
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function Datastream(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (Datastream.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Datastream;
    
                        /**
                         * Creates new Datastream service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {Datastream} RPC service. Useful where requests and/or responses are streamed.
                         */
                        Datastream.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1.Datastream|listConnectionProfiles}.
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @typedef ListConnectionProfilesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.datastream.v1.ListConnectionProfilesResponse} [response] ListConnectionProfilesResponse
                         */
    
                        /**
                         * Calls ListConnectionProfiles.
                         * @function listConnectionProfiles
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IListConnectionProfilesRequest} request ListConnectionProfilesRequest message or plain object
                         * @param {google.cloud.datastream.v1.Datastream.ListConnectionProfilesCallback} callback Node-style callback called with the error, if any, and ListConnectionProfilesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.listConnectionProfiles = function listConnectionProfiles(request, callback) {
                            return this.rpcCall(listConnectionProfiles, $root.google.cloud.datastream.v1.ListConnectionProfilesRequest, $root.google.cloud.datastream.v1.ListConnectionProfilesResponse, request, callback);
                        }, "name", { value: "ListConnectionProfiles" });
    
                        /**
                         * Calls ListConnectionProfiles.
                         * @function listConnectionProfiles
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IListConnectionProfilesRequest} request ListConnectionProfilesRequest message or plain object
                         * @returns {Promise<google.cloud.datastream.v1.ListConnectionProfilesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1.Datastream|getConnectionProfile}.
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @typedef GetConnectionProfileCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.datastream.v1.ConnectionProfile} [response] ConnectionProfile
                         */
    
                        /**
                         * Calls GetConnectionProfile.
                         * @function getConnectionProfile
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IGetConnectionProfileRequest} request GetConnectionProfileRequest message or plain object
                         * @param {google.cloud.datastream.v1.Datastream.GetConnectionProfileCallback} callback Node-style callback called with the error, if any, and ConnectionProfile
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.getConnectionProfile = function getConnectionProfile(request, callback) {
                            return this.rpcCall(getConnectionProfile, $root.google.cloud.datastream.v1.GetConnectionProfileRequest, $root.google.cloud.datastream.v1.ConnectionProfile, request, callback);
                        }, "name", { value: "GetConnectionProfile" });
    
                        /**
                         * Calls GetConnectionProfile.
                         * @function getConnectionProfile
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IGetConnectionProfileRequest} request GetConnectionProfileRequest message or plain object
                         * @returns {Promise<google.cloud.datastream.v1.ConnectionProfile>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1.Datastream|createConnectionProfile}.
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @typedef CreateConnectionProfileCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateConnectionProfile.
                         * @function createConnectionProfile
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.ICreateConnectionProfileRequest} request CreateConnectionProfileRequest message or plain object
                         * @param {google.cloud.datastream.v1.Datastream.CreateConnectionProfileCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.createConnectionProfile = function createConnectionProfile(request, callback) {
                            return this.rpcCall(createConnectionProfile, $root.google.cloud.datastream.v1.CreateConnectionProfileRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateConnectionProfile" });
    
                        /**
                         * Calls CreateConnectionProfile.
                         * @function createConnectionProfile
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.ICreateConnectionProfileRequest} request CreateConnectionProfileRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1.Datastream|updateConnectionProfile}.
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @typedef UpdateConnectionProfileCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateConnectionProfile.
                         * @function updateConnectionProfile
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IUpdateConnectionProfileRequest} request UpdateConnectionProfileRequest message or plain object
                         * @param {google.cloud.datastream.v1.Datastream.UpdateConnectionProfileCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.updateConnectionProfile = function updateConnectionProfile(request, callback) {
                            return this.rpcCall(updateConnectionProfile, $root.google.cloud.datastream.v1.UpdateConnectionProfileRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateConnectionProfile" });
    
                        /**
                         * Calls UpdateConnectionProfile.
                         * @function updateConnectionProfile
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IUpdateConnectionProfileRequest} request UpdateConnectionProfileRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1.Datastream|deleteConnectionProfile}.
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @typedef DeleteConnectionProfileCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteConnectionProfile.
                         * @function deleteConnectionProfile
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IDeleteConnectionProfileRequest} request DeleteConnectionProfileRequest message or plain object
                         * @param {google.cloud.datastream.v1.Datastream.DeleteConnectionProfileCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.deleteConnectionProfile = function deleteConnectionProfile(request, callback) {
                            return this.rpcCall(deleteConnectionProfile, $root.google.cloud.datastream.v1.DeleteConnectionProfileRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteConnectionProfile" });
    
                        /**
                         * Calls DeleteConnectionProfile.
                         * @function deleteConnectionProfile
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IDeleteConnectionProfileRequest} request DeleteConnectionProfileRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1.Datastream|discoverConnectionProfile}.
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @typedef DiscoverConnectionProfileCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.datastream.v1.DiscoverConnectionProfileResponse} [response] DiscoverConnectionProfileResponse
                         */
    
                        /**
                         * Calls DiscoverConnectionProfile.
                         * @function discoverConnectionProfile
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IDiscoverConnectionProfileRequest} request DiscoverConnectionProfileRequest message or plain object
                         * @param {google.cloud.datastream.v1.Datastream.DiscoverConnectionProfileCallback} callback Node-style callback called with the error, if any, and DiscoverConnectionProfileResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.discoverConnectionProfile = function discoverConnectionProfile(request, callback) {
                            return this.rpcCall(discoverConnectionProfile, $root.google.cloud.datastream.v1.DiscoverConnectionProfileRequest, $root.google.cloud.datastream.v1.DiscoverConnectionProfileResponse, request, callback);
                        }, "name", { value: "DiscoverConnectionProfile" });
    
                        /**
                         * Calls DiscoverConnectionProfile.
                         * @function discoverConnectionProfile
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IDiscoverConnectionProfileRequest} request DiscoverConnectionProfileRequest message or plain object
                         * @returns {Promise<google.cloud.datastream.v1.DiscoverConnectionProfileResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1.Datastream|listStreams}.
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @typedef ListStreamsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.datastream.v1.ListStreamsResponse} [response] ListStreamsResponse
                         */
    
                        /**
                         * Calls ListStreams.
                         * @function listStreams
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IListStreamsRequest} request ListStreamsRequest message or plain object
                         * @param {google.cloud.datastream.v1.Datastream.ListStreamsCallback} callback Node-style callback called with the error, if any, and ListStreamsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.listStreams = function listStreams(request, callback) {
                            return this.rpcCall(listStreams, $root.google.cloud.datastream.v1.ListStreamsRequest, $root.google.cloud.datastream.v1.ListStreamsResponse, request, callback);
                        }, "name", { value: "ListStreams" });
    
                        /**
                         * Calls ListStreams.
                         * @function listStreams
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IListStreamsRequest} request ListStreamsRequest message or plain object
                         * @returns {Promise<google.cloud.datastream.v1.ListStreamsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1.Datastream|getStream}.
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @typedef GetStreamCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.datastream.v1.Stream} [response] Stream
                         */
    
                        /**
                         * Calls GetStream.
                         * @function getStream
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IGetStreamRequest} request GetStreamRequest message or plain object
                         * @param {google.cloud.datastream.v1.Datastream.GetStreamCallback} callback Node-style callback called with the error, if any, and Stream
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.getStream = function getStream(request, callback) {
                            return this.rpcCall(getStream, $root.google.cloud.datastream.v1.GetStreamRequest, $root.google.cloud.datastream.v1.Stream, request, callback);
                        }, "name", { value: "GetStream" });
    
                        /**
                         * Calls GetStream.
                         * @function getStream
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IGetStreamRequest} request GetStreamRequest message or plain object
                         * @returns {Promise<google.cloud.datastream.v1.Stream>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1.Datastream|createStream}.
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @typedef CreateStreamCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateStream.
                         * @function createStream
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.ICreateStreamRequest} request CreateStreamRequest message or plain object
                         * @param {google.cloud.datastream.v1.Datastream.CreateStreamCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.createStream = function createStream(request, callback) {
                            return this.rpcCall(createStream, $root.google.cloud.datastream.v1.CreateStreamRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateStream" });
    
                        /**
                         * Calls CreateStream.
                         * @function createStream
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.ICreateStreamRequest} request CreateStreamRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1.Datastream|updateStream}.
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @typedef UpdateStreamCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateStream.
                         * @function updateStream
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IUpdateStreamRequest} request UpdateStreamRequest message or plain object
                         * @param {google.cloud.datastream.v1.Datastream.UpdateStreamCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.updateStream = function updateStream(request, callback) {
                            return this.rpcCall(updateStream, $root.google.cloud.datastream.v1.UpdateStreamRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateStream" });
    
                        /**
                         * Calls UpdateStream.
                         * @function updateStream
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IUpdateStreamRequest} request UpdateStreamRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1.Datastream|deleteStream}.
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @typedef DeleteStreamCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteStream.
                         * @function deleteStream
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IDeleteStreamRequest} request DeleteStreamRequest message or plain object
                         * @param {google.cloud.datastream.v1.Datastream.DeleteStreamCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.deleteStream = function deleteStream(request, callback) {
                            return this.rpcCall(deleteStream, $root.google.cloud.datastream.v1.DeleteStreamRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteStream" });
    
                        /**
                         * Calls DeleteStream.
                         * @function deleteStream
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IDeleteStreamRequest} request DeleteStreamRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1.Datastream|getStreamObject}.
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @typedef GetStreamObjectCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.datastream.v1.StreamObject} [response] StreamObject
                         */
    
                        /**
                         * Calls GetStreamObject.
                         * @function getStreamObject
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IGetStreamObjectRequest} request GetStreamObjectRequest message or plain object
                         * @param {google.cloud.datastream.v1.Datastream.GetStreamObjectCallback} callback Node-style callback called with the error, if any, and StreamObject
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.getStreamObject = function getStreamObject(request, callback) {
                            return this.rpcCall(getStreamObject, $root.google.cloud.datastream.v1.GetStreamObjectRequest, $root.google.cloud.datastream.v1.StreamObject, request, callback);
                        }, "name", { value: "GetStreamObject" });
    
                        /**
                         * Calls GetStreamObject.
                         * @function getStreamObject
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IGetStreamObjectRequest} request GetStreamObjectRequest message or plain object
                         * @returns {Promise<google.cloud.datastream.v1.StreamObject>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1.Datastream|lookupStreamObject}.
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @typedef LookupStreamObjectCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.datastream.v1.StreamObject} [response] StreamObject
                         */
    
                        /**
                         * Calls LookupStreamObject.
                         * @function lookupStreamObject
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.ILookupStreamObjectRequest} request LookupStreamObjectRequest message or plain object
                         * @param {google.cloud.datastream.v1.Datastream.LookupStreamObjectCallback} callback Node-style callback called with the error, if any, and StreamObject
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.lookupStreamObject = function lookupStreamObject(request, callback) {
                            return this.rpcCall(lookupStreamObject, $root.google.cloud.datastream.v1.LookupStreamObjectRequest, $root.google.cloud.datastream.v1.StreamObject, request, callback);
                        }, "name", { value: "LookupStreamObject" });
    
                        /**
                         * Calls LookupStreamObject.
                         * @function lookupStreamObject
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.ILookupStreamObjectRequest} request LookupStreamObjectRequest message or plain object
                         * @returns {Promise<google.cloud.datastream.v1.StreamObject>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1.Datastream|listStreamObjects}.
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @typedef ListStreamObjectsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.datastream.v1.ListStreamObjectsResponse} [response] ListStreamObjectsResponse
                         */
    
                        /**
                         * Calls ListStreamObjects.
                         * @function listStreamObjects
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IListStreamObjectsRequest} request ListStreamObjectsRequest message or plain object
                         * @param {google.cloud.datastream.v1.Datastream.ListStreamObjectsCallback} callback Node-style callback called with the error, if any, and ListStreamObjectsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.listStreamObjects = function listStreamObjects(request, callback) {
                            return this.rpcCall(listStreamObjects, $root.google.cloud.datastream.v1.ListStreamObjectsRequest, $root.google.cloud.datastream.v1.ListStreamObjectsResponse, request, callback);
                        }, "name", { value: "ListStreamObjects" });
    
                        /**
                         * Calls ListStreamObjects.
                         * @function listStreamObjects
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IListStreamObjectsRequest} request ListStreamObjectsRequest message or plain object
                         * @returns {Promise<google.cloud.datastream.v1.ListStreamObjectsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1.Datastream|startBackfillJob}.
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @typedef StartBackfillJobCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.datastream.v1.StartBackfillJobResponse} [response] StartBackfillJobResponse
                         */
    
                        /**
                         * Calls StartBackfillJob.
                         * @function startBackfillJob
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IStartBackfillJobRequest} request StartBackfillJobRequest message or plain object
                         * @param {google.cloud.datastream.v1.Datastream.StartBackfillJobCallback} callback Node-style callback called with the error, if any, and StartBackfillJobResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.startBackfillJob = function startBackfillJob(request, callback) {
                            return this.rpcCall(startBackfillJob, $root.google.cloud.datastream.v1.StartBackfillJobRequest, $root.google.cloud.datastream.v1.StartBackfillJobResponse, request, callback);
                        }, "name", { value: "StartBackfillJob" });
    
                        /**
                         * Calls StartBackfillJob.
                         * @function startBackfillJob
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IStartBackfillJobRequest} request StartBackfillJobRequest message or plain object
                         * @returns {Promise<google.cloud.datastream.v1.StartBackfillJobResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1.Datastream|stopBackfillJob}.
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @typedef StopBackfillJobCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.datastream.v1.StopBackfillJobResponse} [response] StopBackfillJobResponse
                         */
    
                        /**
                         * Calls StopBackfillJob.
                         * @function stopBackfillJob
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IStopBackfillJobRequest} request StopBackfillJobRequest message or plain object
                         * @param {google.cloud.datastream.v1.Datastream.StopBackfillJobCallback} callback Node-style callback called with the error, if any, and StopBackfillJobResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.stopBackfillJob = function stopBackfillJob(request, callback) {
                            return this.rpcCall(stopBackfillJob, $root.google.cloud.datastream.v1.StopBackfillJobRequest, $root.google.cloud.datastream.v1.StopBackfillJobResponse, request, callback);
                        }, "name", { value: "StopBackfillJob" });
    
                        /**
                         * Calls StopBackfillJob.
                         * @function stopBackfillJob
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IStopBackfillJobRequest} request StopBackfillJobRequest message or plain object
                         * @returns {Promise<google.cloud.datastream.v1.StopBackfillJobResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1.Datastream|fetchStaticIps}.
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @typedef FetchStaticIpsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.datastream.v1.FetchStaticIpsResponse} [response] FetchStaticIpsResponse
                         */
    
                        /**
                         * Calls FetchStaticIps.
                         * @function fetchStaticIps
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IFetchStaticIpsRequest} request FetchStaticIpsRequest message or plain object
                         * @param {google.cloud.datastream.v1.Datastream.FetchStaticIpsCallback} callback Node-style callback called with the error, if any, and FetchStaticIpsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.fetchStaticIps = function fetchStaticIps(request, callback) {
                            return this.rpcCall(fetchStaticIps, $root.google.cloud.datastream.v1.FetchStaticIpsRequest, $root.google.cloud.datastream.v1.FetchStaticIpsResponse, request, callback);
                        }, "name", { value: "FetchStaticIps" });
    
                        /**
                         * Calls FetchStaticIps.
                         * @function fetchStaticIps
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IFetchStaticIpsRequest} request FetchStaticIpsRequest message or plain object
                         * @returns {Promise<google.cloud.datastream.v1.FetchStaticIpsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1.Datastream|createPrivateConnection}.
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @typedef CreatePrivateConnectionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreatePrivateConnection.
                         * @function createPrivateConnection
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.ICreatePrivateConnectionRequest} request CreatePrivateConnectionRequest message or plain object
                         * @param {google.cloud.datastream.v1.Datastream.CreatePrivateConnectionCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.createPrivateConnection = function createPrivateConnection(request, callback) {
                            return this.rpcCall(createPrivateConnection, $root.google.cloud.datastream.v1.CreatePrivateConnectionRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreatePrivateConnection" });
    
                        /**
                         * Calls CreatePrivateConnection.
                         * @function createPrivateConnection
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.ICreatePrivateConnectionRequest} request CreatePrivateConnectionRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1.Datastream|getPrivateConnection}.
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @typedef GetPrivateConnectionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.datastream.v1.PrivateConnection} [response] PrivateConnection
                         */
    
                        /**
                         * Calls GetPrivateConnection.
                         * @function getPrivateConnection
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IGetPrivateConnectionRequest} request GetPrivateConnectionRequest message or plain object
                         * @param {google.cloud.datastream.v1.Datastream.GetPrivateConnectionCallback} callback Node-style callback called with the error, if any, and PrivateConnection
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.getPrivateConnection = function getPrivateConnection(request, callback) {
                            return this.rpcCall(getPrivateConnection, $root.google.cloud.datastream.v1.GetPrivateConnectionRequest, $root.google.cloud.datastream.v1.PrivateConnection, request, callback);
                        }, "name", { value: "GetPrivateConnection" });
    
                        /**
                         * Calls GetPrivateConnection.
                         * @function getPrivateConnection
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IGetPrivateConnectionRequest} request GetPrivateConnectionRequest message or plain object
                         * @returns {Promise<google.cloud.datastream.v1.PrivateConnection>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1.Datastream|listPrivateConnections}.
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @typedef ListPrivateConnectionsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.datastream.v1.ListPrivateConnectionsResponse} [response] ListPrivateConnectionsResponse
                         */
    
                        /**
                         * Calls ListPrivateConnections.
                         * @function listPrivateConnections
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IListPrivateConnectionsRequest} request ListPrivateConnectionsRequest message or plain object
                         * @param {google.cloud.datastream.v1.Datastream.ListPrivateConnectionsCallback} callback Node-style callback called with the error, if any, and ListPrivateConnectionsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.listPrivateConnections = function listPrivateConnections(request, callback) {
                            return this.rpcCall(listPrivateConnections, $root.google.cloud.datastream.v1.ListPrivateConnectionsRequest, $root.google.cloud.datastream.v1.ListPrivateConnectionsResponse, request, callback);
                        }, "name", { value: "ListPrivateConnections" });
    
                        /**
                         * Calls ListPrivateConnections.
                         * @function listPrivateConnections
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IListPrivateConnectionsRequest} request ListPrivateConnectionsRequest message or plain object
                         * @returns {Promise<google.cloud.datastream.v1.ListPrivateConnectionsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1.Datastream|deletePrivateConnection}.
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @typedef DeletePrivateConnectionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeletePrivateConnection.
                         * @function deletePrivateConnection
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IDeletePrivateConnectionRequest} request DeletePrivateConnectionRequest message or plain object
                         * @param {google.cloud.datastream.v1.Datastream.DeletePrivateConnectionCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.deletePrivateConnection = function deletePrivateConnection(request, callback) {
                            return this.rpcCall(deletePrivateConnection, $root.google.cloud.datastream.v1.DeletePrivateConnectionRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeletePrivateConnection" });
    
                        /**
                         * Calls DeletePrivateConnection.
                         * @function deletePrivateConnection
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IDeletePrivateConnectionRequest} request DeletePrivateConnectionRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1.Datastream|createRoute}.
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @typedef CreateRouteCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateRoute.
                         * @function createRoute
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.ICreateRouteRequest} request CreateRouteRequest message or plain object
                         * @param {google.cloud.datastream.v1.Datastream.CreateRouteCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.createRoute = function createRoute(request, callback) {
                            return this.rpcCall(createRoute, $root.google.cloud.datastream.v1.CreateRouteRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateRoute" });
    
                        /**
                         * Calls CreateRoute.
                         * @function createRoute
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.ICreateRouteRequest} request CreateRouteRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1.Datastream|getRoute}.
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @typedef GetRouteCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.datastream.v1.Route} [response] Route
                         */
    
                        /**
                         * Calls GetRoute.
                         * @function getRoute
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IGetRouteRequest} request GetRouteRequest message or plain object
                         * @param {google.cloud.datastream.v1.Datastream.GetRouteCallback} callback Node-style callback called with the error, if any, and Route
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.getRoute = function getRoute(request, callback) {
                            return this.rpcCall(getRoute, $root.google.cloud.datastream.v1.GetRouteRequest, $root.google.cloud.datastream.v1.Route, request, callback);
                        }, "name", { value: "GetRoute" });
    
                        /**
                         * Calls GetRoute.
                         * @function getRoute
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IGetRouteRequest} request GetRouteRequest message or plain object
                         * @returns {Promise<google.cloud.datastream.v1.Route>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1.Datastream|listRoutes}.
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @typedef ListRoutesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.datastream.v1.ListRoutesResponse} [response] ListRoutesResponse
                         */
    
                        /**
                         * Calls ListRoutes.
                         * @function listRoutes
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IListRoutesRequest} request ListRoutesRequest message or plain object
                         * @param {google.cloud.datastream.v1.Datastream.ListRoutesCallback} callback Node-style callback called with the error, if any, and ListRoutesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.listRoutes = function listRoutes(request, callback) {
                            return this.rpcCall(listRoutes, $root.google.cloud.datastream.v1.ListRoutesRequest, $root.google.cloud.datastream.v1.ListRoutesResponse, request, callback);
                        }, "name", { value: "ListRoutes" });
    
                        /**
                         * Calls ListRoutes.
                         * @function listRoutes
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IListRoutesRequest} request ListRoutesRequest message or plain object
                         * @returns {Promise<google.cloud.datastream.v1.ListRoutesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1.Datastream|deleteRoute}.
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @typedef DeleteRouteCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteRoute.
                         * @function deleteRoute
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IDeleteRouteRequest} request DeleteRouteRequest message or plain object
                         * @param {google.cloud.datastream.v1.Datastream.DeleteRouteCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.deleteRoute = function deleteRoute(request, callback) {
                            return this.rpcCall(deleteRoute, $root.google.cloud.datastream.v1.DeleteRouteRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteRoute" });
    
                        /**
                         * Calls DeleteRoute.
                         * @function deleteRoute
                         * @memberof google.cloud.datastream.v1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1.IDeleteRouteRequest} request DeleteRouteRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        return Datastream;
                    })();
    
                    v1.DiscoverConnectionProfileRequest = (function() {
    
                        /**
                         * Properties of a DiscoverConnectionProfileRequest.
                         * @memberof google.cloud.datastream.v1
                         * @interface IDiscoverConnectionProfileRequest
                         * @property {string|null} [parent] DiscoverConnectionProfileRequest parent
                         * @property {google.cloud.datastream.v1.IConnectionProfile|null} [connectionProfile] DiscoverConnectionProfileRequest connectionProfile
                         * @property {string|null} [connectionProfileName] DiscoverConnectionProfileRequest connectionProfileName
                         * @property {boolean|null} [fullHierarchy] DiscoverConnectionProfileRequest fullHierarchy
                         * @property {number|null} [hierarchyDepth] DiscoverConnectionProfileRequest hierarchyDepth
                         * @property {google.cloud.datastream.v1.IOracleRdbms|null} [oracleRdbms] DiscoverConnectionProfileRequest oracleRdbms
                         * @property {google.cloud.datastream.v1.IMysqlRdbms|null} [mysqlRdbms] DiscoverConnectionProfileRequest mysqlRdbms
                         * @property {google.cloud.datastream.v1.IPostgresqlRdbms|null} [postgresqlRdbms] DiscoverConnectionProfileRequest postgresqlRdbms
                         */
    
                        /**
                         * Constructs a new DiscoverConnectionProfileRequest.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a DiscoverConnectionProfileRequest.
                         * @implements IDiscoverConnectionProfileRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1.IDiscoverConnectionProfileRequest=} [properties] Properties to set
                         */
                        function DiscoverConnectionProfileRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DiscoverConnectionProfileRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.datastream.v1.DiscoverConnectionProfileRequest
                         * @instance
                         */
                        DiscoverConnectionProfileRequest.prototype.parent = "";
    
                        /**
                         * DiscoverConnectionProfileRequest connectionProfile.
                         * @member {google.cloud.datastream.v1.IConnectionProfile|null|undefined} connectionProfile
                         * @memberof google.cloud.datastream.v1.DiscoverConnectionProfileRequest
                         * @instance
                         */
                        DiscoverConnectionProfileRequest.prototype.connectionProfile = null;
    
                        /**
                         * DiscoverConnectionProfileRequest connectionProfileName.
                         * @member {string|null|undefined} connectionProfileName
                         * @memberof google.cloud.datastream.v1.DiscoverConnectionProfileRequest
                         * @instance
                         */
                        DiscoverConnectionProfileRequest.prototype.connectionProfileName = null;
    
                        /**
                         * DiscoverConnectionProfileRequest fullHierarchy.
                         * @member {boolean|null|undefined} fullHierarchy
                         * @memberof google.cloud.datastream.v1.DiscoverConnectionProfileRequest
                         * @instance
                         */
                        DiscoverConnectionProfileRequest.prototype.fullHierarchy = null;
    
                        /**
                         * DiscoverConnectionProfileRequest hierarchyDepth.
                         * @member {number|null|undefined} hierarchyDepth
                         * @memberof google.cloud.datastream.v1.DiscoverConnectionProfileRequest
                         * @instance
                         */
                        DiscoverConnectionProfileRequest.prototype.hierarchyDepth = null;
    
                        /**
                         * DiscoverConnectionProfileRequest oracleRdbms.
                         * @member {google.cloud.datastream.v1.IOracleRdbms|null|undefined} oracleRdbms
                         * @memberof google.cloud.datastream.v1.DiscoverConnectionProfileRequest
                         * @instance
                         */
                        DiscoverConnectionProfileRequest.prototype.oracleRdbms = null;
    
                        /**
                         * DiscoverConnectionProfileRequest mysqlRdbms.
                         * @member {google.cloud.datastream.v1.IMysqlRdbms|null|undefined} mysqlRdbms
                         * @memberof google.cloud.datastream.v1.DiscoverConnectionProfileRequest
                         * @instance
                         */
                        DiscoverConnectionProfileRequest.prototype.mysqlRdbms = null;
    
                        /**
                         * DiscoverConnectionProfileRequest postgresqlRdbms.
                         * @member {google.cloud.datastream.v1.IPostgresqlRdbms|null|undefined} postgresqlRdbms
                         * @memberof google.cloud.datastream.v1.DiscoverConnectionProfileRequest
                         * @instance
                         */
                        DiscoverConnectionProfileRequest.prototype.postgresqlRdbms = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * DiscoverConnectionProfileRequest target.
                         * @member {"connectionProfile"|"connectionProfileName"|undefined} target
                         * @memberof google.cloud.datastream.v1.DiscoverConnectionProfileRequest
                         * @instance
                         */
                        Object.defineProperty(DiscoverConnectionProfileRequest.prototype, "target", {
                            get: $util.oneOfGetter($oneOfFields = ["connectionProfile", "connectionProfileName"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * DiscoverConnectionProfileRequest hierarchy.
                         * @member {"fullHierarchy"|"hierarchyDepth"|undefined} hierarchy
                         * @memberof google.cloud.datastream.v1.DiscoverConnectionProfileRequest
                         * @instance
                         */
                        Object.defineProperty(DiscoverConnectionProfileRequest.prototype, "hierarchy", {
                            get: $util.oneOfGetter($oneOfFields = ["fullHierarchy", "hierarchyDepth"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * DiscoverConnectionProfileRequest dataObject.
                         * @member {"oracleRdbms"|"mysqlRdbms"|"postgresqlRdbms"|undefined} dataObject
                         * @memberof google.cloud.datastream.v1.DiscoverConnectionProfileRequest
                         * @instance
                         */
                        Object.defineProperty(DiscoverConnectionProfileRequest.prototype, "dataObject", {
                            get: $util.oneOfGetter($oneOfFields = ["oracleRdbms", "mysqlRdbms", "postgresqlRdbms"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new DiscoverConnectionProfileRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.DiscoverConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IDiscoverConnectionProfileRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.DiscoverConnectionProfileRequest} DiscoverConnectionProfileRequest instance
                         */
                        DiscoverConnectionProfileRequest.create = function create(properties) {
                            return new DiscoverConnectionProfileRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DiscoverConnectionProfileRequest message. Does not implicitly {@link google.cloud.datastream.v1.DiscoverConnectionProfileRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.DiscoverConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IDiscoverConnectionProfileRequest} message DiscoverConnectionProfileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DiscoverConnectionProfileRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.fullHierarchy != null && Object.hasOwnProperty.call(message, "fullHierarchy"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.fullHierarchy);
                            if (message.hierarchyDepth != null && Object.hasOwnProperty.call(message, "hierarchyDepth"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.hierarchyDepth);
                            if (message.oracleRdbms != null && Object.hasOwnProperty.call(message, "oracleRdbms"))
                                $root.google.cloud.datastream.v1.OracleRdbms.encode(message.oracleRdbms, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            if (message.mysqlRdbms != null && Object.hasOwnProperty.call(message, "mysqlRdbms"))
                                $root.google.cloud.datastream.v1.MysqlRdbms.encode(message.mysqlRdbms, writer.uint32(/* id 101, wireType 2 =*/810).fork()).ldelim();
                            if (message.postgresqlRdbms != null && Object.hasOwnProperty.call(message, "postgresqlRdbms"))
                                $root.google.cloud.datastream.v1.PostgresqlRdbms.encode(message.postgresqlRdbms, writer.uint32(/* id 102, wireType 2 =*/818).fork()).ldelim();
                            if (message.connectionProfile != null && Object.hasOwnProperty.call(message, "connectionProfile"))
                                $root.google.cloud.datastream.v1.ConnectionProfile.encode(message.connectionProfile, writer.uint32(/* id 200, wireType 2 =*/1602).fork()).ldelim();
                            if (message.connectionProfileName != null && Object.hasOwnProperty.call(message, "connectionProfileName"))
                                writer.uint32(/* id 201, wireType 2 =*/1610).string(message.connectionProfileName);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DiscoverConnectionProfileRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.DiscoverConnectionProfileRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.DiscoverConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IDiscoverConnectionProfileRequest} message DiscoverConnectionProfileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DiscoverConnectionProfileRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DiscoverConnectionProfileRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.DiscoverConnectionProfileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.DiscoverConnectionProfileRequest} DiscoverConnectionProfileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DiscoverConnectionProfileRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.DiscoverConnectionProfileRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 200: {
                                        message.connectionProfile = $root.google.cloud.datastream.v1.ConnectionProfile.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 201: {
                                        message.connectionProfileName = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.fullHierarchy = reader.bool();
                                        break;
                                    }
                                case 4: {
                                        message.hierarchyDepth = reader.int32();
                                        break;
                                    }
                                case 100: {
                                        message.oracleRdbms = $root.google.cloud.datastream.v1.OracleRdbms.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 101: {
                                        message.mysqlRdbms = $root.google.cloud.datastream.v1.MysqlRdbms.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 102: {
                                        message.postgresqlRdbms = $root.google.cloud.datastream.v1.PostgresqlRdbms.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DiscoverConnectionProfileRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.DiscoverConnectionProfileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.DiscoverConnectionProfileRequest} DiscoverConnectionProfileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DiscoverConnectionProfileRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DiscoverConnectionProfileRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.DiscoverConnectionProfileRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DiscoverConnectionProfileRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.connectionProfile != null && message.hasOwnProperty("connectionProfile")) {
                                properties.target = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1.ConnectionProfile.verify(message.connectionProfile);
                                    if (error)
                                        return "connectionProfile." + error;
                                }
                            }
                            if (message.connectionProfileName != null && message.hasOwnProperty("connectionProfileName")) {
                                if (properties.target === 1)
                                    return "target: multiple values";
                                properties.target = 1;
                                if (!$util.isString(message.connectionProfileName))
                                    return "connectionProfileName: string expected";
                            }
                            if (message.fullHierarchy != null && message.hasOwnProperty("fullHierarchy")) {
                                properties.hierarchy = 1;
                                if (typeof message.fullHierarchy !== "boolean")
                                    return "fullHierarchy: boolean expected";
                            }
                            if (message.hierarchyDepth != null && message.hasOwnProperty("hierarchyDepth")) {
                                if (properties.hierarchy === 1)
                                    return "hierarchy: multiple values";
                                properties.hierarchy = 1;
                                if (!$util.isInteger(message.hierarchyDepth))
                                    return "hierarchyDepth: integer expected";
                            }
                            if (message.oracleRdbms != null && message.hasOwnProperty("oracleRdbms")) {
                                properties.dataObject = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1.OracleRdbms.verify(message.oracleRdbms);
                                    if (error)
                                        return "oracleRdbms." + error;
                                }
                            }
                            if (message.mysqlRdbms != null && message.hasOwnProperty("mysqlRdbms")) {
                                if (properties.dataObject === 1)
                                    return "dataObject: multiple values";
                                properties.dataObject = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1.MysqlRdbms.verify(message.mysqlRdbms);
                                    if (error)
                                        return "mysqlRdbms." + error;
                                }
                            }
                            if (message.postgresqlRdbms != null && message.hasOwnProperty("postgresqlRdbms")) {
                                if (properties.dataObject === 1)
                                    return "dataObject: multiple values";
                                properties.dataObject = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1.PostgresqlRdbms.verify(message.postgresqlRdbms);
                                    if (error)
                                        return "postgresqlRdbms." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DiscoverConnectionProfileRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.DiscoverConnectionProfileRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.DiscoverConnectionProfileRequest} DiscoverConnectionProfileRequest
                         */
                        DiscoverConnectionProfileRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.DiscoverConnectionProfileRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.DiscoverConnectionProfileRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.connectionProfile != null) {
                                if (typeof object.connectionProfile !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.DiscoverConnectionProfileRequest.connectionProfile: object expected");
                                message.connectionProfile = $root.google.cloud.datastream.v1.ConnectionProfile.fromObject(object.connectionProfile);
                            }
                            if (object.connectionProfileName != null)
                                message.connectionProfileName = String(object.connectionProfileName);
                            if (object.fullHierarchy != null)
                                message.fullHierarchy = Boolean(object.fullHierarchy);
                            if (object.hierarchyDepth != null)
                                message.hierarchyDepth = object.hierarchyDepth | 0;
                            if (object.oracleRdbms != null) {
                                if (typeof object.oracleRdbms !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.DiscoverConnectionProfileRequest.oracleRdbms: object expected");
                                message.oracleRdbms = $root.google.cloud.datastream.v1.OracleRdbms.fromObject(object.oracleRdbms);
                            }
                            if (object.mysqlRdbms != null) {
                                if (typeof object.mysqlRdbms !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.DiscoverConnectionProfileRequest.mysqlRdbms: object expected");
                                message.mysqlRdbms = $root.google.cloud.datastream.v1.MysqlRdbms.fromObject(object.mysqlRdbms);
                            }
                            if (object.postgresqlRdbms != null) {
                                if (typeof object.postgresqlRdbms !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.DiscoverConnectionProfileRequest.postgresqlRdbms: object expected");
                                message.postgresqlRdbms = $root.google.cloud.datastream.v1.PostgresqlRdbms.fromObject(object.postgresqlRdbms);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DiscoverConnectionProfileRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.DiscoverConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1.DiscoverConnectionProfileRequest} message DiscoverConnectionProfileRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DiscoverConnectionProfileRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.parent = "";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.fullHierarchy != null && message.hasOwnProperty("fullHierarchy")) {
                                object.fullHierarchy = message.fullHierarchy;
                                if (options.oneofs)
                                    object.hierarchy = "fullHierarchy";
                            }
                            if (message.hierarchyDepth != null && message.hasOwnProperty("hierarchyDepth")) {
                                object.hierarchyDepth = message.hierarchyDepth;
                                if (options.oneofs)
                                    object.hierarchy = "hierarchyDepth";
                            }
                            if (message.oracleRdbms != null && message.hasOwnProperty("oracleRdbms")) {
                                object.oracleRdbms = $root.google.cloud.datastream.v1.OracleRdbms.toObject(message.oracleRdbms, options);
                                if (options.oneofs)
                                    object.dataObject = "oracleRdbms";
                            }
                            if (message.mysqlRdbms != null && message.hasOwnProperty("mysqlRdbms")) {
                                object.mysqlRdbms = $root.google.cloud.datastream.v1.MysqlRdbms.toObject(message.mysqlRdbms, options);
                                if (options.oneofs)
                                    object.dataObject = "mysqlRdbms";
                            }
                            if (message.postgresqlRdbms != null && message.hasOwnProperty("postgresqlRdbms")) {
                                object.postgresqlRdbms = $root.google.cloud.datastream.v1.PostgresqlRdbms.toObject(message.postgresqlRdbms, options);
                                if (options.oneofs)
                                    object.dataObject = "postgresqlRdbms";
                            }
                            if (message.connectionProfile != null && message.hasOwnProperty("connectionProfile")) {
                                object.connectionProfile = $root.google.cloud.datastream.v1.ConnectionProfile.toObject(message.connectionProfile, options);
                                if (options.oneofs)
                                    object.target = "connectionProfile";
                            }
                            if (message.connectionProfileName != null && message.hasOwnProperty("connectionProfileName")) {
                                object.connectionProfileName = message.connectionProfileName;
                                if (options.oneofs)
                                    object.target = "connectionProfileName";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this DiscoverConnectionProfileRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.DiscoverConnectionProfileRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DiscoverConnectionProfileRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DiscoverConnectionProfileRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.DiscoverConnectionProfileRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DiscoverConnectionProfileRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.DiscoverConnectionProfileRequest";
                        };
    
                        return DiscoverConnectionProfileRequest;
                    })();
    
                    v1.DiscoverConnectionProfileResponse = (function() {
    
                        /**
                         * Properties of a DiscoverConnectionProfileResponse.
                         * @memberof google.cloud.datastream.v1
                         * @interface IDiscoverConnectionProfileResponse
                         * @property {google.cloud.datastream.v1.IOracleRdbms|null} [oracleRdbms] DiscoverConnectionProfileResponse oracleRdbms
                         * @property {google.cloud.datastream.v1.IMysqlRdbms|null} [mysqlRdbms] DiscoverConnectionProfileResponse mysqlRdbms
                         * @property {google.cloud.datastream.v1.IPostgresqlRdbms|null} [postgresqlRdbms] DiscoverConnectionProfileResponse postgresqlRdbms
                         */
    
                        /**
                         * Constructs a new DiscoverConnectionProfileResponse.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a DiscoverConnectionProfileResponse.
                         * @implements IDiscoverConnectionProfileResponse
                         * @constructor
                         * @param {google.cloud.datastream.v1.IDiscoverConnectionProfileResponse=} [properties] Properties to set
                         */
                        function DiscoverConnectionProfileResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DiscoverConnectionProfileResponse oracleRdbms.
                         * @member {google.cloud.datastream.v1.IOracleRdbms|null|undefined} oracleRdbms
                         * @memberof google.cloud.datastream.v1.DiscoverConnectionProfileResponse
                         * @instance
                         */
                        DiscoverConnectionProfileResponse.prototype.oracleRdbms = null;
    
                        /**
                         * DiscoverConnectionProfileResponse mysqlRdbms.
                         * @member {google.cloud.datastream.v1.IMysqlRdbms|null|undefined} mysqlRdbms
                         * @memberof google.cloud.datastream.v1.DiscoverConnectionProfileResponse
                         * @instance
                         */
                        DiscoverConnectionProfileResponse.prototype.mysqlRdbms = null;
    
                        /**
                         * DiscoverConnectionProfileResponse postgresqlRdbms.
                         * @member {google.cloud.datastream.v1.IPostgresqlRdbms|null|undefined} postgresqlRdbms
                         * @memberof google.cloud.datastream.v1.DiscoverConnectionProfileResponse
                         * @instance
                         */
                        DiscoverConnectionProfileResponse.prototype.postgresqlRdbms = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * DiscoverConnectionProfileResponse dataObject.
                         * @member {"oracleRdbms"|"mysqlRdbms"|"postgresqlRdbms"|undefined} dataObject
                         * @memberof google.cloud.datastream.v1.DiscoverConnectionProfileResponse
                         * @instance
                         */
                        Object.defineProperty(DiscoverConnectionProfileResponse.prototype, "dataObject", {
                            get: $util.oneOfGetter($oneOfFields = ["oracleRdbms", "mysqlRdbms", "postgresqlRdbms"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new DiscoverConnectionProfileResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.DiscoverConnectionProfileResponse
                         * @static
                         * @param {google.cloud.datastream.v1.IDiscoverConnectionProfileResponse=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.DiscoverConnectionProfileResponse} DiscoverConnectionProfileResponse instance
                         */
                        DiscoverConnectionProfileResponse.create = function create(properties) {
                            return new DiscoverConnectionProfileResponse(properties);
                        };
    
                        /**
                         * Encodes the specified DiscoverConnectionProfileResponse message. Does not implicitly {@link google.cloud.datastream.v1.DiscoverConnectionProfileResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.DiscoverConnectionProfileResponse
                         * @static
                         * @param {google.cloud.datastream.v1.IDiscoverConnectionProfileResponse} message DiscoverConnectionProfileResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DiscoverConnectionProfileResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.oracleRdbms != null && Object.hasOwnProperty.call(message, "oracleRdbms"))
                                $root.google.cloud.datastream.v1.OracleRdbms.encode(message.oracleRdbms, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            if (message.mysqlRdbms != null && Object.hasOwnProperty.call(message, "mysqlRdbms"))
                                $root.google.cloud.datastream.v1.MysqlRdbms.encode(message.mysqlRdbms, writer.uint32(/* id 101, wireType 2 =*/810).fork()).ldelim();
                            if (message.postgresqlRdbms != null && Object.hasOwnProperty.call(message, "postgresqlRdbms"))
                                $root.google.cloud.datastream.v1.PostgresqlRdbms.encode(message.postgresqlRdbms, writer.uint32(/* id 102, wireType 2 =*/818).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DiscoverConnectionProfileResponse message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.DiscoverConnectionProfileResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.DiscoverConnectionProfileResponse
                         * @static
                         * @param {google.cloud.datastream.v1.IDiscoverConnectionProfileResponse} message DiscoverConnectionProfileResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DiscoverConnectionProfileResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DiscoverConnectionProfileResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.DiscoverConnectionProfileResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.DiscoverConnectionProfileResponse} DiscoverConnectionProfileResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DiscoverConnectionProfileResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.DiscoverConnectionProfileResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 100: {
                                        message.oracleRdbms = $root.google.cloud.datastream.v1.OracleRdbms.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 101: {
                                        message.mysqlRdbms = $root.google.cloud.datastream.v1.MysqlRdbms.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 102: {
                                        message.postgresqlRdbms = $root.google.cloud.datastream.v1.PostgresqlRdbms.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DiscoverConnectionProfileResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.DiscoverConnectionProfileResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.DiscoverConnectionProfileResponse} DiscoverConnectionProfileResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DiscoverConnectionProfileResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DiscoverConnectionProfileResponse message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.DiscoverConnectionProfileResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DiscoverConnectionProfileResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.oracleRdbms != null && message.hasOwnProperty("oracleRdbms")) {
                                properties.dataObject = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1.OracleRdbms.verify(message.oracleRdbms);
                                    if (error)
                                        return "oracleRdbms." + error;
                                }
                            }
                            if (message.mysqlRdbms != null && message.hasOwnProperty("mysqlRdbms")) {
                                if (properties.dataObject === 1)
                                    return "dataObject: multiple values";
                                properties.dataObject = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1.MysqlRdbms.verify(message.mysqlRdbms);
                                    if (error)
                                        return "mysqlRdbms." + error;
                                }
                            }
                            if (message.postgresqlRdbms != null && message.hasOwnProperty("postgresqlRdbms")) {
                                if (properties.dataObject === 1)
                                    return "dataObject: multiple values";
                                properties.dataObject = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1.PostgresqlRdbms.verify(message.postgresqlRdbms);
                                    if (error)
                                        return "postgresqlRdbms." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DiscoverConnectionProfileResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.DiscoverConnectionProfileResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.DiscoverConnectionProfileResponse} DiscoverConnectionProfileResponse
                         */
                        DiscoverConnectionProfileResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.DiscoverConnectionProfileResponse)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.DiscoverConnectionProfileResponse();
                            if (object.oracleRdbms != null) {
                                if (typeof object.oracleRdbms !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.DiscoverConnectionProfileResponse.oracleRdbms: object expected");
                                message.oracleRdbms = $root.google.cloud.datastream.v1.OracleRdbms.fromObject(object.oracleRdbms);
                            }
                            if (object.mysqlRdbms != null) {
                                if (typeof object.mysqlRdbms !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.DiscoverConnectionProfileResponse.mysqlRdbms: object expected");
                                message.mysqlRdbms = $root.google.cloud.datastream.v1.MysqlRdbms.fromObject(object.mysqlRdbms);
                            }
                            if (object.postgresqlRdbms != null) {
                                if (typeof object.postgresqlRdbms !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.DiscoverConnectionProfileResponse.postgresqlRdbms: object expected");
                                message.postgresqlRdbms = $root.google.cloud.datastream.v1.PostgresqlRdbms.fromObject(object.postgresqlRdbms);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DiscoverConnectionProfileResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.DiscoverConnectionProfileResponse
                         * @static
                         * @param {google.cloud.datastream.v1.DiscoverConnectionProfileResponse} message DiscoverConnectionProfileResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DiscoverConnectionProfileResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.oracleRdbms != null && message.hasOwnProperty("oracleRdbms")) {
                                object.oracleRdbms = $root.google.cloud.datastream.v1.OracleRdbms.toObject(message.oracleRdbms, options);
                                if (options.oneofs)
                                    object.dataObject = "oracleRdbms";
                            }
                            if (message.mysqlRdbms != null && message.hasOwnProperty("mysqlRdbms")) {
                                object.mysqlRdbms = $root.google.cloud.datastream.v1.MysqlRdbms.toObject(message.mysqlRdbms, options);
                                if (options.oneofs)
                                    object.dataObject = "mysqlRdbms";
                            }
                            if (message.postgresqlRdbms != null && message.hasOwnProperty("postgresqlRdbms")) {
                                object.postgresqlRdbms = $root.google.cloud.datastream.v1.PostgresqlRdbms.toObject(message.postgresqlRdbms, options);
                                if (options.oneofs)
                                    object.dataObject = "postgresqlRdbms";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this DiscoverConnectionProfileResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.DiscoverConnectionProfileResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DiscoverConnectionProfileResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DiscoverConnectionProfileResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.DiscoverConnectionProfileResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DiscoverConnectionProfileResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.DiscoverConnectionProfileResponse";
                        };
    
                        return DiscoverConnectionProfileResponse;
                    })();
    
                    v1.FetchStaticIpsRequest = (function() {
    
                        /**
                         * Properties of a FetchStaticIpsRequest.
                         * @memberof google.cloud.datastream.v1
                         * @interface IFetchStaticIpsRequest
                         * @property {string|null} [name] FetchStaticIpsRequest name
                         * @property {number|null} [pageSize] FetchStaticIpsRequest pageSize
                         * @property {string|null} [pageToken] FetchStaticIpsRequest pageToken
                         */
    
                        /**
                         * Constructs a new FetchStaticIpsRequest.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a FetchStaticIpsRequest.
                         * @implements IFetchStaticIpsRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1.IFetchStaticIpsRequest=} [properties] Properties to set
                         */
                        function FetchStaticIpsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FetchStaticIpsRequest name.
                         * @member {string} name
                         * @memberof google.cloud.datastream.v1.FetchStaticIpsRequest
                         * @instance
                         */
                        FetchStaticIpsRequest.prototype.name = "";
    
                        /**
                         * FetchStaticIpsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.datastream.v1.FetchStaticIpsRequest
                         * @instance
                         */
                        FetchStaticIpsRequest.prototype.pageSize = 0;
    
                        /**
                         * FetchStaticIpsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.datastream.v1.FetchStaticIpsRequest
                         * @instance
                         */
                        FetchStaticIpsRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new FetchStaticIpsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.FetchStaticIpsRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IFetchStaticIpsRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.FetchStaticIpsRequest} FetchStaticIpsRequest instance
                         */
                        FetchStaticIpsRequest.create = function create(properties) {
                            return new FetchStaticIpsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified FetchStaticIpsRequest message. Does not implicitly {@link google.cloud.datastream.v1.FetchStaticIpsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.FetchStaticIpsRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IFetchStaticIpsRequest} message FetchStaticIpsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FetchStaticIpsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FetchStaticIpsRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.FetchStaticIpsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.FetchStaticIpsRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IFetchStaticIpsRequest} message FetchStaticIpsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FetchStaticIpsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FetchStaticIpsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.FetchStaticIpsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.FetchStaticIpsRequest} FetchStaticIpsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FetchStaticIpsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.FetchStaticIpsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FetchStaticIpsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.FetchStaticIpsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.FetchStaticIpsRequest} FetchStaticIpsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FetchStaticIpsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FetchStaticIpsRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.FetchStaticIpsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FetchStaticIpsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a FetchStaticIpsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.FetchStaticIpsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.FetchStaticIpsRequest} FetchStaticIpsRequest
                         */
                        FetchStaticIpsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.FetchStaticIpsRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.FetchStaticIpsRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FetchStaticIpsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.FetchStaticIpsRequest
                         * @static
                         * @param {google.cloud.datastream.v1.FetchStaticIpsRequest} message FetchStaticIpsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FetchStaticIpsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this FetchStaticIpsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.FetchStaticIpsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FetchStaticIpsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FetchStaticIpsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.FetchStaticIpsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FetchStaticIpsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.FetchStaticIpsRequest";
                        };
    
                        return FetchStaticIpsRequest;
                    })();
    
                    v1.FetchStaticIpsResponse = (function() {
    
                        /**
                         * Properties of a FetchStaticIpsResponse.
                         * @memberof google.cloud.datastream.v1
                         * @interface IFetchStaticIpsResponse
                         * @property {Array.<string>|null} [staticIps] FetchStaticIpsResponse staticIps
                         * @property {string|null} [nextPageToken] FetchStaticIpsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new FetchStaticIpsResponse.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a FetchStaticIpsResponse.
                         * @implements IFetchStaticIpsResponse
                         * @constructor
                         * @param {google.cloud.datastream.v1.IFetchStaticIpsResponse=} [properties] Properties to set
                         */
                        function FetchStaticIpsResponse(properties) {
                            this.staticIps = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FetchStaticIpsResponse staticIps.
                         * @member {Array.<string>} staticIps
                         * @memberof google.cloud.datastream.v1.FetchStaticIpsResponse
                         * @instance
                         */
                        FetchStaticIpsResponse.prototype.staticIps = $util.emptyArray;
    
                        /**
                         * FetchStaticIpsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.datastream.v1.FetchStaticIpsResponse
                         * @instance
                         */
                        FetchStaticIpsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new FetchStaticIpsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.FetchStaticIpsResponse
                         * @static
                         * @param {google.cloud.datastream.v1.IFetchStaticIpsResponse=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.FetchStaticIpsResponse} FetchStaticIpsResponse instance
                         */
                        FetchStaticIpsResponse.create = function create(properties) {
                            return new FetchStaticIpsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified FetchStaticIpsResponse message. Does not implicitly {@link google.cloud.datastream.v1.FetchStaticIpsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.FetchStaticIpsResponse
                         * @static
                         * @param {google.cloud.datastream.v1.IFetchStaticIpsResponse} message FetchStaticIpsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FetchStaticIpsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.staticIps != null && message.staticIps.length)
                                for (var i = 0; i < message.staticIps.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.staticIps[i]);
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FetchStaticIpsResponse message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.FetchStaticIpsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.FetchStaticIpsResponse
                         * @static
                         * @param {google.cloud.datastream.v1.IFetchStaticIpsResponse} message FetchStaticIpsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FetchStaticIpsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FetchStaticIpsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.FetchStaticIpsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.FetchStaticIpsResponse} FetchStaticIpsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FetchStaticIpsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.FetchStaticIpsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.staticIps && message.staticIps.length))
                                            message.staticIps = [];
                                        message.staticIps.push(reader.string());
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FetchStaticIpsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.FetchStaticIpsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.FetchStaticIpsResponse} FetchStaticIpsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FetchStaticIpsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FetchStaticIpsResponse message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.FetchStaticIpsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FetchStaticIpsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.staticIps != null && message.hasOwnProperty("staticIps")) {
                                if (!Array.isArray(message.staticIps))
                                    return "staticIps: array expected";
                                for (var i = 0; i < message.staticIps.length; ++i)
                                    if (!$util.isString(message.staticIps[i]))
                                        return "staticIps: string[] expected";
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a FetchStaticIpsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.FetchStaticIpsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.FetchStaticIpsResponse} FetchStaticIpsResponse
                         */
                        FetchStaticIpsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.FetchStaticIpsResponse)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.FetchStaticIpsResponse();
                            if (object.staticIps) {
                                if (!Array.isArray(object.staticIps))
                                    throw TypeError(".google.cloud.datastream.v1.FetchStaticIpsResponse.staticIps: array expected");
                                message.staticIps = [];
                                for (var i = 0; i < object.staticIps.length; ++i)
                                    message.staticIps[i] = String(object.staticIps[i]);
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FetchStaticIpsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.FetchStaticIpsResponse
                         * @static
                         * @param {google.cloud.datastream.v1.FetchStaticIpsResponse} message FetchStaticIpsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FetchStaticIpsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.staticIps = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.staticIps && message.staticIps.length) {
                                object.staticIps = [];
                                for (var j = 0; j < message.staticIps.length; ++j)
                                    object.staticIps[j] = message.staticIps[j];
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this FetchStaticIpsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.FetchStaticIpsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FetchStaticIpsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FetchStaticIpsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.FetchStaticIpsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FetchStaticIpsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.FetchStaticIpsResponse";
                        };
    
                        return FetchStaticIpsResponse;
                    })();
    
                    v1.ListConnectionProfilesRequest = (function() {
    
                        /**
                         * Properties of a ListConnectionProfilesRequest.
                         * @memberof google.cloud.datastream.v1
                         * @interface IListConnectionProfilesRequest
                         * @property {string|null} [parent] ListConnectionProfilesRequest parent
                         * @property {number|null} [pageSize] ListConnectionProfilesRequest pageSize
                         * @property {string|null} [pageToken] ListConnectionProfilesRequest pageToken
                         * @property {string|null} [filter] ListConnectionProfilesRequest filter
                         * @property {string|null} [orderBy] ListConnectionProfilesRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListConnectionProfilesRequest.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a ListConnectionProfilesRequest.
                         * @implements IListConnectionProfilesRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1.IListConnectionProfilesRequest=} [properties] Properties to set
                         */
                        function ListConnectionProfilesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListConnectionProfilesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.datastream.v1.ListConnectionProfilesRequest
                         * @instance
                         */
                        ListConnectionProfilesRequest.prototype.parent = "";
    
                        /**
                         * ListConnectionProfilesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.datastream.v1.ListConnectionProfilesRequest
                         * @instance
                         */
                        ListConnectionProfilesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListConnectionProfilesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.datastream.v1.ListConnectionProfilesRequest
                         * @instance
                         */
                        ListConnectionProfilesRequest.prototype.pageToken = "";
    
                        /**
                         * ListConnectionProfilesRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.datastream.v1.ListConnectionProfilesRequest
                         * @instance
                         */
                        ListConnectionProfilesRequest.prototype.filter = "";
    
                        /**
                         * ListConnectionProfilesRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.datastream.v1.ListConnectionProfilesRequest
                         * @instance
                         */
                        ListConnectionProfilesRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListConnectionProfilesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.ListConnectionProfilesRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IListConnectionProfilesRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.ListConnectionProfilesRequest} ListConnectionProfilesRequest instance
                         */
                        ListConnectionProfilesRequest.create = function create(properties) {
                            return new ListConnectionProfilesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListConnectionProfilesRequest message. Does not implicitly {@link google.cloud.datastream.v1.ListConnectionProfilesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.ListConnectionProfilesRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IListConnectionProfilesRequest} message ListConnectionProfilesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListConnectionProfilesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListConnectionProfilesRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.ListConnectionProfilesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.ListConnectionProfilesRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IListConnectionProfilesRequest} message ListConnectionProfilesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListConnectionProfilesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListConnectionProfilesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.ListConnectionProfilesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.ListConnectionProfilesRequest} ListConnectionProfilesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListConnectionProfilesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.ListConnectionProfilesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListConnectionProfilesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.ListConnectionProfilesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.ListConnectionProfilesRequest} ListConnectionProfilesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListConnectionProfilesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListConnectionProfilesRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.ListConnectionProfilesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListConnectionProfilesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListConnectionProfilesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.ListConnectionProfilesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.ListConnectionProfilesRequest} ListConnectionProfilesRequest
                         */
                        ListConnectionProfilesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.ListConnectionProfilesRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.ListConnectionProfilesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListConnectionProfilesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.ListConnectionProfilesRequest
                         * @static
                         * @param {google.cloud.datastream.v1.ListConnectionProfilesRequest} message ListConnectionProfilesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListConnectionProfilesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListConnectionProfilesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.ListConnectionProfilesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListConnectionProfilesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListConnectionProfilesRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.ListConnectionProfilesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListConnectionProfilesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.ListConnectionProfilesRequest";
                        };
    
                        return ListConnectionProfilesRequest;
                    })();
    
                    v1.ListConnectionProfilesResponse = (function() {
    
                        /**
                         * Properties of a ListConnectionProfilesResponse.
                         * @memberof google.cloud.datastream.v1
                         * @interface IListConnectionProfilesResponse
                         * @property {Array.<google.cloud.datastream.v1.IConnectionProfile>|null} [connectionProfiles] ListConnectionProfilesResponse connectionProfiles
                         * @property {string|null} [nextPageToken] ListConnectionProfilesResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListConnectionProfilesResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListConnectionProfilesResponse.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a ListConnectionProfilesResponse.
                         * @implements IListConnectionProfilesResponse
                         * @constructor
                         * @param {google.cloud.datastream.v1.IListConnectionProfilesResponse=} [properties] Properties to set
                         */
                        function ListConnectionProfilesResponse(properties) {
                            this.connectionProfiles = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListConnectionProfilesResponse connectionProfiles.
                         * @member {Array.<google.cloud.datastream.v1.IConnectionProfile>} connectionProfiles
                         * @memberof google.cloud.datastream.v1.ListConnectionProfilesResponse
                         * @instance
                         */
                        ListConnectionProfilesResponse.prototype.connectionProfiles = $util.emptyArray;
    
                        /**
                         * ListConnectionProfilesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.datastream.v1.ListConnectionProfilesResponse
                         * @instance
                         */
                        ListConnectionProfilesResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListConnectionProfilesResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.datastream.v1.ListConnectionProfilesResponse
                         * @instance
                         */
                        ListConnectionProfilesResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListConnectionProfilesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.ListConnectionProfilesResponse
                         * @static
                         * @param {google.cloud.datastream.v1.IListConnectionProfilesResponse=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.ListConnectionProfilesResponse} ListConnectionProfilesResponse instance
                         */
                        ListConnectionProfilesResponse.create = function create(properties) {
                            return new ListConnectionProfilesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListConnectionProfilesResponse message. Does not implicitly {@link google.cloud.datastream.v1.ListConnectionProfilesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.ListConnectionProfilesResponse
                         * @static
                         * @param {google.cloud.datastream.v1.IListConnectionProfilesResponse} message ListConnectionProfilesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListConnectionProfilesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.connectionProfiles != null && message.connectionProfiles.length)
                                for (var i = 0; i < message.connectionProfiles.length; ++i)
                                    $root.google.cloud.datastream.v1.ConnectionProfile.encode(message.connectionProfiles[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListConnectionProfilesResponse message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.ListConnectionProfilesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.ListConnectionProfilesResponse
                         * @static
                         * @param {google.cloud.datastream.v1.IListConnectionProfilesResponse} message ListConnectionProfilesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListConnectionProfilesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListConnectionProfilesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.ListConnectionProfilesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.ListConnectionProfilesResponse} ListConnectionProfilesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListConnectionProfilesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.ListConnectionProfilesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.connectionProfiles && message.connectionProfiles.length))
                                            message.connectionProfiles = [];
                                        message.connectionProfiles.push($root.google.cloud.datastream.v1.ConnectionProfile.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListConnectionProfilesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.ListConnectionProfilesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.ListConnectionProfilesResponse} ListConnectionProfilesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListConnectionProfilesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListConnectionProfilesResponse message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.ListConnectionProfilesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListConnectionProfilesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.connectionProfiles != null && message.hasOwnProperty("connectionProfiles")) {
                                if (!Array.isArray(message.connectionProfiles))
                                    return "connectionProfiles: array expected";
                                for (var i = 0; i < message.connectionProfiles.length; ++i) {
                                    var error = $root.google.cloud.datastream.v1.ConnectionProfile.verify(message.connectionProfiles[i]);
                                    if (error)
                                        return "connectionProfiles." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListConnectionProfilesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.ListConnectionProfilesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.ListConnectionProfilesResponse} ListConnectionProfilesResponse
                         */
                        ListConnectionProfilesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.ListConnectionProfilesResponse)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.ListConnectionProfilesResponse();
                            if (object.connectionProfiles) {
                                if (!Array.isArray(object.connectionProfiles))
                                    throw TypeError(".google.cloud.datastream.v1.ListConnectionProfilesResponse.connectionProfiles: array expected");
                                message.connectionProfiles = [];
                                for (var i = 0; i < object.connectionProfiles.length; ++i) {
                                    if (typeof object.connectionProfiles[i] !== "object")
                                        throw TypeError(".google.cloud.datastream.v1.ListConnectionProfilesResponse.connectionProfiles: object expected");
                                    message.connectionProfiles[i] = $root.google.cloud.datastream.v1.ConnectionProfile.fromObject(object.connectionProfiles[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.datastream.v1.ListConnectionProfilesResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListConnectionProfilesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.ListConnectionProfilesResponse
                         * @static
                         * @param {google.cloud.datastream.v1.ListConnectionProfilesResponse} message ListConnectionProfilesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListConnectionProfilesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.connectionProfiles = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.connectionProfiles && message.connectionProfiles.length) {
                                object.connectionProfiles = [];
                                for (var j = 0; j < message.connectionProfiles.length; ++j)
                                    object.connectionProfiles[j] = $root.google.cloud.datastream.v1.ConnectionProfile.toObject(message.connectionProfiles[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListConnectionProfilesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.ListConnectionProfilesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListConnectionProfilesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListConnectionProfilesResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.ListConnectionProfilesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListConnectionProfilesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.ListConnectionProfilesResponse";
                        };
    
                        return ListConnectionProfilesResponse;
                    })();
    
                    v1.GetConnectionProfileRequest = (function() {
    
                        /**
                         * Properties of a GetConnectionProfileRequest.
                         * @memberof google.cloud.datastream.v1
                         * @interface IGetConnectionProfileRequest
                         * @property {string|null} [name] GetConnectionProfileRequest name
                         */
    
                        /**
                         * Constructs a new GetConnectionProfileRequest.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a GetConnectionProfileRequest.
                         * @implements IGetConnectionProfileRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1.IGetConnectionProfileRequest=} [properties] Properties to set
                         */
                        function GetConnectionProfileRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetConnectionProfileRequest name.
                         * @member {string} name
                         * @memberof google.cloud.datastream.v1.GetConnectionProfileRequest
                         * @instance
                         */
                        GetConnectionProfileRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetConnectionProfileRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.GetConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IGetConnectionProfileRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.GetConnectionProfileRequest} GetConnectionProfileRequest instance
                         */
                        GetConnectionProfileRequest.create = function create(properties) {
                            return new GetConnectionProfileRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetConnectionProfileRequest message. Does not implicitly {@link google.cloud.datastream.v1.GetConnectionProfileRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.GetConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IGetConnectionProfileRequest} message GetConnectionProfileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetConnectionProfileRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetConnectionProfileRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.GetConnectionProfileRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.GetConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IGetConnectionProfileRequest} message GetConnectionProfileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetConnectionProfileRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetConnectionProfileRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.GetConnectionProfileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.GetConnectionProfileRequest} GetConnectionProfileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetConnectionProfileRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.GetConnectionProfileRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetConnectionProfileRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.GetConnectionProfileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.GetConnectionProfileRequest} GetConnectionProfileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetConnectionProfileRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetConnectionProfileRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.GetConnectionProfileRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetConnectionProfileRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetConnectionProfileRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.GetConnectionProfileRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.GetConnectionProfileRequest} GetConnectionProfileRequest
                         */
                        GetConnectionProfileRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.GetConnectionProfileRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.GetConnectionProfileRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetConnectionProfileRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.GetConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1.GetConnectionProfileRequest} message GetConnectionProfileRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetConnectionProfileRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetConnectionProfileRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.GetConnectionProfileRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetConnectionProfileRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetConnectionProfileRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.GetConnectionProfileRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetConnectionProfileRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.GetConnectionProfileRequest";
                        };
    
                        return GetConnectionProfileRequest;
                    })();
    
                    v1.CreateConnectionProfileRequest = (function() {
    
                        /**
                         * Properties of a CreateConnectionProfileRequest.
                         * @memberof google.cloud.datastream.v1
                         * @interface ICreateConnectionProfileRequest
                         * @property {string|null} [parent] CreateConnectionProfileRequest parent
                         * @property {string|null} [connectionProfileId] CreateConnectionProfileRequest connectionProfileId
                         * @property {google.cloud.datastream.v1.IConnectionProfile|null} [connectionProfile] CreateConnectionProfileRequest connectionProfile
                         * @property {string|null} [requestId] CreateConnectionProfileRequest requestId
                         * @property {boolean|null} [validateOnly] CreateConnectionProfileRequest validateOnly
                         * @property {boolean|null} [force] CreateConnectionProfileRequest force
                         */
    
                        /**
                         * Constructs a new CreateConnectionProfileRequest.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a CreateConnectionProfileRequest.
                         * @implements ICreateConnectionProfileRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1.ICreateConnectionProfileRequest=} [properties] Properties to set
                         */
                        function CreateConnectionProfileRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateConnectionProfileRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.datastream.v1.CreateConnectionProfileRequest
                         * @instance
                         */
                        CreateConnectionProfileRequest.prototype.parent = "";
    
                        /**
                         * CreateConnectionProfileRequest connectionProfileId.
                         * @member {string} connectionProfileId
                         * @memberof google.cloud.datastream.v1.CreateConnectionProfileRequest
                         * @instance
                         */
                        CreateConnectionProfileRequest.prototype.connectionProfileId = "";
    
                        /**
                         * CreateConnectionProfileRequest connectionProfile.
                         * @member {google.cloud.datastream.v1.IConnectionProfile|null|undefined} connectionProfile
                         * @memberof google.cloud.datastream.v1.CreateConnectionProfileRequest
                         * @instance
                         */
                        CreateConnectionProfileRequest.prototype.connectionProfile = null;
    
                        /**
                         * CreateConnectionProfileRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.datastream.v1.CreateConnectionProfileRequest
                         * @instance
                         */
                        CreateConnectionProfileRequest.prototype.requestId = "";
    
                        /**
                         * CreateConnectionProfileRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.datastream.v1.CreateConnectionProfileRequest
                         * @instance
                         */
                        CreateConnectionProfileRequest.prototype.validateOnly = false;
    
                        /**
                         * CreateConnectionProfileRequest force.
                         * @member {boolean} force
                         * @memberof google.cloud.datastream.v1.CreateConnectionProfileRequest
                         * @instance
                         */
                        CreateConnectionProfileRequest.prototype.force = false;
    
                        /**
                         * Creates a new CreateConnectionProfileRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.CreateConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1.ICreateConnectionProfileRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.CreateConnectionProfileRequest} CreateConnectionProfileRequest instance
                         */
                        CreateConnectionProfileRequest.create = function create(properties) {
                            return new CreateConnectionProfileRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateConnectionProfileRequest message. Does not implicitly {@link google.cloud.datastream.v1.CreateConnectionProfileRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.CreateConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1.ICreateConnectionProfileRequest} message CreateConnectionProfileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateConnectionProfileRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.connectionProfileId != null && Object.hasOwnProperty.call(message, "connectionProfileId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.connectionProfileId);
                            if (message.connectionProfile != null && Object.hasOwnProperty.call(message, "connectionProfile"))
                                $root.google.cloud.datastream.v1.ConnectionProfile.encode(message.connectionProfile, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.validateOnly);
                            if (message.force != null && Object.hasOwnProperty.call(message, "force"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.force);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateConnectionProfileRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.CreateConnectionProfileRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.CreateConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1.ICreateConnectionProfileRequest} message CreateConnectionProfileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateConnectionProfileRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateConnectionProfileRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.CreateConnectionProfileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.CreateConnectionProfileRequest} CreateConnectionProfileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateConnectionProfileRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.CreateConnectionProfileRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.connectionProfileId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.connectionProfile = $root.google.cloud.datastream.v1.ConnectionProfile.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                case 6: {
                                        message.force = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateConnectionProfileRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.CreateConnectionProfileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.CreateConnectionProfileRequest} CreateConnectionProfileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateConnectionProfileRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateConnectionProfileRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.CreateConnectionProfileRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateConnectionProfileRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.connectionProfileId != null && message.hasOwnProperty("connectionProfileId"))
                                if (!$util.isString(message.connectionProfileId))
                                    return "connectionProfileId: string expected";
                            if (message.connectionProfile != null && message.hasOwnProperty("connectionProfile")) {
                                var error = $root.google.cloud.datastream.v1.ConnectionProfile.verify(message.connectionProfile);
                                if (error)
                                    return "connectionProfile." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            if (message.force != null && message.hasOwnProperty("force"))
                                if (typeof message.force !== "boolean")
                                    return "force: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateConnectionProfileRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.CreateConnectionProfileRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.CreateConnectionProfileRequest} CreateConnectionProfileRequest
                         */
                        CreateConnectionProfileRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.CreateConnectionProfileRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.CreateConnectionProfileRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.connectionProfileId != null)
                                message.connectionProfileId = String(object.connectionProfileId);
                            if (object.connectionProfile != null) {
                                if (typeof object.connectionProfile !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.CreateConnectionProfileRequest.connectionProfile: object expected");
                                message.connectionProfile = $root.google.cloud.datastream.v1.ConnectionProfile.fromObject(object.connectionProfile);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            if (object.force != null)
                                message.force = Boolean(object.force);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateConnectionProfileRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.CreateConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1.CreateConnectionProfileRequest} message CreateConnectionProfileRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateConnectionProfileRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.connectionProfileId = "";
                                object.connectionProfile = null;
                                object.requestId = "";
                                object.validateOnly = false;
                                object.force = false;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.connectionProfileId != null && message.hasOwnProperty("connectionProfileId"))
                                object.connectionProfileId = message.connectionProfileId;
                            if (message.connectionProfile != null && message.hasOwnProperty("connectionProfile"))
                                object.connectionProfile = $root.google.cloud.datastream.v1.ConnectionProfile.toObject(message.connectionProfile, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            if (message.force != null && message.hasOwnProperty("force"))
                                object.force = message.force;
                            return object;
                        };
    
                        /**
                         * Converts this CreateConnectionProfileRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.CreateConnectionProfileRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateConnectionProfileRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateConnectionProfileRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.CreateConnectionProfileRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateConnectionProfileRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.CreateConnectionProfileRequest";
                        };
    
                        return CreateConnectionProfileRequest;
                    })();
    
                    v1.UpdateConnectionProfileRequest = (function() {
    
                        /**
                         * Properties of an UpdateConnectionProfileRequest.
                         * @memberof google.cloud.datastream.v1
                         * @interface IUpdateConnectionProfileRequest
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateConnectionProfileRequest updateMask
                         * @property {google.cloud.datastream.v1.IConnectionProfile|null} [connectionProfile] UpdateConnectionProfileRequest connectionProfile
                         * @property {string|null} [requestId] UpdateConnectionProfileRequest requestId
                         * @property {boolean|null} [validateOnly] UpdateConnectionProfileRequest validateOnly
                         * @property {boolean|null} [force] UpdateConnectionProfileRequest force
                         */
    
                        /**
                         * Constructs a new UpdateConnectionProfileRequest.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents an UpdateConnectionProfileRequest.
                         * @implements IUpdateConnectionProfileRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1.IUpdateConnectionProfileRequest=} [properties] Properties to set
                         */
                        function UpdateConnectionProfileRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateConnectionProfileRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.datastream.v1.UpdateConnectionProfileRequest
                         * @instance
                         */
                        UpdateConnectionProfileRequest.prototype.updateMask = null;
    
                        /**
                         * UpdateConnectionProfileRequest connectionProfile.
                         * @member {google.cloud.datastream.v1.IConnectionProfile|null|undefined} connectionProfile
                         * @memberof google.cloud.datastream.v1.UpdateConnectionProfileRequest
                         * @instance
                         */
                        UpdateConnectionProfileRequest.prototype.connectionProfile = null;
    
                        /**
                         * UpdateConnectionProfileRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.datastream.v1.UpdateConnectionProfileRequest
                         * @instance
                         */
                        UpdateConnectionProfileRequest.prototype.requestId = "";
    
                        /**
                         * UpdateConnectionProfileRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.datastream.v1.UpdateConnectionProfileRequest
                         * @instance
                         */
                        UpdateConnectionProfileRequest.prototype.validateOnly = false;
    
                        /**
                         * UpdateConnectionProfileRequest force.
                         * @member {boolean} force
                         * @memberof google.cloud.datastream.v1.UpdateConnectionProfileRequest
                         * @instance
                         */
                        UpdateConnectionProfileRequest.prototype.force = false;
    
                        /**
                         * Creates a new UpdateConnectionProfileRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.UpdateConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IUpdateConnectionProfileRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.UpdateConnectionProfileRequest} UpdateConnectionProfileRequest instance
                         */
                        UpdateConnectionProfileRequest.create = function create(properties) {
                            return new UpdateConnectionProfileRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateConnectionProfileRequest message. Does not implicitly {@link google.cloud.datastream.v1.UpdateConnectionProfileRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.UpdateConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IUpdateConnectionProfileRequest} message UpdateConnectionProfileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateConnectionProfileRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.connectionProfile != null && Object.hasOwnProperty.call(message, "connectionProfile"))
                                $root.google.cloud.datastream.v1.ConnectionProfile.encode(message.connectionProfile, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.validateOnly);
                            if (message.force != null && Object.hasOwnProperty.call(message, "force"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.force);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateConnectionProfileRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.UpdateConnectionProfileRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.UpdateConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IUpdateConnectionProfileRequest} message UpdateConnectionProfileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateConnectionProfileRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateConnectionProfileRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.UpdateConnectionProfileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.UpdateConnectionProfileRequest} UpdateConnectionProfileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateConnectionProfileRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.UpdateConnectionProfileRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.connectionProfile = $root.google.cloud.datastream.v1.ConnectionProfile.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                case 5: {
                                        message.force = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateConnectionProfileRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.UpdateConnectionProfileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.UpdateConnectionProfileRequest} UpdateConnectionProfileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateConnectionProfileRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateConnectionProfileRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.UpdateConnectionProfileRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateConnectionProfileRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.connectionProfile != null && message.hasOwnProperty("connectionProfile")) {
                                var error = $root.google.cloud.datastream.v1.ConnectionProfile.verify(message.connectionProfile);
                                if (error)
                                    return "connectionProfile." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            if (message.force != null && message.hasOwnProperty("force"))
                                if (typeof message.force !== "boolean")
                                    return "force: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdateConnectionProfileRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.UpdateConnectionProfileRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.UpdateConnectionProfileRequest} UpdateConnectionProfileRequest
                         */
                        UpdateConnectionProfileRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.UpdateConnectionProfileRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.UpdateConnectionProfileRequest();
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.UpdateConnectionProfileRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.connectionProfile != null) {
                                if (typeof object.connectionProfile !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.UpdateConnectionProfileRequest.connectionProfile: object expected");
                                message.connectionProfile = $root.google.cloud.datastream.v1.ConnectionProfile.fromObject(object.connectionProfile);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            if (object.force != null)
                                message.force = Boolean(object.force);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateConnectionProfileRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.UpdateConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1.UpdateConnectionProfileRequest} message UpdateConnectionProfileRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateConnectionProfileRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.updateMask = null;
                                object.connectionProfile = null;
                                object.requestId = "";
                                object.validateOnly = false;
                                object.force = false;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.connectionProfile != null && message.hasOwnProperty("connectionProfile"))
                                object.connectionProfile = $root.google.cloud.datastream.v1.ConnectionProfile.toObject(message.connectionProfile, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            if (message.force != null && message.hasOwnProperty("force"))
                                object.force = message.force;
                            return object;
                        };
    
                        /**
                         * Converts this UpdateConnectionProfileRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.UpdateConnectionProfileRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateConnectionProfileRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateConnectionProfileRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.UpdateConnectionProfileRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateConnectionProfileRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.UpdateConnectionProfileRequest";
                        };
    
                        return UpdateConnectionProfileRequest;
                    })();
    
                    v1.DeleteConnectionProfileRequest = (function() {
    
                        /**
                         * Properties of a DeleteConnectionProfileRequest.
                         * @memberof google.cloud.datastream.v1
                         * @interface IDeleteConnectionProfileRequest
                         * @property {string|null} [name] DeleteConnectionProfileRequest name
                         * @property {string|null} [requestId] DeleteConnectionProfileRequest requestId
                         */
    
                        /**
                         * Constructs a new DeleteConnectionProfileRequest.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a DeleteConnectionProfileRequest.
                         * @implements IDeleteConnectionProfileRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1.IDeleteConnectionProfileRequest=} [properties] Properties to set
                         */
                        function DeleteConnectionProfileRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteConnectionProfileRequest name.
                         * @member {string} name
                         * @memberof google.cloud.datastream.v1.DeleteConnectionProfileRequest
                         * @instance
                         */
                        DeleteConnectionProfileRequest.prototype.name = "";
    
                        /**
                         * DeleteConnectionProfileRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.datastream.v1.DeleteConnectionProfileRequest
                         * @instance
                         */
                        DeleteConnectionProfileRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new DeleteConnectionProfileRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.DeleteConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IDeleteConnectionProfileRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.DeleteConnectionProfileRequest} DeleteConnectionProfileRequest instance
                         */
                        DeleteConnectionProfileRequest.create = function create(properties) {
                            return new DeleteConnectionProfileRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteConnectionProfileRequest message. Does not implicitly {@link google.cloud.datastream.v1.DeleteConnectionProfileRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.DeleteConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IDeleteConnectionProfileRequest} message DeleteConnectionProfileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteConnectionProfileRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteConnectionProfileRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.DeleteConnectionProfileRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.DeleteConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IDeleteConnectionProfileRequest} message DeleteConnectionProfileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteConnectionProfileRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteConnectionProfileRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.DeleteConnectionProfileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.DeleteConnectionProfileRequest} DeleteConnectionProfileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteConnectionProfileRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.DeleteConnectionProfileRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteConnectionProfileRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.DeleteConnectionProfileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.DeleteConnectionProfileRequest} DeleteConnectionProfileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteConnectionProfileRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteConnectionProfileRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.DeleteConnectionProfileRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteConnectionProfileRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteConnectionProfileRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.DeleteConnectionProfileRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.DeleteConnectionProfileRequest} DeleteConnectionProfileRequest
                         */
                        DeleteConnectionProfileRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.DeleteConnectionProfileRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.DeleteConnectionProfileRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteConnectionProfileRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.DeleteConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1.DeleteConnectionProfileRequest} message DeleteConnectionProfileRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteConnectionProfileRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteConnectionProfileRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.DeleteConnectionProfileRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteConnectionProfileRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteConnectionProfileRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.DeleteConnectionProfileRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteConnectionProfileRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.DeleteConnectionProfileRequest";
                        };
    
                        return DeleteConnectionProfileRequest;
                    })();
    
                    v1.ListStreamsRequest = (function() {
    
                        /**
                         * Properties of a ListStreamsRequest.
                         * @memberof google.cloud.datastream.v1
                         * @interface IListStreamsRequest
                         * @property {string|null} [parent] ListStreamsRequest parent
                         * @property {number|null} [pageSize] ListStreamsRequest pageSize
                         * @property {string|null} [pageToken] ListStreamsRequest pageToken
                         * @property {string|null} [filter] ListStreamsRequest filter
                         * @property {string|null} [orderBy] ListStreamsRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListStreamsRequest.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a ListStreamsRequest.
                         * @implements IListStreamsRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1.IListStreamsRequest=} [properties] Properties to set
                         */
                        function ListStreamsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListStreamsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.datastream.v1.ListStreamsRequest
                         * @instance
                         */
                        ListStreamsRequest.prototype.parent = "";
    
                        /**
                         * ListStreamsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.datastream.v1.ListStreamsRequest
                         * @instance
                         */
                        ListStreamsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListStreamsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.datastream.v1.ListStreamsRequest
                         * @instance
                         */
                        ListStreamsRequest.prototype.pageToken = "";
    
                        /**
                         * ListStreamsRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.datastream.v1.ListStreamsRequest
                         * @instance
                         */
                        ListStreamsRequest.prototype.filter = "";
    
                        /**
                         * ListStreamsRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.datastream.v1.ListStreamsRequest
                         * @instance
                         */
                        ListStreamsRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListStreamsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.ListStreamsRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IListStreamsRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.ListStreamsRequest} ListStreamsRequest instance
                         */
                        ListStreamsRequest.create = function create(properties) {
                            return new ListStreamsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListStreamsRequest message. Does not implicitly {@link google.cloud.datastream.v1.ListStreamsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.ListStreamsRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IListStreamsRequest} message ListStreamsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListStreamsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListStreamsRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.ListStreamsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.ListStreamsRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IListStreamsRequest} message ListStreamsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListStreamsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListStreamsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.ListStreamsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.ListStreamsRequest} ListStreamsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListStreamsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.ListStreamsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListStreamsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.ListStreamsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.ListStreamsRequest} ListStreamsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListStreamsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListStreamsRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.ListStreamsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListStreamsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListStreamsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.ListStreamsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.ListStreamsRequest} ListStreamsRequest
                         */
                        ListStreamsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.ListStreamsRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.ListStreamsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListStreamsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.ListStreamsRequest
                         * @static
                         * @param {google.cloud.datastream.v1.ListStreamsRequest} message ListStreamsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListStreamsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListStreamsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.ListStreamsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListStreamsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListStreamsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.ListStreamsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListStreamsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.ListStreamsRequest";
                        };
    
                        return ListStreamsRequest;
                    })();
    
                    v1.ListStreamsResponse = (function() {
    
                        /**
                         * Properties of a ListStreamsResponse.
                         * @memberof google.cloud.datastream.v1
                         * @interface IListStreamsResponse
                         * @property {Array.<google.cloud.datastream.v1.IStream>|null} [streams] ListStreamsResponse streams
                         * @property {string|null} [nextPageToken] ListStreamsResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListStreamsResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListStreamsResponse.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a ListStreamsResponse.
                         * @implements IListStreamsResponse
                         * @constructor
                         * @param {google.cloud.datastream.v1.IListStreamsResponse=} [properties] Properties to set
                         */
                        function ListStreamsResponse(properties) {
                            this.streams = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListStreamsResponse streams.
                         * @member {Array.<google.cloud.datastream.v1.IStream>} streams
                         * @memberof google.cloud.datastream.v1.ListStreamsResponse
                         * @instance
                         */
                        ListStreamsResponse.prototype.streams = $util.emptyArray;
    
                        /**
                         * ListStreamsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.datastream.v1.ListStreamsResponse
                         * @instance
                         */
                        ListStreamsResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListStreamsResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.datastream.v1.ListStreamsResponse
                         * @instance
                         */
                        ListStreamsResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListStreamsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.ListStreamsResponse
                         * @static
                         * @param {google.cloud.datastream.v1.IListStreamsResponse=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.ListStreamsResponse} ListStreamsResponse instance
                         */
                        ListStreamsResponse.create = function create(properties) {
                            return new ListStreamsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListStreamsResponse message. Does not implicitly {@link google.cloud.datastream.v1.ListStreamsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.ListStreamsResponse
                         * @static
                         * @param {google.cloud.datastream.v1.IListStreamsResponse} message ListStreamsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListStreamsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.streams != null && message.streams.length)
                                for (var i = 0; i < message.streams.length; ++i)
                                    $root.google.cloud.datastream.v1.Stream.encode(message.streams[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListStreamsResponse message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.ListStreamsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.ListStreamsResponse
                         * @static
                         * @param {google.cloud.datastream.v1.IListStreamsResponse} message ListStreamsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListStreamsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListStreamsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.ListStreamsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.ListStreamsResponse} ListStreamsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListStreamsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.ListStreamsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.streams && message.streams.length))
                                            message.streams = [];
                                        message.streams.push($root.google.cloud.datastream.v1.Stream.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListStreamsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.ListStreamsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.ListStreamsResponse} ListStreamsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListStreamsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListStreamsResponse message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.ListStreamsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListStreamsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.streams != null && message.hasOwnProperty("streams")) {
                                if (!Array.isArray(message.streams))
                                    return "streams: array expected";
                                for (var i = 0; i < message.streams.length; ++i) {
                                    var error = $root.google.cloud.datastream.v1.Stream.verify(message.streams[i]);
                                    if (error)
                                        return "streams." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListStreamsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.ListStreamsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.ListStreamsResponse} ListStreamsResponse
                         */
                        ListStreamsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.ListStreamsResponse)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.ListStreamsResponse();
                            if (object.streams) {
                                if (!Array.isArray(object.streams))
                                    throw TypeError(".google.cloud.datastream.v1.ListStreamsResponse.streams: array expected");
                                message.streams = [];
                                for (var i = 0; i < object.streams.length; ++i) {
                                    if (typeof object.streams[i] !== "object")
                                        throw TypeError(".google.cloud.datastream.v1.ListStreamsResponse.streams: object expected");
                                    message.streams[i] = $root.google.cloud.datastream.v1.Stream.fromObject(object.streams[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.datastream.v1.ListStreamsResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListStreamsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.ListStreamsResponse
                         * @static
                         * @param {google.cloud.datastream.v1.ListStreamsResponse} message ListStreamsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListStreamsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.streams = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.streams && message.streams.length) {
                                object.streams = [];
                                for (var j = 0; j < message.streams.length; ++j)
                                    object.streams[j] = $root.google.cloud.datastream.v1.Stream.toObject(message.streams[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListStreamsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.ListStreamsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListStreamsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListStreamsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.ListStreamsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListStreamsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.ListStreamsResponse";
                        };
    
                        return ListStreamsResponse;
                    })();
    
                    v1.GetStreamRequest = (function() {
    
                        /**
                         * Properties of a GetStreamRequest.
                         * @memberof google.cloud.datastream.v1
                         * @interface IGetStreamRequest
                         * @property {string|null} [name] GetStreamRequest name
                         */
    
                        /**
                         * Constructs a new GetStreamRequest.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a GetStreamRequest.
                         * @implements IGetStreamRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1.IGetStreamRequest=} [properties] Properties to set
                         */
                        function GetStreamRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetStreamRequest name.
                         * @member {string} name
                         * @memberof google.cloud.datastream.v1.GetStreamRequest
                         * @instance
                         */
                        GetStreamRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetStreamRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.GetStreamRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IGetStreamRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.GetStreamRequest} GetStreamRequest instance
                         */
                        GetStreamRequest.create = function create(properties) {
                            return new GetStreamRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetStreamRequest message. Does not implicitly {@link google.cloud.datastream.v1.GetStreamRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.GetStreamRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IGetStreamRequest} message GetStreamRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetStreamRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetStreamRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.GetStreamRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.GetStreamRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IGetStreamRequest} message GetStreamRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetStreamRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetStreamRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.GetStreamRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.GetStreamRequest} GetStreamRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetStreamRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.GetStreamRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetStreamRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.GetStreamRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.GetStreamRequest} GetStreamRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetStreamRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetStreamRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.GetStreamRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetStreamRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetStreamRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.GetStreamRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.GetStreamRequest} GetStreamRequest
                         */
                        GetStreamRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.GetStreamRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.GetStreamRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetStreamRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.GetStreamRequest
                         * @static
                         * @param {google.cloud.datastream.v1.GetStreamRequest} message GetStreamRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetStreamRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetStreamRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.GetStreamRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetStreamRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetStreamRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.GetStreamRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetStreamRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.GetStreamRequest";
                        };
    
                        return GetStreamRequest;
                    })();
    
                    v1.CreateStreamRequest = (function() {
    
                        /**
                         * Properties of a CreateStreamRequest.
                         * @memberof google.cloud.datastream.v1
                         * @interface ICreateStreamRequest
                         * @property {string|null} [parent] CreateStreamRequest parent
                         * @property {string|null} [streamId] CreateStreamRequest streamId
                         * @property {google.cloud.datastream.v1.IStream|null} [stream] CreateStreamRequest stream
                         * @property {string|null} [requestId] CreateStreamRequest requestId
                         * @property {boolean|null} [validateOnly] CreateStreamRequest validateOnly
                         * @property {boolean|null} [force] CreateStreamRequest force
                         */
    
                        /**
                         * Constructs a new CreateStreamRequest.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a CreateStreamRequest.
                         * @implements ICreateStreamRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1.ICreateStreamRequest=} [properties] Properties to set
                         */
                        function CreateStreamRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateStreamRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.datastream.v1.CreateStreamRequest
                         * @instance
                         */
                        CreateStreamRequest.prototype.parent = "";
    
                        /**
                         * CreateStreamRequest streamId.
                         * @member {string} streamId
                         * @memberof google.cloud.datastream.v1.CreateStreamRequest
                         * @instance
                         */
                        CreateStreamRequest.prototype.streamId = "";
    
                        /**
                         * CreateStreamRequest stream.
                         * @member {google.cloud.datastream.v1.IStream|null|undefined} stream
                         * @memberof google.cloud.datastream.v1.CreateStreamRequest
                         * @instance
                         */
                        CreateStreamRequest.prototype.stream = null;
    
                        /**
                         * CreateStreamRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.datastream.v1.CreateStreamRequest
                         * @instance
                         */
                        CreateStreamRequest.prototype.requestId = "";
    
                        /**
                         * CreateStreamRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.datastream.v1.CreateStreamRequest
                         * @instance
                         */
                        CreateStreamRequest.prototype.validateOnly = false;
    
                        /**
                         * CreateStreamRequest force.
                         * @member {boolean} force
                         * @memberof google.cloud.datastream.v1.CreateStreamRequest
                         * @instance
                         */
                        CreateStreamRequest.prototype.force = false;
    
                        /**
                         * Creates a new CreateStreamRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.CreateStreamRequest
                         * @static
                         * @param {google.cloud.datastream.v1.ICreateStreamRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.CreateStreamRequest} CreateStreamRequest instance
                         */
                        CreateStreamRequest.create = function create(properties) {
                            return new CreateStreamRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateStreamRequest message. Does not implicitly {@link google.cloud.datastream.v1.CreateStreamRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.CreateStreamRequest
                         * @static
                         * @param {google.cloud.datastream.v1.ICreateStreamRequest} message CreateStreamRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateStreamRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.streamId != null && Object.hasOwnProperty.call(message, "streamId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.streamId);
                            if (message.stream != null && Object.hasOwnProperty.call(message, "stream"))
                                $root.google.cloud.datastream.v1.Stream.encode(message.stream, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.validateOnly);
                            if (message.force != null && Object.hasOwnProperty.call(message, "force"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.force);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateStreamRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.CreateStreamRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.CreateStreamRequest
                         * @static
                         * @param {google.cloud.datastream.v1.ICreateStreamRequest} message CreateStreamRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateStreamRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateStreamRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.CreateStreamRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.CreateStreamRequest} CreateStreamRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateStreamRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.CreateStreamRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.streamId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.stream = $root.google.cloud.datastream.v1.Stream.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                case 6: {
                                        message.force = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateStreamRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.CreateStreamRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.CreateStreamRequest} CreateStreamRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateStreamRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateStreamRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.CreateStreamRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateStreamRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.streamId != null && message.hasOwnProperty("streamId"))
                                if (!$util.isString(message.streamId))
                                    return "streamId: string expected";
                            if (message.stream != null && message.hasOwnProperty("stream")) {
                                var error = $root.google.cloud.datastream.v1.Stream.verify(message.stream);
                                if (error)
                                    return "stream." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            if (message.force != null && message.hasOwnProperty("force"))
                                if (typeof message.force !== "boolean")
                                    return "force: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateStreamRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.CreateStreamRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.CreateStreamRequest} CreateStreamRequest
                         */
                        CreateStreamRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.CreateStreamRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.CreateStreamRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.streamId != null)
                                message.streamId = String(object.streamId);
                            if (object.stream != null) {
                                if (typeof object.stream !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.CreateStreamRequest.stream: object expected");
                                message.stream = $root.google.cloud.datastream.v1.Stream.fromObject(object.stream);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            if (object.force != null)
                                message.force = Boolean(object.force);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateStreamRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.CreateStreamRequest
                         * @static
                         * @param {google.cloud.datastream.v1.CreateStreamRequest} message CreateStreamRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateStreamRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.streamId = "";
                                object.stream = null;
                                object.requestId = "";
                                object.validateOnly = false;
                                object.force = false;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.streamId != null && message.hasOwnProperty("streamId"))
                                object.streamId = message.streamId;
                            if (message.stream != null && message.hasOwnProperty("stream"))
                                object.stream = $root.google.cloud.datastream.v1.Stream.toObject(message.stream, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            if (message.force != null && message.hasOwnProperty("force"))
                                object.force = message.force;
                            return object;
                        };
    
                        /**
                         * Converts this CreateStreamRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.CreateStreamRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateStreamRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateStreamRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.CreateStreamRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateStreamRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.CreateStreamRequest";
                        };
    
                        return CreateStreamRequest;
                    })();
    
                    v1.UpdateStreamRequest = (function() {
    
                        /**
                         * Properties of an UpdateStreamRequest.
                         * @memberof google.cloud.datastream.v1
                         * @interface IUpdateStreamRequest
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateStreamRequest updateMask
                         * @property {google.cloud.datastream.v1.IStream|null} [stream] UpdateStreamRequest stream
                         * @property {string|null} [requestId] UpdateStreamRequest requestId
                         * @property {boolean|null} [validateOnly] UpdateStreamRequest validateOnly
                         * @property {boolean|null} [force] UpdateStreamRequest force
                         */
    
                        /**
                         * Constructs a new UpdateStreamRequest.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents an UpdateStreamRequest.
                         * @implements IUpdateStreamRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1.IUpdateStreamRequest=} [properties] Properties to set
                         */
                        function UpdateStreamRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateStreamRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.datastream.v1.UpdateStreamRequest
                         * @instance
                         */
                        UpdateStreamRequest.prototype.updateMask = null;
    
                        /**
                         * UpdateStreamRequest stream.
                         * @member {google.cloud.datastream.v1.IStream|null|undefined} stream
                         * @memberof google.cloud.datastream.v1.UpdateStreamRequest
                         * @instance
                         */
                        UpdateStreamRequest.prototype.stream = null;
    
                        /**
                         * UpdateStreamRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.datastream.v1.UpdateStreamRequest
                         * @instance
                         */
                        UpdateStreamRequest.prototype.requestId = "";
    
                        /**
                         * UpdateStreamRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.datastream.v1.UpdateStreamRequest
                         * @instance
                         */
                        UpdateStreamRequest.prototype.validateOnly = false;
    
                        /**
                         * UpdateStreamRequest force.
                         * @member {boolean} force
                         * @memberof google.cloud.datastream.v1.UpdateStreamRequest
                         * @instance
                         */
                        UpdateStreamRequest.prototype.force = false;
    
                        /**
                         * Creates a new UpdateStreamRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.UpdateStreamRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IUpdateStreamRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.UpdateStreamRequest} UpdateStreamRequest instance
                         */
                        UpdateStreamRequest.create = function create(properties) {
                            return new UpdateStreamRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateStreamRequest message. Does not implicitly {@link google.cloud.datastream.v1.UpdateStreamRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.UpdateStreamRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IUpdateStreamRequest} message UpdateStreamRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateStreamRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.stream != null && Object.hasOwnProperty.call(message, "stream"))
                                $root.google.cloud.datastream.v1.Stream.encode(message.stream, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.validateOnly);
                            if (message.force != null && Object.hasOwnProperty.call(message, "force"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.force);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateStreamRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.UpdateStreamRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.UpdateStreamRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IUpdateStreamRequest} message UpdateStreamRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateStreamRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateStreamRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.UpdateStreamRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.UpdateStreamRequest} UpdateStreamRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateStreamRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.UpdateStreamRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.stream = $root.google.cloud.datastream.v1.Stream.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                case 5: {
                                        message.force = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateStreamRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.UpdateStreamRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.UpdateStreamRequest} UpdateStreamRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateStreamRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateStreamRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.UpdateStreamRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateStreamRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.stream != null && message.hasOwnProperty("stream")) {
                                var error = $root.google.cloud.datastream.v1.Stream.verify(message.stream);
                                if (error)
                                    return "stream." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            if (message.force != null && message.hasOwnProperty("force"))
                                if (typeof message.force !== "boolean")
                                    return "force: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdateStreamRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.UpdateStreamRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.UpdateStreamRequest} UpdateStreamRequest
                         */
                        UpdateStreamRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.UpdateStreamRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.UpdateStreamRequest();
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.UpdateStreamRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.stream != null) {
                                if (typeof object.stream !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.UpdateStreamRequest.stream: object expected");
                                message.stream = $root.google.cloud.datastream.v1.Stream.fromObject(object.stream);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            if (object.force != null)
                                message.force = Boolean(object.force);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateStreamRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.UpdateStreamRequest
                         * @static
                         * @param {google.cloud.datastream.v1.UpdateStreamRequest} message UpdateStreamRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateStreamRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.updateMask = null;
                                object.stream = null;
                                object.requestId = "";
                                object.validateOnly = false;
                                object.force = false;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.stream != null && message.hasOwnProperty("stream"))
                                object.stream = $root.google.cloud.datastream.v1.Stream.toObject(message.stream, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            if (message.force != null && message.hasOwnProperty("force"))
                                object.force = message.force;
                            return object;
                        };
    
                        /**
                         * Converts this UpdateStreamRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.UpdateStreamRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateStreamRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateStreamRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.UpdateStreamRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateStreamRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.UpdateStreamRequest";
                        };
    
                        return UpdateStreamRequest;
                    })();
    
                    v1.DeleteStreamRequest = (function() {
    
                        /**
                         * Properties of a DeleteStreamRequest.
                         * @memberof google.cloud.datastream.v1
                         * @interface IDeleteStreamRequest
                         * @property {string|null} [name] DeleteStreamRequest name
                         * @property {string|null} [requestId] DeleteStreamRequest requestId
                         */
    
                        /**
                         * Constructs a new DeleteStreamRequest.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a DeleteStreamRequest.
                         * @implements IDeleteStreamRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1.IDeleteStreamRequest=} [properties] Properties to set
                         */
                        function DeleteStreamRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteStreamRequest name.
                         * @member {string} name
                         * @memberof google.cloud.datastream.v1.DeleteStreamRequest
                         * @instance
                         */
                        DeleteStreamRequest.prototype.name = "";
    
                        /**
                         * DeleteStreamRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.datastream.v1.DeleteStreamRequest
                         * @instance
                         */
                        DeleteStreamRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new DeleteStreamRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.DeleteStreamRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IDeleteStreamRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.DeleteStreamRequest} DeleteStreamRequest instance
                         */
                        DeleteStreamRequest.create = function create(properties) {
                            return new DeleteStreamRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteStreamRequest message. Does not implicitly {@link google.cloud.datastream.v1.DeleteStreamRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.DeleteStreamRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IDeleteStreamRequest} message DeleteStreamRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteStreamRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteStreamRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.DeleteStreamRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.DeleteStreamRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IDeleteStreamRequest} message DeleteStreamRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteStreamRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteStreamRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.DeleteStreamRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.DeleteStreamRequest} DeleteStreamRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteStreamRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.DeleteStreamRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteStreamRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.DeleteStreamRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.DeleteStreamRequest} DeleteStreamRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteStreamRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteStreamRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.DeleteStreamRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteStreamRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteStreamRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.DeleteStreamRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.DeleteStreamRequest} DeleteStreamRequest
                         */
                        DeleteStreamRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.DeleteStreamRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.DeleteStreamRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteStreamRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.DeleteStreamRequest
                         * @static
                         * @param {google.cloud.datastream.v1.DeleteStreamRequest} message DeleteStreamRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteStreamRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteStreamRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.DeleteStreamRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteStreamRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteStreamRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.DeleteStreamRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteStreamRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.DeleteStreamRequest";
                        };
    
                        return DeleteStreamRequest;
                    })();
    
                    v1.GetStreamObjectRequest = (function() {
    
                        /**
                         * Properties of a GetStreamObjectRequest.
                         * @memberof google.cloud.datastream.v1
                         * @interface IGetStreamObjectRequest
                         * @property {string|null} [name] GetStreamObjectRequest name
                         */
    
                        /**
                         * Constructs a new GetStreamObjectRequest.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a GetStreamObjectRequest.
                         * @implements IGetStreamObjectRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1.IGetStreamObjectRequest=} [properties] Properties to set
                         */
                        function GetStreamObjectRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetStreamObjectRequest name.
                         * @member {string} name
                         * @memberof google.cloud.datastream.v1.GetStreamObjectRequest
                         * @instance
                         */
                        GetStreamObjectRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetStreamObjectRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.GetStreamObjectRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IGetStreamObjectRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.GetStreamObjectRequest} GetStreamObjectRequest instance
                         */
                        GetStreamObjectRequest.create = function create(properties) {
                            return new GetStreamObjectRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetStreamObjectRequest message. Does not implicitly {@link google.cloud.datastream.v1.GetStreamObjectRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.GetStreamObjectRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IGetStreamObjectRequest} message GetStreamObjectRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetStreamObjectRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetStreamObjectRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.GetStreamObjectRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.GetStreamObjectRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IGetStreamObjectRequest} message GetStreamObjectRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetStreamObjectRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetStreamObjectRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.GetStreamObjectRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.GetStreamObjectRequest} GetStreamObjectRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetStreamObjectRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.GetStreamObjectRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetStreamObjectRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.GetStreamObjectRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.GetStreamObjectRequest} GetStreamObjectRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetStreamObjectRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetStreamObjectRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.GetStreamObjectRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetStreamObjectRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetStreamObjectRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.GetStreamObjectRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.GetStreamObjectRequest} GetStreamObjectRequest
                         */
                        GetStreamObjectRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.GetStreamObjectRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.GetStreamObjectRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetStreamObjectRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.GetStreamObjectRequest
                         * @static
                         * @param {google.cloud.datastream.v1.GetStreamObjectRequest} message GetStreamObjectRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetStreamObjectRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetStreamObjectRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.GetStreamObjectRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetStreamObjectRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetStreamObjectRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.GetStreamObjectRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetStreamObjectRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.GetStreamObjectRequest";
                        };
    
                        return GetStreamObjectRequest;
                    })();
    
                    v1.LookupStreamObjectRequest = (function() {
    
                        /**
                         * Properties of a LookupStreamObjectRequest.
                         * @memberof google.cloud.datastream.v1
                         * @interface ILookupStreamObjectRequest
                         * @property {string|null} [parent] LookupStreamObjectRequest parent
                         * @property {google.cloud.datastream.v1.ISourceObjectIdentifier|null} [sourceObjectIdentifier] LookupStreamObjectRequest sourceObjectIdentifier
                         */
    
                        /**
                         * Constructs a new LookupStreamObjectRequest.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a LookupStreamObjectRequest.
                         * @implements ILookupStreamObjectRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1.ILookupStreamObjectRequest=} [properties] Properties to set
                         */
                        function LookupStreamObjectRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * LookupStreamObjectRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.datastream.v1.LookupStreamObjectRequest
                         * @instance
                         */
                        LookupStreamObjectRequest.prototype.parent = "";
    
                        /**
                         * LookupStreamObjectRequest sourceObjectIdentifier.
                         * @member {google.cloud.datastream.v1.ISourceObjectIdentifier|null|undefined} sourceObjectIdentifier
                         * @memberof google.cloud.datastream.v1.LookupStreamObjectRequest
                         * @instance
                         */
                        LookupStreamObjectRequest.prototype.sourceObjectIdentifier = null;
    
                        /**
                         * Creates a new LookupStreamObjectRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.LookupStreamObjectRequest
                         * @static
                         * @param {google.cloud.datastream.v1.ILookupStreamObjectRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.LookupStreamObjectRequest} LookupStreamObjectRequest instance
                         */
                        LookupStreamObjectRequest.create = function create(properties) {
                            return new LookupStreamObjectRequest(properties);
                        };
    
                        /**
                         * Encodes the specified LookupStreamObjectRequest message. Does not implicitly {@link google.cloud.datastream.v1.LookupStreamObjectRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.LookupStreamObjectRequest
                         * @static
                         * @param {google.cloud.datastream.v1.ILookupStreamObjectRequest} message LookupStreamObjectRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LookupStreamObjectRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.sourceObjectIdentifier != null && Object.hasOwnProperty.call(message, "sourceObjectIdentifier"))
                                $root.google.cloud.datastream.v1.SourceObjectIdentifier.encode(message.sourceObjectIdentifier, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified LookupStreamObjectRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.LookupStreamObjectRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.LookupStreamObjectRequest
                         * @static
                         * @param {google.cloud.datastream.v1.ILookupStreamObjectRequest} message LookupStreamObjectRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LookupStreamObjectRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a LookupStreamObjectRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.LookupStreamObjectRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.LookupStreamObjectRequest} LookupStreamObjectRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LookupStreamObjectRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.LookupStreamObjectRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.sourceObjectIdentifier = $root.google.cloud.datastream.v1.SourceObjectIdentifier.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a LookupStreamObjectRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.LookupStreamObjectRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.LookupStreamObjectRequest} LookupStreamObjectRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LookupStreamObjectRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a LookupStreamObjectRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.LookupStreamObjectRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        LookupStreamObjectRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.sourceObjectIdentifier != null && message.hasOwnProperty("sourceObjectIdentifier")) {
                                var error = $root.google.cloud.datastream.v1.SourceObjectIdentifier.verify(message.sourceObjectIdentifier);
                                if (error)
                                    return "sourceObjectIdentifier." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a LookupStreamObjectRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.LookupStreamObjectRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.LookupStreamObjectRequest} LookupStreamObjectRequest
                         */
                        LookupStreamObjectRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.LookupStreamObjectRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.LookupStreamObjectRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.sourceObjectIdentifier != null) {
                                if (typeof object.sourceObjectIdentifier !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.LookupStreamObjectRequest.sourceObjectIdentifier: object expected");
                                message.sourceObjectIdentifier = $root.google.cloud.datastream.v1.SourceObjectIdentifier.fromObject(object.sourceObjectIdentifier);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a LookupStreamObjectRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.LookupStreamObjectRequest
                         * @static
                         * @param {google.cloud.datastream.v1.LookupStreamObjectRequest} message LookupStreamObjectRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        LookupStreamObjectRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.sourceObjectIdentifier = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.sourceObjectIdentifier != null && message.hasOwnProperty("sourceObjectIdentifier"))
                                object.sourceObjectIdentifier = $root.google.cloud.datastream.v1.SourceObjectIdentifier.toObject(message.sourceObjectIdentifier, options);
                            return object;
                        };
    
                        /**
                         * Converts this LookupStreamObjectRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.LookupStreamObjectRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        LookupStreamObjectRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for LookupStreamObjectRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.LookupStreamObjectRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        LookupStreamObjectRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.LookupStreamObjectRequest";
                        };
    
                        return LookupStreamObjectRequest;
                    })();
    
                    v1.StartBackfillJobRequest = (function() {
    
                        /**
                         * Properties of a StartBackfillJobRequest.
                         * @memberof google.cloud.datastream.v1
                         * @interface IStartBackfillJobRequest
                         * @property {string|null} [object] StartBackfillJobRequest object
                         */
    
                        /**
                         * Constructs a new StartBackfillJobRequest.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a StartBackfillJobRequest.
                         * @implements IStartBackfillJobRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1.IStartBackfillJobRequest=} [properties] Properties to set
                         */
                        function StartBackfillJobRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * StartBackfillJobRequest object.
                         * @member {string} object
                         * @memberof google.cloud.datastream.v1.StartBackfillJobRequest
                         * @instance
                         */
                        StartBackfillJobRequest.prototype.object = "";
    
                        /**
                         * Creates a new StartBackfillJobRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.StartBackfillJobRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IStartBackfillJobRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.StartBackfillJobRequest} StartBackfillJobRequest instance
                         */
                        StartBackfillJobRequest.create = function create(properties) {
                            return new StartBackfillJobRequest(properties);
                        };
    
                        /**
                         * Encodes the specified StartBackfillJobRequest message. Does not implicitly {@link google.cloud.datastream.v1.StartBackfillJobRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.StartBackfillJobRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IStartBackfillJobRequest} message StartBackfillJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StartBackfillJobRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.object != null && Object.hasOwnProperty.call(message, "object"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.object);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified StartBackfillJobRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.StartBackfillJobRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.StartBackfillJobRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IStartBackfillJobRequest} message StartBackfillJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StartBackfillJobRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a StartBackfillJobRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.StartBackfillJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.StartBackfillJobRequest} StartBackfillJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StartBackfillJobRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.StartBackfillJobRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.object = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a StartBackfillJobRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.StartBackfillJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.StartBackfillJobRequest} StartBackfillJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StartBackfillJobRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a StartBackfillJobRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.StartBackfillJobRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StartBackfillJobRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.object != null && message.hasOwnProperty("object"))
                                if (!$util.isString(message.object))
                                    return "object: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a StartBackfillJobRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.StartBackfillJobRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.StartBackfillJobRequest} StartBackfillJobRequest
                         */
                        StartBackfillJobRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.StartBackfillJobRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.StartBackfillJobRequest();
                            if (object.object != null)
                                message.object = String(object.object);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a StartBackfillJobRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.StartBackfillJobRequest
                         * @static
                         * @param {google.cloud.datastream.v1.StartBackfillJobRequest} message StartBackfillJobRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StartBackfillJobRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.object = "";
                            if (message.object != null && message.hasOwnProperty("object"))
                                object.object = message.object;
                            return object;
                        };
    
                        /**
                         * Converts this StartBackfillJobRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.StartBackfillJobRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StartBackfillJobRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for StartBackfillJobRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.StartBackfillJobRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StartBackfillJobRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.StartBackfillJobRequest";
                        };
    
                        return StartBackfillJobRequest;
                    })();
    
                    v1.StartBackfillJobResponse = (function() {
    
                        /**
                         * Properties of a StartBackfillJobResponse.
                         * @memberof google.cloud.datastream.v1
                         * @interface IStartBackfillJobResponse
                         * @property {google.cloud.datastream.v1.IStreamObject|null} [object] StartBackfillJobResponse object
                         */
    
                        /**
                         * Constructs a new StartBackfillJobResponse.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a StartBackfillJobResponse.
                         * @implements IStartBackfillJobResponse
                         * @constructor
                         * @param {google.cloud.datastream.v1.IStartBackfillJobResponse=} [properties] Properties to set
                         */
                        function StartBackfillJobResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * StartBackfillJobResponse object.
                         * @member {google.cloud.datastream.v1.IStreamObject|null|undefined} object
                         * @memberof google.cloud.datastream.v1.StartBackfillJobResponse
                         * @instance
                         */
                        StartBackfillJobResponse.prototype.object = null;
    
                        /**
                         * Creates a new StartBackfillJobResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.StartBackfillJobResponse
                         * @static
                         * @param {google.cloud.datastream.v1.IStartBackfillJobResponse=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.StartBackfillJobResponse} StartBackfillJobResponse instance
                         */
                        StartBackfillJobResponse.create = function create(properties) {
                            return new StartBackfillJobResponse(properties);
                        };
    
                        /**
                         * Encodes the specified StartBackfillJobResponse message. Does not implicitly {@link google.cloud.datastream.v1.StartBackfillJobResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.StartBackfillJobResponse
                         * @static
                         * @param {google.cloud.datastream.v1.IStartBackfillJobResponse} message StartBackfillJobResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StartBackfillJobResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.object != null && Object.hasOwnProperty.call(message, "object"))
                                $root.google.cloud.datastream.v1.StreamObject.encode(message.object, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified StartBackfillJobResponse message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.StartBackfillJobResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.StartBackfillJobResponse
                         * @static
                         * @param {google.cloud.datastream.v1.IStartBackfillJobResponse} message StartBackfillJobResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StartBackfillJobResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a StartBackfillJobResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.StartBackfillJobResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.StartBackfillJobResponse} StartBackfillJobResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StartBackfillJobResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.StartBackfillJobResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.object = $root.google.cloud.datastream.v1.StreamObject.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a StartBackfillJobResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.StartBackfillJobResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.StartBackfillJobResponse} StartBackfillJobResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StartBackfillJobResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a StartBackfillJobResponse message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.StartBackfillJobResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StartBackfillJobResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.object != null && message.hasOwnProperty("object")) {
                                var error = $root.google.cloud.datastream.v1.StreamObject.verify(message.object);
                                if (error)
                                    return "object." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a StartBackfillJobResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.StartBackfillJobResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.StartBackfillJobResponse} StartBackfillJobResponse
                         */
                        StartBackfillJobResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.StartBackfillJobResponse)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.StartBackfillJobResponse();
                            if (object.object != null) {
                                if (typeof object.object !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.StartBackfillJobResponse.object: object expected");
                                message.object = $root.google.cloud.datastream.v1.StreamObject.fromObject(object.object);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a StartBackfillJobResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.StartBackfillJobResponse
                         * @static
                         * @param {google.cloud.datastream.v1.StartBackfillJobResponse} message StartBackfillJobResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StartBackfillJobResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.object = null;
                            if (message.object != null && message.hasOwnProperty("object"))
                                object.object = $root.google.cloud.datastream.v1.StreamObject.toObject(message.object, options);
                            return object;
                        };
    
                        /**
                         * Converts this StartBackfillJobResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.StartBackfillJobResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StartBackfillJobResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for StartBackfillJobResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.StartBackfillJobResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StartBackfillJobResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.StartBackfillJobResponse";
                        };
    
                        return StartBackfillJobResponse;
                    })();
    
                    v1.StopBackfillJobRequest = (function() {
    
                        /**
                         * Properties of a StopBackfillJobRequest.
                         * @memberof google.cloud.datastream.v1
                         * @interface IStopBackfillJobRequest
                         * @property {string|null} [object] StopBackfillJobRequest object
                         */
    
                        /**
                         * Constructs a new StopBackfillJobRequest.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a StopBackfillJobRequest.
                         * @implements IStopBackfillJobRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1.IStopBackfillJobRequest=} [properties] Properties to set
                         */
                        function StopBackfillJobRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * StopBackfillJobRequest object.
                         * @member {string} object
                         * @memberof google.cloud.datastream.v1.StopBackfillJobRequest
                         * @instance
                         */
                        StopBackfillJobRequest.prototype.object = "";
    
                        /**
                         * Creates a new StopBackfillJobRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.StopBackfillJobRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IStopBackfillJobRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.StopBackfillJobRequest} StopBackfillJobRequest instance
                         */
                        StopBackfillJobRequest.create = function create(properties) {
                            return new StopBackfillJobRequest(properties);
                        };
    
                        /**
                         * Encodes the specified StopBackfillJobRequest message. Does not implicitly {@link google.cloud.datastream.v1.StopBackfillJobRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.StopBackfillJobRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IStopBackfillJobRequest} message StopBackfillJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StopBackfillJobRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.object != null && Object.hasOwnProperty.call(message, "object"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.object);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified StopBackfillJobRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.StopBackfillJobRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.StopBackfillJobRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IStopBackfillJobRequest} message StopBackfillJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StopBackfillJobRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a StopBackfillJobRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.StopBackfillJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.StopBackfillJobRequest} StopBackfillJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StopBackfillJobRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.StopBackfillJobRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.object = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a StopBackfillJobRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.StopBackfillJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.StopBackfillJobRequest} StopBackfillJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StopBackfillJobRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a StopBackfillJobRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.StopBackfillJobRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StopBackfillJobRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.object != null && message.hasOwnProperty("object"))
                                if (!$util.isString(message.object))
                                    return "object: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a StopBackfillJobRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.StopBackfillJobRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.StopBackfillJobRequest} StopBackfillJobRequest
                         */
                        StopBackfillJobRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.StopBackfillJobRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.StopBackfillJobRequest();
                            if (object.object != null)
                                message.object = String(object.object);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a StopBackfillJobRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.StopBackfillJobRequest
                         * @static
                         * @param {google.cloud.datastream.v1.StopBackfillJobRequest} message StopBackfillJobRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StopBackfillJobRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.object = "";
                            if (message.object != null && message.hasOwnProperty("object"))
                                object.object = message.object;
                            return object;
                        };
    
                        /**
                         * Converts this StopBackfillJobRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.StopBackfillJobRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StopBackfillJobRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for StopBackfillJobRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.StopBackfillJobRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StopBackfillJobRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.StopBackfillJobRequest";
                        };
    
                        return StopBackfillJobRequest;
                    })();
    
                    v1.StopBackfillJobResponse = (function() {
    
                        /**
                         * Properties of a StopBackfillJobResponse.
                         * @memberof google.cloud.datastream.v1
                         * @interface IStopBackfillJobResponse
                         * @property {google.cloud.datastream.v1.IStreamObject|null} [object] StopBackfillJobResponse object
                         */
    
                        /**
                         * Constructs a new StopBackfillJobResponse.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a StopBackfillJobResponse.
                         * @implements IStopBackfillJobResponse
                         * @constructor
                         * @param {google.cloud.datastream.v1.IStopBackfillJobResponse=} [properties] Properties to set
                         */
                        function StopBackfillJobResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * StopBackfillJobResponse object.
                         * @member {google.cloud.datastream.v1.IStreamObject|null|undefined} object
                         * @memberof google.cloud.datastream.v1.StopBackfillJobResponse
                         * @instance
                         */
                        StopBackfillJobResponse.prototype.object = null;
    
                        /**
                         * Creates a new StopBackfillJobResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.StopBackfillJobResponse
                         * @static
                         * @param {google.cloud.datastream.v1.IStopBackfillJobResponse=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.StopBackfillJobResponse} StopBackfillJobResponse instance
                         */
                        StopBackfillJobResponse.create = function create(properties) {
                            return new StopBackfillJobResponse(properties);
                        };
    
                        /**
                         * Encodes the specified StopBackfillJobResponse message. Does not implicitly {@link google.cloud.datastream.v1.StopBackfillJobResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.StopBackfillJobResponse
                         * @static
                         * @param {google.cloud.datastream.v1.IStopBackfillJobResponse} message StopBackfillJobResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StopBackfillJobResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.object != null && Object.hasOwnProperty.call(message, "object"))
                                $root.google.cloud.datastream.v1.StreamObject.encode(message.object, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified StopBackfillJobResponse message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.StopBackfillJobResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.StopBackfillJobResponse
                         * @static
                         * @param {google.cloud.datastream.v1.IStopBackfillJobResponse} message StopBackfillJobResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StopBackfillJobResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a StopBackfillJobResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.StopBackfillJobResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.StopBackfillJobResponse} StopBackfillJobResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StopBackfillJobResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.StopBackfillJobResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.object = $root.google.cloud.datastream.v1.StreamObject.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a StopBackfillJobResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.StopBackfillJobResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.StopBackfillJobResponse} StopBackfillJobResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StopBackfillJobResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a StopBackfillJobResponse message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.StopBackfillJobResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StopBackfillJobResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.object != null && message.hasOwnProperty("object")) {
                                var error = $root.google.cloud.datastream.v1.StreamObject.verify(message.object);
                                if (error)
                                    return "object." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a StopBackfillJobResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.StopBackfillJobResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.StopBackfillJobResponse} StopBackfillJobResponse
                         */
                        StopBackfillJobResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.StopBackfillJobResponse)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.StopBackfillJobResponse();
                            if (object.object != null) {
                                if (typeof object.object !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.StopBackfillJobResponse.object: object expected");
                                message.object = $root.google.cloud.datastream.v1.StreamObject.fromObject(object.object);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a StopBackfillJobResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.StopBackfillJobResponse
                         * @static
                         * @param {google.cloud.datastream.v1.StopBackfillJobResponse} message StopBackfillJobResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StopBackfillJobResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.object = null;
                            if (message.object != null && message.hasOwnProperty("object"))
                                object.object = $root.google.cloud.datastream.v1.StreamObject.toObject(message.object, options);
                            return object;
                        };
    
                        /**
                         * Converts this StopBackfillJobResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.StopBackfillJobResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StopBackfillJobResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for StopBackfillJobResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.StopBackfillJobResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StopBackfillJobResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.StopBackfillJobResponse";
                        };
    
                        return StopBackfillJobResponse;
                    })();
    
                    v1.ListStreamObjectsRequest = (function() {
    
                        /**
                         * Properties of a ListStreamObjectsRequest.
                         * @memberof google.cloud.datastream.v1
                         * @interface IListStreamObjectsRequest
                         * @property {string|null} [parent] ListStreamObjectsRequest parent
                         * @property {number|null} [pageSize] ListStreamObjectsRequest pageSize
                         * @property {string|null} [pageToken] ListStreamObjectsRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListStreamObjectsRequest.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a ListStreamObjectsRequest.
                         * @implements IListStreamObjectsRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1.IListStreamObjectsRequest=} [properties] Properties to set
                         */
                        function ListStreamObjectsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListStreamObjectsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.datastream.v1.ListStreamObjectsRequest
                         * @instance
                         */
                        ListStreamObjectsRequest.prototype.parent = "";
    
                        /**
                         * ListStreamObjectsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.datastream.v1.ListStreamObjectsRequest
                         * @instance
                         */
                        ListStreamObjectsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListStreamObjectsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.datastream.v1.ListStreamObjectsRequest
                         * @instance
                         */
                        ListStreamObjectsRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListStreamObjectsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.ListStreamObjectsRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IListStreamObjectsRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.ListStreamObjectsRequest} ListStreamObjectsRequest instance
                         */
                        ListStreamObjectsRequest.create = function create(properties) {
                            return new ListStreamObjectsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListStreamObjectsRequest message. Does not implicitly {@link google.cloud.datastream.v1.ListStreamObjectsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.ListStreamObjectsRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IListStreamObjectsRequest} message ListStreamObjectsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListStreamObjectsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListStreamObjectsRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.ListStreamObjectsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.ListStreamObjectsRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IListStreamObjectsRequest} message ListStreamObjectsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListStreamObjectsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListStreamObjectsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.ListStreamObjectsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.ListStreamObjectsRequest} ListStreamObjectsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListStreamObjectsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.ListStreamObjectsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListStreamObjectsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.ListStreamObjectsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.ListStreamObjectsRequest} ListStreamObjectsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListStreamObjectsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListStreamObjectsRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.ListStreamObjectsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListStreamObjectsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListStreamObjectsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.ListStreamObjectsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.ListStreamObjectsRequest} ListStreamObjectsRequest
                         */
                        ListStreamObjectsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.ListStreamObjectsRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.ListStreamObjectsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListStreamObjectsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.ListStreamObjectsRequest
                         * @static
                         * @param {google.cloud.datastream.v1.ListStreamObjectsRequest} message ListStreamObjectsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListStreamObjectsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListStreamObjectsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.ListStreamObjectsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListStreamObjectsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListStreamObjectsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.ListStreamObjectsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListStreamObjectsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.ListStreamObjectsRequest";
                        };
    
                        return ListStreamObjectsRequest;
                    })();
    
                    v1.ListStreamObjectsResponse = (function() {
    
                        /**
                         * Properties of a ListStreamObjectsResponse.
                         * @memberof google.cloud.datastream.v1
                         * @interface IListStreamObjectsResponse
                         * @property {Array.<google.cloud.datastream.v1.IStreamObject>|null} [streamObjects] ListStreamObjectsResponse streamObjects
                         * @property {string|null} [nextPageToken] ListStreamObjectsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListStreamObjectsResponse.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a ListStreamObjectsResponse.
                         * @implements IListStreamObjectsResponse
                         * @constructor
                         * @param {google.cloud.datastream.v1.IListStreamObjectsResponse=} [properties] Properties to set
                         */
                        function ListStreamObjectsResponse(properties) {
                            this.streamObjects = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListStreamObjectsResponse streamObjects.
                         * @member {Array.<google.cloud.datastream.v1.IStreamObject>} streamObjects
                         * @memberof google.cloud.datastream.v1.ListStreamObjectsResponse
                         * @instance
                         */
                        ListStreamObjectsResponse.prototype.streamObjects = $util.emptyArray;
    
                        /**
                         * ListStreamObjectsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.datastream.v1.ListStreamObjectsResponse
                         * @instance
                         */
                        ListStreamObjectsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListStreamObjectsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.ListStreamObjectsResponse
                         * @static
                         * @param {google.cloud.datastream.v1.IListStreamObjectsResponse=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.ListStreamObjectsResponse} ListStreamObjectsResponse instance
                         */
                        ListStreamObjectsResponse.create = function create(properties) {
                            return new ListStreamObjectsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListStreamObjectsResponse message. Does not implicitly {@link google.cloud.datastream.v1.ListStreamObjectsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.ListStreamObjectsResponse
                         * @static
                         * @param {google.cloud.datastream.v1.IListStreamObjectsResponse} message ListStreamObjectsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListStreamObjectsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.streamObjects != null && message.streamObjects.length)
                                for (var i = 0; i < message.streamObjects.length; ++i)
                                    $root.google.cloud.datastream.v1.StreamObject.encode(message.streamObjects[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListStreamObjectsResponse message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.ListStreamObjectsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.ListStreamObjectsResponse
                         * @static
                         * @param {google.cloud.datastream.v1.IListStreamObjectsResponse} message ListStreamObjectsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListStreamObjectsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListStreamObjectsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.ListStreamObjectsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.ListStreamObjectsResponse} ListStreamObjectsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListStreamObjectsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.ListStreamObjectsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.streamObjects && message.streamObjects.length))
                                            message.streamObjects = [];
                                        message.streamObjects.push($root.google.cloud.datastream.v1.StreamObject.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListStreamObjectsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.ListStreamObjectsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.ListStreamObjectsResponse} ListStreamObjectsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListStreamObjectsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListStreamObjectsResponse message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.ListStreamObjectsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListStreamObjectsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.streamObjects != null && message.hasOwnProperty("streamObjects")) {
                                if (!Array.isArray(message.streamObjects))
                                    return "streamObjects: array expected";
                                for (var i = 0; i < message.streamObjects.length; ++i) {
                                    var error = $root.google.cloud.datastream.v1.StreamObject.verify(message.streamObjects[i]);
                                    if (error)
                                        return "streamObjects." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListStreamObjectsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.ListStreamObjectsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.ListStreamObjectsResponse} ListStreamObjectsResponse
                         */
                        ListStreamObjectsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.ListStreamObjectsResponse)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.ListStreamObjectsResponse();
                            if (object.streamObjects) {
                                if (!Array.isArray(object.streamObjects))
                                    throw TypeError(".google.cloud.datastream.v1.ListStreamObjectsResponse.streamObjects: array expected");
                                message.streamObjects = [];
                                for (var i = 0; i < object.streamObjects.length; ++i) {
                                    if (typeof object.streamObjects[i] !== "object")
                                        throw TypeError(".google.cloud.datastream.v1.ListStreamObjectsResponse.streamObjects: object expected");
                                    message.streamObjects[i] = $root.google.cloud.datastream.v1.StreamObject.fromObject(object.streamObjects[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListStreamObjectsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.ListStreamObjectsResponse
                         * @static
                         * @param {google.cloud.datastream.v1.ListStreamObjectsResponse} message ListStreamObjectsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListStreamObjectsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.streamObjects = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.streamObjects && message.streamObjects.length) {
                                object.streamObjects = [];
                                for (var j = 0; j < message.streamObjects.length; ++j)
                                    object.streamObjects[j] = $root.google.cloud.datastream.v1.StreamObject.toObject(message.streamObjects[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListStreamObjectsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.ListStreamObjectsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListStreamObjectsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListStreamObjectsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.ListStreamObjectsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListStreamObjectsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.ListStreamObjectsResponse";
                        };
    
                        return ListStreamObjectsResponse;
                    })();
    
                    v1.OperationMetadata = (function() {
    
                        /**
                         * Properties of an OperationMetadata.
                         * @memberof google.cloud.datastream.v1
                         * @interface IOperationMetadata
                         * @property {google.protobuf.ITimestamp|null} [createTime] OperationMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] OperationMetadata endTime
                         * @property {string|null} [target] OperationMetadata target
                         * @property {string|null} [verb] OperationMetadata verb
                         * @property {string|null} [statusMessage] OperationMetadata statusMessage
                         * @property {boolean|null} [requestedCancellation] OperationMetadata requestedCancellation
                         * @property {string|null} [apiVersion] OperationMetadata apiVersion
                         * @property {google.cloud.datastream.v1.IValidationResult|null} [validationResult] OperationMetadata validationResult
                         */
    
                        /**
                         * Constructs a new OperationMetadata.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents an OperationMetadata.
                         * @implements IOperationMetadata
                         * @constructor
                         * @param {google.cloud.datastream.v1.IOperationMetadata=} [properties] Properties to set
                         */
                        function OperationMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OperationMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.datastream.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.createTime = null;
    
                        /**
                         * OperationMetadata endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.datastream.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.endTime = null;
    
                        /**
                         * OperationMetadata target.
                         * @member {string} target
                         * @memberof google.cloud.datastream.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.target = "";
    
                        /**
                         * OperationMetadata verb.
                         * @member {string} verb
                         * @memberof google.cloud.datastream.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.verb = "";
    
                        /**
                         * OperationMetadata statusMessage.
                         * @member {string} statusMessage
                         * @memberof google.cloud.datastream.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.statusMessage = "";
    
                        /**
                         * OperationMetadata requestedCancellation.
                         * @member {boolean} requestedCancellation
                         * @memberof google.cloud.datastream.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.requestedCancellation = false;
    
                        /**
                         * OperationMetadata apiVersion.
                         * @member {string} apiVersion
                         * @memberof google.cloud.datastream.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.apiVersion = "";
    
                        /**
                         * OperationMetadata validationResult.
                         * @member {google.cloud.datastream.v1.IValidationResult|null|undefined} validationResult
                         * @memberof google.cloud.datastream.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.validationResult = null;
    
                        /**
                         * Creates a new OperationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.OperationMetadata
                         * @static
                         * @param {google.cloud.datastream.v1.IOperationMetadata=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.OperationMetadata} OperationMetadata instance
                         */
                        OperationMetadata.create = function create(properties) {
                            return new OperationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message. Does not implicitly {@link google.cloud.datastream.v1.OperationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.OperationMetadata
                         * @static
                         * @param {google.cloud.datastream.v1.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.target != null && Object.hasOwnProperty.call(message, "target"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.target);
                            if (message.verb != null && Object.hasOwnProperty.call(message, "verb"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.verb);
                            if (message.statusMessage != null && Object.hasOwnProperty.call(message, "statusMessage"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.statusMessage);
                            if (message.requestedCancellation != null && Object.hasOwnProperty.call(message, "requestedCancellation"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.requestedCancellation);
                            if (message.apiVersion != null && Object.hasOwnProperty.call(message, "apiVersion"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.apiVersion);
                            if (message.validationResult != null && Object.hasOwnProperty.call(message, "validationResult"))
                                $root.google.cloud.datastream.v1.ValidationResult.encode(message.validationResult, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.OperationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.OperationMetadata
                         * @static
                         * @param {google.cloud.datastream.v1.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.OperationMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.target = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.verb = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.statusMessage = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.requestedCancellation = reader.bool();
                                        break;
                                    }
                                case 7: {
                                        message.apiVersion = reader.string();
                                        break;
                                    }
                                case 8: {
                                        message.validationResult = $root.google.cloud.datastream.v1.ValidationResult.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OperationMetadata message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OperationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.target != null && message.hasOwnProperty("target"))
                                if (!$util.isString(message.target))
                                    return "target: string expected";
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                if (!$util.isString(message.verb))
                                    return "verb: string expected";
                            if (message.statusMessage != null && message.hasOwnProperty("statusMessage"))
                                if (!$util.isString(message.statusMessage))
                                    return "statusMessage: string expected";
                            if (message.requestedCancellation != null && message.hasOwnProperty("requestedCancellation"))
                                if (typeof message.requestedCancellation !== "boolean")
                                    return "requestedCancellation: boolean expected";
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                if (!$util.isString(message.apiVersion))
                                    return "apiVersion: string expected";
                            if (message.validationResult != null && message.hasOwnProperty("validationResult")) {
                                var error = $root.google.cloud.datastream.v1.ValidationResult.verify(message.validationResult);
                                if (error)
                                    return "validationResult." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an OperationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.OperationMetadata} OperationMetadata
                         */
                        OperationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.OperationMetadata)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.OperationMetadata();
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.OperationMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.OperationMetadata.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            if (object.target != null)
                                message.target = String(object.target);
                            if (object.verb != null)
                                message.verb = String(object.verb);
                            if (object.statusMessage != null)
                                message.statusMessage = String(object.statusMessage);
                            if (object.requestedCancellation != null)
                                message.requestedCancellation = Boolean(object.requestedCancellation);
                            if (object.apiVersion != null)
                                message.apiVersion = String(object.apiVersion);
                            if (object.validationResult != null) {
                                if (typeof object.validationResult !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.OperationMetadata.validationResult: object expected");
                                message.validationResult = $root.google.cloud.datastream.v1.ValidationResult.fromObject(object.validationResult);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OperationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.OperationMetadata
                         * @static
                         * @param {google.cloud.datastream.v1.OperationMetadata} message OperationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OperationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.createTime = null;
                                object.endTime = null;
                                object.target = "";
                                object.verb = "";
                                object.statusMessage = "";
                                object.requestedCancellation = false;
                                object.apiVersion = "";
                                object.validationResult = null;
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            if (message.target != null && message.hasOwnProperty("target"))
                                object.target = message.target;
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                object.verb = message.verb;
                            if (message.statusMessage != null && message.hasOwnProperty("statusMessage"))
                                object.statusMessage = message.statusMessage;
                            if (message.requestedCancellation != null && message.hasOwnProperty("requestedCancellation"))
                                object.requestedCancellation = message.requestedCancellation;
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                object.apiVersion = message.apiVersion;
                            if (message.validationResult != null && message.hasOwnProperty("validationResult"))
                                object.validationResult = $root.google.cloud.datastream.v1.ValidationResult.toObject(message.validationResult, options);
                            return object;
                        };
    
                        /**
                         * Converts this OperationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.OperationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OperationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OperationMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.OperationMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OperationMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.OperationMetadata";
                        };
    
                        return OperationMetadata;
                    })();
    
                    v1.CreatePrivateConnectionRequest = (function() {
    
                        /**
                         * Properties of a CreatePrivateConnectionRequest.
                         * @memberof google.cloud.datastream.v1
                         * @interface ICreatePrivateConnectionRequest
                         * @property {string|null} [parent] CreatePrivateConnectionRequest parent
                         * @property {string|null} [privateConnectionId] CreatePrivateConnectionRequest privateConnectionId
                         * @property {google.cloud.datastream.v1.IPrivateConnection|null} [privateConnection] CreatePrivateConnectionRequest privateConnection
                         * @property {string|null} [requestId] CreatePrivateConnectionRequest requestId
                         */
    
                        /**
                         * Constructs a new CreatePrivateConnectionRequest.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a CreatePrivateConnectionRequest.
                         * @implements ICreatePrivateConnectionRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1.ICreatePrivateConnectionRequest=} [properties] Properties to set
                         */
                        function CreatePrivateConnectionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreatePrivateConnectionRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.datastream.v1.CreatePrivateConnectionRequest
                         * @instance
                         */
                        CreatePrivateConnectionRequest.prototype.parent = "";
    
                        /**
                         * CreatePrivateConnectionRequest privateConnectionId.
                         * @member {string} privateConnectionId
                         * @memberof google.cloud.datastream.v1.CreatePrivateConnectionRequest
                         * @instance
                         */
                        CreatePrivateConnectionRequest.prototype.privateConnectionId = "";
    
                        /**
                         * CreatePrivateConnectionRequest privateConnection.
                         * @member {google.cloud.datastream.v1.IPrivateConnection|null|undefined} privateConnection
                         * @memberof google.cloud.datastream.v1.CreatePrivateConnectionRequest
                         * @instance
                         */
                        CreatePrivateConnectionRequest.prototype.privateConnection = null;
    
                        /**
                         * CreatePrivateConnectionRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.datastream.v1.CreatePrivateConnectionRequest
                         * @instance
                         */
                        CreatePrivateConnectionRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new CreatePrivateConnectionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.CreatePrivateConnectionRequest
                         * @static
                         * @param {google.cloud.datastream.v1.ICreatePrivateConnectionRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.CreatePrivateConnectionRequest} CreatePrivateConnectionRequest instance
                         */
                        CreatePrivateConnectionRequest.create = function create(properties) {
                            return new CreatePrivateConnectionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreatePrivateConnectionRequest message. Does not implicitly {@link google.cloud.datastream.v1.CreatePrivateConnectionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.CreatePrivateConnectionRequest
                         * @static
                         * @param {google.cloud.datastream.v1.ICreatePrivateConnectionRequest} message CreatePrivateConnectionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreatePrivateConnectionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.privateConnectionId != null && Object.hasOwnProperty.call(message, "privateConnectionId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.privateConnectionId);
                            if (message.privateConnection != null && Object.hasOwnProperty.call(message, "privateConnection"))
                                $root.google.cloud.datastream.v1.PrivateConnection.encode(message.privateConnection, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreatePrivateConnectionRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.CreatePrivateConnectionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.CreatePrivateConnectionRequest
                         * @static
                         * @param {google.cloud.datastream.v1.ICreatePrivateConnectionRequest} message CreatePrivateConnectionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreatePrivateConnectionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreatePrivateConnectionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.CreatePrivateConnectionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.CreatePrivateConnectionRequest} CreatePrivateConnectionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreatePrivateConnectionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.CreatePrivateConnectionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.privateConnectionId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.privateConnection = $root.google.cloud.datastream.v1.PrivateConnection.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreatePrivateConnectionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.CreatePrivateConnectionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.CreatePrivateConnectionRequest} CreatePrivateConnectionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreatePrivateConnectionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreatePrivateConnectionRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.CreatePrivateConnectionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreatePrivateConnectionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.privateConnectionId != null && message.hasOwnProperty("privateConnectionId"))
                                if (!$util.isString(message.privateConnectionId))
                                    return "privateConnectionId: string expected";
                            if (message.privateConnection != null && message.hasOwnProperty("privateConnection")) {
                                var error = $root.google.cloud.datastream.v1.PrivateConnection.verify(message.privateConnection);
                                if (error)
                                    return "privateConnection." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreatePrivateConnectionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.CreatePrivateConnectionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.CreatePrivateConnectionRequest} CreatePrivateConnectionRequest
                         */
                        CreatePrivateConnectionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.CreatePrivateConnectionRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.CreatePrivateConnectionRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.privateConnectionId != null)
                                message.privateConnectionId = String(object.privateConnectionId);
                            if (object.privateConnection != null) {
                                if (typeof object.privateConnection !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.CreatePrivateConnectionRequest.privateConnection: object expected");
                                message.privateConnection = $root.google.cloud.datastream.v1.PrivateConnection.fromObject(object.privateConnection);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreatePrivateConnectionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.CreatePrivateConnectionRequest
                         * @static
                         * @param {google.cloud.datastream.v1.CreatePrivateConnectionRequest} message CreatePrivateConnectionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreatePrivateConnectionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.privateConnectionId = "";
                                object.privateConnection = null;
                                object.requestId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.privateConnectionId != null && message.hasOwnProperty("privateConnectionId"))
                                object.privateConnectionId = message.privateConnectionId;
                            if (message.privateConnection != null && message.hasOwnProperty("privateConnection"))
                                object.privateConnection = $root.google.cloud.datastream.v1.PrivateConnection.toObject(message.privateConnection, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this CreatePrivateConnectionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.CreatePrivateConnectionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreatePrivateConnectionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreatePrivateConnectionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.CreatePrivateConnectionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreatePrivateConnectionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.CreatePrivateConnectionRequest";
                        };
    
                        return CreatePrivateConnectionRequest;
                    })();
    
                    v1.ListPrivateConnectionsRequest = (function() {
    
                        /**
                         * Properties of a ListPrivateConnectionsRequest.
                         * @memberof google.cloud.datastream.v1
                         * @interface IListPrivateConnectionsRequest
                         * @property {string|null} [parent] ListPrivateConnectionsRequest parent
                         * @property {number|null} [pageSize] ListPrivateConnectionsRequest pageSize
                         * @property {string|null} [pageToken] ListPrivateConnectionsRequest pageToken
                         * @property {string|null} [filter] ListPrivateConnectionsRequest filter
                         * @property {string|null} [orderBy] ListPrivateConnectionsRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListPrivateConnectionsRequest.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a ListPrivateConnectionsRequest.
                         * @implements IListPrivateConnectionsRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1.IListPrivateConnectionsRequest=} [properties] Properties to set
                         */
                        function ListPrivateConnectionsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListPrivateConnectionsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.datastream.v1.ListPrivateConnectionsRequest
                         * @instance
                         */
                        ListPrivateConnectionsRequest.prototype.parent = "";
    
                        /**
                         * ListPrivateConnectionsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.datastream.v1.ListPrivateConnectionsRequest
                         * @instance
                         */
                        ListPrivateConnectionsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListPrivateConnectionsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.datastream.v1.ListPrivateConnectionsRequest
                         * @instance
                         */
                        ListPrivateConnectionsRequest.prototype.pageToken = "";
    
                        /**
                         * ListPrivateConnectionsRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.datastream.v1.ListPrivateConnectionsRequest
                         * @instance
                         */
                        ListPrivateConnectionsRequest.prototype.filter = "";
    
                        /**
                         * ListPrivateConnectionsRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.datastream.v1.ListPrivateConnectionsRequest
                         * @instance
                         */
                        ListPrivateConnectionsRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListPrivateConnectionsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.ListPrivateConnectionsRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IListPrivateConnectionsRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.ListPrivateConnectionsRequest} ListPrivateConnectionsRequest instance
                         */
                        ListPrivateConnectionsRequest.create = function create(properties) {
                            return new ListPrivateConnectionsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListPrivateConnectionsRequest message. Does not implicitly {@link google.cloud.datastream.v1.ListPrivateConnectionsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.ListPrivateConnectionsRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IListPrivateConnectionsRequest} message ListPrivateConnectionsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPrivateConnectionsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListPrivateConnectionsRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.ListPrivateConnectionsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.ListPrivateConnectionsRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IListPrivateConnectionsRequest} message ListPrivateConnectionsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPrivateConnectionsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListPrivateConnectionsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.ListPrivateConnectionsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.ListPrivateConnectionsRequest} ListPrivateConnectionsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPrivateConnectionsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.ListPrivateConnectionsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListPrivateConnectionsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.ListPrivateConnectionsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.ListPrivateConnectionsRequest} ListPrivateConnectionsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPrivateConnectionsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListPrivateConnectionsRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.ListPrivateConnectionsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListPrivateConnectionsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListPrivateConnectionsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.ListPrivateConnectionsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.ListPrivateConnectionsRequest} ListPrivateConnectionsRequest
                         */
                        ListPrivateConnectionsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.ListPrivateConnectionsRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.ListPrivateConnectionsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListPrivateConnectionsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.ListPrivateConnectionsRequest
                         * @static
                         * @param {google.cloud.datastream.v1.ListPrivateConnectionsRequest} message ListPrivateConnectionsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListPrivateConnectionsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListPrivateConnectionsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.ListPrivateConnectionsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListPrivateConnectionsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListPrivateConnectionsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.ListPrivateConnectionsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListPrivateConnectionsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.ListPrivateConnectionsRequest";
                        };
    
                        return ListPrivateConnectionsRequest;
                    })();
    
                    v1.ListPrivateConnectionsResponse = (function() {
    
                        /**
                         * Properties of a ListPrivateConnectionsResponse.
                         * @memberof google.cloud.datastream.v1
                         * @interface IListPrivateConnectionsResponse
                         * @property {Array.<google.cloud.datastream.v1.IPrivateConnection>|null} [privateConnections] ListPrivateConnectionsResponse privateConnections
                         * @property {string|null} [nextPageToken] ListPrivateConnectionsResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListPrivateConnectionsResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListPrivateConnectionsResponse.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a ListPrivateConnectionsResponse.
                         * @implements IListPrivateConnectionsResponse
                         * @constructor
                         * @param {google.cloud.datastream.v1.IListPrivateConnectionsResponse=} [properties] Properties to set
                         */
                        function ListPrivateConnectionsResponse(properties) {
                            this.privateConnections = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListPrivateConnectionsResponse privateConnections.
                         * @member {Array.<google.cloud.datastream.v1.IPrivateConnection>} privateConnections
                         * @memberof google.cloud.datastream.v1.ListPrivateConnectionsResponse
                         * @instance
                         */
                        ListPrivateConnectionsResponse.prototype.privateConnections = $util.emptyArray;
    
                        /**
                         * ListPrivateConnectionsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.datastream.v1.ListPrivateConnectionsResponse
                         * @instance
                         */
                        ListPrivateConnectionsResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListPrivateConnectionsResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.datastream.v1.ListPrivateConnectionsResponse
                         * @instance
                         */
                        ListPrivateConnectionsResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListPrivateConnectionsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.ListPrivateConnectionsResponse
                         * @static
                         * @param {google.cloud.datastream.v1.IListPrivateConnectionsResponse=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.ListPrivateConnectionsResponse} ListPrivateConnectionsResponse instance
                         */
                        ListPrivateConnectionsResponse.create = function create(properties) {
                            return new ListPrivateConnectionsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListPrivateConnectionsResponse message. Does not implicitly {@link google.cloud.datastream.v1.ListPrivateConnectionsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.ListPrivateConnectionsResponse
                         * @static
                         * @param {google.cloud.datastream.v1.IListPrivateConnectionsResponse} message ListPrivateConnectionsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPrivateConnectionsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.privateConnections != null && message.privateConnections.length)
                                for (var i = 0; i < message.privateConnections.length; ++i)
                                    $root.google.cloud.datastream.v1.PrivateConnection.encode(message.privateConnections[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListPrivateConnectionsResponse message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.ListPrivateConnectionsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.ListPrivateConnectionsResponse
                         * @static
                         * @param {google.cloud.datastream.v1.IListPrivateConnectionsResponse} message ListPrivateConnectionsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPrivateConnectionsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListPrivateConnectionsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.ListPrivateConnectionsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.ListPrivateConnectionsResponse} ListPrivateConnectionsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPrivateConnectionsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.ListPrivateConnectionsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.privateConnections && message.privateConnections.length))
                                            message.privateConnections = [];
                                        message.privateConnections.push($root.google.cloud.datastream.v1.PrivateConnection.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListPrivateConnectionsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.ListPrivateConnectionsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.ListPrivateConnectionsResponse} ListPrivateConnectionsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPrivateConnectionsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListPrivateConnectionsResponse message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.ListPrivateConnectionsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListPrivateConnectionsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.privateConnections != null && message.hasOwnProperty("privateConnections")) {
                                if (!Array.isArray(message.privateConnections))
                                    return "privateConnections: array expected";
                                for (var i = 0; i < message.privateConnections.length; ++i) {
                                    var error = $root.google.cloud.datastream.v1.PrivateConnection.verify(message.privateConnections[i]);
                                    if (error)
                                        return "privateConnections." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListPrivateConnectionsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.ListPrivateConnectionsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.ListPrivateConnectionsResponse} ListPrivateConnectionsResponse
                         */
                        ListPrivateConnectionsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.ListPrivateConnectionsResponse)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.ListPrivateConnectionsResponse();
                            if (object.privateConnections) {
                                if (!Array.isArray(object.privateConnections))
                                    throw TypeError(".google.cloud.datastream.v1.ListPrivateConnectionsResponse.privateConnections: array expected");
                                message.privateConnections = [];
                                for (var i = 0; i < object.privateConnections.length; ++i) {
                                    if (typeof object.privateConnections[i] !== "object")
                                        throw TypeError(".google.cloud.datastream.v1.ListPrivateConnectionsResponse.privateConnections: object expected");
                                    message.privateConnections[i] = $root.google.cloud.datastream.v1.PrivateConnection.fromObject(object.privateConnections[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.datastream.v1.ListPrivateConnectionsResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListPrivateConnectionsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.ListPrivateConnectionsResponse
                         * @static
                         * @param {google.cloud.datastream.v1.ListPrivateConnectionsResponse} message ListPrivateConnectionsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListPrivateConnectionsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.privateConnections = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.privateConnections && message.privateConnections.length) {
                                object.privateConnections = [];
                                for (var j = 0; j < message.privateConnections.length; ++j)
                                    object.privateConnections[j] = $root.google.cloud.datastream.v1.PrivateConnection.toObject(message.privateConnections[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListPrivateConnectionsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.ListPrivateConnectionsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListPrivateConnectionsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListPrivateConnectionsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.ListPrivateConnectionsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListPrivateConnectionsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.ListPrivateConnectionsResponse";
                        };
    
                        return ListPrivateConnectionsResponse;
                    })();
    
                    v1.DeletePrivateConnectionRequest = (function() {
    
                        /**
                         * Properties of a DeletePrivateConnectionRequest.
                         * @memberof google.cloud.datastream.v1
                         * @interface IDeletePrivateConnectionRequest
                         * @property {string|null} [name] DeletePrivateConnectionRequest name
                         * @property {string|null} [requestId] DeletePrivateConnectionRequest requestId
                         * @property {boolean|null} [force] DeletePrivateConnectionRequest force
                         */
    
                        /**
                         * Constructs a new DeletePrivateConnectionRequest.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a DeletePrivateConnectionRequest.
                         * @implements IDeletePrivateConnectionRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1.IDeletePrivateConnectionRequest=} [properties] Properties to set
                         */
                        function DeletePrivateConnectionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeletePrivateConnectionRequest name.
                         * @member {string} name
                         * @memberof google.cloud.datastream.v1.DeletePrivateConnectionRequest
                         * @instance
                         */
                        DeletePrivateConnectionRequest.prototype.name = "";
    
                        /**
                         * DeletePrivateConnectionRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.datastream.v1.DeletePrivateConnectionRequest
                         * @instance
                         */
                        DeletePrivateConnectionRequest.prototype.requestId = "";
    
                        /**
                         * DeletePrivateConnectionRequest force.
                         * @member {boolean} force
                         * @memberof google.cloud.datastream.v1.DeletePrivateConnectionRequest
                         * @instance
                         */
                        DeletePrivateConnectionRequest.prototype.force = false;
    
                        /**
                         * Creates a new DeletePrivateConnectionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.DeletePrivateConnectionRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IDeletePrivateConnectionRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.DeletePrivateConnectionRequest} DeletePrivateConnectionRequest instance
                         */
                        DeletePrivateConnectionRequest.create = function create(properties) {
                            return new DeletePrivateConnectionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeletePrivateConnectionRequest message. Does not implicitly {@link google.cloud.datastream.v1.DeletePrivateConnectionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.DeletePrivateConnectionRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IDeletePrivateConnectionRequest} message DeletePrivateConnectionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeletePrivateConnectionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                            if (message.force != null && Object.hasOwnProperty.call(message, "force"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.force);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeletePrivateConnectionRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.DeletePrivateConnectionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.DeletePrivateConnectionRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IDeletePrivateConnectionRequest} message DeletePrivateConnectionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeletePrivateConnectionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeletePrivateConnectionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.DeletePrivateConnectionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.DeletePrivateConnectionRequest} DeletePrivateConnectionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeletePrivateConnectionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.DeletePrivateConnectionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.force = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeletePrivateConnectionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.DeletePrivateConnectionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.DeletePrivateConnectionRequest} DeletePrivateConnectionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeletePrivateConnectionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeletePrivateConnectionRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.DeletePrivateConnectionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeletePrivateConnectionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            if (message.force != null && message.hasOwnProperty("force"))
                                if (typeof message.force !== "boolean")
                                    return "force: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeletePrivateConnectionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.DeletePrivateConnectionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.DeletePrivateConnectionRequest} DeletePrivateConnectionRequest
                         */
                        DeletePrivateConnectionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.DeletePrivateConnectionRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.DeletePrivateConnectionRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            if (object.force != null)
                                message.force = Boolean(object.force);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeletePrivateConnectionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.DeletePrivateConnectionRequest
                         * @static
                         * @param {google.cloud.datastream.v1.DeletePrivateConnectionRequest} message DeletePrivateConnectionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeletePrivateConnectionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                                object.force = false;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            if (message.force != null && message.hasOwnProperty("force"))
                                object.force = message.force;
                            return object;
                        };
    
                        /**
                         * Converts this DeletePrivateConnectionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.DeletePrivateConnectionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeletePrivateConnectionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeletePrivateConnectionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.DeletePrivateConnectionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeletePrivateConnectionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.DeletePrivateConnectionRequest";
                        };
    
                        return DeletePrivateConnectionRequest;
                    })();
    
                    v1.GetPrivateConnectionRequest = (function() {
    
                        /**
                         * Properties of a GetPrivateConnectionRequest.
                         * @memberof google.cloud.datastream.v1
                         * @interface IGetPrivateConnectionRequest
                         * @property {string|null} [name] GetPrivateConnectionRequest name
                         */
    
                        /**
                         * Constructs a new GetPrivateConnectionRequest.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a GetPrivateConnectionRequest.
                         * @implements IGetPrivateConnectionRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1.IGetPrivateConnectionRequest=} [properties] Properties to set
                         */
                        function GetPrivateConnectionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetPrivateConnectionRequest name.
                         * @member {string} name
                         * @memberof google.cloud.datastream.v1.GetPrivateConnectionRequest
                         * @instance
                         */
                        GetPrivateConnectionRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetPrivateConnectionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.GetPrivateConnectionRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IGetPrivateConnectionRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.GetPrivateConnectionRequest} GetPrivateConnectionRequest instance
                         */
                        GetPrivateConnectionRequest.create = function create(properties) {
                            return new GetPrivateConnectionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetPrivateConnectionRequest message. Does not implicitly {@link google.cloud.datastream.v1.GetPrivateConnectionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.GetPrivateConnectionRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IGetPrivateConnectionRequest} message GetPrivateConnectionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetPrivateConnectionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetPrivateConnectionRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.GetPrivateConnectionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.GetPrivateConnectionRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IGetPrivateConnectionRequest} message GetPrivateConnectionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetPrivateConnectionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetPrivateConnectionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.GetPrivateConnectionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.GetPrivateConnectionRequest} GetPrivateConnectionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetPrivateConnectionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.GetPrivateConnectionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetPrivateConnectionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.GetPrivateConnectionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.GetPrivateConnectionRequest} GetPrivateConnectionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetPrivateConnectionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetPrivateConnectionRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.GetPrivateConnectionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetPrivateConnectionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetPrivateConnectionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.GetPrivateConnectionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.GetPrivateConnectionRequest} GetPrivateConnectionRequest
                         */
                        GetPrivateConnectionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.GetPrivateConnectionRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.GetPrivateConnectionRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetPrivateConnectionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.GetPrivateConnectionRequest
                         * @static
                         * @param {google.cloud.datastream.v1.GetPrivateConnectionRequest} message GetPrivateConnectionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetPrivateConnectionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetPrivateConnectionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.GetPrivateConnectionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetPrivateConnectionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetPrivateConnectionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.GetPrivateConnectionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetPrivateConnectionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.GetPrivateConnectionRequest";
                        };
    
                        return GetPrivateConnectionRequest;
                    })();
    
                    v1.CreateRouteRequest = (function() {
    
                        /**
                         * Properties of a CreateRouteRequest.
                         * @memberof google.cloud.datastream.v1
                         * @interface ICreateRouteRequest
                         * @property {string|null} [parent] CreateRouteRequest parent
                         * @property {string|null} [routeId] CreateRouteRequest routeId
                         * @property {google.cloud.datastream.v1.IRoute|null} [route] CreateRouteRequest route
                         * @property {string|null} [requestId] CreateRouteRequest requestId
                         */
    
                        /**
                         * Constructs a new CreateRouteRequest.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a CreateRouteRequest.
                         * @implements ICreateRouteRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1.ICreateRouteRequest=} [properties] Properties to set
                         */
                        function CreateRouteRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateRouteRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.datastream.v1.CreateRouteRequest
                         * @instance
                         */
                        CreateRouteRequest.prototype.parent = "";
    
                        /**
                         * CreateRouteRequest routeId.
                         * @member {string} routeId
                         * @memberof google.cloud.datastream.v1.CreateRouteRequest
                         * @instance
                         */
                        CreateRouteRequest.prototype.routeId = "";
    
                        /**
                         * CreateRouteRequest route.
                         * @member {google.cloud.datastream.v1.IRoute|null|undefined} route
                         * @memberof google.cloud.datastream.v1.CreateRouteRequest
                         * @instance
                         */
                        CreateRouteRequest.prototype.route = null;
    
                        /**
                         * CreateRouteRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.datastream.v1.CreateRouteRequest
                         * @instance
                         */
                        CreateRouteRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new CreateRouteRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.CreateRouteRequest
                         * @static
                         * @param {google.cloud.datastream.v1.ICreateRouteRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.CreateRouteRequest} CreateRouteRequest instance
                         */
                        CreateRouteRequest.create = function create(properties) {
                            return new CreateRouteRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateRouteRequest message. Does not implicitly {@link google.cloud.datastream.v1.CreateRouteRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.CreateRouteRequest
                         * @static
                         * @param {google.cloud.datastream.v1.ICreateRouteRequest} message CreateRouteRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateRouteRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.routeId != null && Object.hasOwnProperty.call(message, "routeId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.routeId);
                            if (message.route != null && Object.hasOwnProperty.call(message, "route"))
                                $root.google.cloud.datastream.v1.Route.encode(message.route, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateRouteRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.CreateRouteRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.CreateRouteRequest
                         * @static
                         * @param {google.cloud.datastream.v1.ICreateRouteRequest} message CreateRouteRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateRouteRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateRouteRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.CreateRouteRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.CreateRouteRequest} CreateRouteRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateRouteRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.CreateRouteRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.routeId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.route = $root.google.cloud.datastream.v1.Route.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateRouteRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.CreateRouteRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.CreateRouteRequest} CreateRouteRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateRouteRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateRouteRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.CreateRouteRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateRouteRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.routeId != null && message.hasOwnProperty("routeId"))
                                if (!$util.isString(message.routeId))
                                    return "routeId: string expected";
                            if (message.route != null && message.hasOwnProperty("route")) {
                                var error = $root.google.cloud.datastream.v1.Route.verify(message.route);
                                if (error)
                                    return "route." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateRouteRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.CreateRouteRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.CreateRouteRequest} CreateRouteRequest
                         */
                        CreateRouteRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.CreateRouteRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.CreateRouteRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.routeId != null)
                                message.routeId = String(object.routeId);
                            if (object.route != null) {
                                if (typeof object.route !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.CreateRouteRequest.route: object expected");
                                message.route = $root.google.cloud.datastream.v1.Route.fromObject(object.route);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateRouteRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.CreateRouteRequest
                         * @static
                         * @param {google.cloud.datastream.v1.CreateRouteRequest} message CreateRouteRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateRouteRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.routeId = "";
                                object.route = null;
                                object.requestId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.routeId != null && message.hasOwnProperty("routeId"))
                                object.routeId = message.routeId;
                            if (message.route != null && message.hasOwnProperty("route"))
                                object.route = $root.google.cloud.datastream.v1.Route.toObject(message.route, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this CreateRouteRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.CreateRouteRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateRouteRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateRouteRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.CreateRouteRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateRouteRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.CreateRouteRequest";
                        };
    
                        return CreateRouteRequest;
                    })();
    
                    v1.ListRoutesRequest = (function() {
    
                        /**
                         * Properties of a ListRoutesRequest.
                         * @memberof google.cloud.datastream.v1
                         * @interface IListRoutesRequest
                         * @property {string|null} [parent] ListRoutesRequest parent
                         * @property {number|null} [pageSize] ListRoutesRequest pageSize
                         * @property {string|null} [pageToken] ListRoutesRequest pageToken
                         * @property {string|null} [filter] ListRoutesRequest filter
                         * @property {string|null} [orderBy] ListRoutesRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListRoutesRequest.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a ListRoutesRequest.
                         * @implements IListRoutesRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1.IListRoutesRequest=} [properties] Properties to set
                         */
                        function ListRoutesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListRoutesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.datastream.v1.ListRoutesRequest
                         * @instance
                         */
                        ListRoutesRequest.prototype.parent = "";
    
                        /**
                         * ListRoutesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.datastream.v1.ListRoutesRequest
                         * @instance
                         */
                        ListRoutesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListRoutesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.datastream.v1.ListRoutesRequest
                         * @instance
                         */
                        ListRoutesRequest.prototype.pageToken = "";
    
                        /**
                         * ListRoutesRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.datastream.v1.ListRoutesRequest
                         * @instance
                         */
                        ListRoutesRequest.prototype.filter = "";
    
                        /**
                         * ListRoutesRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.datastream.v1.ListRoutesRequest
                         * @instance
                         */
                        ListRoutesRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListRoutesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.ListRoutesRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IListRoutesRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.ListRoutesRequest} ListRoutesRequest instance
                         */
                        ListRoutesRequest.create = function create(properties) {
                            return new ListRoutesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListRoutesRequest message. Does not implicitly {@link google.cloud.datastream.v1.ListRoutesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.ListRoutesRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IListRoutesRequest} message ListRoutesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRoutesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListRoutesRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.ListRoutesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.ListRoutesRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IListRoutesRequest} message ListRoutesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRoutesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListRoutesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.ListRoutesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.ListRoutesRequest} ListRoutesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRoutesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.ListRoutesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListRoutesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.ListRoutesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.ListRoutesRequest} ListRoutesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRoutesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListRoutesRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.ListRoutesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListRoutesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListRoutesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.ListRoutesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.ListRoutesRequest} ListRoutesRequest
                         */
                        ListRoutesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.ListRoutesRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.ListRoutesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListRoutesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.ListRoutesRequest
                         * @static
                         * @param {google.cloud.datastream.v1.ListRoutesRequest} message ListRoutesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListRoutesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListRoutesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.ListRoutesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListRoutesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListRoutesRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.ListRoutesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListRoutesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.ListRoutesRequest";
                        };
    
                        return ListRoutesRequest;
                    })();
    
                    v1.ListRoutesResponse = (function() {
    
                        /**
                         * Properties of a ListRoutesResponse.
                         * @memberof google.cloud.datastream.v1
                         * @interface IListRoutesResponse
                         * @property {Array.<google.cloud.datastream.v1.IRoute>|null} [routes] ListRoutesResponse routes
                         * @property {string|null} [nextPageToken] ListRoutesResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListRoutesResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListRoutesResponse.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a ListRoutesResponse.
                         * @implements IListRoutesResponse
                         * @constructor
                         * @param {google.cloud.datastream.v1.IListRoutesResponse=} [properties] Properties to set
                         */
                        function ListRoutesResponse(properties) {
                            this.routes = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListRoutesResponse routes.
                         * @member {Array.<google.cloud.datastream.v1.IRoute>} routes
                         * @memberof google.cloud.datastream.v1.ListRoutesResponse
                         * @instance
                         */
                        ListRoutesResponse.prototype.routes = $util.emptyArray;
    
                        /**
                         * ListRoutesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.datastream.v1.ListRoutesResponse
                         * @instance
                         */
                        ListRoutesResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListRoutesResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.datastream.v1.ListRoutesResponse
                         * @instance
                         */
                        ListRoutesResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListRoutesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.ListRoutesResponse
                         * @static
                         * @param {google.cloud.datastream.v1.IListRoutesResponse=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.ListRoutesResponse} ListRoutesResponse instance
                         */
                        ListRoutesResponse.create = function create(properties) {
                            return new ListRoutesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListRoutesResponse message. Does not implicitly {@link google.cloud.datastream.v1.ListRoutesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.ListRoutesResponse
                         * @static
                         * @param {google.cloud.datastream.v1.IListRoutesResponse} message ListRoutesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRoutesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.routes != null && message.routes.length)
                                for (var i = 0; i < message.routes.length; ++i)
                                    $root.google.cloud.datastream.v1.Route.encode(message.routes[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListRoutesResponse message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.ListRoutesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.ListRoutesResponse
                         * @static
                         * @param {google.cloud.datastream.v1.IListRoutesResponse} message ListRoutesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRoutesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListRoutesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.ListRoutesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.ListRoutesResponse} ListRoutesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRoutesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.ListRoutesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.routes && message.routes.length))
                                            message.routes = [];
                                        message.routes.push($root.google.cloud.datastream.v1.Route.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListRoutesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.ListRoutesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.ListRoutesResponse} ListRoutesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRoutesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListRoutesResponse message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.ListRoutesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListRoutesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.routes != null && message.hasOwnProperty("routes")) {
                                if (!Array.isArray(message.routes))
                                    return "routes: array expected";
                                for (var i = 0; i < message.routes.length; ++i) {
                                    var error = $root.google.cloud.datastream.v1.Route.verify(message.routes[i]);
                                    if (error)
                                        return "routes." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListRoutesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.ListRoutesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.ListRoutesResponse} ListRoutesResponse
                         */
                        ListRoutesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.ListRoutesResponse)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.ListRoutesResponse();
                            if (object.routes) {
                                if (!Array.isArray(object.routes))
                                    throw TypeError(".google.cloud.datastream.v1.ListRoutesResponse.routes: array expected");
                                message.routes = [];
                                for (var i = 0; i < object.routes.length; ++i) {
                                    if (typeof object.routes[i] !== "object")
                                        throw TypeError(".google.cloud.datastream.v1.ListRoutesResponse.routes: object expected");
                                    message.routes[i] = $root.google.cloud.datastream.v1.Route.fromObject(object.routes[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.datastream.v1.ListRoutesResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListRoutesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.ListRoutesResponse
                         * @static
                         * @param {google.cloud.datastream.v1.ListRoutesResponse} message ListRoutesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListRoutesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.routes = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.routes && message.routes.length) {
                                object.routes = [];
                                for (var j = 0; j < message.routes.length; ++j)
                                    object.routes[j] = $root.google.cloud.datastream.v1.Route.toObject(message.routes[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListRoutesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.ListRoutesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListRoutesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListRoutesResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.ListRoutesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListRoutesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.ListRoutesResponse";
                        };
    
                        return ListRoutesResponse;
                    })();
    
                    v1.DeleteRouteRequest = (function() {
    
                        /**
                         * Properties of a DeleteRouteRequest.
                         * @memberof google.cloud.datastream.v1
                         * @interface IDeleteRouteRequest
                         * @property {string|null} [name] DeleteRouteRequest name
                         * @property {string|null} [requestId] DeleteRouteRequest requestId
                         */
    
                        /**
                         * Constructs a new DeleteRouteRequest.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a DeleteRouteRequest.
                         * @implements IDeleteRouteRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1.IDeleteRouteRequest=} [properties] Properties to set
                         */
                        function DeleteRouteRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteRouteRequest name.
                         * @member {string} name
                         * @memberof google.cloud.datastream.v1.DeleteRouteRequest
                         * @instance
                         */
                        DeleteRouteRequest.prototype.name = "";
    
                        /**
                         * DeleteRouteRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.datastream.v1.DeleteRouteRequest
                         * @instance
                         */
                        DeleteRouteRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new DeleteRouteRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.DeleteRouteRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IDeleteRouteRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.DeleteRouteRequest} DeleteRouteRequest instance
                         */
                        DeleteRouteRequest.create = function create(properties) {
                            return new DeleteRouteRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteRouteRequest message. Does not implicitly {@link google.cloud.datastream.v1.DeleteRouteRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.DeleteRouteRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IDeleteRouteRequest} message DeleteRouteRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteRouteRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteRouteRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.DeleteRouteRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.DeleteRouteRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IDeleteRouteRequest} message DeleteRouteRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteRouteRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteRouteRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.DeleteRouteRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.DeleteRouteRequest} DeleteRouteRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteRouteRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.DeleteRouteRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteRouteRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.DeleteRouteRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.DeleteRouteRequest} DeleteRouteRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteRouteRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteRouteRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.DeleteRouteRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteRouteRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteRouteRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.DeleteRouteRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.DeleteRouteRequest} DeleteRouteRequest
                         */
                        DeleteRouteRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.DeleteRouteRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.DeleteRouteRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteRouteRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.DeleteRouteRequest
                         * @static
                         * @param {google.cloud.datastream.v1.DeleteRouteRequest} message DeleteRouteRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteRouteRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteRouteRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.DeleteRouteRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteRouteRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteRouteRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.DeleteRouteRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteRouteRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.DeleteRouteRequest";
                        };
    
                        return DeleteRouteRequest;
                    })();
    
                    v1.GetRouteRequest = (function() {
    
                        /**
                         * Properties of a GetRouteRequest.
                         * @memberof google.cloud.datastream.v1
                         * @interface IGetRouteRequest
                         * @property {string|null} [name] GetRouteRequest name
                         */
    
                        /**
                         * Constructs a new GetRouteRequest.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a GetRouteRequest.
                         * @implements IGetRouteRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1.IGetRouteRequest=} [properties] Properties to set
                         */
                        function GetRouteRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetRouteRequest name.
                         * @member {string} name
                         * @memberof google.cloud.datastream.v1.GetRouteRequest
                         * @instance
                         */
                        GetRouteRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetRouteRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.GetRouteRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IGetRouteRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.GetRouteRequest} GetRouteRequest instance
                         */
                        GetRouteRequest.create = function create(properties) {
                            return new GetRouteRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetRouteRequest message. Does not implicitly {@link google.cloud.datastream.v1.GetRouteRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.GetRouteRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IGetRouteRequest} message GetRouteRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetRouteRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetRouteRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.GetRouteRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.GetRouteRequest
                         * @static
                         * @param {google.cloud.datastream.v1.IGetRouteRequest} message GetRouteRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetRouteRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetRouteRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.GetRouteRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.GetRouteRequest} GetRouteRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetRouteRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.GetRouteRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetRouteRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.GetRouteRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.GetRouteRequest} GetRouteRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetRouteRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetRouteRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.GetRouteRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetRouteRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetRouteRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.GetRouteRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.GetRouteRequest} GetRouteRequest
                         */
                        GetRouteRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.GetRouteRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.GetRouteRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetRouteRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.GetRouteRequest
                         * @static
                         * @param {google.cloud.datastream.v1.GetRouteRequest} message GetRouteRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetRouteRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetRouteRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.GetRouteRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetRouteRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetRouteRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.GetRouteRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetRouteRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.GetRouteRequest";
                        };
    
                        return GetRouteRequest;
                    })();
    
                    v1.OracleProfile = (function() {
    
                        /**
                         * Properties of an OracleProfile.
                         * @memberof google.cloud.datastream.v1
                         * @interface IOracleProfile
                         * @property {string|null} [hostname] OracleProfile hostname
                         * @property {number|null} [port] OracleProfile port
                         * @property {string|null} [username] OracleProfile username
                         * @property {string|null} [password] OracleProfile password
                         * @property {string|null} [databaseService] OracleProfile databaseService
                         * @property {Object.<string,string>|null} [connectionAttributes] OracleProfile connectionAttributes
                         */
    
                        /**
                         * Constructs a new OracleProfile.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents an OracleProfile.
                         * @implements IOracleProfile
                         * @constructor
                         * @param {google.cloud.datastream.v1.IOracleProfile=} [properties] Properties to set
                         */
                        function OracleProfile(properties) {
                            this.connectionAttributes = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OracleProfile hostname.
                         * @member {string} hostname
                         * @memberof google.cloud.datastream.v1.OracleProfile
                         * @instance
                         */
                        OracleProfile.prototype.hostname = "";
    
                        /**
                         * OracleProfile port.
                         * @member {number} port
                         * @memberof google.cloud.datastream.v1.OracleProfile
                         * @instance
                         */
                        OracleProfile.prototype.port = 0;
    
                        /**
                         * OracleProfile username.
                         * @member {string} username
                         * @memberof google.cloud.datastream.v1.OracleProfile
                         * @instance
                         */
                        OracleProfile.prototype.username = "";
    
                        /**
                         * OracleProfile password.
                         * @member {string} password
                         * @memberof google.cloud.datastream.v1.OracleProfile
                         * @instance
                         */
                        OracleProfile.prototype.password = "";
    
                        /**
                         * OracleProfile databaseService.
                         * @member {string} databaseService
                         * @memberof google.cloud.datastream.v1.OracleProfile
                         * @instance
                         */
                        OracleProfile.prototype.databaseService = "";
    
                        /**
                         * OracleProfile connectionAttributes.
                         * @member {Object.<string,string>} connectionAttributes
                         * @memberof google.cloud.datastream.v1.OracleProfile
                         * @instance
                         */
                        OracleProfile.prototype.connectionAttributes = $util.emptyObject;
    
                        /**
                         * Creates a new OracleProfile instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.OracleProfile
                         * @static
                         * @param {google.cloud.datastream.v1.IOracleProfile=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.OracleProfile} OracleProfile instance
                         */
                        OracleProfile.create = function create(properties) {
                            return new OracleProfile(properties);
                        };
    
                        /**
                         * Encodes the specified OracleProfile message. Does not implicitly {@link google.cloud.datastream.v1.OracleProfile.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.OracleProfile
                         * @static
                         * @param {google.cloud.datastream.v1.IOracleProfile} message OracleProfile message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OracleProfile.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.hostname != null && Object.hasOwnProperty.call(message, "hostname"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.hostname);
                            if (message.port != null && Object.hasOwnProperty.call(message, "port"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.port);
                            if (message.username != null && Object.hasOwnProperty.call(message, "username"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.username);
                            if (message.password != null && Object.hasOwnProperty.call(message, "password"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.password);
                            if (message.databaseService != null && Object.hasOwnProperty.call(message, "databaseService"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.databaseService);
                            if (message.connectionAttributes != null && Object.hasOwnProperty.call(message, "connectionAttributes"))
                                for (var keys = Object.keys(message.connectionAttributes), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 6, wireType 2 =*/50).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.connectionAttributes[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OracleProfile message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.OracleProfile.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.OracleProfile
                         * @static
                         * @param {google.cloud.datastream.v1.IOracleProfile} message OracleProfile message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OracleProfile.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OracleProfile message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.OracleProfile
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.OracleProfile} OracleProfile
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OracleProfile.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.OracleProfile(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.hostname = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.port = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.username = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.password = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.databaseService = reader.string();
                                        break;
                                    }
                                case 6: {
                                        if (message.connectionAttributes === $util.emptyObject)
                                            message.connectionAttributes = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.connectionAttributes[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OracleProfile message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.OracleProfile
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.OracleProfile} OracleProfile
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OracleProfile.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OracleProfile message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.OracleProfile
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OracleProfile.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.hostname != null && message.hasOwnProperty("hostname"))
                                if (!$util.isString(message.hostname))
                                    return "hostname: string expected";
                            if (message.port != null && message.hasOwnProperty("port"))
                                if (!$util.isInteger(message.port))
                                    return "port: integer expected";
                            if (message.username != null && message.hasOwnProperty("username"))
                                if (!$util.isString(message.username))
                                    return "username: string expected";
                            if (message.password != null && message.hasOwnProperty("password"))
                                if (!$util.isString(message.password))
                                    return "password: string expected";
                            if (message.databaseService != null && message.hasOwnProperty("databaseService"))
                                if (!$util.isString(message.databaseService))
                                    return "databaseService: string expected";
                            if (message.connectionAttributes != null && message.hasOwnProperty("connectionAttributes")) {
                                if (!$util.isObject(message.connectionAttributes))
                                    return "connectionAttributes: object expected";
                                var key = Object.keys(message.connectionAttributes);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.connectionAttributes[key[i]]))
                                        return "connectionAttributes: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates an OracleProfile message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.OracleProfile
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.OracleProfile} OracleProfile
                         */
                        OracleProfile.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.OracleProfile)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.OracleProfile();
                            if (object.hostname != null)
                                message.hostname = String(object.hostname);
                            if (object.port != null)
                                message.port = object.port | 0;
                            if (object.username != null)
                                message.username = String(object.username);
                            if (object.password != null)
                                message.password = String(object.password);
                            if (object.databaseService != null)
                                message.databaseService = String(object.databaseService);
                            if (object.connectionAttributes) {
                                if (typeof object.connectionAttributes !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.OracleProfile.connectionAttributes: object expected");
                                message.connectionAttributes = {};
                                for (var keys = Object.keys(object.connectionAttributes), i = 0; i < keys.length; ++i)
                                    message.connectionAttributes[keys[i]] = String(object.connectionAttributes[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OracleProfile message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.OracleProfile
                         * @static
                         * @param {google.cloud.datastream.v1.OracleProfile} message OracleProfile
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OracleProfile.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.connectionAttributes = {};
                            if (options.defaults) {
                                object.hostname = "";
                                object.port = 0;
                                object.username = "";
                                object.password = "";
                                object.databaseService = "";
                            }
                            if (message.hostname != null && message.hasOwnProperty("hostname"))
                                object.hostname = message.hostname;
                            if (message.port != null && message.hasOwnProperty("port"))
                                object.port = message.port;
                            if (message.username != null && message.hasOwnProperty("username"))
                                object.username = message.username;
                            if (message.password != null && message.hasOwnProperty("password"))
                                object.password = message.password;
                            if (message.databaseService != null && message.hasOwnProperty("databaseService"))
                                object.databaseService = message.databaseService;
                            var keys2;
                            if (message.connectionAttributes && (keys2 = Object.keys(message.connectionAttributes)).length) {
                                object.connectionAttributes = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.connectionAttributes[keys2[j]] = message.connectionAttributes[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this OracleProfile to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.OracleProfile
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OracleProfile.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OracleProfile
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.OracleProfile
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OracleProfile.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.OracleProfile";
                        };
    
                        return OracleProfile;
                    })();
    
                    v1.MysqlProfile = (function() {
    
                        /**
                         * Properties of a MysqlProfile.
                         * @memberof google.cloud.datastream.v1
                         * @interface IMysqlProfile
                         * @property {string|null} [hostname] MysqlProfile hostname
                         * @property {number|null} [port] MysqlProfile port
                         * @property {string|null} [username] MysqlProfile username
                         * @property {string|null} [password] MysqlProfile password
                         * @property {google.cloud.datastream.v1.IMysqlSslConfig|null} [sslConfig] MysqlProfile sslConfig
                         */
    
                        /**
                         * Constructs a new MysqlProfile.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a MysqlProfile.
                         * @implements IMysqlProfile
                         * @constructor
                         * @param {google.cloud.datastream.v1.IMysqlProfile=} [properties] Properties to set
                         */
                        function MysqlProfile(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MysqlProfile hostname.
                         * @member {string} hostname
                         * @memberof google.cloud.datastream.v1.MysqlProfile
                         * @instance
                         */
                        MysqlProfile.prototype.hostname = "";
    
                        /**
                         * MysqlProfile port.
                         * @member {number} port
                         * @memberof google.cloud.datastream.v1.MysqlProfile
                         * @instance
                         */
                        MysqlProfile.prototype.port = 0;
    
                        /**
                         * MysqlProfile username.
                         * @member {string} username
                         * @memberof google.cloud.datastream.v1.MysqlProfile
                         * @instance
                         */
                        MysqlProfile.prototype.username = "";
    
                        /**
                         * MysqlProfile password.
                         * @member {string} password
                         * @memberof google.cloud.datastream.v1.MysqlProfile
                         * @instance
                         */
                        MysqlProfile.prototype.password = "";
    
                        /**
                         * MysqlProfile sslConfig.
                         * @member {google.cloud.datastream.v1.IMysqlSslConfig|null|undefined} sslConfig
                         * @memberof google.cloud.datastream.v1.MysqlProfile
                         * @instance
                         */
                        MysqlProfile.prototype.sslConfig = null;
    
                        /**
                         * Creates a new MysqlProfile instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.MysqlProfile
                         * @static
                         * @param {google.cloud.datastream.v1.IMysqlProfile=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.MysqlProfile} MysqlProfile instance
                         */
                        MysqlProfile.create = function create(properties) {
                            return new MysqlProfile(properties);
                        };
    
                        /**
                         * Encodes the specified MysqlProfile message. Does not implicitly {@link google.cloud.datastream.v1.MysqlProfile.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.MysqlProfile
                         * @static
                         * @param {google.cloud.datastream.v1.IMysqlProfile} message MysqlProfile message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MysqlProfile.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.hostname != null && Object.hasOwnProperty.call(message, "hostname"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.hostname);
                            if (message.port != null && Object.hasOwnProperty.call(message, "port"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.port);
                            if (message.username != null && Object.hasOwnProperty.call(message, "username"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.username);
                            if (message.password != null && Object.hasOwnProperty.call(message, "password"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.password);
                            if (message.sslConfig != null && Object.hasOwnProperty.call(message, "sslConfig"))
                                $root.google.cloud.datastream.v1.MysqlSslConfig.encode(message.sslConfig, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MysqlProfile message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.MysqlProfile.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.MysqlProfile
                         * @static
                         * @param {google.cloud.datastream.v1.IMysqlProfile} message MysqlProfile message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MysqlProfile.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MysqlProfile message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.MysqlProfile
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.MysqlProfile} MysqlProfile
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MysqlProfile.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.MysqlProfile();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.hostname = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.port = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.username = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.password = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.sslConfig = $root.google.cloud.datastream.v1.MysqlSslConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MysqlProfile message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.MysqlProfile
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.MysqlProfile} MysqlProfile
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MysqlProfile.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MysqlProfile message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.MysqlProfile
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MysqlProfile.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.hostname != null && message.hasOwnProperty("hostname"))
                                if (!$util.isString(message.hostname))
                                    return "hostname: string expected";
                            if (message.port != null && message.hasOwnProperty("port"))
                                if (!$util.isInteger(message.port))
                                    return "port: integer expected";
                            if (message.username != null && message.hasOwnProperty("username"))
                                if (!$util.isString(message.username))
                                    return "username: string expected";
                            if (message.password != null && message.hasOwnProperty("password"))
                                if (!$util.isString(message.password))
                                    return "password: string expected";
                            if (message.sslConfig != null && message.hasOwnProperty("sslConfig")) {
                                var error = $root.google.cloud.datastream.v1.MysqlSslConfig.verify(message.sslConfig);
                                if (error)
                                    return "sslConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a MysqlProfile message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.MysqlProfile
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.MysqlProfile} MysqlProfile
                         */
                        MysqlProfile.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.MysqlProfile)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.MysqlProfile();
                            if (object.hostname != null)
                                message.hostname = String(object.hostname);
                            if (object.port != null)
                                message.port = object.port | 0;
                            if (object.username != null)
                                message.username = String(object.username);
                            if (object.password != null)
                                message.password = String(object.password);
                            if (object.sslConfig != null) {
                                if (typeof object.sslConfig !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.MysqlProfile.sslConfig: object expected");
                                message.sslConfig = $root.google.cloud.datastream.v1.MysqlSslConfig.fromObject(object.sslConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MysqlProfile message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.MysqlProfile
                         * @static
                         * @param {google.cloud.datastream.v1.MysqlProfile} message MysqlProfile
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MysqlProfile.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.hostname = "";
                                object.port = 0;
                                object.username = "";
                                object.password = "";
                                object.sslConfig = null;
                            }
                            if (message.hostname != null && message.hasOwnProperty("hostname"))
                                object.hostname = message.hostname;
                            if (message.port != null && message.hasOwnProperty("port"))
                                object.port = message.port;
                            if (message.username != null && message.hasOwnProperty("username"))
                                object.username = message.username;
                            if (message.password != null && message.hasOwnProperty("password"))
                                object.password = message.password;
                            if (message.sslConfig != null && message.hasOwnProperty("sslConfig"))
                                object.sslConfig = $root.google.cloud.datastream.v1.MysqlSslConfig.toObject(message.sslConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this MysqlProfile to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.MysqlProfile
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MysqlProfile.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MysqlProfile
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.MysqlProfile
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MysqlProfile.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.MysqlProfile";
                        };
    
                        return MysqlProfile;
                    })();
    
                    v1.PostgresqlProfile = (function() {
    
                        /**
                         * Properties of a PostgresqlProfile.
                         * @memberof google.cloud.datastream.v1
                         * @interface IPostgresqlProfile
                         * @property {string|null} [hostname] PostgresqlProfile hostname
                         * @property {number|null} [port] PostgresqlProfile port
                         * @property {string|null} [username] PostgresqlProfile username
                         * @property {string|null} [password] PostgresqlProfile password
                         * @property {string|null} [database] PostgresqlProfile database
                         */
    
                        /**
                         * Constructs a new PostgresqlProfile.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a PostgresqlProfile.
                         * @implements IPostgresqlProfile
                         * @constructor
                         * @param {google.cloud.datastream.v1.IPostgresqlProfile=} [properties] Properties to set
                         */
                        function PostgresqlProfile(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PostgresqlProfile hostname.
                         * @member {string} hostname
                         * @memberof google.cloud.datastream.v1.PostgresqlProfile
                         * @instance
                         */
                        PostgresqlProfile.prototype.hostname = "";
    
                        /**
                         * PostgresqlProfile port.
                         * @member {number} port
                         * @memberof google.cloud.datastream.v1.PostgresqlProfile
                         * @instance
                         */
                        PostgresqlProfile.prototype.port = 0;
    
                        /**
                         * PostgresqlProfile username.
                         * @member {string} username
                         * @memberof google.cloud.datastream.v1.PostgresqlProfile
                         * @instance
                         */
                        PostgresqlProfile.prototype.username = "";
    
                        /**
                         * PostgresqlProfile password.
                         * @member {string} password
                         * @memberof google.cloud.datastream.v1.PostgresqlProfile
                         * @instance
                         */
                        PostgresqlProfile.prototype.password = "";
    
                        /**
                         * PostgresqlProfile database.
                         * @member {string} database
                         * @memberof google.cloud.datastream.v1.PostgresqlProfile
                         * @instance
                         */
                        PostgresqlProfile.prototype.database = "";
    
                        /**
                         * Creates a new PostgresqlProfile instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.PostgresqlProfile
                         * @static
                         * @param {google.cloud.datastream.v1.IPostgresqlProfile=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.PostgresqlProfile} PostgresqlProfile instance
                         */
                        PostgresqlProfile.create = function create(properties) {
                            return new PostgresqlProfile(properties);
                        };
    
                        /**
                         * Encodes the specified PostgresqlProfile message. Does not implicitly {@link google.cloud.datastream.v1.PostgresqlProfile.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.PostgresqlProfile
                         * @static
                         * @param {google.cloud.datastream.v1.IPostgresqlProfile} message PostgresqlProfile message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PostgresqlProfile.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.hostname != null && Object.hasOwnProperty.call(message, "hostname"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.hostname);
                            if (message.port != null && Object.hasOwnProperty.call(message, "port"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.port);
                            if (message.username != null && Object.hasOwnProperty.call(message, "username"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.username);
                            if (message.password != null && Object.hasOwnProperty.call(message, "password"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.password);
                            if (message.database != null && Object.hasOwnProperty.call(message, "database"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.database);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PostgresqlProfile message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.PostgresqlProfile.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.PostgresqlProfile
                         * @static
                         * @param {google.cloud.datastream.v1.IPostgresqlProfile} message PostgresqlProfile message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PostgresqlProfile.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PostgresqlProfile message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.PostgresqlProfile
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.PostgresqlProfile} PostgresqlProfile
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PostgresqlProfile.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.PostgresqlProfile();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.hostname = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.port = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.username = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.password = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.database = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PostgresqlProfile message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.PostgresqlProfile
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.PostgresqlProfile} PostgresqlProfile
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PostgresqlProfile.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PostgresqlProfile message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.PostgresqlProfile
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PostgresqlProfile.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.hostname != null && message.hasOwnProperty("hostname"))
                                if (!$util.isString(message.hostname))
                                    return "hostname: string expected";
                            if (message.port != null && message.hasOwnProperty("port"))
                                if (!$util.isInteger(message.port))
                                    return "port: integer expected";
                            if (message.username != null && message.hasOwnProperty("username"))
                                if (!$util.isString(message.username))
                                    return "username: string expected";
                            if (message.password != null && message.hasOwnProperty("password"))
                                if (!$util.isString(message.password))
                                    return "password: string expected";
                            if (message.database != null && message.hasOwnProperty("database"))
                                if (!$util.isString(message.database))
                                    return "database: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a PostgresqlProfile message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.PostgresqlProfile
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.PostgresqlProfile} PostgresqlProfile
                         */
                        PostgresqlProfile.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.PostgresqlProfile)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.PostgresqlProfile();
                            if (object.hostname != null)
                                message.hostname = String(object.hostname);
                            if (object.port != null)
                                message.port = object.port | 0;
                            if (object.username != null)
                                message.username = String(object.username);
                            if (object.password != null)
                                message.password = String(object.password);
                            if (object.database != null)
                                message.database = String(object.database);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PostgresqlProfile message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.PostgresqlProfile
                         * @static
                         * @param {google.cloud.datastream.v1.PostgresqlProfile} message PostgresqlProfile
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PostgresqlProfile.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.hostname = "";
                                object.port = 0;
                                object.username = "";
                                object.password = "";
                                object.database = "";
                            }
                            if (message.hostname != null && message.hasOwnProperty("hostname"))
                                object.hostname = message.hostname;
                            if (message.port != null && message.hasOwnProperty("port"))
                                object.port = message.port;
                            if (message.username != null && message.hasOwnProperty("username"))
                                object.username = message.username;
                            if (message.password != null && message.hasOwnProperty("password"))
                                object.password = message.password;
                            if (message.database != null && message.hasOwnProperty("database"))
                                object.database = message.database;
                            return object;
                        };
    
                        /**
                         * Converts this PostgresqlProfile to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.PostgresqlProfile
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PostgresqlProfile.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PostgresqlProfile
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.PostgresqlProfile
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PostgresqlProfile.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.PostgresqlProfile";
                        };
    
                        return PostgresqlProfile;
                    })();
    
                    v1.GcsProfile = (function() {
    
                        /**
                         * Properties of a GcsProfile.
                         * @memberof google.cloud.datastream.v1
                         * @interface IGcsProfile
                         * @property {string|null} [bucket] GcsProfile bucket
                         * @property {string|null} [rootPath] GcsProfile rootPath
                         */
    
                        /**
                         * Constructs a new GcsProfile.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a GcsProfile.
                         * @implements IGcsProfile
                         * @constructor
                         * @param {google.cloud.datastream.v1.IGcsProfile=} [properties] Properties to set
                         */
                        function GcsProfile(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GcsProfile bucket.
                         * @member {string} bucket
                         * @memberof google.cloud.datastream.v1.GcsProfile
                         * @instance
                         */
                        GcsProfile.prototype.bucket = "";
    
                        /**
                         * GcsProfile rootPath.
                         * @member {string} rootPath
                         * @memberof google.cloud.datastream.v1.GcsProfile
                         * @instance
                         */
                        GcsProfile.prototype.rootPath = "";
    
                        /**
                         * Creates a new GcsProfile instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.GcsProfile
                         * @static
                         * @param {google.cloud.datastream.v1.IGcsProfile=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.GcsProfile} GcsProfile instance
                         */
                        GcsProfile.create = function create(properties) {
                            return new GcsProfile(properties);
                        };
    
                        /**
                         * Encodes the specified GcsProfile message. Does not implicitly {@link google.cloud.datastream.v1.GcsProfile.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.GcsProfile
                         * @static
                         * @param {google.cloud.datastream.v1.IGcsProfile} message GcsProfile message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GcsProfile.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.bucket != null && Object.hasOwnProperty.call(message, "bucket"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.bucket);
                            if (message.rootPath != null && Object.hasOwnProperty.call(message, "rootPath"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.rootPath);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GcsProfile message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.GcsProfile.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.GcsProfile
                         * @static
                         * @param {google.cloud.datastream.v1.IGcsProfile} message GcsProfile message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GcsProfile.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GcsProfile message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.GcsProfile
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.GcsProfile} GcsProfile
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GcsProfile.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.GcsProfile();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.bucket = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.rootPath = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GcsProfile message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.GcsProfile
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.GcsProfile} GcsProfile
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GcsProfile.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GcsProfile message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.GcsProfile
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GcsProfile.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.bucket != null && message.hasOwnProperty("bucket"))
                                if (!$util.isString(message.bucket))
                                    return "bucket: string expected";
                            if (message.rootPath != null && message.hasOwnProperty("rootPath"))
                                if (!$util.isString(message.rootPath))
                                    return "rootPath: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GcsProfile message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.GcsProfile
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.GcsProfile} GcsProfile
                         */
                        GcsProfile.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.GcsProfile)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.GcsProfile();
                            if (object.bucket != null)
                                message.bucket = String(object.bucket);
                            if (object.rootPath != null)
                                message.rootPath = String(object.rootPath);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GcsProfile message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.GcsProfile
                         * @static
                         * @param {google.cloud.datastream.v1.GcsProfile} message GcsProfile
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GcsProfile.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.bucket = "";
                                object.rootPath = "";
                            }
                            if (message.bucket != null && message.hasOwnProperty("bucket"))
                                object.bucket = message.bucket;
                            if (message.rootPath != null && message.hasOwnProperty("rootPath"))
                                object.rootPath = message.rootPath;
                            return object;
                        };
    
                        /**
                         * Converts this GcsProfile to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.GcsProfile
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GcsProfile.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GcsProfile
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.GcsProfile
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GcsProfile.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.GcsProfile";
                        };
    
                        return GcsProfile;
                    })();
    
                    v1.BigQueryProfile = (function() {
    
                        /**
                         * Properties of a BigQueryProfile.
                         * @memberof google.cloud.datastream.v1
                         * @interface IBigQueryProfile
                         */
    
                        /**
                         * Constructs a new BigQueryProfile.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a BigQueryProfile.
                         * @implements IBigQueryProfile
                         * @constructor
                         * @param {google.cloud.datastream.v1.IBigQueryProfile=} [properties] Properties to set
                         */
                        function BigQueryProfile(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new BigQueryProfile instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.BigQueryProfile
                         * @static
                         * @param {google.cloud.datastream.v1.IBigQueryProfile=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.BigQueryProfile} BigQueryProfile instance
                         */
                        BigQueryProfile.create = function create(properties) {
                            return new BigQueryProfile(properties);
                        };
    
                        /**
                         * Encodes the specified BigQueryProfile message. Does not implicitly {@link google.cloud.datastream.v1.BigQueryProfile.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.BigQueryProfile
                         * @static
                         * @param {google.cloud.datastream.v1.IBigQueryProfile} message BigQueryProfile message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BigQueryProfile.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BigQueryProfile message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.BigQueryProfile.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.BigQueryProfile
                         * @static
                         * @param {google.cloud.datastream.v1.IBigQueryProfile} message BigQueryProfile message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BigQueryProfile.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BigQueryProfile message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.BigQueryProfile
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.BigQueryProfile} BigQueryProfile
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BigQueryProfile.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.BigQueryProfile();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BigQueryProfile message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.BigQueryProfile
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.BigQueryProfile} BigQueryProfile
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BigQueryProfile.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BigQueryProfile message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.BigQueryProfile
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BigQueryProfile.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates a BigQueryProfile message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.BigQueryProfile
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.BigQueryProfile} BigQueryProfile
                         */
                        BigQueryProfile.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.BigQueryProfile)
                                return object;
                            return new $root.google.cloud.datastream.v1.BigQueryProfile();
                        };
    
                        /**
                         * Creates a plain object from a BigQueryProfile message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.BigQueryProfile
                         * @static
                         * @param {google.cloud.datastream.v1.BigQueryProfile} message BigQueryProfile
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BigQueryProfile.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this BigQueryProfile to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.BigQueryProfile
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BigQueryProfile.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BigQueryProfile
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.BigQueryProfile
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BigQueryProfile.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.BigQueryProfile";
                        };
    
                        return BigQueryProfile;
                    })();
    
                    v1.StaticServiceIpConnectivity = (function() {
    
                        /**
                         * Properties of a StaticServiceIpConnectivity.
                         * @memberof google.cloud.datastream.v1
                         * @interface IStaticServiceIpConnectivity
                         */
    
                        /**
                         * Constructs a new StaticServiceIpConnectivity.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a StaticServiceIpConnectivity.
                         * @implements IStaticServiceIpConnectivity
                         * @constructor
                         * @param {google.cloud.datastream.v1.IStaticServiceIpConnectivity=} [properties] Properties to set
                         */
                        function StaticServiceIpConnectivity(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new StaticServiceIpConnectivity instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.StaticServiceIpConnectivity
                         * @static
                         * @param {google.cloud.datastream.v1.IStaticServiceIpConnectivity=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.StaticServiceIpConnectivity} StaticServiceIpConnectivity instance
                         */
                        StaticServiceIpConnectivity.create = function create(properties) {
                            return new StaticServiceIpConnectivity(properties);
                        };
    
                        /**
                         * Encodes the specified StaticServiceIpConnectivity message. Does not implicitly {@link google.cloud.datastream.v1.StaticServiceIpConnectivity.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.StaticServiceIpConnectivity
                         * @static
                         * @param {google.cloud.datastream.v1.IStaticServiceIpConnectivity} message StaticServiceIpConnectivity message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StaticServiceIpConnectivity.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified StaticServiceIpConnectivity message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.StaticServiceIpConnectivity.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.StaticServiceIpConnectivity
                         * @static
                         * @param {google.cloud.datastream.v1.IStaticServiceIpConnectivity} message StaticServiceIpConnectivity message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StaticServiceIpConnectivity.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a StaticServiceIpConnectivity message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.StaticServiceIpConnectivity
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.StaticServiceIpConnectivity} StaticServiceIpConnectivity
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StaticServiceIpConnectivity.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.StaticServiceIpConnectivity();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a StaticServiceIpConnectivity message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.StaticServiceIpConnectivity
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.StaticServiceIpConnectivity} StaticServiceIpConnectivity
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StaticServiceIpConnectivity.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a StaticServiceIpConnectivity message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.StaticServiceIpConnectivity
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StaticServiceIpConnectivity.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates a StaticServiceIpConnectivity message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.StaticServiceIpConnectivity
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.StaticServiceIpConnectivity} StaticServiceIpConnectivity
                         */
                        StaticServiceIpConnectivity.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.StaticServiceIpConnectivity)
                                return object;
                            return new $root.google.cloud.datastream.v1.StaticServiceIpConnectivity();
                        };
    
                        /**
                         * Creates a plain object from a StaticServiceIpConnectivity message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.StaticServiceIpConnectivity
                         * @static
                         * @param {google.cloud.datastream.v1.StaticServiceIpConnectivity} message StaticServiceIpConnectivity
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StaticServiceIpConnectivity.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this StaticServiceIpConnectivity to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.StaticServiceIpConnectivity
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StaticServiceIpConnectivity.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for StaticServiceIpConnectivity
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.StaticServiceIpConnectivity
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StaticServiceIpConnectivity.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.StaticServiceIpConnectivity";
                        };
    
                        return StaticServiceIpConnectivity;
                    })();
    
                    v1.ForwardSshTunnelConnectivity = (function() {
    
                        /**
                         * Properties of a ForwardSshTunnelConnectivity.
                         * @memberof google.cloud.datastream.v1
                         * @interface IForwardSshTunnelConnectivity
                         * @property {string|null} [hostname] ForwardSshTunnelConnectivity hostname
                         * @property {string|null} [username] ForwardSshTunnelConnectivity username
                         * @property {number|null} [port] ForwardSshTunnelConnectivity port
                         * @property {string|null} [password] ForwardSshTunnelConnectivity password
                         * @property {string|null} [privateKey] ForwardSshTunnelConnectivity privateKey
                         */
    
                        /**
                         * Constructs a new ForwardSshTunnelConnectivity.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a ForwardSshTunnelConnectivity.
                         * @implements IForwardSshTunnelConnectivity
                         * @constructor
                         * @param {google.cloud.datastream.v1.IForwardSshTunnelConnectivity=} [properties] Properties to set
                         */
                        function ForwardSshTunnelConnectivity(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ForwardSshTunnelConnectivity hostname.
                         * @member {string} hostname
                         * @memberof google.cloud.datastream.v1.ForwardSshTunnelConnectivity
                         * @instance
                         */
                        ForwardSshTunnelConnectivity.prototype.hostname = "";
    
                        /**
                         * ForwardSshTunnelConnectivity username.
                         * @member {string} username
                         * @memberof google.cloud.datastream.v1.ForwardSshTunnelConnectivity
                         * @instance
                         */
                        ForwardSshTunnelConnectivity.prototype.username = "";
    
                        /**
                         * ForwardSshTunnelConnectivity port.
                         * @member {number} port
                         * @memberof google.cloud.datastream.v1.ForwardSshTunnelConnectivity
                         * @instance
                         */
                        ForwardSshTunnelConnectivity.prototype.port = 0;
    
                        /**
                         * ForwardSshTunnelConnectivity password.
                         * @member {string|null|undefined} password
                         * @memberof google.cloud.datastream.v1.ForwardSshTunnelConnectivity
                         * @instance
                         */
                        ForwardSshTunnelConnectivity.prototype.password = null;
    
                        /**
                         * ForwardSshTunnelConnectivity privateKey.
                         * @member {string|null|undefined} privateKey
                         * @memberof google.cloud.datastream.v1.ForwardSshTunnelConnectivity
                         * @instance
                         */
                        ForwardSshTunnelConnectivity.prototype.privateKey = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * ForwardSshTunnelConnectivity authenticationMethod.
                         * @member {"password"|"privateKey"|undefined} authenticationMethod
                         * @memberof google.cloud.datastream.v1.ForwardSshTunnelConnectivity
                         * @instance
                         */
                        Object.defineProperty(ForwardSshTunnelConnectivity.prototype, "authenticationMethod", {
                            get: $util.oneOfGetter($oneOfFields = ["password", "privateKey"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new ForwardSshTunnelConnectivity instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.ForwardSshTunnelConnectivity
                         * @static
                         * @param {google.cloud.datastream.v1.IForwardSshTunnelConnectivity=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.ForwardSshTunnelConnectivity} ForwardSshTunnelConnectivity instance
                         */
                        ForwardSshTunnelConnectivity.create = function create(properties) {
                            return new ForwardSshTunnelConnectivity(properties);
                        };
    
                        /**
                         * Encodes the specified ForwardSshTunnelConnectivity message. Does not implicitly {@link google.cloud.datastream.v1.ForwardSshTunnelConnectivity.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.ForwardSshTunnelConnectivity
                         * @static
                         * @param {google.cloud.datastream.v1.IForwardSshTunnelConnectivity} message ForwardSshTunnelConnectivity message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ForwardSshTunnelConnectivity.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.hostname != null && Object.hasOwnProperty.call(message, "hostname"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.hostname);
                            if (message.username != null && Object.hasOwnProperty.call(message, "username"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.username);
                            if (message.port != null && Object.hasOwnProperty.call(message, "port"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.port);
                            if (message.password != null && Object.hasOwnProperty.call(message, "password"))
                                writer.uint32(/* id 100, wireType 2 =*/802).string(message.password);
                            if (message.privateKey != null && Object.hasOwnProperty.call(message, "privateKey"))
                                writer.uint32(/* id 101, wireType 2 =*/810).string(message.privateKey);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ForwardSshTunnelConnectivity message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.ForwardSshTunnelConnectivity.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.ForwardSshTunnelConnectivity
                         * @static
                         * @param {google.cloud.datastream.v1.IForwardSshTunnelConnectivity} message ForwardSshTunnelConnectivity message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ForwardSshTunnelConnectivity.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ForwardSshTunnelConnectivity message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.ForwardSshTunnelConnectivity
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.ForwardSshTunnelConnectivity} ForwardSshTunnelConnectivity
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ForwardSshTunnelConnectivity.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.ForwardSshTunnelConnectivity();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.hostname = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.username = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.port = reader.int32();
                                        break;
                                    }
                                case 100: {
                                        message.password = reader.string();
                                        break;
                                    }
                                case 101: {
                                        message.privateKey = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ForwardSshTunnelConnectivity message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.ForwardSshTunnelConnectivity
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.ForwardSshTunnelConnectivity} ForwardSshTunnelConnectivity
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ForwardSshTunnelConnectivity.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ForwardSshTunnelConnectivity message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.ForwardSshTunnelConnectivity
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ForwardSshTunnelConnectivity.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.hostname != null && message.hasOwnProperty("hostname"))
                                if (!$util.isString(message.hostname))
                                    return "hostname: string expected";
                            if (message.username != null && message.hasOwnProperty("username"))
                                if (!$util.isString(message.username))
                                    return "username: string expected";
                            if (message.port != null && message.hasOwnProperty("port"))
                                if (!$util.isInteger(message.port))
                                    return "port: integer expected";
                            if (message.password != null && message.hasOwnProperty("password")) {
                                properties.authenticationMethod = 1;
                                if (!$util.isString(message.password))
                                    return "password: string expected";
                            }
                            if (message.privateKey != null && message.hasOwnProperty("privateKey")) {
                                if (properties.authenticationMethod === 1)
                                    return "authenticationMethod: multiple values";
                                properties.authenticationMethod = 1;
                                if (!$util.isString(message.privateKey))
                                    return "privateKey: string expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ForwardSshTunnelConnectivity message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.ForwardSshTunnelConnectivity
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.ForwardSshTunnelConnectivity} ForwardSshTunnelConnectivity
                         */
                        ForwardSshTunnelConnectivity.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.ForwardSshTunnelConnectivity)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.ForwardSshTunnelConnectivity();
                            if (object.hostname != null)
                                message.hostname = String(object.hostname);
                            if (object.username != null)
                                message.username = String(object.username);
                            if (object.port != null)
                                message.port = object.port | 0;
                            if (object.password != null)
                                message.password = String(object.password);
                            if (object.privateKey != null)
                                message.privateKey = String(object.privateKey);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ForwardSshTunnelConnectivity message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.ForwardSshTunnelConnectivity
                         * @static
                         * @param {google.cloud.datastream.v1.ForwardSshTunnelConnectivity} message ForwardSshTunnelConnectivity
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ForwardSshTunnelConnectivity.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.hostname = "";
                                object.username = "";
                                object.port = 0;
                            }
                            if (message.hostname != null && message.hasOwnProperty("hostname"))
                                object.hostname = message.hostname;
                            if (message.username != null && message.hasOwnProperty("username"))
                                object.username = message.username;
                            if (message.port != null && message.hasOwnProperty("port"))
                                object.port = message.port;
                            if (message.password != null && message.hasOwnProperty("password")) {
                                object.password = message.password;
                                if (options.oneofs)
                                    object.authenticationMethod = "password";
                            }
                            if (message.privateKey != null && message.hasOwnProperty("privateKey")) {
                                object.privateKey = message.privateKey;
                                if (options.oneofs)
                                    object.authenticationMethod = "privateKey";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ForwardSshTunnelConnectivity to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.ForwardSshTunnelConnectivity
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ForwardSshTunnelConnectivity.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ForwardSshTunnelConnectivity
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.ForwardSshTunnelConnectivity
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ForwardSshTunnelConnectivity.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.ForwardSshTunnelConnectivity";
                        };
    
                        return ForwardSshTunnelConnectivity;
                    })();
    
                    v1.VpcPeeringConfig = (function() {
    
                        /**
                         * Properties of a VpcPeeringConfig.
                         * @memberof google.cloud.datastream.v1
                         * @interface IVpcPeeringConfig
                         * @property {string|null} [vpc] VpcPeeringConfig vpc
                         * @property {string|null} [subnet] VpcPeeringConfig subnet
                         */
    
                        /**
                         * Constructs a new VpcPeeringConfig.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a VpcPeeringConfig.
                         * @implements IVpcPeeringConfig
                         * @constructor
                         * @param {google.cloud.datastream.v1.IVpcPeeringConfig=} [properties] Properties to set
                         */
                        function VpcPeeringConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * VpcPeeringConfig vpc.
                         * @member {string} vpc
                         * @memberof google.cloud.datastream.v1.VpcPeeringConfig
                         * @instance
                         */
                        VpcPeeringConfig.prototype.vpc = "";
    
                        /**
                         * VpcPeeringConfig subnet.
                         * @member {string} subnet
                         * @memberof google.cloud.datastream.v1.VpcPeeringConfig
                         * @instance
                         */
                        VpcPeeringConfig.prototype.subnet = "";
    
                        /**
                         * Creates a new VpcPeeringConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.VpcPeeringConfig
                         * @static
                         * @param {google.cloud.datastream.v1.IVpcPeeringConfig=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.VpcPeeringConfig} VpcPeeringConfig instance
                         */
                        VpcPeeringConfig.create = function create(properties) {
                            return new VpcPeeringConfig(properties);
                        };
    
                        /**
                         * Encodes the specified VpcPeeringConfig message. Does not implicitly {@link google.cloud.datastream.v1.VpcPeeringConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.VpcPeeringConfig
                         * @static
                         * @param {google.cloud.datastream.v1.IVpcPeeringConfig} message VpcPeeringConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VpcPeeringConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.vpc != null && Object.hasOwnProperty.call(message, "vpc"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.vpc);
                            if (message.subnet != null && Object.hasOwnProperty.call(message, "subnet"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.subnet);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified VpcPeeringConfig message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.VpcPeeringConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.VpcPeeringConfig
                         * @static
                         * @param {google.cloud.datastream.v1.IVpcPeeringConfig} message VpcPeeringConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VpcPeeringConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a VpcPeeringConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.VpcPeeringConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.VpcPeeringConfig} VpcPeeringConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VpcPeeringConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.VpcPeeringConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.vpc = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.subnet = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a VpcPeeringConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.VpcPeeringConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.VpcPeeringConfig} VpcPeeringConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VpcPeeringConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a VpcPeeringConfig message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.VpcPeeringConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        VpcPeeringConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.vpc != null && message.hasOwnProperty("vpc"))
                                if (!$util.isString(message.vpc))
                                    return "vpc: string expected";
                            if (message.subnet != null && message.hasOwnProperty("subnet"))
                                if (!$util.isString(message.subnet))
                                    return "subnet: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a VpcPeeringConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.VpcPeeringConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.VpcPeeringConfig} VpcPeeringConfig
                         */
                        VpcPeeringConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.VpcPeeringConfig)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.VpcPeeringConfig();
                            if (object.vpc != null)
                                message.vpc = String(object.vpc);
                            if (object.subnet != null)
                                message.subnet = String(object.subnet);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a VpcPeeringConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.VpcPeeringConfig
                         * @static
                         * @param {google.cloud.datastream.v1.VpcPeeringConfig} message VpcPeeringConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        VpcPeeringConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.vpc = "";
                                object.subnet = "";
                            }
                            if (message.vpc != null && message.hasOwnProperty("vpc"))
                                object.vpc = message.vpc;
                            if (message.subnet != null && message.hasOwnProperty("subnet"))
                                object.subnet = message.subnet;
                            return object;
                        };
    
                        /**
                         * Converts this VpcPeeringConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.VpcPeeringConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        VpcPeeringConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for VpcPeeringConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.VpcPeeringConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        VpcPeeringConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.VpcPeeringConfig";
                        };
    
                        return VpcPeeringConfig;
                    })();
    
                    v1.PrivateConnection = (function() {
    
                        /**
                         * Properties of a PrivateConnection.
                         * @memberof google.cloud.datastream.v1
                         * @interface IPrivateConnection
                         * @property {string|null} [name] PrivateConnection name
                         * @property {google.protobuf.ITimestamp|null} [createTime] PrivateConnection createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] PrivateConnection updateTime
                         * @property {Object.<string,string>|null} [labels] PrivateConnection labels
                         * @property {string|null} [displayName] PrivateConnection displayName
                         * @property {google.cloud.datastream.v1.PrivateConnection.State|null} [state] PrivateConnection state
                         * @property {google.cloud.datastream.v1.IError|null} [error] PrivateConnection error
                         * @property {google.cloud.datastream.v1.IVpcPeeringConfig|null} [vpcPeeringConfig] PrivateConnection vpcPeeringConfig
                         */
    
                        /**
                         * Constructs a new PrivateConnection.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a PrivateConnection.
                         * @implements IPrivateConnection
                         * @constructor
                         * @param {google.cloud.datastream.v1.IPrivateConnection=} [properties] Properties to set
                         */
                        function PrivateConnection(properties) {
                            this.labels = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PrivateConnection name.
                         * @member {string} name
                         * @memberof google.cloud.datastream.v1.PrivateConnection
                         * @instance
                         */
                        PrivateConnection.prototype.name = "";
    
                        /**
                         * PrivateConnection createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.datastream.v1.PrivateConnection
                         * @instance
                         */
                        PrivateConnection.prototype.createTime = null;
    
                        /**
                         * PrivateConnection updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.datastream.v1.PrivateConnection
                         * @instance
                         */
                        PrivateConnection.prototype.updateTime = null;
    
                        /**
                         * PrivateConnection labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.datastream.v1.PrivateConnection
                         * @instance
                         */
                        PrivateConnection.prototype.labels = $util.emptyObject;
    
                        /**
                         * PrivateConnection displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.datastream.v1.PrivateConnection
                         * @instance
                         */
                        PrivateConnection.prototype.displayName = "";
    
                        /**
                         * PrivateConnection state.
                         * @member {google.cloud.datastream.v1.PrivateConnection.State} state
                         * @memberof google.cloud.datastream.v1.PrivateConnection
                         * @instance
                         */
                        PrivateConnection.prototype.state = 0;
    
                        /**
                         * PrivateConnection error.
                         * @member {google.cloud.datastream.v1.IError|null|undefined} error
                         * @memberof google.cloud.datastream.v1.PrivateConnection
                         * @instance
                         */
                        PrivateConnection.prototype.error = null;
    
                        /**
                         * PrivateConnection vpcPeeringConfig.
                         * @member {google.cloud.datastream.v1.IVpcPeeringConfig|null|undefined} vpcPeeringConfig
                         * @memberof google.cloud.datastream.v1.PrivateConnection
                         * @instance
                         */
                        PrivateConnection.prototype.vpcPeeringConfig = null;
    
                        /**
                         * Creates a new PrivateConnection instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.PrivateConnection
                         * @static
                         * @param {google.cloud.datastream.v1.IPrivateConnection=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.PrivateConnection} PrivateConnection instance
                         */
                        PrivateConnection.create = function create(properties) {
                            return new PrivateConnection(properties);
                        };
    
                        /**
                         * Encodes the specified PrivateConnection message. Does not implicitly {@link google.cloud.datastream.v1.PrivateConnection.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.PrivateConnection
                         * @static
                         * @param {google.cloud.datastream.v1.IPrivateConnection} message PrivateConnection message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PrivateConnection.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.displayName);
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.state);
                            if (message.error != null && Object.hasOwnProperty.call(message, "error"))
                                $root.google.cloud.datastream.v1.Error.encode(message.error, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.vpcPeeringConfig != null && Object.hasOwnProperty.call(message, "vpcPeeringConfig"))
                                $root.google.cloud.datastream.v1.VpcPeeringConfig.encode(message.vpcPeeringConfig, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PrivateConnection message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.PrivateConnection.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.PrivateConnection
                         * @static
                         * @param {google.cloud.datastream.v1.IPrivateConnection} message PrivateConnection message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PrivateConnection.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PrivateConnection message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.PrivateConnection
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.PrivateConnection} PrivateConnection
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PrivateConnection.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.PrivateConnection(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 5: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 7: {
                                        message.error = $root.google.cloud.datastream.v1.Error.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 100: {
                                        message.vpcPeeringConfig = $root.google.cloud.datastream.v1.VpcPeeringConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PrivateConnection message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.PrivateConnection
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.PrivateConnection} PrivateConnection
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PrivateConnection.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PrivateConnection message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.PrivateConnection
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PrivateConnection.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            if (message.error != null && message.hasOwnProperty("error")) {
                                var error = $root.google.cloud.datastream.v1.Error.verify(message.error);
                                if (error)
                                    return "error." + error;
                            }
                            if (message.vpcPeeringConfig != null && message.hasOwnProperty("vpcPeeringConfig")) {
                                var error = $root.google.cloud.datastream.v1.VpcPeeringConfig.verify(message.vpcPeeringConfig);
                                if (error)
                                    return "vpcPeeringConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a PrivateConnection message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.PrivateConnection
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.PrivateConnection} PrivateConnection
                         */
                        PrivateConnection.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.PrivateConnection)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.PrivateConnection();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.PrivateConnection.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.PrivateConnection.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.PrivateConnection.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "CREATING":
                            case 1:
                                message.state = 1;
                                break;
                            case "CREATED":
                            case 2:
                                message.state = 2;
                                break;
                            case "FAILED":
                            case 3:
                                message.state = 3;
                                break;
                            case "DELETING":
                            case 4:
                                message.state = 4;
                                break;
                            case "FAILED_TO_DELETE":
                            case 5:
                                message.state = 5;
                                break;
                            }
                            if (object.error != null) {
                                if (typeof object.error !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.PrivateConnection.error: object expected");
                                message.error = $root.google.cloud.datastream.v1.Error.fromObject(object.error);
                            }
                            if (object.vpcPeeringConfig != null) {
                                if (typeof object.vpcPeeringConfig !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.PrivateConnection.vpcPeeringConfig: object expected");
                                message.vpcPeeringConfig = $root.google.cloud.datastream.v1.VpcPeeringConfig.fromObject(object.vpcPeeringConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PrivateConnection message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.PrivateConnection
                         * @static
                         * @param {google.cloud.datastream.v1.PrivateConnection} message PrivateConnection
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PrivateConnection.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.labels = {};
                            if (options.defaults) {
                                object.name = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.displayName = "";
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.error = null;
                                object.vpcPeeringConfig = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.datastream.v1.PrivateConnection.State[message.state] === undefined ? message.state : $root.google.cloud.datastream.v1.PrivateConnection.State[message.state] : message.state;
                            if (message.error != null && message.hasOwnProperty("error"))
                                object.error = $root.google.cloud.datastream.v1.Error.toObject(message.error, options);
                            if (message.vpcPeeringConfig != null && message.hasOwnProperty("vpcPeeringConfig"))
                                object.vpcPeeringConfig = $root.google.cloud.datastream.v1.VpcPeeringConfig.toObject(message.vpcPeeringConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this PrivateConnection to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.PrivateConnection
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PrivateConnection.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PrivateConnection
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.PrivateConnection
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PrivateConnection.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.PrivateConnection";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.datastream.v1.PrivateConnection.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} CREATING=1 CREATING value
                         * @property {number} CREATED=2 CREATED value
                         * @property {number} FAILED=3 FAILED value
                         * @property {number} DELETING=4 DELETING value
                         * @property {number} FAILED_TO_DELETE=5 FAILED_TO_DELETE value
                         */
                        PrivateConnection.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CREATING"] = 1;
                            values[valuesById[2] = "CREATED"] = 2;
                            values[valuesById[3] = "FAILED"] = 3;
                            values[valuesById[4] = "DELETING"] = 4;
                            values[valuesById[5] = "FAILED_TO_DELETE"] = 5;
                            return values;
                        })();
    
                        return PrivateConnection;
                    })();
    
                    v1.PrivateConnectivity = (function() {
    
                        /**
                         * Properties of a PrivateConnectivity.
                         * @memberof google.cloud.datastream.v1
                         * @interface IPrivateConnectivity
                         * @property {string|null} [privateConnection] PrivateConnectivity privateConnection
                         */
    
                        /**
                         * Constructs a new PrivateConnectivity.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a PrivateConnectivity.
                         * @implements IPrivateConnectivity
                         * @constructor
                         * @param {google.cloud.datastream.v1.IPrivateConnectivity=} [properties] Properties to set
                         */
                        function PrivateConnectivity(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PrivateConnectivity privateConnection.
                         * @member {string} privateConnection
                         * @memberof google.cloud.datastream.v1.PrivateConnectivity
                         * @instance
                         */
                        PrivateConnectivity.prototype.privateConnection = "";
    
                        /**
                         * Creates a new PrivateConnectivity instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.PrivateConnectivity
                         * @static
                         * @param {google.cloud.datastream.v1.IPrivateConnectivity=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.PrivateConnectivity} PrivateConnectivity instance
                         */
                        PrivateConnectivity.create = function create(properties) {
                            return new PrivateConnectivity(properties);
                        };
    
                        /**
                         * Encodes the specified PrivateConnectivity message. Does not implicitly {@link google.cloud.datastream.v1.PrivateConnectivity.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.PrivateConnectivity
                         * @static
                         * @param {google.cloud.datastream.v1.IPrivateConnectivity} message PrivateConnectivity message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PrivateConnectivity.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.privateConnection != null && Object.hasOwnProperty.call(message, "privateConnection"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.privateConnection);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PrivateConnectivity message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.PrivateConnectivity.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.PrivateConnectivity
                         * @static
                         * @param {google.cloud.datastream.v1.IPrivateConnectivity} message PrivateConnectivity message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PrivateConnectivity.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PrivateConnectivity message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.PrivateConnectivity
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.PrivateConnectivity} PrivateConnectivity
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PrivateConnectivity.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.PrivateConnectivity();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.privateConnection = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PrivateConnectivity message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.PrivateConnectivity
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.PrivateConnectivity} PrivateConnectivity
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PrivateConnectivity.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PrivateConnectivity message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.PrivateConnectivity
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PrivateConnectivity.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.privateConnection != null && message.hasOwnProperty("privateConnection"))
                                if (!$util.isString(message.privateConnection))
                                    return "privateConnection: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a PrivateConnectivity message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.PrivateConnectivity
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.PrivateConnectivity} PrivateConnectivity
                         */
                        PrivateConnectivity.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.PrivateConnectivity)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.PrivateConnectivity();
                            if (object.privateConnection != null)
                                message.privateConnection = String(object.privateConnection);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PrivateConnectivity message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.PrivateConnectivity
                         * @static
                         * @param {google.cloud.datastream.v1.PrivateConnectivity} message PrivateConnectivity
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PrivateConnectivity.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.privateConnection = "";
                            if (message.privateConnection != null && message.hasOwnProperty("privateConnection"))
                                object.privateConnection = message.privateConnection;
                            return object;
                        };
    
                        /**
                         * Converts this PrivateConnectivity to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.PrivateConnectivity
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PrivateConnectivity.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PrivateConnectivity
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.PrivateConnectivity
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PrivateConnectivity.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.PrivateConnectivity";
                        };
    
                        return PrivateConnectivity;
                    })();
    
                    v1.Route = (function() {
    
                        /**
                         * Properties of a Route.
                         * @memberof google.cloud.datastream.v1
                         * @interface IRoute
                         * @property {string|null} [name] Route name
                         * @property {google.protobuf.ITimestamp|null} [createTime] Route createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Route updateTime
                         * @property {Object.<string,string>|null} [labels] Route labels
                         * @property {string|null} [displayName] Route displayName
                         * @property {string|null} [destinationAddress] Route destinationAddress
                         * @property {number|null} [destinationPort] Route destinationPort
                         */
    
                        /**
                         * Constructs a new Route.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a Route.
                         * @implements IRoute
                         * @constructor
                         * @param {google.cloud.datastream.v1.IRoute=} [properties] Properties to set
                         */
                        function Route(properties) {
                            this.labels = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Route name.
                         * @member {string} name
                         * @memberof google.cloud.datastream.v1.Route
                         * @instance
                         */
                        Route.prototype.name = "";
    
                        /**
                         * Route createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.datastream.v1.Route
                         * @instance
                         */
                        Route.prototype.createTime = null;
    
                        /**
                         * Route updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.datastream.v1.Route
                         * @instance
                         */
                        Route.prototype.updateTime = null;
    
                        /**
                         * Route labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.datastream.v1.Route
                         * @instance
                         */
                        Route.prototype.labels = $util.emptyObject;
    
                        /**
                         * Route displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.datastream.v1.Route
                         * @instance
                         */
                        Route.prototype.displayName = "";
    
                        /**
                         * Route destinationAddress.
                         * @member {string} destinationAddress
                         * @memberof google.cloud.datastream.v1.Route
                         * @instance
                         */
                        Route.prototype.destinationAddress = "";
    
                        /**
                         * Route destinationPort.
                         * @member {number} destinationPort
                         * @memberof google.cloud.datastream.v1.Route
                         * @instance
                         */
                        Route.prototype.destinationPort = 0;
    
                        /**
                         * Creates a new Route instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.Route
                         * @static
                         * @param {google.cloud.datastream.v1.IRoute=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.Route} Route instance
                         */
                        Route.create = function create(properties) {
                            return new Route(properties);
                        };
    
                        /**
                         * Encodes the specified Route message. Does not implicitly {@link google.cloud.datastream.v1.Route.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.Route
                         * @static
                         * @param {google.cloud.datastream.v1.IRoute} message Route message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Route.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.displayName);
                            if (message.destinationAddress != null && Object.hasOwnProperty.call(message, "destinationAddress"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.destinationAddress);
                            if (message.destinationPort != null && Object.hasOwnProperty.call(message, "destinationPort"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.destinationPort);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Route message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.Route.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.Route
                         * @static
                         * @param {google.cloud.datastream.v1.IRoute} message Route message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Route.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Route message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.Route
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.Route} Route
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Route.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.Route(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 5: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.destinationAddress = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.destinationPort = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Route message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.Route
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.Route} Route
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Route.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Route message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.Route
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Route.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.destinationAddress != null && message.hasOwnProperty("destinationAddress"))
                                if (!$util.isString(message.destinationAddress))
                                    return "destinationAddress: string expected";
                            if (message.destinationPort != null && message.hasOwnProperty("destinationPort"))
                                if (!$util.isInteger(message.destinationPort))
                                    return "destinationPort: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a Route message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.Route
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.Route} Route
                         */
                        Route.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.Route)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.Route();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.Route.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.Route.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.Route.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.destinationAddress != null)
                                message.destinationAddress = String(object.destinationAddress);
                            if (object.destinationPort != null)
                                message.destinationPort = object.destinationPort | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Route message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.Route
                         * @static
                         * @param {google.cloud.datastream.v1.Route} message Route
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Route.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.labels = {};
                            if (options.defaults) {
                                object.name = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.displayName = "";
                                object.destinationAddress = "";
                                object.destinationPort = 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.destinationAddress != null && message.hasOwnProperty("destinationAddress"))
                                object.destinationAddress = message.destinationAddress;
                            if (message.destinationPort != null && message.hasOwnProperty("destinationPort"))
                                object.destinationPort = message.destinationPort;
                            return object;
                        };
    
                        /**
                         * Converts this Route to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.Route
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Route.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Route
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.Route
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Route.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.Route";
                        };
    
                        return Route;
                    })();
    
                    v1.MysqlSslConfig = (function() {
    
                        /**
                         * Properties of a MysqlSslConfig.
                         * @memberof google.cloud.datastream.v1
                         * @interface IMysqlSslConfig
                         * @property {string|null} [clientKey] MysqlSslConfig clientKey
                         * @property {boolean|null} [clientKeySet] MysqlSslConfig clientKeySet
                         * @property {string|null} [clientCertificate] MysqlSslConfig clientCertificate
                         * @property {boolean|null} [clientCertificateSet] MysqlSslConfig clientCertificateSet
                         * @property {string|null} [caCertificate] MysqlSslConfig caCertificate
                         * @property {boolean|null} [caCertificateSet] MysqlSslConfig caCertificateSet
                         */
    
                        /**
                         * Constructs a new MysqlSslConfig.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a MysqlSslConfig.
                         * @implements IMysqlSslConfig
                         * @constructor
                         * @param {google.cloud.datastream.v1.IMysqlSslConfig=} [properties] Properties to set
                         */
                        function MysqlSslConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MysqlSslConfig clientKey.
                         * @member {string} clientKey
                         * @memberof google.cloud.datastream.v1.MysqlSslConfig
                         * @instance
                         */
                        MysqlSslConfig.prototype.clientKey = "";
    
                        /**
                         * MysqlSslConfig clientKeySet.
                         * @member {boolean} clientKeySet
                         * @memberof google.cloud.datastream.v1.MysqlSslConfig
                         * @instance
                         */
                        MysqlSslConfig.prototype.clientKeySet = false;
    
                        /**
                         * MysqlSslConfig clientCertificate.
                         * @member {string} clientCertificate
                         * @memberof google.cloud.datastream.v1.MysqlSslConfig
                         * @instance
                         */
                        MysqlSslConfig.prototype.clientCertificate = "";
    
                        /**
                         * MysqlSslConfig clientCertificateSet.
                         * @member {boolean} clientCertificateSet
                         * @memberof google.cloud.datastream.v1.MysqlSslConfig
                         * @instance
                         */
                        MysqlSslConfig.prototype.clientCertificateSet = false;
    
                        /**
                         * MysqlSslConfig caCertificate.
                         * @member {string} caCertificate
                         * @memberof google.cloud.datastream.v1.MysqlSslConfig
                         * @instance
                         */
                        MysqlSslConfig.prototype.caCertificate = "";
    
                        /**
                         * MysqlSslConfig caCertificateSet.
                         * @member {boolean} caCertificateSet
                         * @memberof google.cloud.datastream.v1.MysqlSslConfig
                         * @instance
                         */
                        MysqlSslConfig.prototype.caCertificateSet = false;
    
                        /**
                         * Creates a new MysqlSslConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.MysqlSslConfig
                         * @static
                         * @param {google.cloud.datastream.v1.IMysqlSslConfig=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.MysqlSslConfig} MysqlSslConfig instance
                         */
                        MysqlSslConfig.create = function create(properties) {
                            return new MysqlSslConfig(properties);
                        };
    
                        /**
                         * Encodes the specified MysqlSslConfig message. Does not implicitly {@link google.cloud.datastream.v1.MysqlSslConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.MysqlSslConfig
                         * @static
                         * @param {google.cloud.datastream.v1.IMysqlSslConfig} message MysqlSslConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MysqlSslConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.clientKey != null && Object.hasOwnProperty.call(message, "clientKey"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.clientKey);
                            if (message.clientKeySet != null && Object.hasOwnProperty.call(message, "clientKeySet"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.clientKeySet);
                            if (message.clientCertificate != null && Object.hasOwnProperty.call(message, "clientCertificate"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.clientCertificate);
                            if (message.clientCertificateSet != null && Object.hasOwnProperty.call(message, "clientCertificateSet"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.clientCertificateSet);
                            if (message.caCertificate != null && Object.hasOwnProperty.call(message, "caCertificate"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.caCertificate);
                            if (message.caCertificateSet != null && Object.hasOwnProperty.call(message, "caCertificateSet"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.caCertificateSet);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MysqlSslConfig message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.MysqlSslConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.MysqlSslConfig
                         * @static
                         * @param {google.cloud.datastream.v1.IMysqlSslConfig} message MysqlSslConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MysqlSslConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MysqlSslConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.MysqlSslConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.MysqlSslConfig} MysqlSslConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MysqlSslConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.MysqlSslConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.clientKey = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.clientKeySet = reader.bool();
                                        break;
                                    }
                                case 3: {
                                        message.clientCertificate = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.clientCertificateSet = reader.bool();
                                        break;
                                    }
                                case 5: {
                                        message.caCertificate = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.caCertificateSet = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MysqlSslConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.MysqlSslConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.MysqlSslConfig} MysqlSslConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MysqlSslConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MysqlSslConfig message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.MysqlSslConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MysqlSslConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.clientKey != null && message.hasOwnProperty("clientKey"))
                                if (!$util.isString(message.clientKey))
                                    return "clientKey: string expected";
                            if (message.clientKeySet != null && message.hasOwnProperty("clientKeySet"))
                                if (typeof message.clientKeySet !== "boolean")
                                    return "clientKeySet: boolean expected";
                            if (message.clientCertificate != null && message.hasOwnProperty("clientCertificate"))
                                if (!$util.isString(message.clientCertificate))
                                    return "clientCertificate: string expected";
                            if (message.clientCertificateSet != null && message.hasOwnProperty("clientCertificateSet"))
                                if (typeof message.clientCertificateSet !== "boolean")
                                    return "clientCertificateSet: boolean expected";
                            if (message.caCertificate != null && message.hasOwnProperty("caCertificate"))
                                if (!$util.isString(message.caCertificate))
                                    return "caCertificate: string expected";
                            if (message.caCertificateSet != null && message.hasOwnProperty("caCertificateSet"))
                                if (typeof message.caCertificateSet !== "boolean")
                                    return "caCertificateSet: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a MysqlSslConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.MysqlSslConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.MysqlSslConfig} MysqlSslConfig
                         */
                        MysqlSslConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.MysqlSslConfig)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.MysqlSslConfig();
                            if (object.clientKey != null)
                                message.clientKey = String(object.clientKey);
                            if (object.clientKeySet != null)
                                message.clientKeySet = Boolean(object.clientKeySet);
                            if (object.clientCertificate != null)
                                message.clientCertificate = String(object.clientCertificate);
                            if (object.clientCertificateSet != null)
                                message.clientCertificateSet = Boolean(object.clientCertificateSet);
                            if (object.caCertificate != null)
                                message.caCertificate = String(object.caCertificate);
                            if (object.caCertificateSet != null)
                                message.caCertificateSet = Boolean(object.caCertificateSet);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MysqlSslConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.MysqlSslConfig
                         * @static
                         * @param {google.cloud.datastream.v1.MysqlSslConfig} message MysqlSslConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MysqlSslConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.clientKey = "";
                                object.clientKeySet = false;
                                object.clientCertificate = "";
                                object.clientCertificateSet = false;
                                object.caCertificate = "";
                                object.caCertificateSet = false;
                            }
                            if (message.clientKey != null && message.hasOwnProperty("clientKey"))
                                object.clientKey = message.clientKey;
                            if (message.clientKeySet != null && message.hasOwnProperty("clientKeySet"))
                                object.clientKeySet = message.clientKeySet;
                            if (message.clientCertificate != null && message.hasOwnProperty("clientCertificate"))
                                object.clientCertificate = message.clientCertificate;
                            if (message.clientCertificateSet != null && message.hasOwnProperty("clientCertificateSet"))
                                object.clientCertificateSet = message.clientCertificateSet;
                            if (message.caCertificate != null && message.hasOwnProperty("caCertificate"))
                                object.caCertificate = message.caCertificate;
                            if (message.caCertificateSet != null && message.hasOwnProperty("caCertificateSet"))
                                object.caCertificateSet = message.caCertificateSet;
                            return object;
                        };
    
                        /**
                         * Converts this MysqlSslConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.MysqlSslConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MysqlSslConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MysqlSslConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.MysqlSslConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MysqlSslConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.MysqlSslConfig";
                        };
    
                        return MysqlSslConfig;
                    })();
    
                    v1.ConnectionProfile = (function() {
    
                        /**
                         * Properties of a ConnectionProfile.
                         * @memberof google.cloud.datastream.v1
                         * @interface IConnectionProfile
                         * @property {string|null} [name] ConnectionProfile name
                         * @property {google.protobuf.ITimestamp|null} [createTime] ConnectionProfile createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] ConnectionProfile updateTime
                         * @property {Object.<string,string>|null} [labels] ConnectionProfile labels
                         * @property {string|null} [displayName] ConnectionProfile displayName
                         * @property {google.cloud.datastream.v1.IOracleProfile|null} [oracleProfile] ConnectionProfile oracleProfile
                         * @property {google.cloud.datastream.v1.IGcsProfile|null} [gcsProfile] ConnectionProfile gcsProfile
                         * @property {google.cloud.datastream.v1.IMysqlProfile|null} [mysqlProfile] ConnectionProfile mysqlProfile
                         * @property {google.cloud.datastream.v1.IBigQueryProfile|null} [bigqueryProfile] ConnectionProfile bigqueryProfile
                         * @property {google.cloud.datastream.v1.IPostgresqlProfile|null} [postgresqlProfile] ConnectionProfile postgresqlProfile
                         * @property {google.cloud.datastream.v1.IStaticServiceIpConnectivity|null} [staticServiceIpConnectivity] ConnectionProfile staticServiceIpConnectivity
                         * @property {google.cloud.datastream.v1.IForwardSshTunnelConnectivity|null} [forwardSshConnectivity] ConnectionProfile forwardSshConnectivity
                         * @property {google.cloud.datastream.v1.IPrivateConnectivity|null} [privateConnectivity] ConnectionProfile privateConnectivity
                         */
    
                        /**
                         * Constructs a new ConnectionProfile.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a ConnectionProfile.
                         * @implements IConnectionProfile
                         * @constructor
                         * @param {google.cloud.datastream.v1.IConnectionProfile=} [properties] Properties to set
                         */
                        function ConnectionProfile(properties) {
                            this.labels = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ConnectionProfile name.
                         * @member {string} name
                         * @memberof google.cloud.datastream.v1.ConnectionProfile
                         * @instance
                         */
                        ConnectionProfile.prototype.name = "";
    
                        /**
                         * ConnectionProfile createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.datastream.v1.ConnectionProfile
                         * @instance
                         */
                        ConnectionProfile.prototype.createTime = null;
    
                        /**
                         * ConnectionProfile updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.datastream.v1.ConnectionProfile
                         * @instance
                         */
                        ConnectionProfile.prototype.updateTime = null;
    
                        /**
                         * ConnectionProfile labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.datastream.v1.ConnectionProfile
                         * @instance
                         */
                        ConnectionProfile.prototype.labels = $util.emptyObject;
    
                        /**
                         * ConnectionProfile displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.datastream.v1.ConnectionProfile
                         * @instance
                         */
                        ConnectionProfile.prototype.displayName = "";
    
                        /**
                         * ConnectionProfile oracleProfile.
                         * @member {google.cloud.datastream.v1.IOracleProfile|null|undefined} oracleProfile
                         * @memberof google.cloud.datastream.v1.ConnectionProfile
                         * @instance
                         */
                        ConnectionProfile.prototype.oracleProfile = null;
    
                        /**
                         * ConnectionProfile gcsProfile.
                         * @member {google.cloud.datastream.v1.IGcsProfile|null|undefined} gcsProfile
                         * @memberof google.cloud.datastream.v1.ConnectionProfile
                         * @instance
                         */
                        ConnectionProfile.prototype.gcsProfile = null;
    
                        /**
                         * ConnectionProfile mysqlProfile.
                         * @member {google.cloud.datastream.v1.IMysqlProfile|null|undefined} mysqlProfile
                         * @memberof google.cloud.datastream.v1.ConnectionProfile
                         * @instance
                         */
                        ConnectionProfile.prototype.mysqlProfile = null;
    
                        /**
                         * ConnectionProfile bigqueryProfile.
                         * @member {google.cloud.datastream.v1.IBigQueryProfile|null|undefined} bigqueryProfile
                         * @memberof google.cloud.datastream.v1.ConnectionProfile
                         * @instance
                         */
                        ConnectionProfile.prototype.bigqueryProfile = null;
    
                        /**
                         * ConnectionProfile postgresqlProfile.
                         * @member {google.cloud.datastream.v1.IPostgresqlProfile|null|undefined} postgresqlProfile
                         * @memberof google.cloud.datastream.v1.ConnectionProfile
                         * @instance
                         */
                        ConnectionProfile.prototype.postgresqlProfile = null;
    
                        /**
                         * ConnectionProfile staticServiceIpConnectivity.
                         * @member {google.cloud.datastream.v1.IStaticServiceIpConnectivity|null|undefined} staticServiceIpConnectivity
                         * @memberof google.cloud.datastream.v1.ConnectionProfile
                         * @instance
                         */
                        ConnectionProfile.prototype.staticServiceIpConnectivity = null;
    
                        /**
                         * ConnectionProfile forwardSshConnectivity.
                         * @member {google.cloud.datastream.v1.IForwardSshTunnelConnectivity|null|undefined} forwardSshConnectivity
                         * @memberof google.cloud.datastream.v1.ConnectionProfile
                         * @instance
                         */
                        ConnectionProfile.prototype.forwardSshConnectivity = null;
    
                        /**
                         * ConnectionProfile privateConnectivity.
                         * @member {google.cloud.datastream.v1.IPrivateConnectivity|null|undefined} privateConnectivity
                         * @memberof google.cloud.datastream.v1.ConnectionProfile
                         * @instance
                         */
                        ConnectionProfile.prototype.privateConnectivity = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * ConnectionProfile profile.
                         * @member {"oracleProfile"|"gcsProfile"|"mysqlProfile"|"bigqueryProfile"|"postgresqlProfile"|undefined} profile
                         * @memberof google.cloud.datastream.v1.ConnectionProfile
                         * @instance
                         */
                        Object.defineProperty(ConnectionProfile.prototype, "profile", {
                            get: $util.oneOfGetter($oneOfFields = ["oracleProfile", "gcsProfile", "mysqlProfile", "bigqueryProfile", "postgresqlProfile"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * ConnectionProfile connectivity.
                         * @member {"staticServiceIpConnectivity"|"forwardSshConnectivity"|"privateConnectivity"|undefined} connectivity
                         * @memberof google.cloud.datastream.v1.ConnectionProfile
                         * @instance
                         */
                        Object.defineProperty(ConnectionProfile.prototype, "connectivity", {
                            get: $util.oneOfGetter($oneOfFields = ["staticServiceIpConnectivity", "forwardSshConnectivity", "privateConnectivity"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new ConnectionProfile instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.ConnectionProfile
                         * @static
                         * @param {google.cloud.datastream.v1.IConnectionProfile=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.ConnectionProfile} ConnectionProfile instance
                         */
                        ConnectionProfile.create = function create(properties) {
                            return new ConnectionProfile(properties);
                        };
    
                        /**
                         * Encodes the specified ConnectionProfile message. Does not implicitly {@link google.cloud.datastream.v1.ConnectionProfile.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.ConnectionProfile
                         * @static
                         * @param {google.cloud.datastream.v1.IConnectionProfile} message ConnectionProfile message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConnectionProfile.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.displayName);
                            if (message.oracleProfile != null && Object.hasOwnProperty.call(message, "oracleProfile"))
                                $root.google.cloud.datastream.v1.OracleProfile.encode(message.oracleProfile, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            if (message.gcsProfile != null && Object.hasOwnProperty.call(message, "gcsProfile"))
                                $root.google.cloud.datastream.v1.GcsProfile.encode(message.gcsProfile, writer.uint32(/* id 101, wireType 2 =*/810).fork()).ldelim();
                            if (message.mysqlProfile != null && Object.hasOwnProperty.call(message, "mysqlProfile"))
                                $root.google.cloud.datastream.v1.MysqlProfile.encode(message.mysqlProfile, writer.uint32(/* id 102, wireType 2 =*/818).fork()).ldelim();
                            if (message.bigqueryProfile != null && Object.hasOwnProperty.call(message, "bigqueryProfile"))
                                $root.google.cloud.datastream.v1.BigQueryProfile.encode(message.bigqueryProfile, writer.uint32(/* id 103, wireType 2 =*/826).fork()).ldelim();
                            if (message.postgresqlProfile != null && Object.hasOwnProperty.call(message, "postgresqlProfile"))
                                $root.google.cloud.datastream.v1.PostgresqlProfile.encode(message.postgresqlProfile, writer.uint32(/* id 104, wireType 2 =*/834).fork()).ldelim();
                            if (message.staticServiceIpConnectivity != null && Object.hasOwnProperty.call(message, "staticServiceIpConnectivity"))
                                $root.google.cloud.datastream.v1.StaticServiceIpConnectivity.encode(message.staticServiceIpConnectivity, writer.uint32(/* id 200, wireType 2 =*/1602).fork()).ldelim();
                            if (message.forwardSshConnectivity != null && Object.hasOwnProperty.call(message, "forwardSshConnectivity"))
                                $root.google.cloud.datastream.v1.ForwardSshTunnelConnectivity.encode(message.forwardSshConnectivity, writer.uint32(/* id 201, wireType 2 =*/1610).fork()).ldelim();
                            if (message.privateConnectivity != null && Object.hasOwnProperty.call(message, "privateConnectivity"))
                                $root.google.cloud.datastream.v1.PrivateConnectivity.encode(message.privateConnectivity, writer.uint32(/* id 202, wireType 2 =*/1618).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ConnectionProfile message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.ConnectionProfile.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.ConnectionProfile
                         * @static
                         * @param {google.cloud.datastream.v1.IConnectionProfile} message ConnectionProfile message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConnectionProfile.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ConnectionProfile message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.ConnectionProfile
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.ConnectionProfile} ConnectionProfile
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConnectionProfile.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.ConnectionProfile(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 5: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 100: {
                                        message.oracleProfile = $root.google.cloud.datastream.v1.OracleProfile.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 101: {
                                        message.gcsProfile = $root.google.cloud.datastream.v1.GcsProfile.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 102: {
                                        message.mysqlProfile = $root.google.cloud.datastream.v1.MysqlProfile.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 103: {
                                        message.bigqueryProfile = $root.google.cloud.datastream.v1.BigQueryProfile.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 104: {
                                        message.postgresqlProfile = $root.google.cloud.datastream.v1.PostgresqlProfile.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 200: {
                                        message.staticServiceIpConnectivity = $root.google.cloud.datastream.v1.StaticServiceIpConnectivity.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 201: {
                                        message.forwardSshConnectivity = $root.google.cloud.datastream.v1.ForwardSshTunnelConnectivity.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 202: {
                                        message.privateConnectivity = $root.google.cloud.datastream.v1.PrivateConnectivity.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ConnectionProfile message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.ConnectionProfile
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.ConnectionProfile} ConnectionProfile
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConnectionProfile.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ConnectionProfile message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.ConnectionProfile
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ConnectionProfile.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.oracleProfile != null && message.hasOwnProperty("oracleProfile")) {
                                properties.profile = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1.OracleProfile.verify(message.oracleProfile);
                                    if (error)
                                        return "oracleProfile." + error;
                                }
                            }
                            if (message.gcsProfile != null && message.hasOwnProperty("gcsProfile")) {
                                if (properties.profile === 1)
                                    return "profile: multiple values";
                                properties.profile = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1.GcsProfile.verify(message.gcsProfile);
                                    if (error)
                                        return "gcsProfile." + error;
                                }
                            }
                            if (message.mysqlProfile != null && message.hasOwnProperty("mysqlProfile")) {
                                if (properties.profile === 1)
                                    return "profile: multiple values";
                                properties.profile = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1.MysqlProfile.verify(message.mysqlProfile);
                                    if (error)
                                        return "mysqlProfile." + error;
                                }
                            }
                            if (message.bigqueryProfile != null && message.hasOwnProperty("bigqueryProfile")) {
                                if (properties.profile === 1)
                                    return "profile: multiple values";
                                properties.profile = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1.BigQueryProfile.verify(message.bigqueryProfile);
                                    if (error)
                                        return "bigqueryProfile." + error;
                                }
                            }
                            if (message.postgresqlProfile != null && message.hasOwnProperty("postgresqlProfile")) {
                                if (properties.profile === 1)
                                    return "profile: multiple values";
                                properties.profile = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1.PostgresqlProfile.verify(message.postgresqlProfile);
                                    if (error)
                                        return "postgresqlProfile." + error;
                                }
                            }
                            if (message.staticServiceIpConnectivity != null && message.hasOwnProperty("staticServiceIpConnectivity")) {
                                properties.connectivity = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1.StaticServiceIpConnectivity.verify(message.staticServiceIpConnectivity);
                                    if (error)
                                        return "staticServiceIpConnectivity." + error;
                                }
                            }
                            if (message.forwardSshConnectivity != null && message.hasOwnProperty("forwardSshConnectivity")) {
                                if (properties.connectivity === 1)
                                    return "connectivity: multiple values";
                                properties.connectivity = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1.ForwardSshTunnelConnectivity.verify(message.forwardSshConnectivity);
                                    if (error)
                                        return "forwardSshConnectivity." + error;
                                }
                            }
                            if (message.privateConnectivity != null && message.hasOwnProperty("privateConnectivity")) {
                                if (properties.connectivity === 1)
                                    return "connectivity: multiple values";
                                properties.connectivity = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1.PrivateConnectivity.verify(message.privateConnectivity);
                                    if (error)
                                        return "privateConnectivity." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ConnectionProfile message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.ConnectionProfile
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.ConnectionProfile} ConnectionProfile
                         */
                        ConnectionProfile.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.ConnectionProfile)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.ConnectionProfile();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.ConnectionProfile.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.ConnectionProfile.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.ConnectionProfile.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.oracleProfile != null) {
                                if (typeof object.oracleProfile !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.ConnectionProfile.oracleProfile: object expected");
                                message.oracleProfile = $root.google.cloud.datastream.v1.OracleProfile.fromObject(object.oracleProfile);
                            }
                            if (object.gcsProfile != null) {
                                if (typeof object.gcsProfile !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.ConnectionProfile.gcsProfile: object expected");
                                message.gcsProfile = $root.google.cloud.datastream.v1.GcsProfile.fromObject(object.gcsProfile);
                            }
                            if (object.mysqlProfile != null) {
                                if (typeof object.mysqlProfile !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.ConnectionProfile.mysqlProfile: object expected");
                                message.mysqlProfile = $root.google.cloud.datastream.v1.MysqlProfile.fromObject(object.mysqlProfile);
                            }
                            if (object.bigqueryProfile != null) {
                                if (typeof object.bigqueryProfile !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.ConnectionProfile.bigqueryProfile: object expected");
                                message.bigqueryProfile = $root.google.cloud.datastream.v1.BigQueryProfile.fromObject(object.bigqueryProfile);
                            }
                            if (object.postgresqlProfile != null) {
                                if (typeof object.postgresqlProfile !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.ConnectionProfile.postgresqlProfile: object expected");
                                message.postgresqlProfile = $root.google.cloud.datastream.v1.PostgresqlProfile.fromObject(object.postgresqlProfile);
                            }
                            if (object.staticServiceIpConnectivity != null) {
                                if (typeof object.staticServiceIpConnectivity !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.ConnectionProfile.staticServiceIpConnectivity: object expected");
                                message.staticServiceIpConnectivity = $root.google.cloud.datastream.v1.StaticServiceIpConnectivity.fromObject(object.staticServiceIpConnectivity);
                            }
                            if (object.forwardSshConnectivity != null) {
                                if (typeof object.forwardSshConnectivity !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.ConnectionProfile.forwardSshConnectivity: object expected");
                                message.forwardSshConnectivity = $root.google.cloud.datastream.v1.ForwardSshTunnelConnectivity.fromObject(object.forwardSshConnectivity);
                            }
                            if (object.privateConnectivity != null) {
                                if (typeof object.privateConnectivity !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.ConnectionProfile.privateConnectivity: object expected");
                                message.privateConnectivity = $root.google.cloud.datastream.v1.PrivateConnectivity.fromObject(object.privateConnectivity);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ConnectionProfile message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.ConnectionProfile
                         * @static
                         * @param {google.cloud.datastream.v1.ConnectionProfile} message ConnectionProfile
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ConnectionProfile.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.labels = {};
                            if (options.defaults) {
                                object.name = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.displayName = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.oracleProfile != null && message.hasOwnProperty("oracleProfile")) {
                                object.oracleProfile = $root.google.cloud.datastream.v1.OracleProfile.toObject(message.oracleProfile, options);
                                if (options.oneofs)
                                    object.profile = "oracleProfile";
                            }
                            if (message.gcsProfile != null && message.hasOwnProperty("gcsProfile")) {
                                object.gcsProfile = $root.google.cloud.datastream.v1.GcsProfile.toObject(message.gcsProfile, options);
                                if (options.oneofs)
                                    object.profile = "gcsProfile";
                            }
                            if (message.mysqlProfile != null && message.hasOwnProperty("mysqlProfile")) {
                                object.mysqlProfile = $root.google.cloud.datastream.v1.MysqlProfile.toObject(message.mysqlProfile, options);
                                if (options.oneofs)
                                    object.profile = "mysqlProfile";
                            }
                            if (message.bigqueryProfile != null && message.hasOwnProperty("bigqueryProfile")) {
                                object.bigqueryProfile = $root.google.cloud.datastream.v1.BigQueryProfile.toObject(message.bigqueryProfile, options);
                                if (options.oneofs)
                                    object.profile = "bigqueryProfile";
                            }
                            if (message.postgresqlProfile != null && message.hasOwnProperty("postgresqlProfile")) {
                                object.postgresqlProfile = $root.google.cloud.datastream.v1.PostgresqlProfile.toObject(message.postgresqlProfile, options);
                                if (options.oneofs)
                                    object.profile = "postgresqlProfile";
                            }
                            if (message.staticServiceIpConnectivity != null && message.hasOwnProperty("staticServiceIpConnectivity")) {
                                object.staticServiceIpConnectivity = $root.google.cloud.datastream.v1.StaticServiceIpConnectivity.toObject(message.staticServiceIpConnectivity, options);
                                if (options.oneofs)
                                    object.connectivity = "staticServiceIpConnectivity";
                            }
                            if (message.forwardSshConnectivity != null && message.hasOwnProperty("forwardSshConnectivity")) {
                                object.forwardSshConnectivity = $root.google.cloud.datastream.v1.ForwardSshTunnelConnectivity.toObject(message.forwardSshConnectivity, options);
                                if (options.oneofs)
                                    object.connectivity = "forwardSshConnectivity";
                            }
                            if (message.privateConnectivity != null && message.hasOwnProperty("privateConnectivity")) {
                                object.privateConnectivity = $root.google.cloud.datastream.v1.PrivateConnectivity.toObject(message.privateConnectivity, options);
                                if (options.oneofs)
                                    object.connectivity = "privateConnectivity";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ConnectionProfile to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.ConnectionProfile
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ConnectionProfile.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ConnectionProfile
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.ConnectionProfile
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ConnectionProfile.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.ConnectionProfile";
                        };
    
                        return ConnectionProfile;
                    })();
    
                    v1.OracleColumn = (function() {
    
                        /**
                         * Properties of an OracleColumn.
                         * @memberof google.cloud.datastream.v1
                         * @interface IOracleColumn
                         * @property {string|null} [column] OracleColumn column
                         * @property {string|null} [dataType] OracleColumn dataType
                         * @property {number|null} [length] OracleColumn length
                         * @property {number|null} [precision] OracleColumn precision
                         * @property {number|null} [scale] OracleColumn scale
                         * @property {string|null} [encoding] OracleColumn encoding
                         * @property {boolean|null} [primaryKey] OracleColumn primaryKey
                         * @property {boolean|null} [nullable] OracleColumn nullable
                         * @property {number|null} [ordinalPosition] OracleColumn ordinalPosition
                         */
    
                        /**
                         * Constructs a new OracleColumn.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents an OracleColumn.
                         * @implements IOracleColumn
                         * @constructor
                         * @param {google.cloud.datastream.v1.IOracleColumn=} [properties] Properties to set
                         */
                        function OracleColumn(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OracleColumn column.
                         * @member {string} column
                         * @memberof google.cloud.datastream.v1.OracleColumn
                         * @instance
                         */
                        OracleColumn.prototype.column = "";
    
                        /**
                         * OracleColumn dataType.
                         * @member {string} dataType
                         * @memberof google.cloud.datastream.v1.OracleColumn
                         * @instance
                         */
                        OracleColumn.prototype.dataType = "";
    
                        /**
                         * OracleColumn length.
                         * @member {number} length
                         * @memberof google.cloud.datastream.v1.OracleColumn
                         * @instance
                         */
                        OracleColumn.prototype.length = 0;
    
                        /**
                         * OracleColumn precision.
                         * @member {number} precision
                         * @memberof google.cloud.datastream.v1.OracleColumn
                         * @instance
                         */
                        OracleColumn.prototype.precision = 0;
    
                        /**
                         * OracleColumn scale.
                         * @member {number} scale
                         * @memberof google.cloud.datastream.v1.OracleColumn
                         * @instance
                         */
                        OracleColumn.prototype.scale = 0;
    
                        /**
                         * OracleColumn encoding.
                         * @member {string} encoding
                         * @memberof google.cloud.datastream.v1.OracleColumn
                         * @instance
                         */
                        OracleColumn.prototype.encoding = "";
    
                        /**
                         * OracleColumn primaryKey.
                         * @member {boolean} primaryKey
                         * @memberof google.cloud.datastream.v1.OracleColumn
                         * @instance
                         */
                        OracleColumn.prototype.primaryKey = false;
    
                        /**
                         * OracleColumn nullable.
                         * @member {boolean} nullable
                         * @memberof google.cloud.datastream.v1.OracleColumn
                         * @instance
                         */
                        OracleColumn.prototype.nullable = false;
    
                        /**
                         * OracleColumn ordinalPosition.
                         * @member {number} ordinalPosition
                         * @memberof google.cloud.datastream.v1.OracleColumn
                         * @instance
                         */
                        OracleColumn.prototype.ordinalPosition = 0;
    
                        /**
                         * Creates a new OracleColumn instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.OracleColumn
                         * @static
                         * @param {google.cloud.datastream.v1.IOracleColumn=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.OracleColumn} OracleColumn instance
                         */
                        OracleColumn.create = function create(properties) {
                            return new OracleColumn(properties);
                        };
    
                        /**
                         * Encodes the specified OracleColumn message. Does not implicitly {@link google.cloud.datastream.v1.OracleColumn.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.OracleColumn
                         * @static
                         * @param {google.cloud.datastream.v1.IOracleColumn} message OracleColumn message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OracleColumn.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.column != null && Object.hasOwnProperty.call(message, "column"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.column);
                            if (message.dataType != null && Object.hasOwnProperty.call(message, "dataType"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.dataType);
                            if (message.length != null && Object.hasOwnProperty.call(message, "length"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.length);
                            if (message.precision != null && Object.hasOwnProperty.call(message, "precision"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.precision);
                            if (message.scale != null && Object.hasOwnProperty.call(message, "scale"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.scale);
                            if (message.encoding != null && Object.hasOwnProperty.call(message, "encoding"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.encoding);
                            if (message.primaryKey != null && Object.hasOwnProperty.call(message, "primaryKey"))
                                writer.uint32(/* id 7, wireType 0 =*/56).bool(message.primaryKey);
                            if (message.nullable != null && Object.hasOwnProperty.call(message, "nullable"))
                                writer.uint32(/* id 8, wireType 0 =*/64).bool(message.nullable);
                            if (message.ordinalPosition != null && Object.hasOwnProperty.call(message, "ordinalPosition"))
                                writer.uint32(/* id 9, wireType 0 =*/72).int32(message.ordinalPosition);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OracleColumn message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.OracleColumn.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.OracleColumn
                         * @static
                         * @param {google.cloud.datastream.v1.IOracleColumn} message OracleColumn message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OracleColumn.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OracleColumn message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.OracleColumn
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.OracleColumn} OracleColumn
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OracleColumn.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.OracleColumn();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.column = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.dataType = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.length = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.precision = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        message.scale = reader.int32();
                                        break;
                                    }
                                case 6: {
                                        message.encoding = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.primaryKey = reader.bool();
                                        break;
                                    }
                                case 8: {
                                        message.nullable = reader.bool();
                                        break;
                                    }
                                case 9: {
                                        message.ordinalPosition = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OracleColumn message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.OracleColumn
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.OracleColumn} OracleColumn
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OracleColumn.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OracleColumn message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.OracleColumn
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OracleColumn.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.column != null && message.hasOwnProperty("column"))
                                if (!$util.isString(message.column))
                                    return "column: string expected";
                            if (message.dataType != null && message.hasOwnProperty("dataType"))
                                if (!$util.isString(message.dataType))
                                    return "dataType: string expected";
                            if (message.length != null && message.hasOwnProperty("length"))
                                if (!$util.isInteger(message.length))
                                    return "length: integer expected";
                            if (message.precision != null && message.hasOwnProperty("precision"))
                                if (!$util.isInteger(message.precision))
                                    return "precision: integer expected";
                            if (message.scale != null && message.hasOwnProperty("scale"))
                                if (!$util.isInteger(message.scale))
                                    return "scale: integer expected";
                            if (message.encoding != null && message.hasOwnProperty("encoding"))
                                if (!$util.isString(message.encoding))
                                    return "encoding: string expected";
                            if (message.primaryKey != null && message.hasOwnProperty("primaryKey"))
                                if (typeof message.primaryKey !== "boolean")
                                    return "primaryKey: boolean expected";
                            if (message.nullable != null && message.hasOwnProperty("nullable"))
                                if (typeof message.nullable !== "boolean")
                                    return "nullable: boolean expected";
                            if (message.ordinalPosition != null && message.hasOwnProperty("ordinalPosition"))
                                if (!$util.isInteger(message.ordinalPosition))
                                    return "ordinalPosition: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates an OracleColumn message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.OracleColumn
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.OracleColumn} OracleColumn
                         */
                        OracleColumn.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.OracleColumn)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.OracleColumn();
                            if (object.column != null)
                                message.column = String(object.column);
                            if (object.dataType != null)
                                message.dataType = String(object.dataType);
                            if (object.length != null)
                                message.length = object.length | 0;
                            if (object.precision != null)
                                message.precision = object.precision | 0;
                            if (object.scale != null)
                                message.scale = object.scale | 0;
                            if (object.encoding != null)
                                message.encoding = String(object.encoding);
                            if (object.primaryKey != null)
                                message.primaryKey = Boolean(object.primaryKey);
                            if (object.nullable != null)
                                message.nullable = Boolean(object.nullable);
                            if (object.ordinalPosition != null)
                                message.ordinalPosition = object.ordinalPosition | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OracleColumn message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.OracleColumn
                         * @static
                         * @param {google.cloud.datastream.v1.OracleColumn} message OracleColumn
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OracleColumn.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.column = "";
                                object.dataType = "";
                                object.length = 0;
                                object.precision = 0;
                                object.scale = 0;
                                object.encoding = "";
                                object.primaryKey = false;
                                object.nullable = false;
                                object.ordinalPosition = 0;
                            }
                            if (message.column != null && message.hasOwnProperty("column"))
                                object.column = message.column;
                            if (message.dataType != null && message.hasOwnProperty("dataType"))
                                object.dataType = message.dataType;
                            if (message.length != null && message.hasOwnProperty("length"))
                                object.length = message.length;
                            if (message.precision != null && message.hasOwnProperty("precision"))
                                object.precision = message.precision;
                            if (message.scale != null && message.hasOwnProperty("scale"))
                                object.scale = message.scale;
                            if (message.encoding != null && message.hasOwnProperty("encoding"))
                                object.encoding = message.encoding;
                            if (message.primaryKey != null && message.hasOwnProperty("primaryKey"))
                                object.primaryKey = message.primaryKey;
                            if (message.nullable != null && message.hasOwnProperty("nullable"))
                                object.nullable = message.nullable;
                            if (message.ordinalPosition != null && message.hasOwnProperty("ordinalPosition"))
                                object.ordinalPosition = message.ordinalPosition;
                            return object;
                        };
    
                        /**
                         * Converts this OracleColumn to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.OracleColumn
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OracleColumn.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OracleColumn
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.OracleColumn
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OracleColumn.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.OracleColumn";
                        };
    
                        return OracleColumn;
                    })();
    
                    v1.OracleTable = (function() {
    
                        /**
                         * Properties of an OracleTable.
                         * @memberof google.cloud.datastream.v1
                         * @interface IOracleTable
                         * @property {string|null} [table] OracleTable table
                         * @property {Array.<google.cloud.datastream.v1.IOracleColumn>|null} [oracleColumns] OracleTable oracleColumns
                         */
    
                        /**
                         * Constructs a new OracleTable.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents an OracleTable.
                         * @implements IOracleTable
                         * @constructor
                         * @param {google.cloud.datastream.v1.IOracleTable=} [properties] Properties to set
                         */
                        function OracleTable(properties) {
                            this.oracleColumns = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OracleTable table.
                         * @member {string} table
                         * @memberof google.cloud.datastream.v1.OracleTable
                         * @instance
                         */
                        OracleTable.prototype.table = "";
    
                        /**
                         * OracleTable oracleColumns.
                         * @member {Array.<google.cloud.datastream.v1.IOracleColumn>} oracleColumns
                         * @memberof google.cloud.datastream.v1.OracleTable
                         * @instance
                         */
                        OracleTable.prototype.oracleColumns = $util.emptyArray;
    
                        /**
                         * Creates a new OracleTable instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.OracleTable
                         * @static
                         * @param {google.cloud.datastream.v1.IOracleTable=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.OracleTable} OracleTable instance
                         */
                        OracleTable.create = function create(properties) {
                            return new OracleTable(properties);
                        };
    
                        /**
                         * Encodes the specified OracleTable message. Does not implicitly {@link google.cloud.datastream.v1.OracleTable.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.OracleTable
                         * @static
                         * @param {google.cloud.datastream.v1.IOracleTable} message OracleTable message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OracleTable.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.table != null && Object.hasOwnProperty.call(message, "table"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.table);
                            if (message.oracleColumns != null && message.oracleColumns.length)
                                for (var i = 0; i < message.oracleColumns.length; ++i)
                                    $root.google.cloud.datastream.v1.OracleColumn.encode(message.oracleColumns[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OracleTable message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.OracleTable.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.OracleTable
                         * @static
                         * @param {google.cloud.datastream.v1.IOracleTable} message OracleTable message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OracleTable.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OracleTable message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.OracleTable
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.OracleTable} OracleTable
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OracleTable.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.OracleTable();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.table = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.oracleColumns && message.oracleColumns.length))
                                            message.oracleColumns = [];
                                        message.oracleColumns.push($root.google.cloud.datastream.v1.OracleColumn.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OracleTable message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.OracleTable
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.OracleTable} OracleTable
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OracleTable.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OracleTable message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.OracleTable
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OracleTable.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.table != null && message.hasOwnProperty("table"))
                                if (!$util.isString(message.table))
                                    return "table: string expected";
                            if (message.oracleColumns != null && message.hasOwnProperty("oracleColumns")) {
                                if (!Array.isArray(message.oracleColumns))
                                    return "oracleColumns: array expected";
                                for (var i = 0; i < message.oracleColumns.length; ++i) {
                                    var error = $root.google.cloud.datastream.v1.OracleColumn.verify(message.oracleColumns[i]);
                                    if (error)
                                        return "oracleColumns." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates an OracleTable message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.OracleTable
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.OracleTable} OracleTable
                         */
                        OracleTable.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.OracleTable)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.OracleTable();
                            if (object.table != null)
                                message.table = String(object.table);
                            if (object.oracleColumns) {
                                if (!Array.isArray(object.oracleColumns))
                                    throw TypeError(".google.cloud.datastream.v1.OracleTable.oracleColumns: array expected");
                                message.oracleColumns = [];
                                for (var i = 0; i < object.oracleColumns.length; ++i) {
                                    if (typeof object.oracleColumns[i] !== "object")
                                        throw TypeError(".google.cloud.datastream.v1.OracleTable.oracleColumns: object expected");
                                    message.oracleColumns[i] = $root.google.cloud.datastream.v1.OracleColumn.fromObject(object.oracleColumns[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OracleTable message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.OracleTable
                         * @static
                         * @param {google.cloud.datastream.v1.OracleTable} message OracleTable
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OracleTable.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.oracleColumns = [];
                            if (options.defaults)
                                object.table = "";
                            if (message.table != null && message.hasOwnProperty("table"))
                                object.table = message.table;
                            if (message.oracleColumns && message.oracleColumns.length) {
                                object.oracleColumns = [];
                                for (var j = 0; j < message.oracleColumns.length; ++j)
                                    object.oracleColumns[j] = $root.google.cloud.datastream.v1.OracleColumn.toObject(message.oracleColumns[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this OracleTable to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.OracleTable
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OracleTable.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OracleTable
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.OracleTable
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OracleTable.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.OracleTable";
                        };
    
                        return OracleTable;
                    })();
    
                    v1.OracleSchema = (function() {
    
                        /**
                         * Properties of an OracleSchema.
                         * @memberof google.cloud.datastream.v1
                         * @interface IOracleSchema
                         * @property {string|null} [schema] OracleSchema schema
                         * @property {Array.<google.cloud.datastream.v1.IOracleTable>|null} [oracleTables] OracleSchema oracleTables
                         */
    
                        /**
                         * Constructs a new OracleSchema.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents an OracleSchema.
                         * @implements IOracleSchema
                         * @constructor
                         * @param {google.cloud.datastream.v1.IOracleSchema=} [properties] Properties to set
                         */
                        function OracleSchema(properties) {
                            this.oracleTables = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OracleSchema schema.
                         * @member {string} schema
                         * @memberof google.cloud.datastream.v1.OracleSchema
                         * @instance
                         */
                        OracleSchema.prototype.schema = "";
    
                        /**
                         * OracleSchema oracleTables.
                         * @member {Array.<google.cloud.datastream.v1.IOracleTable>} oracleTables
                         * @memberof google.cloud.datastream.v1.OracleSchema
                         * @instance
                         */
                        OracleSchema.prototype.oracleTables = $util.emptyArray;
    
                        /**
                         * Creates a new OracleSchema instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.OracleSchema
                         * @static
                         * @param {google.cloud.datastream.v1.IOracleSchema=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.OracleSchema} OracleSchema instance
                         */
                        OracleSchema.create = function create(properties) {
                            return new OracleSchema(properties);
                        };
    
                        /**
                         * Encodes the specified OracleSchema message. Does not implicitly {@link google.cloud.datastream.v1.OracleSchema.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.OracleSchema
                         * @static
                         * @param {google.cloud.datastream.v1.IOracleSchema} message OracleSchema message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OracleSchema.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.schema != null && Object.hasOwnProperty.call(message, "schema"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.schema);
                            if (message.oracleTables != null && message.oracleTables.length)
                                for (var i = 0; i < message.oracleTables.length; ++i)
                                    $root.google.cloud.datastream.v1.OracleTable.encode(message.oracleTables[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OracleSchema message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.OracleSchema.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.OracleSchema
                         * @static
                         * @param {google.cloud.datastream.v1.IOracleSchema} message OracleSchema message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OracleSchema.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OracleSchema message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.OracleSchema
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.OracleSchema} OracleSchema
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OracleSchema.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.OracleSchema();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.schema = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.oracleTables && message.oracleTables.length))
                                            message.oracleTables = [];
                                        message.oracleTables.push($root.google.cloud.datastream.v1.OracleTable.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OracleSchema message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.OracleSchema
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.OracleSchema} OracleSchema
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OracleSchema.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OracleSchema message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.OracleSchema
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OracleSchema.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.schema != null && message.hasOwnProperty("schema"))
                                if (!$util.isString(message.schema))
                                    return "schema: string expected";
                            if (message.oracleTables != null && message.hasOwnProperty("oracleTables")) {
                                if (!Array.isArray(message.oracleTables))
                                    return "oracleTables: array expected";
                                for (var i = 0; i < message.oracleTables.length; ++i) {
                                    var error = $root.google.cloud.datastream.v1.OracleTable.verify(message.oracleTables[i]);
                                    if (error)
                                        return "oracleTables." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates an OracleSchema message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.OracleSchema
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.OracleSchema} OracleSchema
                         */
                        OracleSchema.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.OracleSchema)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.OracleSchema();
                            if (object.schema != null)
                                message.schema = String(object.schema);
                            if (object.oracleTables) {
                                if (!Array.isArray(object.oracleTables))
                                    throw TypeError(".google.cloud.datastream.v1.OracleSchema.oracleTables: array expected");
                                message.oracleTables = [];
                                for (var i = 0; i < object.oracleTables.length; ++i) {
                                    if (typeof object.oracleTables[i] !== "object")
                                        throw TypeError(".google.cloud.datastream.v1.OracleSchema.oracleTables: object expected");
                                    message.oracleTables[i] = $root.google.cloud.datastream.v1.OracleTable.fromObject(object.oracleTables[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OracleSchema message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.OracleSchema
                         * @static
                         * @param {google.cloud.datastream.v1.OracleSchema} message OracleSchema
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OracleSchema.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.oracleTables = [];
                            if (options.defaults)
                                object.schema = "";
                            if (message.schema != null && message.hasOwnProperty("schema"))
                                object.schema = message.schema;
                            if (message.oracleTables && message.oracleTables.length) {
                                object.oracleTables = [];
                                for (var j = 0; j < message.oracleTables.length; ++j)
                                    object.oracleTables[j] = $root.google.cloud.datastream.v1.OracleTable.toObject(message.oracleTables[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this OracleSchema to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.OracleSchema
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OracleSchema.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OracleSchema
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.OracleSchema
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OracleSchema.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.OracleSchema";
                        };
    
                        return OracleSchema;
                    })();
    
                    v1.OracleRdbms = (function() {
    
                        /**
                         * Properties of an OracleRdbms.
                         * @memberof google.cloud.datastream.v1
                         * @interface IOracleRdbms
                         * @property {Array.<google.cloud.datastream.v1.IOracleSchema>|null} [oracleSchemas] OracleRdbms oracleSchemas
                         */
    
                        /**
                         * Constructs a new OracleRdbms.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents an OracleRdbms.
                         * @implements IOracleRdbms
                         * @constructor
                         * @param {google.cloud.datastream.v1.IOracleRdbms=} [properties] Properties to set
                         */
                        function OracleRdbms(properties) {
                            this.oracleSchemas = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OracleRdbms oracleSchemas.
                         * @member {Array.<google.cloud.datastream.v1.IOracleSchema>} oracleSchemas
                         * @memberof google.cloud.datastream.v1.OracleRdbms
                         * @instance
                         */
                        OracleRdbms.prototype.oracleSchemas = $util.emptyArray;
    
                        /**
                         * Creates a new OracleRdbms instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.OracleRdbms
                         * @static
                         * @param {google.cloud.datastream.v1.IOracleRdbms=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.OracleRdbms} OracleRdbms instance
                         */
                        OracleRdbms.create = function create(properties) {
                            return new OracleRdbms(properties);
                        };
    
                        /**
                         * Encodes the specified OracleRdbms message. Does not implicitly {@link google.cloud.datastream.v1.OracleRdbms.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.OracleRdbms
                         * @static
                         * @param {google.cloud.datastream.v1.IOracleRdbms} message OracleRdbms message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OracleRdbms.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.oracleSchemas != null && message.oracleSchemas.length)
                                for (var i = 0; i < message.oracleSchemas.length; ++i)
                                    $root.google.cloud.datastream.v1.OracleSchema.encode(message.oracleSchemas[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OracleRdbms message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.OracleRdbms.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.OracleRdbms
                         * @static
                         * @param {google.cloud.datastream.v1.IOracleRdbms} message OracleRdbms message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OracleRdbms.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OracleRdbms message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.OracleRdbms
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.OracleRdbms} OracleRdbms
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OracleRdbms.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.OracleRdbms();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.oracleSchemas && message.oracleSchemas.length))
                                            message.oracleSchemas = [];
                                        message.oracleSchemas.push($root.google.cloud.datastream.v1.OracleSchema.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OracleRdbms message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.OracleRdbms
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.OracleRdbms} OracleRdbms
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OracleRdbms.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OracleRdbms message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.OracleRdbms
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OracleRdbms.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.oracleSchemas != null && message.hasOwnProperty("oracleSchemas")) {
                                if (!Array.isArray(message.oracleSchemas))
                                    return "oracleSchemas: array expected";
                                for (var i = 0; i < message.oracleSchemas.length; ++i) {
                                    var error = $root.google.cloud.datastream.v1.OracleSchema.verify(message.oracleSchemas[i]);
                                    if (error)
                                        return "oracleSchemas." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates an OracleRdbms message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.OracleRdbms
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.OracleRdbms} OracleRdbms
                         */
                        OracleRdbms.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.OracleRdbms)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.OracleRdbms();
                            if (object.oracleSchemas) {
                                if (!Array.isArray(object.oracleSchemas))
                                    throw TypeError(".google.cloud.datastream.v1.OracleRdbms.oracleSchemas: array expected");
                                message.oracleSchemas = [];
                                for (var i = 0; i < object.oracleSchemas.length; ++i) {
                                    if (typeof object.oracleSchemas[i] !== "object")
                                        throw TypeError(".google.cloud.datastream.v1.OracleRdbms.oracleSchemas: object expected");
                                    message.oracleSchemas[i] = $root.google.cloud.datastream.v1.OracleSchema.fromObject(object.oracleSchemas[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OracleRdbms message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.OracleRdbms
                         * @static
                         * @param {google.cloud.datastream.v1.OracleRdbms} message OracleRdbms
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OracleRdbms.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.oracleSchemas = [];
                            if (message.oracleSchemas && message.oracleSchemas.length) {
                                object.oracleSchemas = [];
                                for (var j = 0; j < message.oracleSchemas.length; ++j)
                                    object.oracleSchemas[j] = $root.google.cloud.datastream.v1.OracleSchema.toObject(message.oracleSchemas[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this OracleRdbms to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.OracleRdbms
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OracleRdbms.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OracleRdbms
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.OracleRdbms
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OracleRdbms.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.OracleRdbms";
                        };
    
                        return OracleRdbms;
                    })();
    
                    v1.OracleSourceConfig = (function() {
    
                        /**
                         * Properties of an OracleSourceConfig.
                         * @memberof google.cloud.datastream.v1
                         * @interface IOracleSourceConfig
                         * @property {google.cloud.datastream.v1.IOracleRdbms|null} [includeObjects] OracleSourceConfig includeObjects
                         * @property {google.cloud.datastream.v1.IOracleRdbms|null} [excludeObjects] OracleSourceConfig excludeObjects
                         * @property {number|null} [maxConcurrentCdcTasks] OracleSourceConfig maxConcurrentCdcTasks
                         * @property {google.cloud.datastream.v1.OracleSourceConfig.IDropLargeObjects|null} [dropLargeObjects] OracleSourceConfig dropLargeObjects
                         * @property {google.cloud.datastream.v1.OracleSourceConfig.IStreamLargeObjects|null} [streamLargeObjects] OracleSourceConfig streamLargeObjects
                         */
    
                        /**
                         * Constructs a new OracleSourceConfig.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents an OracleSourceConfig.
                         * @implements IOracleSourceConfig
                         * @constructor
                         * @param {google.cloud.datastream.v1.IOracleSourceConfig=} [properties] Properties to set
                         */
                        function OracleSourceConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OracleSourceConfig includeObjects.
                         * @member {google.cloud.datastream.v1.IOracleRdbms|null|undefined} includeObjects
                         * @memberof google.cloud.datastream.v1.OracleSourceConfig
                         * @instance
                         */
                        OracleSourceConfig.prototype.includeObjects = null;
    
                        /**
                         * OracleSourceConfig excludeObjects.
                         * @member {google.cloud.datastream.v1.IOracleRdbms|null|undefined} excludeObjects
                         * @memberof google.cloud.datastream.v1.OracleSourceConfig
                         * @instance
                         */
                        OracleSourceConfig.prototype.excludeObjects = null;
    
                        /**
                         * OracleSourceConfig maxConcurrentCdcTasks.
                         * @member {number} maxConcurrentCdcTasks
                         * @memberof google.cloud.datastream.v1.OracleSourceConfig
                         * @instance
                         */
                        OracleSourceConfig.prototype.maxConcurrentCdcTasks = 0;
    
                        /**
                         * OracleSourceConfig dropLargeObjects.
                         * @member {google.cloud.datastream.v1.OracleSourceConfig.IDropLargeObjects|null|undefined} dropLargeObjects
                         * @memberof google.cloud.datastream.v1.OracleSourceConfig
                         * @instance
                         */
                        OracleSourceConfig.prototype.dropLargeObjects = null;
    
                        /**
                         * OracleSourceConfig streamLargeObjects.
                         * @member {google.cloud.datastream.v1.OracleSourceConfig.IStreamLargeObjects|null|undefined} streamLargeObjects
                         * @memberof google.cloud.datastream.v1.OracleSourceConfig
                         * @instance
                         */
                        OracleSourceConfig.prototype.streamLargeObjects = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * OracleSourceConfig largeObjectsHandling.
                         * @member {"dropLargeObjects"|"streamLargeObjects"|undefined} largeObjectsHandling
                         * @memberof google.cloud.datastream.v1.OracleSourceConfig
                         * @instance
                         */
                        Object.defineProperty(OracleSourceConfig.prototype, "largeObjectsHandling", {
                            get: $util.oneOfGetter($oneOfFields = ["dropLargeObjects", "streamLargeObjects"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new OracleSourceConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.OracleSourceConfig
                         * @static
                         * @param {google.cloud.datastream.v1.IOracleSourceConfig=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.OracleSourceConfig} OracleSourceConfig instance
                         */
                        OracleSourceConfig.create = function create(properties) {
                            return new OracleSourceConfig(properties);
                        };
    
                        /**
                         * Encodes the specified OracleSourceConfig message. Does not implicitly {@link google.cloud.datastream.v1.OracleSourceConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.OracleSourceConfig
                         * @static
                         * @param {google.cloud.datastream.v1.IOracleSourceConfig} message OracleSourceConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OracleSourceConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.includeObjects != null && Object.hasOwnProperty.call(message, "includeObjects"))
                                $root.google.cloud.datastream.v1.OracleRdbms.encode(message.includeObjects, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.excludeObjects != null && Object.hasOwnProperty.call(message, "excludeObjects"))
                                $root.google.cloud.datastream.v1.OracleRdbms.encode(message.excludeObjects, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.maxConcurrentCdcTasks != null && Object.hasOwnProperty.call(message, "maxConcurrentCdcTasks"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.maxConcurrentCdcTasks);
                            if (message.dropLargeObjects != null && Object.hasOwnProperty.call(message, "dropLargeObjects"))
                                $root.google.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects.encode(message.dropLargeObjects, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            if (message.streamLargeObjects != null && Object.hasOwnProperty.call(message, "streamLargeObjects"))
                                $root.google.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects.encode(message.streamLargeObjects, writer.uint32(/* id 102, wireType 2 =*/818).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OracleSourceConfig message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.OracleSourceConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.OracleSourceConfig
                         * @static
                         * @param {google.cloud.datastream.v1.IOracleSourceConfig} message OracleSourceConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OracleSourceConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OracleSourceConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.OracleSourceConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.OracleSourceConfig} OracleSourceConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OracleSourceConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.OracleSourceConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.includeObjects = $root.google.cloud.datastream.v1.OracleRdbms.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.excludeObjects = $root.google.cloud.datastream.v1.OracleRdbms.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.maxConcurrentCdcTasks = reader.int32();
                                        break;
                                    }
                                case 100: {
                                        message.dropLargeObjects = $root.google.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 102: {
                                        message.streamLargeObjects = $root.google.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OracleSourceConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.OracleSourceConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.OracleSourceConfig} OracleSourceConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OracleSourceConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OracleSourceConfig message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.OracleSourceConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OracleSourceConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.includeObjects != null && message.hasOwnProperty("includeObjects")) {
                                var error = $root.google.cloud.datastream.v1.OracleRdbms.verify(message.includeObjects);
                                if (error)
                                    return "includeObjects." + error;
                            }
                            if (message.excludeObjects != null && message.hasOwnProperty("excludeObjects")) {
                                var error = $root.google.cloud.datastream.v1.OracleRdbms.verify(message.excludeObjects);
                                if (error)
                                    return "excludeObjects." + error;
                            }
                            if (message.maxConcurrentCdcTasks != null && message.hasOwnProperty("maxConcurrentCdcTasks"))
                                if (!$util.isInteger(message.maxConcurrentCdcTasks))
                                    return "maxConcurrentCdcTasks: integer expected";
                            if (message.dropLargeObjects != null && message.hasOwnProperty("dropLargeObjects")) {
                                properties.largeObjectsHandling = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects.verify(message.dropLargeObjects);
                                    if (error)
                                        return "dropLargeObjects." + error;
                                }
                            }
                            if (message.streamLargeObjects != null && message.hasOwnProperty("streamLargeObjects")) {
                                if (properties.largeObjectsHandling === 1)
                                    return "largeObjectsHandling: multiple values";
                                properties.largeObjectsHandling = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects.verify(message.streamLargeObjects);
                                    if (error)
                                        return "streamLargeObjects." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates an OracleSourceConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.OracleSourceConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.OracleSourceConfig} OracleSourceConfig
                         */
                        OracleSourceConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.OracleSourceConfig)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.OracleSourceConfig();
                            if (object.includeObjects != null) {
                                if (typeof object.includeObjects !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.OracleSourceConfig.includeObjects: object expected");
                                message.includeObjects = $root.google.cloud.datastream.v1.OracleRdbms.fromObject(object.includeObjects);
                            }
                            if (object.excludeObjects != null) {
                                if (typeof object.excludeObjects !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.OracleSourceConfig.excludeObjects: object expected");
                                message.excludeObjects = $root.google.cloud.datastream.v1.OracleRdbms.fromObject(object.excludeObjects);
                            }
                            if (object.maxConcurrentCdcTasks != null)
                                message.maxConcurrentCdcTasks = object.maxConcurrentCdcTasks | 0;
                            if (object.dropLargeObjects != null) {
                                if (typeof object.dropLargeObjects !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.OracleSourceConfig.dropLargeObjects: object expected");
                                message.dropLargeObjects = $root.google.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects.fromObject(object.dropLargeObjects);
                            }
                            if (object.streamLargeObjects != null) {
                                if (typeof object.streamLargeObjects !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.OracleSourceConfig.streamLargeObjects: object expected");
                                message.streamLargeObjects = $root.google.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects.fromObject(object.streamLargeObjects);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OracleSourceConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.OracleSourceConfig
                         * @static
                         * @param {google.cloud.datastream.v1.OracleSourceConfig} message OracleSourceConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OracleSourceConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.includeObjects = null;
                                object.excludeObjects = null;
                                object.maxConcurrentCdcTasks = 0;
                            }
                            if (message.includeObjects != null && message.hasOwnProperty("includeObjects"))
                                object.includeObjects = $root.google.cloud.datastream.v1.OracleRdbms.toObject(message.includeObjects, options);
                            if (message.excludeObjects != null && message.hasOwnProperty("excludeObjects"))
                                object.excludeObjects = $root.google.cloud.datastream.v1.OracleRdbms.toObject(message.excludeObjects, options);
                            if (message.maxConcurrentCdcTasks != null && message.hasOwnProperty("maxConcurrentCdcTasks"))
                                object.maxConcurrentCdcTasks = message.maxConcurrentCdcTasks;
                            if (message.dropLargeObjects != null && message.hasOwnProperty("dropLargeObjects")) {
                                object.dropLargeObjects = $root.google.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects.toObject(message.dropLargeObjects, options);
                                if (options.oneofs)
                                    object.largeObjectsHandling = "dropLargeObjects";
                            }
                            if (message.streamLargeObjects != null && message.hasOwnProperty("streamLargeObjects")) {
                                object.streamLargeObjects = $root.google.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects.toObject(message.streamLargeObjects, options);
                                if (options.oneofs)
                                    object.largeObjectsHandling = "streamLargeObjects";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this OracleSourceConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.OracleSourceConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OracleSourceConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OracleSourceConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.OracleSourceConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OracleSourceConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.OracleSourceConfig";
                        };
    
                        OracleSourceConfig.DropLargeObjects = (function() {
    
                            /**
                             * Properties of a DropLargeObjects.
                             * @memberof google.cloud.datastream.v1.OracleSourceConfig
                             * @interface IDropLargeObjects
                             */
    
                            /**
                             * Constructs a new DropLargeObjects.
                             * @memberof google.cloud.datastream.v1.OracleSourceConfig
                             * @classdesc Represents a DropLargeObjects.
                             * @implements IDropLargeObjects
                             * @constructor
                             * @param {google.cloud.datastream.v1.OracleSourceConfig.IDropLargeObjects=} [properties] Properties to set
                             */
                            function DropLargeObjects(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Creates a new DropLargeObjects instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
                             * @static
                             * @param {google.cloud.datastream.v1.OracleSourceConfig.IDropLargeObjects=} [properties] Properties to set
                             * @returns {google.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects} DropLargeObjects instance
                             */
                            DropLargeObjects.create = function create(properties) {
                                return new DropLargeObjects(properties);
                            };
    
                            /**
                             * Encodes the specified DropLargeObjects message. Does not implicitly {@link google.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
                             * @static
                             * @param {google.cloud.datastream.v1.OracleSourceConfig.IDropLargeObjects} message DropLargeObjects message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DropLargeObjects.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified DropLargeObjects message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
                             * @static
                             * @param {google.cloud.datastream.v1.OracleSourceConfig.IDropLargeObjects} message DropLargeObjects message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DropLargeObjects.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a DropLargeObjects message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects} DropLargeObjects
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DropLargeObjects.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a DropLargeObjects message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects} DropLargeObjects
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DropLargeObjects.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a DropLargeObjects message.
                             * @function verify
                             * @memberof google.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            DropLargeObjects.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                return null;
                            };
    
                            /**
                             * Creates a DropLargeObjects message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects} DropLargeObjects
                             */
                            DropLargeObjects.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects)
                                    return object;
                                return new $root.google.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects();
                            };
    
                            /**
                             * Creates a plain object from a DropLargeObjects message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
                             * @static
                             * @param {google.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects} message DropLargeObjects
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            DropLargeObjects.toObject = function toObject() {
                                return {};
                            };
    
                            /**
                             * Converts this DropLargeObjects to JSON.
                             * @function toJSON
                             * @memberof google.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            DropLargeObjects.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for DropLargeObjects
                             * @function getTypeUrl
                             * @memberof google.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            DropLargeObjects.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects";
                            };
    
                            return DropLargeObjects;
                        })();
    
                        OracleSourceConfig.StreamLargeObjects = (function() {
    
                            /**
                             * Properties of a StreamLargeObjects.
                             * @memberof google.cloud.datastream.v1.OracleSourceConfig
                             * @interface IStreamLargeObjects
                             */
    
                            /**
                             * Constructs a new StreamLargeObjects.
                             * @memberof google.cloud.datastream.v1.OracleSourceConfig
                             * @classdesc Represents a StreamLargeObjects.
                             * @implements IStreamLargeObjects
                             * @constructor
                             * @param {google.cloud.datastream.v1.OracleSourceConfig.IStreamLargeObjects=} [properties] Properties to set
                             */
                            function StreamLargeObjects(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Creates a new StreamLargeObjects instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
                             * @static
                             * @param {google.cloud.datastream.v1.OracleSourceConfig.IStreamLargeObjects=} [properties] Properties to set
                             * @returns {google.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects} StreamLargeObjects instance
                             */
                            StreamLargeObjects.create = function create(properties) {
                                return new StreamLargeObjects(properties);
                            };
    
                            /**
                             * Encodes the specified StreamLargeObjects message. Does not implicitly {@link google.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
                             * @static
                             * @param {google.cloud.datastream.v1.OracleSourceConfig.IStreamLargeObjects} message StreamLargeObjects message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            StreamLargeObjects.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified StreamLargeObjects message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
                             * @static
                             * @param {google.cloud.datastream.v1.OracleSourceConfig.IStreamLargeObjects} message StreamLargeObjects message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            StreamLargeObjects.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a StreamLargeObjects message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects} StreamLargeObjects
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            StreamLargeObjects.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a StreamLargeObjects message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects} StreamLargeObjects
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            StreamLargeObjects.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a StreamLargeObjects message.
                             * @function verify
                             * @memberof google.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            StreamLargeObjects.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                return null;
                            };
    
                            /**
                             * Creates a StreamLargeObjects message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects} StreamLargeObjects
                             */
                            StreamLargeObjects.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects)
                                    return object;
                                return new $root.google.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects();
                            };
    
                            /**
                             * Creates a plain object from a StreamLargeObjects message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
                             * @static
                             * @param {google.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects} message StreamLargeObjects
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            StreamLargeObjects.toObject = function toObject() {
                                return {};
                            };
    
                            /**
                             * Converts this StreamLargeObjects to JSON.
                             * @function toJSON
                             * @memberof google.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            StreamLargeObjects.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for StreamLargeObjects
                             * @function getTypeUrl
                             * @memberof google.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            StreamLargeObjects.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects";
                            };
    
                            return StreamLargeObjects;
                        })();
    
                        return OracleSourceConfig;
                    })();
    
                    v1.PostgresqlColumn = (function() {
    
                        /**
                         * Properties of a PostgresqlColumn.
                         * @memberof google.cloud.datastream.v1
                         * @interface IPostgresqlColumn
                         * @property {string|null} [column] PostgresqlColumn column
                         * @property {string|null} [dataType] PostgresqlColumn dataType
                         * @property {number|null} [length] PostgresqlColumn length
                         * @property {number|null} [precision] PostgresqlColumn precision
                         * @property {number|null} [scale] PostgresqlColumn scale
                         * @property {boolean|null} [primaryKey] PostgresqlColumn primaryKey
                         * @property {boolean|null} [nullable] PostgresqlColumn nullable
                         * @property {number|null} [ordinalPosition] PostgresqlColumn ordinalPosition
                         */
    
                        /**
                         * Constructs a new PostgresqlColumn.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a PostgresqlColumn.
                         * @implements IPostgresqlColumn
                         * @constructor
                         * @param {google.cloud.datastream.v1.IPostgresqlColumn=} [properties] Properties to set
                         */
                        function PostgresqlColumn(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PostgresqlColumn column.
                         * @member {string} column
                         * @memberof google.cloud.datastream.v1.PostgresqlColumn
                         * @instance
                         */
                        PostgresqlColumn.prototype.column = "";
    
                        /**
                         * PostgresqlColumn dataType.
                         * @member {string} dataType
                         * @memberof google.cloud.datastream.v1.PostgresqlColumn
                         * @instance
                         */
                        PostgresqlColumn.prototype.dataType = "";
    
                        /**
                         * PostgresqlColumn length.
                         * @member {number} length
                         * @memberof google.cloud.datastream.v1.PostgresqlColumn
                         * @instance
                         */
                        PostgresqlColumn.prototype.length = 0;
    
                        /**
                         * PostgresqlColumn precision.
                         * @member {number} precision
                         * @memberof google.cloud.datastream.v1.PostgresqlColumn
                         * @instance
                         */
                        PostgresqlColumn.prototype.precision = 0;
    
                        /**
                         * PostgresqlColumn scale.
                         * @member {number} scale
                         * @memberof google.cloud.datastream.v1.PostgresqlColumn
                         * @instance
                         */
                        PostgresqlColumn.prototype.scale = 0;
    
                        /**
                         * PostgresqlColumn primaryKey.
                         * @member {boolean} primaryKey
                         * @memberof google.cloud.datastream.v1.PostgresqlColumn
                         * @instance
                         */
                        PostgresqlColumn.prototype.primaryKey = false;
    
                        /**
                         * PostgresqlColumn nullable.
                         * @member {boolean} nullable
                         * @memberof google.cloud.datastream.v1.PostgresqlColumn
                         * @instance
                         */
                        PostgresqlColumn.prototype.nullable = false;
    
                        /**
                         * PostgresqlColumn ordinalPosition.
                         * @member {number} ordinalPosition
                         * @memberof google.cloud.datastream.v1.PostgresqlColumn
                         * @instance
                         */
                        PostgresqlColumn.prototype.ordinalPosition = 0;
    
                        /**
                         * Creates a new PostgresqlColumn instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.PostgresqlColumn
                         * @static
                         * @param {google.cloud.datastream.v1.IPostgresqlColumn=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.PostgresqlColumn} PostgresqlColumn instance
                         */
                        PostgresqlColumn.create = function create(properties) {
                            return new PostgresqlColumn(properties);
                        };
    
                        /**
                         * Encodes the specified PostgresqlColumn message. Does not implicitly {@link google.cloud.datastream.v1.PostgresqlColumn.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.PostgresqlColumn
                         * @static
                         * @param {google.cloud.datastream.v1.IPostgresqlColumn} message PostgresqlColumn message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PostgresqlColumn.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.column != null && Object.hasOwnProperty.call(message, "column"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.column);
                            if (message.dataType != null && Object.hasOwnProperty.call(message, "dataType"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.dataType);
                            if (message.length != null && Object.hasOwnProperty.call(message, "length"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.length);
                            if (message.precision != null && Object.hasOwnProperty.call(message, "precision"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.precision);
                            if (message.scale != null && Object.hasOwnProperty.call(message, "scale"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.scale);
                            if (message.primaryKey != null && Object.hasOwnProperty.call(message, "primaryKey"))
                                writer.uint32(/* id 7, wireType 0 =*/56).bool(message.primaryKey);
                            if (message.nullable != null && Object.hasOwnProperty.call(message, "nullable"))
                                writer.uint32(/* id 8, wireType 0 =*/64).bool(message.nullable);
                            if (message.ordinalPosition != null && Object.hasOwnProperty.call(message, "ordinalPosition"))
                                writer.uint32(/* id 9, wireType 0 =*/72).int32(message.ordinalPosition);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PostgresqlColumn message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.PostgresqlColumn.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.PostgresqlColumn
                         * @static
                         * @param {google.cloud.datastream.v1.IPostgresqlColumn} message PostgresqlColumn message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PostgresqlColumn.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PostgresqlColumn message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.PostgresqlColumn
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.PostgresqlColumn} PostgresqlColumn
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PostgresqlColumn.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.PostgresqlColumn();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.column = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.dataType = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.length = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.precision = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        message.scale = reader.int32();
                                        break;
                                    }
                                case 7: {
                                        message.primaryKey = reader.bool();
                                        break;
                                    }
                                case 8: {
                                        message.nullable = reader.bool();
                                        break;
                                    }
                                case 9: {
                                        message.ordinalPosition = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PostgresqlColumn message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.PostgresqlColumn
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.PostgresqlColumn} PostgresqlColumn
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PostgresqlColumn.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PostgresqlColumn message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.PostgresqlColumn
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PostgresqlColumn.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.column != null && message.hasOwnProperty("column"))
                                if (!$util.isString(message.column))
                                    return "column: string expected";
                            if (message.dataType != null && message.hasOwnProperty("dataType"))
                                if (!$util.isString(message.dataType))
                                    return "dataType: string expected";
                            if (message.length != null && message.hasOwnProperty("length"))
                                if (!$util.isInteger(message.length))
                                    return "length: integer expected";
                            if (message.precision != null && message.hasOwnProperty("precision"))
                                if (!$util.isInteger(message.precision))
                                    return "precision: integer expected";
                            if (message.scale != null && message.hasOwnProperty("scale"))
                                if (!$util.isInteger(message.scale))
                                    return "scale: integer expected";
                            if (message.primaryKey != null && message.hasOwnProperty("primaryKey"))
                                if (typeof message.primaryKey !== "boolean")
                                    return "primaryKey: boolean expected";
                            if (message.nullable != null && message.hasOwnProperty("nullable"))
                                if (typeof message.nullable !== "boolean")
                                    return "nullable: boolean expected";
                            if (message.ordinalPosition != null && message.hasOwnProperty("ordinalPosition"))
                                if (!$util.isInteger(message.ordinalPosition))
                                    return "ordinalPosition: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a PostgresqlColumn message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.PostgresqlColumn
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.PostgresqlColumn} PostgresqlColumn
                         */
                        PostgresqlColumn.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.PostgresqlColumn)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.PostgresqlColumn();
                            if (object.column != null)
                                message.column = String(object.column);
                            if (object.dataType != null)
                                message.dataType = String(object.dataType);
                            if (object.length != null)
                                message.length = object.length | 0;
                            if (object.precision != null)
                                message.precision = object.precision | 0;
                            if (object.scale != null)
                                message.scale = object.scale | 0;
                            if (object.primaryKey != null)
                                message.primaryKey = Boolean(object.primaryKey);
                            if (object.nullable != null)
                                message.nullable = Boolean(object.nullable);
                            if (object.ordinalPosition != null)
                                message.ordinalPosition = object.ordinalPosition | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PostgresqlColumn message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.PostgresqlColumn
                         * @static
                         * @param {google.cloud.datastream.v1.PostgresqlColumn} message PostgresqlColumn
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PostgresqlColumn.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.column = "";
                                object.dataType = "";
                                object.length = 0;
                                object.precision = 0;
                                object.scale = 0;
                                object.primaryKey = false;
                                object.nullable = false;
                                object.ordinalPosition = 0;
                            }
                            if (message.column != null && message.hasOwnProperty("column"))
                                object.column = message.column;
                            if (message.dataType != null && message.hasOwnProperty("dataType"))
                                object.dataType = message.dataType;
                            if (message.length != null && message.hasOwnProperty("length"))
                                object.length = message.length;
                            if (message.precision != null && message.hasOwnProperty("precision"))
                                object.precision = message.precision;
                            if (message.scale != null && message.hasOwnProperty("scale"))
                                object.scale = message.scale;
                            if (message.primaryKey != null && message.hasOwnProperty("primaryKey"))
                                object.primaryKey = message.primaryKey;
                            if (message.nullable != null && message.hasOwnProperty("nullable"))
                                object.nullable = message.nullable;
                            if (message.ordinalPosition != null && message.hasOwnProperty("ordinalPosition"))
                                object.ordinalPosition = message.ordinalPosition;
                            return object;
                        };
    
                        /**
                         * Converts this PostgresqlColumn to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.PostgresqlColumn
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PostgresqlColumn.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PostgresqlColumn
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.PostgresqlColumn
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PostgresqlColumn.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.PostgresqlColumn";
                        };
    
                        return PostgresqlColumn;
                    })();
    
                    v1.PostgresqlTable = (function() {
    
                        /**
                         * Properties of a PostgresqlTable.
                         * @memberof google.cloud.datastream.v1
                         * @interface IPostgresqlTable
                         * @property {string|null} [table] PostgresqlTable table
                         * @property {Array.<google.cloud.datastream.v1.IPostgresqlColumn>|null} [postgresqlColumns] PostgresqlTable postgresqlColumns
                         */
    
                        /**
                         * Constructs a new PostgresqlTable.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a PostgresqlTable.
                         * @implements IPostgresqlTable
                         * @constructor
                         * @param {google.cloud.datastream.v1.IPostgresqlTable=} [properties] Properties to set
                         */
                        function PostgresqlTable(properties) {
                            this.postgresqlColumns = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PostgresqlTable table.
                         * @member {string} table
                         * @memberof google.cloud.datastream.v1.PostgresqlTable
                         * @instance
                         */
                        PostgresqlTable.prototype.table = "";
    
                        /**
                         * PostgresqlTable postgresqlColumns.
                         * @member {Array.<google.cloud.datastream.v1.IPostgresqlColumn>} postgresqlColumns
                         * @memberof google.cloud.datastream.v1.PostgresqlTable
                         * @instance
                         */
                        PostgresqlTable.prototype.postgresqlColumns = $util.emptyArray;
    
                        /**
                         * Creates a new PostgresqlTable instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.PostgresqlTable
                         * @static
                         * @param {google.cloud.datastream.v1.IPostgresqlTable=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.PostgresqlTable} PostgresqlTable instance
                         */
                        PostgresqlTable.create = function create(properties) {
                            return new PostgresqlTable(properties);
                        };
    
                        /**
                         * Encodes the specified PostgresqlTable message. Does not implicitly {@link google.cloud.datastream.v1.PostgresqlTable.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.PostgresqlTable
                         * @static
                         * @param {google.cloud.datastream.v1.IPostgresqlTable} message PostgresqlTable message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PostgresqlTable.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.table != null && Object.hasOwnProperty.call(message, "table"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.table);
                            if (message.postgresqlColumns != null && message.postgresqlColumns.length)
                                for (var i = 0; i < message.postgresqlColumns.length; ++i)
                                    $root.google.cloud.datastream.v1.PostgresqlColumn.encode(message.postgresqlColumns[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PostgresqlTable message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.PostgresqlTable.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.PostgresqlTable
                         * @static
                         * @param {google.cloud.datastream.v1.IPostgresqlTable} message PostgresqlTable message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PostgresqlTable.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PostgresqlTable message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.PostgresqlTable
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.PostgresqlTable} PostgresqlTable
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PostgresqlTable.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.PostgresqlTable();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.table = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.postgresqlColumns && message.postgresqlColumns.length))
                                            message.postgresqlColumns = [];
                                        message.postgresqlColumns.push($root.google.cloud.datastream.v1.PostgresqlColumn.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PostgresqlTable message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.PostgresqlTable
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.PostgresqlTable} PostgresqlTable
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PostgresqlTable.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PostgresqlTable message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.PostgresqlTable
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PostgresqlTable.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.table != null && message.hasOwnProperty("table"))
                                if (!$util.isString(message.table))
                                    return "table: string expected";
                            if (message.postgresqlColumns != null && message.hasOwnProperty("postgresqlColumns")) {
                                if (!Array.isArray(message.postgresqlColumns))
                                    return "postgresqlColumns: array expected";
                                for (var i = 0; i < message.postgresqlColumns.length; ++i) {
                                    var error = $root.google.cloud.datastream.v1.PostgresqlColumn.verify(message.postgresqlColumns[i]);
                                    if (error)
                                        return "postgresqlColumns." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a PostgresqlTable message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.PostgresqlTable
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.PostgresqlTable} PostgresqlTable
                         */
                        PostgresqlTable.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.PostgresqlTable)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.PostgresqlTable();
                            if (object.table != null)
                                message.table = String(object.table);
                            if (object.postgresqlColumns) {
                                if (!Array.isArray(object.postgresqlColumns))
                                    throw TypeError(".google.cloud.datastream.v1.PostgresqlTable.postgresqlColumns: array expected");
                                message.postgresqlColumns = [];
                                for (var i = 0; i < object.postgresqlColumns.length; ++i) {
                                    if (typeof object.postgresqlColumns[i] !== "object")
                                        throw TypeError(".google.cloud.datastream.v1.PostgresqlTable.postgresqlColumns: object expected");
                                    message.postgresqlColumns[i] = $root.google.cloud.datastream.v1.PostgresqlColumn.fromObject(object.postgresqlColumns[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PostgresqlTable message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.PostgresqlTable
                         * @static
                         * @param {google.cloud.datastream.v1.PostgresqlTable} message PostgresqlTable
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PostgresqlTable.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.postgresqlColumns = [];
                            if (options.defaults)
                                object.table = "";
                            if (message.table != null && message.hasOwnProperty("table"))
                                object.table = message.table;
                            if (message.postgresqlColumns && message.postgresqlColumns.length) {
                                object.postgresqlColumns = [];
                                for (var j = 0; j < message.postgresqlColumns.length; ++j)
                                    object.postgresqlColumns[j] = $root.google.cloud.datastream.v1.PostgresqlColumn.toObject(message.postgresqlColumns[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this PostgresqlTable to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.PostgresqlTable
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PostgresqlTable.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PostgresqlTable
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.PostgresqlTable
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PostgresqlTable.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.PostgresqlTable";
                        };
    
                        return PostgresqlTable;
                    })();
    
                    v1.PostgresqlSchema = (function() {
    
                        /**
                         * Properties of a PostgresqlSchema.
                         * @memberof google.cloud.datastream.v1
                         * @interface IPostgresqlSchema
                         * @property {string|null} [schema] PostgresqlSchema schema
                         * @property {Array.<google.cloud.datastream.v1.IPostgresqlTable>|null} [postgresqlTables] PostgresqlSchema postgresqlTables
                         */
    
                        /**
                         * Constructs a new PostgresqlSchema.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a PostgresqlSchema.
                         * @implements IPostgresqlSchema
                         * @constructor
                         * @param {google.cloud.datastream.v1.IPostgresqlSchema=} [properties] Properties to set
                         */
                        function PostgresqlSchema(properties) {
                            this.postgresqlTables = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PostgresqlSchema schema.
                         * @member {string} schema
                         * @memberof google.cloud.datastream.v1.PostgresqlSchema
                         * @instance
                         */
                        PostgresqlSchema.prototype.schema = "";
    
                        /**
                         * PostgresqlSchema postgresqlTables.
                         * @member {Array.<google.cloud.datastream.v1.IPostgresqlTable>} postgresqlTables
                         * @memberof google.cloud.datastream.v1.PostgresqlSchema
                         * @instance
                         */
                        PostgresqlSchema.prototype.postgresqlTables = $util.emptyArray;
    
                        /**
                         * Creates a new PostgresqlSchema instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.PostgresqlSchema
                         * @static
                         * @param {google.cloud.datastream.v1.IPostgresqlSchema=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.PostgresqlSchema} PostgresqlSchema instance
                         */
                        PostgresqlSchema.create = function create(properties) {
                            return new PostgresqlSchema(properties);
                        };
    
                        /**
                         * Encodes the specified PostgresqlSchema message. Does not implicitly {@link google.cloud.datastream.v1.PostgresqlSchema.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.PostgresqlSchema
                         * @static
                         * @param {google.cloud.datastream.v1.IPostgresqlSchema} message PostgresqlSchema message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PostgresqlSchema.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.schema != null && Object.hasOwnProperty.call(message, "schema"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.schema);
                            if (message.postgresqlTables != null && message.postgresqlTables.length)
                                for (var i = 0; i < message.postgresqlTables.length; ++i)
                                    $root.google.cloud.datastream.v1.PostgresqlTable.encode(message.postgresqlTables[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PostgresqlSchema message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.PostgresqlSchema.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.PostgresqlSchema
                         * @static
                         * @param {google.cloud.datastream.v1.IPostgresqlSchema} message PostgresqlSchema message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PostgresqlSchema.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PostgresqlSchema message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.PostgresqlSchema
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.PostgresqlSchema} PostgresqlSchema
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PostgresqlSchema.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.PostgresqlSchema();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.schema = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.postgresqlTables && message.postgresqlTables.length))
                                            message.postgresqlTables = [];
                                        message.postgresqlTables.push($root.google.cloud.datastream.v1.PostgresqlTable.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PostgresqlSchema message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.PostgresqlSchema
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.PostgresqlSchema} PostgresqlSchema
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PostgresqlSchema.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PostgresqlSchema message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.PostgresqlSchema
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PostgresqlSchema.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.schema != null && message.hasOwnProperty("schema"))
                                if (!$util.isString(message.schema))
                                    return "schema: string expected";
                            if (message.postgresqlTables != null && message.hasOwnProperty("postgresqlTables")) {
                                if (!Array.isArray(message.postgresqlTables))
                                    return "postgresqlTables: array expected";
                                for (var i = 0; i < message.postgresqlTables.length; ++i) {
                                    var error = $root.google.cloud.datastream.v1.PostgresqlTable.verify(message.postgresqlTables[i]);
                                    if (error)
                                        return "postgresqlTables." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a PostgresqlSchema message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.PostgresqlSchema
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.PostgresqlSchema} PostgresqlSchema
                         */
                        PostgresqlSchema.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.PostgresqlSchema)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.PostgresqlSchema();
                            if (object.schema != null)
                                message.schema = String(object.schema);
                            if (object.postgresqlTables) {
                                if (!Array.isArray(object.postgresqlTables))
                                    throw TypeError(".google.cloud.datastream.v1.PostgresqlSchema.postgresqlTables: array expected");
                                message.postgresqlTables = [];
                                for (var i = 0; i < object.postgresqlTables.length; ++i) {
                                    if (typeof object.postgresqlTables[i] !== "object")
                                        throw TypeError(".google.cloud.datastream.v1.PostgresqlSchema.postgresqlTables: object expected");
                                    message.postgresqlTables[i] = $root.google.cloud.datastream.v1.PostgresqlTable.fromObject(object.postgresqlTables[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PostgresqlSchema message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.PostgresqlSchema
                         * @static
                         * @param {google.cloud.datastream.v1.PostgresqlSchema} message PostgresqlSchema
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PostgresqlSchema.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.postgresqlTables = [];
                            if (options.defaults)
                                object.schema = "";
                            if (message.schema != null && message.hasOwnProperty("schema"))
                                object.schema = message.schema;
                            if (message.postgresqlTables && message.postgresqlTables.length) {
                                object.postgresqlTables = [];
                                for (var j = 0; j < message.postgresqlTables.length; ++j)
                                    object.postgresqlTables[j] = $root.google.cloud.datastream.v1.PostgresqlTable.toObject(message.postgresqlTables[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this PostgresqlSchema to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.PostgresqlSchema
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PostgresqlSchema.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PostgresqlSchema
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.PostgresqlSchema
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PostgresqlSchema.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.PostgresqlSchema";
                        };
    
                        return PostgresqlSchema;
                    })();
    
                    v1.PostgresqlRdbms = (function() {
    
                        /**
                         * Properties of a PostgresqlRdbms.
                         * @memberof google.cloud.datastream.v1
                         * @interface IPostgresqlRdbms
                         * @property {Array.<google.cloud.datastream.v1.IPostgresqlSchema>|null} [postgresqlSchemas] PostgresqlRdbms postgresqlSchemas
                         */
    
                        /**
                         * Constructs a new PostgresqlRdbms.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a PostgresqlRdbms.
                         * @implements IPostgresqlRdbms
                         * @constructor
                         * @param {google.cloud.datastream.v1.IPostgresqlRdbms=} [properties] Properties to set
                         */
                        function PostgresqlRdbms(properties) {
                            this.postgresqlSchemas = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PostgresqlRdbms postgresqlSchemas.
                         * @member {Array.<google.cloud.datastream.v1.IPostgresqlSchema>} postgresqlSchemas
                         * @memberof google.cloud.datastream.v1.PostgresqlRdbms
                         * @instance
                         */
                        PostgresqlRdbms.prototype.postgresqlSchemas = $util.emptyArray;
    
                        /**
                         * Creates a new PostgresqlRdbms instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.PostgresqlRdbms
                         * @static
                         * @param {google.cloud.datastream.v1.IPostgresqlRdbms=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.PostgresqlRdbms} PostgresqlRdbms instance
                         */
                        PostgresqlRdbms.create = function create(properties) {
                            return new PostgresqlRdbms(properties);
                        };
    
                        /**
                         * Encodes the specified PostgresqlRdbms message. Does not implicitly {@link google.cloud.datastream.v1.PostgresqlRdbms.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.PostgresqlRdbms
                         * @static
                         * @param {google.cloud.datastream.v1.IPostgresqlRdbms} message PostgresqlRdbms message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PostgresqlRdbms.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.postgresqlSchemas != null && message.postgresqlSchemas.length)
                                for (var i = 0; i < message.postgresqlSchemas.length; ++i)
                                    $root.google.cloud.datastream.v1.PostgresqlSchema.encode(message.postgresqlSchemas[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PostgresqlRdbms message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.PostgresqlRdbms.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.PostgresqlRdbms
                         * @static
                         * @param {google.cloud.datastream.v1.IPostgresqlRdbms} message PostgresqlRdbms message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PostgresqlRdbms.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PostgresqlRdbms message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.PostgresqlRdbms
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.PostgresqlRdbms} PostgresqlRdbms
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PostgresqlRdbms.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.PostgresqlRdbms();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.postgresqlSchemas && message.postgresqlSchemas.length))
                                            message.postgresqlSchemas = [];
                                        message.postgresqlSchemas.push($root.google.cloud.datastream.v1.PostgresqlSchema.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PostgresqlRdbms message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.PostgresqlRdbms
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.PostgresqlRdbms} PostgresqlRdbms
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PostgresqlRdbms.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PostgresqlRdbms message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.PostgresqlRdbms
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PostgresqlRdbms.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.postgresqlSchemas != null && message.hasOwnProperty("postgresqlSchemas")) {
                                if (!Array.isArray(message.postgresqlSchemas))
                                    return "postgresqlSchemas: array expected";
                                for (var i = 0; i < message.postgresqlSchemas.length; ++i) {
                                    var error = $root.google.cloud.datastream.v1.PostgresqlSchema.verify(message.postgresqlSchemas[i]);
                                    if (error)
                                        return "postgresqlSchemas." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a PostgresqlRdbms message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.PostgresqlRdbms
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.PostgresqlRdbms} PostgresqlRdbms
                         */
                        PostgresqlRdbms.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.PostgresqlRdbms)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.PostgresqlRdbms();
                            if (object.postgresqlSchemas) {
                                if (!Array.isArray(object.postgresqlSchemas))
                                    throw TypeError(".google.cloud.datastream.v1.PostgresqlRdbms.postgresqlSchemas: array expected");
                                message.postgresqlSchemas = [];
                                for (var i = 0; i < object.postgresqlSchemas.length; ++i) {
                                    if (typeof object.postgresqlSchemas[i] !== "object")
                                        throw TypeError(".google.cloud.datastream.v1.PostgresqlRdbms.postgresqlSchemas: object expected");
                                    message.postgresqlSchemas[i] = $root.google.cloud.datastream.v1.PostgresqlSchema.fromObject(object.postgresqlSchemas[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PostgresqlRdbms message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.PostgresqlRdbms
                         * @static
                         * @param {google.cloud.datastream.v1.PostgresqlRdbms} message PostgresqlRdbms
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PostgresqlRdbms.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.postgresqlSchemas = [];
                            if (message.postgresqlSchemas && message.postgresqlSchemas.length) {
                                object.postgresqlSchemas = [];
                                for (var j = 0; j < message.postgresqlSchemas.length; ++j)
                                    object.postgresqlSchemas[j] = $root.google.cloud.datastream.v1.PostgresqlSchema.toObject(message.postgresqlSchemas[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this PostgresqlRdbms to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.PostgresqlRdbms
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PostgresqlRdbms.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PostgresqlRdbms
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.PostgresqlRdbms
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PostgresqlRdbms.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.PostgresqlRdbms";
                        };
    
                        return PostgresqlRdbms;
                    })();
    
                    v1.PostgresqlSourceConfig = (function() {
    
                        /**
                         * Properties of a PostgresqlSourceConfig.
                         * @memberof google.cloud.datastream.v1
                         * @interface IPostgresqlSourceConfig
                         * @property {google.cloud.datastream.v1.IPostgresqlRdbms|null} [includeObjects] PostgresqlSourceConfig includeObjects
                         * @property {google.cloud.datastream.v1.IPostgresqlRdbms|null} [excludeObjects] PostgresqlSourceConfig excludeObjects
                         * @property {string|null} [replicationSlot] PostgresqlSourceConfig replicationSlot
                         * @property {string|null} [publication] PostgresqlSourceConfig publication
                         */
    
                        /**
                         * Constructs a new PostgresqlSourceConfig.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a PostgresqlSourceConfig.
                         * @implements IPostgresqlSourceConfig
                         * @constructor
                         * @param {google.cloud.datastream.v1.IPostgresqlSourceConfig=} [properties] Properties to set
                         */
                        function PostgresqlSourceConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PostgresqlSourceConfig includeObjects.
                         * @member {google.cloud.datastream.v1.IPostgresqlRdbms|null|undefined} includeObjects
                         * @memberof google.cloud.datastream.v1.PostgresqlSourceConfig
                         * @instance
                         */
                        PostgresqlSourceConfig.prototype.includeObjects = null;
    
                        /**
                         * PostgresqlSourceConfig excludeObjects.
                         * @member {google.cloud.datastream.v1.IPostgresqlRdbms|null|undefined} excludeObjects
                         * @memberof google.cloud.datastream.v1.PostgresqlSourceConfig
                         * @instance
                         */
                        PostgresqlSourceConfig.prototype.excludeObjects = null;
    
                        /**
                         * PostgresqlSourceConfig replicationSlot.
                         * @member {string} replicationSlot
                         * @memberof google.cloud.datastream.v1.PostgresqlSourceConfig
                         * @instance
                         */
                        PostgresqlSourceConfig.prototype.replicationSlot = "";
    
                        /**
                         * PostgresqlSourceConfig publication.
                         * @member {string} publication
                         * @memberof google.cloud.datastream.v1.PostgresqlSourceConfig
                         * @instance
                         */
                        PostgresqlSourceConfig.prototype.publication = "";
    
                        /**
                         * Creates a new PostgresqlSourceConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.PostgresqlSourceConfig
                         * @static
                         * @param {google.cloud.datastream.v1.IPostgresqlSourceConfig=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.PostgresqlSourceConfig} PostgresqlSourceConfig instance
                         */
                        PostgresqlSourceConfig.create = function create(properties) {
                            return new PostgresqlSourceConfig(properties);
                        };
    
                        /**
                         * Encodes the specified PostgresqlSourceConfig message. Does not implicitly {@link google.cloud.datastream.v1.PostgresqlSourceConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.PostgresqlSourceConfig
                         * @static
                         * @param {google.cloud.datastream.v1.IPostgresqlSourceConfig} message PostgresqlSourceConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PostgresqlSourceConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.includeObjects != null && Object.hasOwnProperty.call(message, "includeObjects"))
                                $root.google.cloud.datastream.v1.PostgresqlRdbms.encode(message.includeObjects, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.excludeObjects != null && Object.hasOwnProperty.call(message, "excludeObjects"))
                                $root.google.cloud.datastream.v1.PostgresqlRdbms.encode(message.excludeObjects, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.replicationSlot != null && Object.hasOwnProperty.call(message, "replicationSlot"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.replicationSlot);
                            if (message.publication != null && Object.hasOwnProperty.call(message, "publication"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.publication);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PostgresqlSourceConfig message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.PostgresqlSourceConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.PostgresqlSourceConfig
                         * @static
                         * @param {google.cloud.datastream.v1.IPostgresqlSourceConfig} message PostgresqlSourceConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PostgresqlSourceConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PostgresqlSourceConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.PostgresqlSourceConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.PostgresqlSourceConfig} PostgresqlSourceConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PostgresqlSourceConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.PostgresqlSourceConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.includeObjects = $root.google.cloud.datastream.v1.PostgresqlRdbms.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.excludeObjects = $root.google.cloud.datastream.v1.PostgresqlRdbms.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.replicationSlot = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.publication = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PostgresqlSourceConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.PostgresqlSourceConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.PostgresqlSourceConfig} PostgresqlSourceConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PostgresqlSourceConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PostgresqlSourceConfig message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.PostgresqlSourceConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PostgresqlSourceConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.includeObjects != null && message.hasOwnProperty("includeObjects")) {
                                var error = $root.google.cloud.datastream.v1.PostgresqlRdbms.verify(message.includeObjects);
                                if (error)
                                    return "includeObjects." + error;
                            }
                            if (message.excludeObjects != null && message.hasOwnProperty("excludeObjects")) {
                                var error = $root.google.cloud.datastream.v1.PostgresqlRdbms.verify(message.excludeObjects);
                                if (error)
                                    return "excludeObjects." + error;
                            }
                            if (message.replicationSlot != null && message.hasOwnProperty("replicationSlot"))
                                if (!$util.isString(message.replicationSlot))
                                    return "replicationSlot: string expected";
                            if (message.publication != null && message.hasOwnProperty("publication"))
                                if (!$util.isString(message.publication))
                                    return "publication: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a PostgresqlSourceConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.PostgresqlSourceConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.PostgresqlSourceConfig} PostgresqlSourceConfig
                         */
                        PostgresqlSourceConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.PostgresqlSourceConfig)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.PostgresqlSourceConfig();
                            if (object.includeObjects != null) {
                                if (typeof object.includeObjects !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.PostgresqlSourceConfig.includeObjects: object expected");
                                message.includeObjects = $root.google.cloud.datastream.v1.PostgresqlRdbms.fromObject(object.includeObjects);
                            }
                            if (object.excludeObjects != null) {
                                if (typeof object.excludeObjects !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.PostgresqlSourceConfig.excludeObjects: object expected");
                                message.excludeObjects = $root.google.cloud.datastream.v1.PostgresqlRdbms.fromObject(object.excludeObjects);
                            }
                            if (object.replicationSlot != null)
                                message.replicationSlot = String(object.replicationSlot);
                            if (object.publication != null)
                                message.publication = String(object.publication);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PostgresqlSourceConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.PostgresqlSourceConfig
                         * @static
                         * @param {google.cloud.datastream.v1.PostgresqlSourceConfig} message PostgresqlSourceConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PostgresqlSourceConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.includeObjects = null;
                                object.excludeObjects = null;
                                object.replicationSlot = "";
                                object.publication = "";
                            }
                            if (message.includeObjects != null && message.hasOwnProperty("includeObjects"))
                                object.includeObjects = $root.google.cloud.datastream.v1.PostgresqlRdbms.toObject(message.includeObjects, options);
                            if (message.excludeObjects != null && message.hasOwnProperty("excludeObjects"))
                                object.excludeObjects = $root.google.cloud.datastream.v1.PostgresqlRdbms.toObject(message.excludeObjects, options);
                            if (message.replicationSlot != null && message.hasOwnProperty("replicationSlot"))
                                object.replicationSlot = message.replicationSlot;
                            if (message.publication != null && message.hasOwnProperty("publication"))
                                object.publication = message.publication;
                            return object;
                        };
    
                        /**
                         * Converts this PostgresqlSourceConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.PostgresqlSourceConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PostgresqlSourceConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PostgresqlSourceConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.PostgresqlSourceConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PostgresqlSourceConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.PostgresqlSourceConfig";
                        };
    
                        return PostgresqlSourceConfig;
                    })();
    
                    v1.MysqlColumn = (function() {
    
                        /**
                         * Properties of a MysqlColumn.
                         * @memberof google.cloud.datastream.v1
                         * @interface IMysqlColumn
                         * @property {string|null} [column] MysqlColumn column
                         * @property {string|null} [dataType] MysqlColumn dataType
                         * @property {number|null} [length] MysqlColumn length
                         * @property {string|null} [collation] MysqlColumn collation
                         * @property {boolean|null} [primaryKey] MysqlColumn primaryKey
                         * @property {boolean|null} [nullable] MysqlColumn nullable
                         * @property {number|null} [ordinalPosition] MysqlColumn ordinalPosition
                         */
    
                        /**
                         * Constructs a new MysqlColumn.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a MysqlColumn.
                         * @implements IMysqlColumn
                         * @constructor
                         * @param {google.cloud.datastream.v1.IMysqlColumn=} [properties] Properties to set
                         */
                        function MysqlColumn(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MysqlColumn column.
                         * @member {string} column
                         * @memberof google.cloud.datastream.v1.MysqlColumn
                         * @instance
                         */
                        MysqlColumn.prototype.column = "";
    
                        /**
                         * MysqlColumn dataType.
                         * @member {string} dataType
                         * @memberof google.cloud.datastream.v1.MysqlColumn
                         * @instance
                         */
                        MysqlColumn.prototype.dataType = "";
    
                        /**
                         * MysqlColumn length.
                         * @member {number} length
                         * @memberof google.cloud.datastream.v1.MysqlColumn
                         * @instance
                         */
                        MysqlColumn.prototype.length = 0;
    
                        /**
                         * MysqlColumn collation.
                         * @member {string} collation
                         * @memberof google.cloud.datastream.v1.MysqlColumn
                         * @instance
                         */
                        MysqlColumn.prototype.collation = "";
    
                        /**
                         * MysqlColumn primaryKey.
                         * @member {boolean} primaryKey
                         * @memberof google.cloud.datastream.v1.MysqlColumn
                         * @instance
                         */
                        MysqlColumn.prototype.primaryKey = false;
    
                        /**
                         * MysqlColumn nullable.
                         * @member {boolean} nullable
                         * @memberof google.cloud.datastream.v1.MysqlColumn
                         * @instance
                         */
                        MysqlColumn.prototype.nullable = false;
    
                        /**
                         * MysqlColumn ordinalPosition.
                         * @member {number} ordinalPosition
                         * @memberof google.cloud.datastream.v1.MysqlColumn
                         * @instance
                         */
                        MysqlColumn.prototype.ordinalPosition = 0;
    
                        /**
                         * Creates a new MysqlColumn instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.MysqlColumn
                         * @static
                         * @param {google.cloud.datastream.v1.IMysqlColumn=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.MysqlColumn} MysqlColumn instance
                         */
                        MysqlColumn.create = function create(properties) {
                            return new MysqlColumn(properties);
                        };
    
                        /**
                         * Encodes the specified MysqlColumn message. Does not implicitly {@link google.cloud.datastream.v1.MysqlColumn.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.MysqlColumn
                         * @static
                         * @param {google.cloud.datastream.v1.IMysqlColumn} message MysqlColumn message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MysqlColumn.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.column != null && Object.hasOwnProperty.call(message, "column"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.column);
                            if (message.dataType != null && Object.hasOwnProperty.call(message, "dataType"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.dataType);
                            if (message.length != null && Object.hasOwnProperty.call(message, "length"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.length);
                            if (message.collation != null && Object.hasOwnProperty.call(message, "collation"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.collation);
                            if (message.primaryKey != null && Object.hasOwnProperty.call(message, "primaryKey"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.primaryKey);
                            if (message.nullable != null && Object.hasOwnProperty.call(message, "nullable"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.nullable);
                            if (message.ordinalPosition != null && Object.hasOwnProperty.call(message, "ordinalPosition"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.ordinalPosition);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MysqlColumn message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.MysqlColumn.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.MysqlColumn
                         * @static
                         * @param {google.cloud.datastream.v1.IMysqlColumn} message MysqlColumn message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MysqlColumn.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MysqlColumn message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.MysqlColumn
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.MysqlColumn} MysqlColumn
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MysqlColumn.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.MysqlColumn();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.column = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.dataType = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.length = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.collation = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.primaryKey = reader.bool();
                                        break;
                                    }
                                case 6: {
                                        message.nullable = reader.bool();
                                        break;
                                    }
                                case 7: {
                                        message.ordinalPosition = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MysqlColumn message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.MysqlColumn
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.MysqlColumn} MysqlColumn
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MysqlColumn.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MysqlColumn message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.MysqlColumn
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MysqlColumn.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.column != null && message.hasOwnProperty("column"))
                                if (!$util.isString(message.column))
                                    return "column: string expected";
                            if (message.dataType != null && message.hasOwnProperty("dataType"))
                                if (!$util.isString(message.dataType))
                                    return "dataType: string expected";
                            if (message.length != null && message.hasOwnProperty("length"))
                                if (!$util.isInteger(message.length))
                                    return "length: integer expected";
                            if (message.collation != null && message.hasOwnProperty("collation"))
                                if (!$util.isString(message.collation))
                                    return "collation: string expected";
                            if (message.primaryKey != null && message.hasOwnProperty("primaryKey"))
                                if (typeof message.primaryKey !== "boolean")
                                    return "primaryKey: boolean expected";
                            if (message.nullable != null && message.hasOwnProperty("nullable"))
                                if (typeof message.nullable !== "boolean")
                                    return "nullable: boolean expected";
                            if (message.ordinalPosition != null && message.hasOwnProperty("ordinalPosition"))
                                if (!$util.isInteger(message.ordinalPosition))
                                    return "ordinalPosition: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a MysqlColumn message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.MysqlColumn
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.MysqlColumn} MysqlColumn
                         */
                        MysqlColumn.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.MysqlColumn)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.MysqlColumn();
                            if (object.column != null)
                                message.column = String(object.column);
                            if (object.dataType != null)
                                message.dataType = String(object.dataType);
                            if (object.length != null)
                                message.length = object.length | 0;
                            if (object.collation != null)
                                message.collation = String(object.collation);
                            if (object.primaryKey != null)
                                message.primaryKey = Boolean(object.primaryKey);
                            if (object.nullable != null)
                                message.nullable = Boolean(object.nullable);
                            if (object.ordinalPosition != null)
                                message.ordinalPosition = object.ordinalPosition | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MysqlColumn message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.MysqlColumn
                         * @static
                         * @param {google.cloud.datastream.v1.MysqlColumn} message MysqlColumn
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MysqlColumn.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.column = "";
                                object.dataType = "";
                                object.length = 0;
                                object.collation = "";
                                object.primaryKey = false;
                                object.nullable = false;
                                object.ordinalPosition = 0;
                            }
                            if (message.column != null && message.hasOwnProperty("column"))
                                object.column = message.column;
                            if (message.dataType != null && message.hasOwnProperty("dataType"))
                                object.dataType = message.dataType;
                            if (message.length != null && message.hasOwnProperty("length"))
                                object.length = message.length;
                            if (message.collation != null && message.hasOwnProperty("collation"))
                                object.collation = message.collation;
                            if (message.primaryKey != null && message.hasOwnProperty("primaryKey"))
                                object.primaryKey = message.primaryKey;
                            if (message.nullable != null && message.hasOwnProperty("nullable"))
                                object.nullable = message.nullable;
                            if (message.ordinalPosition != null && message.hasOwnProperty("ordinalPosition"))
                                object.ordinalPosition = message.ordinalPosition;
                            return object;
                        };
    
                        /**
                         * Converts this MysqlColumn to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.MysqlColumn
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MysqlColumn.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MysqlColumn
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.MysqlColumn
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MysqlColumn.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.MysqlColumn";
                        };
    
                        return MysqlColumn;
                    })();
    
                    v1.MysqlTable = (function() {
    
                        /**
                         * Properties of a MysqlTable.
                         * @memberof google.cloud.datastream.v1
                         * @interface IMysqlTable
                         * @property {string|null} [table] MysqlTable table
                         * @property {Array.<google.cloud.datastream.v1.IMysqlColumn>|null} [mysqlColumns] MysqlTable mysqlColumns
                         */
    
                        /**
                         * Constructs a new MysqlTable.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a MysqlTable.
                         * @implements IMysqlTable
                         * @constructor
                         * @param {google.cloud.datastream.v1.IMysqlTable=} [properties] Properties to set
                         */
                        function MysqlTable(properties) {
                            this.mysqlColumns = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MysqlTable table.
                         * @member {string} table
                         * @memberof google.cloud.datastream.v1.MysqlTable
                         * @instance
                         */
                        MysqlTable.prototype.table = "";
    
                        /**
                         * MysqlTable mysqlColumns.
                         * @member {Array.<google.cloud.datastream.v1.IMysqlColumn>} mysqlColumns
                         * @memberof google.cloud.datastream.v1.MysqlTable
                         * @instance
                         */
                        MysqlTable.prototype.mysqlColumns = $util.emptyArray;
    
                        /**
                         * Creates a new MysqlTable instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.MysqlTable
                         * @static
                         * @param {google.cloud.datastream.v1.IMysqlTable=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.MysqlTable} MysqlTable instance
                         */
                        MysqlTable.create = function create(properties) {
                            return new MysqlTable(properties);
                        };
    
                        /**
                         * Encodes the specified MysqlTable message. Does not implicitly {@link google.cloud.datastream.v1.MysqlTable.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.MysqlTable
                         * @static
                         * @param {google.cloud.datastream.v1.IMysqlTable} message MysqlTable message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MysqlTable.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.table != null && Object.hasOwnProperty.call(message, "table"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.table);
                            if (message.mysqlColumns != null && message.mysqlColumns.length)
                                for (var i = 0; i < message.mysqlColumns.length; ++i)
                                    $root.google.cloud.datastream.v1.MysqlColumn.encode(message.mysqlColumns[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MysqlTable message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.MysqlTable.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.MysqlTable
                         * @static
                         * @param {google.cloud.datastream.v1.IMysqlTable} message MysqlTable message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MysqlTable.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MysqlTable message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.MysqlTable
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.MysqlTable} MysqlTable
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MysqlTable.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.MysqlTable();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.table = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.mysqlColumns && message.mysqlColumns.length))
                                            message.mysqlColumns = [];
                                        message.mysqlColumns.push($root.google.cloud.datastream.v1.MysqlColumn.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MysqlTable message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.MysqlTable
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.MysqlTable} MysqlTable
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MysqlTable.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MysqlTable message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.MysqlTable
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MysqlTable.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.table != null && message.hasOwnProperty("table"))
                                if (!$util.isString(message.table))
                                    return "table: string expected";
                            if (message.mysqlColumns != null && message.hasOwnProperty("mysqlColumns")) {
                                if (!Array.isArray(message.mysqlColumns))
                                    return "mysqlColumns: array expected";
                                for (var i = 0; i < message.mysqlColumns.length; ++i) {
                                    var error = $root.google.cloud.datastream.v1.MysqlColumn.verify(message.mysqlColumns[i]);
                                    if (error)
                                        return "mysqlColumns." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a MysqlTable message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.MysqlTable
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.MysqlTable} MysqlTable
                         */
                        MysqlTable.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.MysqlTable)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.MysqlTable();
                            if (object.table != null)
                                message.table = String(object.table);
                            if (object.mysqlColumns) {
                                if (!Array.isArray(object.mysqlColumns))
                                    throw TypeError(".google.cloud.datastream.v1.MysqlTable.mysqlColumns: array expected");
                                message.mysqlColumns = [];
                                for (var i = 0; i < object.mysqlColumns.length; ++i) {
                                    if (typeof object.mysqlColumns[i] !== "object")
                                        throw TypeError(".google.cloud.datastream.v1.MysqlTable.mysqlColumns: object expected");
                                    message.mysqlColumns[i] = $root.google.cloud.datastream.v1.MysqlColumn.fromObject(object.mysqlColumns[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MysqlTable message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.MysqlTable
                         * @static
                         * @param {google.cloud.datastream.v1.MysqlTable} message MysqlTable
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MysqlTable.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.mysqlColumns = [];
                            if (options.defaults)
                                object.table = "";
                            if (message.table != null && message.hasOwnProperty("table"))
                                object.table = message.table;
                            if (message.mysqlColumns && message.mysqlColumns.length) {
                                object.mysqlColumns = [];
                                for (var j = 0; j < message.mysqlColumns.length; ++j)
                                    object.mysqlColumns[j] = $root.google.cloud.datastream.v1.MysqlColumn.toObject(message.mysqlColumns[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this MysqlTable to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.MysqlTable
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MysqlTable.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MysqlTable
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.MysqlTable
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MysqlTable.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.MysqlTable";
                        };
    
                        return MysqlTable;
                    })();
    
                    v1.MysqlDatabase = (function() {
    
                        /**
                         * Properties of a MysqlDatabase.
                         * @memberof google.cloud.datastream.v1
                         * @interface IMysqlDatabase
                         * @property {string|null} [database] MysqlDatabase database
                         * @property {Array.<google.cloud.datastream.v1.IMysqlTable>|null} [mysqlTables] MysqlDatabase mysqlTables
                         */
    
                        /**
                         * Constructs a new MysqlDatabase.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a MysqlDatabase.
                         * @implements IMysqlDatabase
                         * @constructor
                         * @param {google.cloud.datastream.v1.IMysqlDatabase=} [properties] Properties to set
                         */
                        function MysqlDatabase(properties) {
                            this.mysqlTables = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MysqlDatabase database.
                         * @member {string} database
                         * @memberof google.cloud.datastream.v1.MysqlDatabase
                         * @instance
                         */
                        MysqlDatabase.prototype.database = "";
    
                        /**
                         * MysqlDatabase mysqlTables.
                         * @member {Array.<google.cloud.datastream.v1.IMysqlTable>} mysqlTables
                         * @memberof google.cloud.datastream.v1.MysqlDatabase
                         * @instance
                         */
                        MysqlDatabase.prototype.mysqlTables = $util.emptyArray;
    
                        /**
                         * Creates a new MysqlDatabase instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.MysqlDatabase
                         * @static
                         * @param {google.cloud.datastream.v1.IMysqlDatabase=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.MysqlDatabase} MysqlDatabase instance
                         */
                        MysqlDatabase.create = function create(properties) {
                            return new MysqlDatabase(properties);
                        };
    
                        /**
                         * Encodes the specified MysqlDatabase message. Does not implicitly {@link google.cloud.datastream.v1.MysqlDatabase.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.MysqlDatabase
                         * @static
                         * @param {google.cloud.datastream.v1.IMysqlDatabase} message MysqlDatabase message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MysqlDatabase.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.database != null && Object.hasOwnProperty.call(message, "database"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.database);
                            if (message.mysqlTables != null && message.mysqlTables.length)
                                for (var i = 0; i < message.mysqlTables.length; ++i)
                                    $root.google.cloud.datastream.v1.MysqlTable.encode(message.mysqlTables[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MysqlDatabase message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.MysqlDatabase.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.MysqlDatabase
                         * @static
                         * @param {google.cloud.datastream.v1.IMysqlDatabase} message MysqlDatabase message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MysqlDatabase.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MysqlDatabase message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.MysqlDatabase
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.MysqlDatabase} MysqlDatabase
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MysqlDatabase.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.MysqlDatabase();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.database = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.mysqlTables && message.mysqlTables.length))
                                            message.mysqlTables = [];
                                        message.mysqlTables.push($root.google.cloud.datastream.v1.MysqlTable.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MysqlDatabase message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.MysqlDatabase
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.MysqlDatabase} MysqlDatabase
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MysqlDatabase.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MysqlDatabase message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.MysqlDatabase
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MysqlDatabase.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.database != null && message.hasOwnProperty("database"))
                                if (!$util.isString(message.database))
                                    return "database: string expected";
                            if (message.mysqlTables != null && message.hasOwnProperty("mysqlTables")) {
                                if (!Array.isArray(message.mysqlTables))
                                    return "mysqlTables: array expected";
                                for (var i = 0; i < message.mysqlTables.length; ++i) {
                                    var error = $root.google.cloud.datastream.v1.MysqlTable.verify(message.mysqlTables[i]);
                                    if (error)
                                        return "mysqlTables." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a MysqlDatabase message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.MysqlDatabase
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.MysqlDatabase} MysqlDatabase
                         */
                        MysqlDatabase.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.MysqlDatabase)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.MysqlDatabase();
                            if (object.database != null)
                                message.database = String(object.database);
                            if (object.mysqlTables) {
                                if (!Array.isArray(object.mysqlTables))
                                    throw TypeError(".google.cloud.datastream.v1.MysqlDatabase.mysqlTables: array expected");
                                message.mysqlTables = [];
                                for (var i = 0; i < object.mysqlTables.length; ++i) {
                                    if (typeof object.mysqlTables[i] !== "object")
                                        throw TypeError(".google.cloud.datastream.v1.MysqlDatabase.mysqlTables: object expected");
                                    message.mysqlTables[i] = $root.google.cloud.datastream.v1.MysqlTable.fromObject(object.mysqlTables[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MysqlDatabase message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.MysqlDatabase
                         * @static
                         * @param {google.cloud.datastream.v1.MysqlDatabase} message MysqlDatabase
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MysqlDatabase.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.mysqlTables = [];
                            if (options.defaults)
                                object.database = "";
                            if (message.database != null && message.hasOwnProperty("database"))
                                object.database = message.database;
                            if (message.mysqlTables && message.mysqlTables.length) {
                                object.mysqlTables = [];
                                for (var j = 0; j < message.mysqlTables.length; ++j)
                                    object.mysqlTables[j] = $root.google.cloud.datastream.v1.MysqlTable.toObject(message.mysqlTables[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this MysqlDatabase to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.MysqlDatabase
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MysqlDatabase.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MysqlDatabase
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.MysqlDatabase
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MysqlDatabase.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.MysqlDatabase";
                        };
    
                        return MysqlDatabase;
                    })();
    
                    v1.MysqlRdbms = (function() {
    
                        /**
                         * Properties of a MysqlRdbms.
                         * @memberof google.cloud.datastream.v1
                         * @interface IMysqlRdbms
                         * @property {Array.<google.cloud.datastream.v1.IMysqlDatabase>|null} [mysqlDatabases] MysqlRdbms mysqlDatabases
                         */
    
                        /**
                         * Constructs a new MysqlRdbms.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a MysqlRdbms.
                         * @implements IMysqlRdbms
                         * @constructor
                         * @param {google.cloud.datastream.v1.IMysqlRdbms=} [properties] Properties to set
                         */
                        function MysqlRdbms(properties) {
                            this.mysqlDatabases = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MysqlRdbms mysqlDatabases.
                         * @member {Array.<google.cloud.datastream.v1.IMysqlDatabase>} mysqlDatabases
                         * @memberof google.cloud.datastream.v1.MysqlRdbms
                         * @instance
                         */
                        MysqlRdbms.prototype.mysqlDatabases = $util.emptyArray;
    
                        /**
                         * Creates a new MysqlRdbms instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.MysqlRdbms
                         * @static
                         * @param {google.cloud.datastream.v1.IMysqlRdbms=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.MysqlRdbms} MysqlRdbms instance
                         */
                        MysqlRdbms.create = function create(properties) {
                            return new MysqlRdbms(properties);
                        };
    
                        /**
                         * Encodes the specified MysqlRdbms message. Does not implicitly {@link google.cloud.datastream.v1.MysqlRdbms.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.MysqlRdbms
                         * @static
                         * @param {google.cloud.datastream.v1.IMysqlRdbms} message MysqlRdbms message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MysqlRdbms.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.mysqlDatabases != null && message.mysqlDatabases.length)
                                for (var i = 0; i < message.mysqlDatabases.length; ++i)
                                    $root.google.cloud.datastream.v1.MysqlDatabase.encode(message.mysqlDatabases[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MysqlRdbms message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.MysqlRdbms.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.MysqlRdbms
                         * @static
                         * @param {google.cloud.datastream.v1.IMysqlRdbms} message MysqlRdbms message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MysqlRdbms.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MysqlRdbms message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.MysqlRdbms
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.MysqlRdbms} MysqlRdbms
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MysqlRdbms.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.MysqlRdbms();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.mysqlDatabases && message.mysqlDatabases.length))
                                            message.mysqlDatabases = [];
                                        message.mysqlDatabases.push($root.google.cloud.datastream.v1.MysqlDatabase.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MysqlRdbms message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.MysqlRdbms
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.MysqlRdbms} MysqlRdbms
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MysqlRdbms.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MysqlRdbms message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.MysqlRdbms
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MysqlRdbms.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.mysqlDatabases != null && message.hasOwnProperty("mysqlDatabases")) {
                                if (!Array.isArray(message.mysqlDatabases))
                                    return "mysqlDatabases: array expected";
                                for (var i = 0; i < message.mysqlDatabases.length; ++i) {
                                    var error = $root.google.cloud.datastream.v1.MysqlDatabase.verify(message.mysqlDatabases[i]);
                                    if (error)
                                        return "mysqlDatabases." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a MysqlRdbms message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.MysqlRdbms
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.MysqlRdbms} MysqlRdbms
                         */
                        MysqlRdbms.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.MysqlRdbms)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.MysqlRdbms();
                            if (object.mysqlDatabases) {
                                if (!Array.isArray(object.mysqlDatabases))
                                    throw TypeError(".google.cloud.datastream.v1.MysqlRdbms.mysqlDatabases: array expected");
                                message.mysqlDatabases = [];
                                for (var i = 0; i < object.mysqlDatabases.length; ++i) {
                                    if (typeof object.mysqlDatabases[i] !== "object")
                                        throw TypeError(".google.cloud.datastream.v1.MysqlRdbms.mysqlDatabases: object expected");
                                    message.mysqlDatabases[i] = $root.google.cloud.datastream.v1.MysqlDatabase.fromObject(object.mysqlDatabases[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MysqlRdbms message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.MysqlRdbms
                         * @static
                         * @param {google.cloud.datastream.v1.MysqlRdbms} message MysqlRdbms
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MysqlRdbms.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.mysqlDatabases = [];
                            if (message.mysqlDatabases && message.mysqlDatabases.length) {
                                object.mysqlDatabases = [];
                                for (var j = 0; j < message.mysqlDatabases.length; ++j)
                                    object.mysqlDatabases[j] = $root.google.cloud.datastream.v1.MysqlDatabase.toObject(message.mysqlDatabases[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this MysqlRdbms to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.MysqlRdbms
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MysqlRdbms.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MysqlRdbms
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.MysqlRdbms
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MysqlRdbms.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.MysqlRdbms";
                        };
    
                        return MysqlRdbms;
                    })();
    
                    v1.MysqlSourceConfig = (function() {
    
                        /**
                         * Properties of a MysqlSourceConfig.
                         * @memberof google.cloud.datastream.v1
                         * @interface IMysqlSourceConfig
                         * @property {google.cloud.datastream.v1.IMysqlRdbms|null} [includeObjects] MysqlSourceConfig includeObjects
                         * @property {google.cloud.datastream.v1.IMysqlRdbms|null} [excludeObjects] MysqlSourceConfig excludeObjects
                         * @property {number|null} [maxConcurrentCdcTasks] MysqlSourceConfig maxConcurrentCdcTasks
                         */
    
                        /**
                         * Constructs a new MysqlSourceConfig.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a MysqlSourceConfig.
                         * @implements IMysqlSourceConfig
                         * @constructor
                         * @param {google.cloud.datastream.v1.IMysqlSourceConfig=} [properties] Properties to set
                         */
                        function MysqlSourceConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MysqlSourceConfig includeObjects.
                         * @member {google.cloud.datastream.v1.IMysqlRdbms|null|undefined} includeObjects
                         * @memberof google.cloud.datastream.v1.MysqlSourceConfig
                         * @instance
                         */
                        MysqlSourceConfig.prototype.includeObjects = null;
    
                        /**
                         * MysqlSourceConfig excludeObjects.
                         * @member {google.cloud.datastream.v1.IMysqlRdbms|null|undefined} excludeObjects
                         * @memberof google.cloud.datastream.v1.MysqlSourceConfig
                         * @instance
                         */
                        MysqlSourceConfig.prototype.excludeObjects = null;
    
                        /**
                         * MysqlSourceConfig maxConcurrentCdcTasks.
                         * @member {number} maxConcurrentCdcTasks
                         * @memberof google.cloud.datastream.v1.MysqlSourceConfig
                         * @instance
                         */
                        MysqlSourceConfig.prototype.maxConcurrentCdcTasks = 0;
    
                        /**
                         * Creates a new MysqlSourceConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.MysqlSourceConfig
                         * @static
                         * @param {google.cloud.datastream.v1.IMysqlSourceConfig=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.MysqlSourceConfig} MysqlSourceConfig instance
                         */
                        MysqlSourceConfig.create = function create(properties) {
                            return new MysqlSourceConfig(properties);
                        };
    
                        /**
                         * Encodes the specified MysqlSourceConfig message. Does not implicitly {@link google.cloud.datastream.v1.MysqlSourceConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.MysqlSourceConfig
                         * @static
                         * @param {google.cloud.datastream.v1.IMysqlSourceConfig} message MysqlSourceConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MysqlSourceConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.includeObjects != null && Object.hasOwnProperty.call(message, "includeObjects"))
                                $root.google.cloud.datastream.v1.MysqlRdbms.encode(message.includeObjects, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.excludeObjects != null && Object.hasOwnProperty.call(message, "excludeObjects"))
                                $root.google.cloud.datastream.v1.MysqlRdbms.encode(message.excludeObjects, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.maxConcurrentCdcTasks != null && Object.hasOwnProperty.call(message, "maxConcurrentCdcTasks"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.maxConcurrentCdcTasks);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MysqlSourceConfig message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.MysqlSourceConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.MysqlSourceConfig
                         * @static
                         * @param {google.cloud.datastream.v1.IMysqlSourceConfig} message MysqlSourceConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MysqlSourceConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MysqlSourceConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.MysqlSourceConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.MysqlSourceConfig} MysqlSourceConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MysqlSourceConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.MysqlSourceConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.includeObjects = $root.google.cloud.datastream.v1.MysqlRdbms.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.excludeObjects = $root.google.cloud.datastream.v1.MysqlRdbms.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.maxConcurrentCdcTasks = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MysqlSourceConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.MysqlSourceConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.MysqlSourceConfig} MysqlSourceConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MysqlSourceConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MysqlSourceConfig message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.MysqlSourceConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MysqlSourceConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.includeObjects != null && message.hasOwnProperty("includeObjects")) {
                                var error = $root.google.cloud.datastream.v1.MysqlRdbms.verify(message.includeObjects);
                                if (error)
                                    return "includeObjects." + error;
                            }
                            if (message.excludeObjects != null && message.hasOwnProperty("excludeObjects")) {
                                var error = $root.google.cloud.datastream.v1.MysqlRdbms.verify(message.excludeObjects);
                                if (error)
                                    return "excludeObjects." + error;
                            }
                            if (message.maxConcurrentCdcTasks != null && message.hasOwnProperty("maxConcurrentCdcTasks"))
                                if (!$util.isInteger(message.maxConcurrentCdcTasks))
                                    return "maxConcurrentCdcTasks: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a MysqlSourceConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.MysqlSourceConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.MysqlSourceConfig} MysqlSourceConfig
                         */
                        MysqlSourceConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.MysqlSourceConfig)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.MysqlSourceConfig();
                            if (object.includeObjects != null) {
                                if (typeof object.includeObjects !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.MysqlSourceConfig.includeObjects: object expected");
                                message.includeObjects = $root.google.cloud.datastream.v1.MysqlRdbms.fromObject(object.includeObjects);
                            }
                            if (object.excludeObjects != null) {
                                if (typeof object.excludeObjects !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.MysqlSourceConfig.excludeObjects: object expected");
                                message.excludeObjects = $root.google.cloud.datastream.v1.MysqlRdbms.fromObject(object.excludeObjects);
                            }
                            if (object.maxConcurrentCdcTasks != null)
                                message.maxConcurrentCdcTasks = object.maxConcurrentCdcTasks | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MysqlSourceConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.MysqlSourceConfig
                         * @static
                         * @param {google.cloud.datastream.v1.MysqlSourceConfig} message MysqlSourceConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MysqlSourceConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.includeObjects = null;
                                object.excludeObjects = null;
                                object.maxConcurrentCdcTasks = 0;
                            }
                            if (message.includeObjects != null && message.hasOwnProperty("includeObjects"))
                                object.includeObjects = $root.google.cloud.datastream.v1.MysqlRdbms.toObject(message.includeObjects, options);
                            if (message.excludeObjects != null && message.hasOwnProperty("excludeObjects"))
                                object.excludeObjects = $root.google.cloud.datastream.v1.MysqlRdbms.toObject(message.excludeObjects, options);
                            if (message.maxConcurrentCdcTasks != null && message.hasOwnProperty("maxConcurrentCdcTasks"))
                                object.maxConcurrentCdcTasks = message.maxConcurrentCdcTasks;
                            return object;
                        };
    
                        /**
                         * Converts this MysqlSourceConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.MysqlSourceConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MysqlSourceConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MysqlSourceConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.MysqlSourceConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MysqlSourceConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.MysqlSourceConfig";
                        };
    
                        return MysqlSourceConfig;
                    })();
    
                    v1.SourceConfig = (function() {
    
                        /**
                         * Properties of a SourceConfig.
                         * @memberof google.cloud.datastream.v1
                         * @interface ISourceConfig
                         * @property {string|null} [sourceConnectionProfile] SourceConfig sourceConnectionProfile
                         * @property {google.cloud.datastream.v1.IOracleSourceConfig|null} [oracleSourceConfig] SourceConfig oracleSourceConfig
                         * @property {google.cloud.datastream.v1.IMysqlSourceConfig|null} [mysqlSourceConfig] SourceConfig mysqlSourceConfig
                         * @property {google.cloud.datastream.v1.IPostgresqlSourceConfig|null} [postgresqlSourceConfig] SourceConfig postgresqlSourceConfig
                         */
    
                        /**
                         * Constructs a new SourceConfig.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a SourceConfig.
                         * @implements ISourceConfig
                         * @constructor
                         * @param {google.cloud.datastream.v1.ISourceConfig=} [properties] Properties to set
                         */
                        function SourceConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SourceConfig sourceConnectionProfile.
                         * @member {string} sourceConnectionProfile
                         * @memberof google.cloud.datastream.v1.SourceConfig
                         * @instance
                         */
                        SourceConfig.prototype.sourceConnectionProfile = "";
    
                        /**
                         * SourceConfig oracleSourceConfig.
                         * @member {google.cloud.datastream.v1.IOracleSourceConfig|null|undefined} oracleSourceConfig
                         * @memberof google.cloud.datastream.v1.SourceConfig
                         * @instance
                         */
                        SourceConfig.prototype.oracleSourceConfig = null;
    
                        /**
                         * SourceConfig mysqlSourceConfig.
                         * @member {google.cloud.datastream.v1.IMysqlSourceConfig|null|undefined} mysqlSourceConfig
                         * @memberof google.cloud.datastream.v1.SourceConfig
                         * @instance
                         */
                        SourceConfig.prototype.mysqlSourceConfig = null;
    
                        /**
                         * SourceConfig postgresqlSourceConfig.
                         * @member {google.cloud.datastream.v1.IPostgresqlSourceConfig|null|undefined} postgresqlSourceConfig
                         * @memberof google.cloud.datastream.v1.SourceConfig
                         * @instance
                         */
                        SourceConfig.prototype.postgresqlSourceConfig = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * SourceConfig sourceStreamConfig.
                         * @member {"oracleSourceConfig"|"mysqlSourceConfig"|"postgresqlSourceConfig"|undefined} sourceStreamConfig
                         * @memberof google.cloud.datastream.v1.SourceConfig
                         * @instance
                         */
                        Object.defineProperty(SourceConfig.prototype, "sourceStreamConfig", {
                            get: $util.oneOfGetter($oneOfFields = ["oracleSourceConfig", "mysqlSourceConfig", "postgresqlSourceConfig"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new SourceConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.SourceConfig
                         * @static
                         * @param {google.cloud.datastream.v1.ISourceConfig=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.SourceConfig} SourceConfig instance
                         */
                        SourceConfig.create = function create(properties) {
                            return new SourceConfig(properties);
                        };
    
                        /**
                         * Encodes the specified SourceConfig message. Does not implicitly {@link google.cloud.datastream.v1.SourceConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.SourceConfig
                         * @static
                         * @param {google.cloud.datastream.v1.ISourceConfig} message SourceConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SourceConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.sourceConnectionProfile != null && Object.hasOwnProperty.call(message, "sourceConnectionProfile"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.sourceConnectionProfile);
                            if (message.oracleSourceConfig != null && Object.hasOwnProperty.call(message, "oracleSourceConfig"))
                                $root.google.cloud.datastream.v1.OracleSourceConfig.encode(message.oracleSourceConfig, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            if (message.mysqlSourceConfig != null && Object.hasOwnProperty.call(message, "mysqlSourceConfig"))
                                $root.google.cloud.datastream.v1.MysqlSourceConfig.encode(message.mysqlSourceConfig, writer.uint32(/* id 101, wireType 2 =*/810).fork()).ldelim();
                            if (message.postgresqlSourceConfig != null && Object.hasOwnProperty.call(message, "postgresqlSourceConfig"))
                                $root.google.cloud.datastream.v1.PostgresqlSourceConfig.encode(message.postgresqlSourceConfig, writer.uint32(/* id 102, wireType 2 =*/818).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SourceConfig message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.SourceConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.SourceConfig
                         * @static
                         * @param {google.cloud.datastream.v1.ISourceConfig} message SourceConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SourceConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SourceConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.SourceConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.SourceConfig} SourceConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SourceConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.SourceConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.sourceConnectionProfile = reader.string();
                                        break;
                                    }
                                case 100: {
                                        message.oracleSourceConfig = $root.google.cloud.datastream.v1.OracleSourceConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 101: {
                                        message.mysqlSourceConfig = $root.google.cloud.datastream.v1.MysqlSourceConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 102: {
                                        message.postgresqlSourceConfig = $root.google.cloud.datastream.v1.PostgresqlSourceConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SourceConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.SourceConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.SourceConfig} SourceConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SourceConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SourceConfig message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.SourceConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SourceConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.sourceConnectionProfile != null && message.hasOwnProperty("sourceConnectionProfile"))
                                if (!$util.isString(message.sourceConnectionProfile))
                                    return "sourceConnectionProfile: string expected";
                            if (message.oracleSourceConfig != null && message.hasOwnProperty("oracleSourceConfig")) {
                                properties.sourceStreamConfig = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1.OracleSourceConfig.verify(message.oracleSourceConfig);
                                    if (error)
                                        return "oracleSourceConfig." + error;
                                }
                            }
                            if (message.mysqlSourceConfig != null && message.hasOwnProperty("mysqlSourceConfig")) {
                                if (properties.sourceStreamConfig === 1)
                                    return "sourceStreamConfig: multiple values";
                                properties.sourceStreamConfig = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1.MysqlSourceConfig.verify(message.mysqlSourceConfig);
                                    if (error)
                                        return "mysqlSourceConfig." + error;
                                }
                            }
                            if (message.postgresqlSourceConfig != null && message.hasOwnProperty("postgresqlSourceConfig")) {
                                if (properties.sourceStreamConfig === 1)
                                    return "sourceStreamConfig: multiple values";
                                properties.sourceStreamConfig = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1.PostgresqlSourceConfig.verify(message.postgresqlSourceConfig);
                                    if (error)
                                        return "postgresqlSourceConfig." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SourceConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.SourceConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.SourceConfig} SourceConfig
                         */
                        SourceConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.SourceConfig)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.SourceConfig();
                            if (object.sourceConnectionProfile != null)
                                message.sourceConnectionProfile = String(object.sourceConnectionProfile);
                            if (object.oracleSourceConfig != null) {
                                if (typeof object.oracleSourceConfig !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.SourceConfig.oracleSourceConfig: object expected");
                                message.oracleSourceConfig = $root.google.cloud.datastream.v1.OracleSourceConfig.fromObject(object.oracleSourceConfig);
                            }
                            if (object.mysqlSourceConfig != null) {
                                if (typeof object.mysqlSourceConfig !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.SourceConfig.mysqlSourceConfig: object expected");
                                message.mysqlSourceConfig = $root.google.cloud.datastream.v1.MysqlSourceConfig.fromObject(object.mysqlSourceConfig);
                            }
                            if (object.postgresqlSourceConfig != null) {
                                if (typeof object.postgresqlSourceConfig !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.SourceConfig.postgresqlSourceConfig: object expected");
                                message.postgresqlSourceConfig = $root.google.cloud.datastream.v1.PostgresqlSourceConfig.fromObject(object.postgresqlSourceConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SourceConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.SourceConfig
                         * @static
                         * @param {google.cloud.datastream.v1.SourceConfig} message SourceConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SourceConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.sourceConnectionProfile = "";
                            if (message.sourceConnectionProfile != null && message.hasOwnProperty("sourceConnectionProfile"))
                                object.sourceConnectionProfile = message.sourceConnectionProfile;
                            if (message.oracleSourceConfig != null && message.hasOwnProperty("oracleSourceConfig")) {
                                object.oracleSourceConfig = $root.google.cloud.datastream.v1.OracleSourceConfig.toObject(message.oracleSourceConfig, options);
                                if (options.oneofs)
                                    object.sourceStreamConfig = "oracleSourceConfig";
                            }
                            if (message.mysqlSourceConfig != null && message.hasOwnProperty("mysqlSourceConfig")) {
                                object.mysqlSourceConfig = $root.google.cloud.datastream.v1.MysqlSourceConfig.toObject(message.mysqlSourceConfig, options);
                                if (options.oneofs)
                                    object.sourceStreamConfig = "mysqlSourceConfig";
                            }
                            if (message.postgresqlSourceConfig != null && message.hasOwnProperty("postgresqlSourceConfig")) {
                                object.postgresqlSourceConfig = $root.google.cloud.datastream.v1.PostgresqlSourceConfig.toObject(message.postgresqlSourceConfig, options);
                                if (options.oneofs)
                                    object.sourceStreamConfig = "postgresqlSourceConfig";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this SourceConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.SourceConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SourceConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SourceConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.SourceConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SourceConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.SourceConfig";
                        };
    
                        return SourceConfig;
                    })();
    
                    v1.AvroFileFormat = (function() {
    
                        /**
                         * Properties of an AvroFileFormat.
                         * @memberof google.cloud.datastream.v1
                         * @interface IAvroFileFormat
                         */
    
                        /**
                         * Constructs a new AvroFileFormat.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents an AvroFileFormat.
                         * @implements IAvroFileFormat
                         * @constructor
                         * @param {google.cloud.datastream.v1.IAvroFileFormat=} [properties] Properties to set
                         */
                        function AvroFileFormat(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new AvroFileFormat instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.AvroFileFormat
                         * @static
                         * @param {google.cloud.datastream.v1.IAvroFileFormat=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.AvroFileFormat} AvroFileFormat instance
                         */
                        AvroFileFormat.create = function create(properties) {
                            return new AvroFileFormat(properties);
                        };
    
                        /**
                         * Encodes the specified AvroFileFormat message. Does not implicitly {@link google.cloud.datastream.v1.AvroFileFormat.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.AvroFileFormat
                         * @static
                         * @param {google.cloud.datastream.v1.IAvroFileFormat} message AvroFileFormat message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AvroFileFormat.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AvroFileFormat message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.AvroFileFormat.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.AvroFileFormat
                         * @static
                         * @param {google.cloud.datastream.v1.IAvroFileFormat} message AvroFileFormat message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AvroFileFormat.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AvroFileFormat message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.AvroFileFormat
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.AvroFileFormat} AvroFileFormat
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AvroFileFormat.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.AvroFileFormat();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AvroFileFormat message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.AvroFileFormat
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.AvroFileFormat} AvroFileFormat
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AvroFileFormat.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AvroFileFormat message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.AvroFileFormat
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AvroFileFormat.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates an AvroFileFormat message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.AvroFileFormat
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.AvroFileFormat} AvroFileFormat
                         */
                        AvroFileFormat.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.AvroFileFormat)
                                return object;
                            return new $root.google.cloud.datastream.v1.AvroFileFormat();
                        };
    
                        /**
                         * Creates a plain object from an AvroFileFormat message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.AvroFileFormat
                         * @static
                         * @param {google.cloud.datastream.v1.AvroFileFormat} message AvroFileFormat
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AvroFileFormat.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this AvroFileFormat to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.AvroFileFormat
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AvroFileFormat.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AvroFileFormat
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.AvroFileFormat
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AvroFileFormat.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.AvroFileFormat";
                        };
    
                        return AvroFileFormat;
                    })();
    
                    v1.JsonFileFormat = (function() {
    
                        /**
                         * Properties of a JsonFileFormat.
                         * @memberof google.cloud.datastream.v1
                         * @interface IJsonFileFormat
                         * @property {google.cloud.datastream.v1.JsonFileFormat.SchemaFileFormat|null} [schemaFileFormat] JsonFileFormat schemaFileFormat
                         * @property {google.cloud.datastream.v1.JsonFileFormat.JsonCompression|null} [compression] JsonFileFormat compression
                         */
    
                        /**
                         * Constructs a new JsonFileFormat.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a JsonFileFormat.
                         * @implements IJsonFileFormat
                         * @constructor
                         * @param {google.cloud.datastream.v1.IJsonFileFormat=} [properties] Properties to set
                         */
                        function JsonFileFormat(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * JsonFileFormat schemaFileFormat.
                         * @member {google.cloud.datastream.v1.JsonFileFormat.SchemaFileFormat} schemaFileFormat
                         * @memberof google.cloud.datastream.v1.JsonFileFormat
                         * @instance
                         */
                        JsonFileFormat.prototype.schemaFileFormat = 0;
    
                        /**
                         * JsonFileFormat compression.
                         * @member {google.cloud.datastream.v1.JsonFileFormat.JsonCompression} compression
                         * @memberof google.cloud.datastream.v1.JsonFileFormat
                         * @instance
                         */
                        JsonFileFormat.prototype.compression = 0;
    
                        /**
                         * Creates a new JsonFileFormat instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.JsonFileFormat
                         * @static
                         * @param {google.cloud.datastream.v1.IJsonFileFormat=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.JsonFileFormat} JsonFileFormat instance
                         */
                        JsonFileFormat.create = function create(properties) {
                            return new JsonFileFormat(properties);
                        };
    
                        /**
                         * Encodes the specified JsonFileFormat message. Does not implicitly {@link google.cloud.datastream.v1.JsonFileFormat.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.JsonFileFormat
                         * @static
                         * @param {google.cloud.datastream.v1.IJsonFileFormat} message JsonFileFormat message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        JsonFileFormat.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.schemaFileFormat != null && Object.hasOwnProperty.call(message, "schemaFileFormat"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.schemaFileFormat);
                            if (message.compression != null && Object.hasOwnProperty.call(message, "compression"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.compression);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified JsonFileFormat message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.JsonFileFormat.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.JsonFileFormat
                         * @static
                         * @param {google.cloud.datastream.v1.IJsonFileFormat} message JsonFileFormat message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        JsonFileFormat.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a JsonFileFormat message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.JsonFileFormat
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.JsonFileFormat} JsonFileFormat
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        JsonFileFormat.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.JsonFileFormat();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.schemaFileFormat = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.compression = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a JsonFileFormat message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.JsonFileFormat
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.JsonFileFormat} JsonFileFormat
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        JsonFileFormat.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a JsonFileFormat message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.JsonFileFormat
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        JsonFileFormat.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.schemaFileFormat != null && message.hasOwnProperty("schemaFileFormat"))
                                switch (message.schemaFileFormat) {
                                default:
                                    return "schemaFileFormat: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.compression != null && message.hasOwnProperty("compression"))
                                switch (message.compression) {
                                default:
                                    return "compression: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a JsonFileFormat message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.JsonFileFormat
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.JsonFileFormat} JsonFileFormat
                         */
                        JsonFileFormat.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.JsonFileFormat)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.JsonFileFormat();
                            switch (object.schemaFileFormat) {
                            default:
                                if (typeof object.schemaFileFormat === "number") {
                                    message.schemaFileFormat = object.schemaFileFormat;
                                    break;
                                }
                                break;
                            case "SCHEMA_FILE_FORMAT_UNSPECIFIED":
                            case 0:
                                message.schemaFileFormat = 0;
                                break;
                            case "NO_SCHEMA_FILE":
                            case 1:
                                message.schemaFileFormat = 1;
                                break;
                            case "AVRO_SCHEMA_FILE":
                            case 2:
                                message.schemaFileFormat = 2;
                                break;
                            }
                            switch (object.compression) {
                            default:
                                if (typeof object.compression === "number") {
                                    message.compression = object.compression;
                                    break;
                                }
                                break;
                            case "JSON_COMPRESSION_UNSPECIFIED":
                            case 0:
                                message.compression = 0;
                                break;
                            case "NO_COMPRESSION":
                            case 1:
                                message.compression = 1;
                                break;
                            case "GZIP":
                            case 2:
                                message.compression = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a JsonFileFormat message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.JsonFileFormat
                         * @static
                         * @param {google.cloud.datastream.v1.JsonFileFormat} message JsonFileFormat
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        JsonFileFormat.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.schemaFileFormat = options.enums === String ? "SCHEMA_FILE_FORMAT_UNSPECIFIED" : 0;
                                object.compression = options.enums === String ? "JSON_COMPRESSION_UNSPECIFIED" : 0;
                            }
                            if (message.schemaFileFormat != null && message.hasOwnProperty("schemaFileFormat"))
                                object.schemaFileFormat = options.enums === String ? $root.google.cloud.datastream.v1.JsonFileFormat.SchemaFileFormat[message.schemaFileFormat] === undefined ? message.schemaFileFormat : $root.google.cloud.datastream.v1.JsonFileFormat.SchemaFileFormat[message.schemaFileFormat] : message.schemaFileFormat;
                            if (message.compression != null && message.hasOwnProperty("compression"))
                                object.compression = options.enums === String ? $root.google.cloud.datastream.v1.JsonFileFormat.JsonCompression[message.compression] === undefined ? message.compression : $root.google.cloud.datastream.v1.JsonFileFormat.JsonCompression[message.compression] : message.compression;
                            return object;
                        };
    
                        /**
                         * Converts this JsonFileFormat to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.JsonFileFormat
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        JsonFileFormat.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for JsonFileFormat
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.JsonFileFormat
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        JsonFileFormat.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.JsonFileFormat";
                        };
    
                        /**
                         * SchemaFileFormat enum.
                         * @name google.cloud.datastream.v1.JsonFileFormat.SchemaFileFormat
                         * @enum {number}
                         * @property {number} SCHEMA_FILE_FORMAT_UNSPECIFIED=0 SCHEMA_FILE_FORMAT_UNSPECIFIED value
                         * @property {number} NO_SCHEMA_FILE=1 NO_SCHEMA_FILE value
                         * @property {number} AVRO_SCHEMA_FILE=2 AVRO_SCHEMA_FILE value
                         */
                        JsonFileFormat.SchemaFileFormat = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "SCHEMA_FILE_FORMAT_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "NO_SCHEMA_FILE"] = 1;
                            values[valuesById[2] = "AVRO_SCHEMA_FILE"] = 2;
                            return values;
                        })();
    
                        /**
                         * JsonCompression enum.
                         * @name google.cloud.datastream.v1.JsonFileFormat.JsonCompression
                         * @enum {number}
                         * @property {number} JSON_COMPRESSION_UNSPECIFIED=0 JSON_COMPRESSION_UNSPECIFIED value
                         * @property {number} NO_COMPRESSION=1 NO_COMPRESSION value
                         * @property {number} GZIP=2 GZIP value
                         */
                        JsonFileFormat.JsonCompression = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "JSON_COMPRESSION_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "NO_COMPRESSION"] = 1;
                            values[valuesById[2] = "GZIP"] = 2;
                            return values;
                        })();
    
                        return JsonFileFormat;
                    })();
    
                    v1.GcsDestinationConfig = (function() {
    
                        /**
                         * Properties of a GcsDestinationConfig.
                         * @memberof google.cloud.datastream.v1
                         * @interface IGcsDestinationConfig
                         * @property {string|null} [path] GcsDestinationConfig path
                         * @property {number|null} [fileRotationMb] GcsDestinationConfig fileRotationMb
                         * @property {google.protobuf.IDuration|null} [fileRotationInterval] GcsDestinationConfig fileRotationInterval
                         * @property {google.cloud.datastream.v1.IAvroFileFormat|null} [avroFileFormat] GcsDestinationConfig avroFileFormat
                         * @property {google.cloud.datastream.v1.IJsonFileFormat|null} [jsonFileFormat] GcsDestinationConfig jsonFileFormat
                         */
    
                        /**
                         * Constructs a new GcsDestinationConfig.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a GcsDestinationConfig.
                         * @implements IGcsDestinationConfig
                         * @constructor
                         * @param {google.cloud.datastream.v1.IGcsDestinationConfig=} [properties] Properties to set
                         */
                        function GcsDestinationConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GcsDestinationConfig path.
                         * @member {string} path
                         * @memberof google.cloud.datastream.v1.GcsDestinationConfig
                         * @instance
                         */
                        GcsDestinationConfig.prototype.path = "";
    
                        /**
                         * GcsDestinationConfig fileRotationMb.
                         * @member {number} fileRotationMb
                         * @memberof google.cloud.datastream.v1.GcsDestinationConfig
                         * @instance
                         */
                        GcsDestinationConfig.prototype.fileRotationMb = 0;
    
                        /**
                         * GcsDestinationConfig fileRotationInterval.
                         * @member {google.protobuf.IDuration|null|undefined} fileRotationInterval
                         * @memberof google.cloud.datastream.v1.GcsDestinationConfig
                         * @instance
                         */
                        GcsDestinationConfig.prototype.fileRotationInterval = null;
    
                        /**
                         * GcsDestinationConfig avroFileFormat.
                         * @member {google.cloud.datastream.v1.IAvroFileFormat|null|undefined} avroFileFormat
                         * @memberof google.cloud.datastream.v1.GcsDestinationConfig
                         * @instance
                         */
                        GcsDestinationConfig.prototype.avroFileFormat = null;
    
                        /**
                         * GcsDestinationConfig jsonFileFormat.
                         * @member {google.cloud.datastream.v1.IJsonFileFormat|null|undefined} jsonFileFormat
                         * @memberof google.cloud.datastream.v1.GcsDestinationConfig
                         * @instance
                         */
                        GcsDestinationConfig.prototype.jsonFileFormat = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * GcsDestinationConfig fileFormat.
                         * @member {"avroFileFormat"|"jsonFileFormat"|undefined} fileFormat
                         * @memberof google.cloud.datastream.v1.GcsDestinationConfig
                         * @instance
                         */
                        Object.defineProperty(GcsDestinationConfig.prototype, "fileFormat", {
                            get: $util.oneOfGetter($oneOfFields = ["avroFileFormat", "jsonFileFormat"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new GcsDestinationConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.GcsDestinationConfig
                         * @static
                         * @param {google.cloud.datastream.v1.IGcsDestinationConfig=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.GcsDestinationConfig} GcsDestinationConfig instance
                         */
                        GcsDestinationConfig.create = function create(properties) {
                            return new GcsDestinationConfig(properties);
                        };
    
                        /**
                         * Encodes the specified GcsDestinationConfig message. Does not implicitly {@link google.cloud.datastream.v1.GcsDestinationConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.GcsDestinationConfig
                         * @static
                         * @param {google.cloud.datastream.v1.IGcsDestinationConfig} message GcsDestinationConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GcsDestinationConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.path);
                            if (message.fileRotationMb != null && Object.hasOwnProperty.call(message, "fileRotationMb"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.fileRotationMb);
                            if (message.fileRotationInterval != null && Object.hasOwnProperty.call(message, "fileRotationInterval"))
                                $root.google.protobuf.Duration.encode(message.fileRotationInterval, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.avroFileFormat != null && Object.hasOwnProperty.call(message, "avroFileFormat"))
                                $root.google.cloud.datastream.v1.AvroFileFormat.encode(message.avroFileFormat, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            if (message.jsonFileFormat != null && Object.hasOwnProperty.call(message, "jsonFileFormat"))
                                $root.google.cloud.datastream.v1.JsonFileFormat.encode(message.jsonFileFormat, writer.uint32(/* id 101, wireType 2 =*/810).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GcsDestinationConfig message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.GcsDestinationConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.GcsDestinationConfig
                         * @static
                         * @param {google.cloud.datastream.v1.IGcsDestinationConfig} message GcsDestinationConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GcsDestinationConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GcsDestinationConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.GcsDestinationConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.GcsDestinationConfig} GcsDestinationConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GcsDestinationConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.GcsDestinationConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.path = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.fileRotationMb = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.fileRotationInterval = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 100: {
                                        message.avroFileFormat = $root.google.cloud.datastream.v1.AvroFileFormat.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 101: {
                                        message.jsonFileFormat = $root.google.cloud.datastream.v1.JsonFileFormat.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GcsDestinationConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.GcsDestinationConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.GcsDestinationConfig} GcsDestinationConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GcsDestinationConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GcsDestinationConfig message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.GcsDestinationConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GcsDestinationConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.path != null && message.hasOwnProperty("path"))
                                if (!$util.isString(message.path))
                                    return "path: string expected";
                            if (message.fileRotationMb != null && message.hasOwnProperty("fileRotationMb"))
                                if (!$util.isInteger(message.fileRotationMb))
                                    return "fileRotationMb: integer expected";
                            if (message.fileRotationInterval != null && message.hasOwnProperty("fileRotationInterval")) {
                                var error = $root.google.protobuf.Duration.verify(message.fileRotationInterval);
                                if (error)
                                    return "fileRotationInterval." + error;
                            }
                            if (message.avroFileFormat != null && message.hasOwnProperty("avroFileFormat")) {
                                properties.fileFormat = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1.AvroFileFormat.verify(message.avroFileFormat);
                                    if (error)
                                        return "avroFileFormat." + error;
                                }
                            }
                            if (message.jsonFileFormat != null && message.hasOwnProperty("jsonFileFormat")) {
                                if (properties.fileFormat === 1)
                                    return "fileFormat: multiple values";
                                properties.fileFormat = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1.JsonFileFormat.verify(message.jsonFileFormat);
                                    if (error)
                                        return "jsonFileFormat." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GcsDestinationConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.GcsDestinationConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.GcsDestinationConfig} GcsDestinationConfig
                         */
                        GcsDestinationConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.GcsDestinationConfig)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.GcsDestinationConfig();
                            if (object.path != null)
                                message.path = String(object.path);
                            if (object.fileRotationMb != null)
                                message.fileRotationMb = object.fileRotationMb | 0;
                            if (object.fileRotationInterval != null) {
                                if (typeof object.fileRotationInterval !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.GcsDestinationConfig.fileRotationInterval: object expected");
                                message.fileRotationInterval = $root.google.protobuf.Duration.fromObject(object.fileRotationInterval);
                            }
                            if (object.avroFileFormat != null) {
                                if (typeof object.avroFileFormat !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.GcsDestinationConfig.avroFileFormat: object expected");
                                message.avroFileFormat = $root.google.cloud.datastream.v1.AvroFileFormat.fromObject(object.avroFileFormat);
                            }
                            if (object.jsonFileFormat != null) {
                                if (typeof object.jsonFileFormat !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.GcsDestinationConfig.jsonFileFormat: object expected");
                                message.jsonFileFormat = $root.google.cloud.datastream.v1.JsonFileFormat.fromObject(object.jsonFileFormat);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GcsDestinationConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.GcsDestinationConfig
                         * @static
                         * @param {google.cloud.datastream.v1.GcsDestinationConfig} message GcsDestinationConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GcsDestinationConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.path = "";
                                object.fileRotationMb = 0;
                                object.fileRotationInterval = null;
                            }
                            if (message.path != null && message.hasOwnProperty("path"))
                                object.path = message.path;
                            if (message.fileRotationMb != null && message.hasOwnProperty("fileRotationMb"))
                                object.fileRotationMb = message.fileRotationMb;
                            if (message.fileRotationInterval != null && message.hasOwnProperty("fileRotationInterval"))
                                object.fileRotationInterval = $root.google.protobuf.Duration.toObject(message.fileRotationInterval, options);
                            if (message.avroFileFormat != null && message.hasOwnProperty("avroFileFormat")) {
                                object.avroFileFormat = $root.google.cloud.datastream.v1.AvroFileFormat.toObject(message.avroFileFormat, options);
                                if (options.oneofs)
                                    object.fileFormat = "avroFileFormat";
                            }
                            if (message.jsonFileFormat != null && message.hasOwnProperty("jsonFileFormat")) {
                                object.jsonFileFormat = $root.google.cloud.datastream.v1.JsonFileFormat.toObject(message.jsonFileFormat, options);
                                if (options.oneofs)
                                    object.fileFormat = "jsonFileFormat";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this GcsDestinationConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.GcsDestinationConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GcsDestinationConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GcsDestinationConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.GcsDestinationConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GcsDestinationConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.GcsDestinationConfig";
                        };
    
                        return GcsDestinationConfig;
                    })();
    
                    v1.BigQueryDestinationConfig = (function() {
    
                        /**
                         * Properties of a BigQueryDestinationConfig.
                         * @memberof google.cloud.datastream.v1
                         * @interface IBigQueryDestinationConfig
                         * @property {google.cloud.datastream.v1.BigQueryDestinationConfig.ISingleTargetDataset|null} [singleTargetDataset] BigQueryDestinationConfig singleTargetDataset
                         * @property {google.cloud.datastream.v1.BigQueryDestinationConfig.ISourceHierarchyDatasets|null} [sourceHierarchyDatasets] BigQueryDestinationConfig sourceHierarchyDatasets
                         * @property {google.protobuf.IDuration|null} [dataFreshness] BigQueryDestinationConfig dataFreshness
                         */
    
                        /**
                         * Constructs a new BigQueryDestinationConfig.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a BigQueryDestinationConfig.
                         * @implements IBigQueryDestinationConfig
                         * @constructor
                         * @param {google.cloud.datastream.v1.IBigQueryDestinationConfig=} [properties] Properties to set
                         */
                        function BigQueryDestinationConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BigQueryDestinationConfig singleTargetDataset.
                         * @member {google.cloud.datastream.v1.BigQueryDestinationConfig.ISingleTargetDataset|null|undefined} singleTargetDataset
                         * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig
                         * @instance
                         */
                        BigQueryDestinationConfig.prototype.singleTargetDataset = null;
    
                        /**
                         * BigQueryDestinationConfig sourceHierarchyDatasets.
                         * @member {google.cloud.datastream.v1.BigQueryDestinationConfig.ISourceHierarchyDatasets|null|undefined} sourceHierarchyDatasets
                         * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig
                         * @instance
                         */
                        BigQueryDestinationConfig.prototype.sourceHierarchyDatasets = null;
    
                        /**
                         * BigQueryDestinationConfig dataFreshness.
                         * @member {google.protobuf.IDuration|null|undefined} dataFreshness
                         * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig
                         * @instance
                         */
                        BigQueryDestinationConfig.prototype.dataFreshness = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * BigQueryDestinationConfig datasetConfig.
                         * @member {"singleTargetDataset"|"sourceHierarchyDatasets"|undefined} datasetConfig
                         * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig
                         * @instance
                         */
                        Object.defineProperty(BigQueryDestinationConfig.prototype, "datasetConfig", {
                            get: $util.oneOfGetter($oneOfFields = ["singleTargetDataset", "sourceHierarchyDatasets"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new BigQueryDestinationConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig
                         * @static
                         * @param {google.cloud.datastream.v1.IBigQueryDestinationConfig=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.BigQueryDestinationConfig} BigQueryDestinationConfig instance
                         */
                        BigQueryDestinationConfig.create = function create(properties) {
                            return new BigQueryDestinationConfig(properties);
                        };
    
                        /**
                         * Encodes the specified BigQueryDestinationConfig message. Does not implicitly {@link google.cloud.datastream.v1.BigQueryDestinationConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig
                         * @static
                         * @param {google.cloud.datastream.v1.IBigQueryDestinationConfig} message BigQueryDestinationConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BigQueryDestinationConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.singleTargetDataset != null && Object.hasOwnProperty.call(message, "singleTargetDataset"))
                                $root.google.cloud.datastream.v1.BigQueryDestinationConfig.SingleTargetDataset.encode(message.singleTargetDataset, writer.uint32(/* id 201, wireType 2 =*/1610).fork()).ldelim();
                            if (message.sourceHierarchyDatasets != null && Object.hasOwnProperty.call(message, "sourceHierarchyDatasets"))
                                $root.google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.encode(message.sourceHierarchyDatasets, writer.uint32(/* id 202, wireType 2 =*/1618).fork()).ldelim();
                            if (message.dataFreshness != null && Object.hasOwnProperty.call(message, "dataFreshness"))
                                $root.google.protobuf.Duration.encode(message.dataFreshness, writer.uint32(/* id 300, wireType 2 =*/2402).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BigQueryDestinationConfig message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.BigQueryDestinationConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig
                         * @static
                         * @param {google.cloud.datastream.v1.IBigQueryDestinationConfig} message BigQueryDestinationConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BigQueryDestinationConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BigQueryDestinationConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.BigQueryDestinationConfig} BigQueryDestinationConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BigQueryDestinationConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.BigQueryDestinationConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 201: {
                                        message.singleTargetDataset = $root.google.cloud.datastream.v1.BigQueryDestinationConfig.SingleTargetDataset.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 202: {
                                        message.sourceHierarchyDatasets = $root.google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 300: {
                                        message.dataFreshness = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BigQueryDestinationConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.BigQueryDestinationConfig} BigQueryDestinationConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BigQueryDestinationConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BigQueryDestinationConfig message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BigQueryDestinationConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.singleTargetDataset != null && message.hasOwnProperty("singleTargetDataset")) {
                                properties.datasetConfig = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1.BigQueryDestinationConfig.SingleTargetDataset.verify(message.singleTargetDataset);
                                    if (error)
                                        return "singleTargetDataset." + error;
                                }
                            }
                            if (message.sourceHierarchyDatasets != null && message.hasOwnProperty("sourceHierarchyDatasets")) {
                                if (properties.datasetConfig === 1)
                                    return "datasetConfig: multiple values";
                                properties.datasetConfig = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.verify(message.sourceHierarchyDatasets);
                                    if (error)
                                        return "sourceHierarchyDatasets." + error;
                                }
                            }
                            if (message.dataFreshness != null && message.hasOwnProperty("dataFreshness")) {
                                var error = $root.google.protobuf.Duration.verify(message.dataFreshness);
                                if (error)
                                    return "dataFreshness." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a BigQueryDestinationConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.BigQueryDestinationConfig} BigQueryDestinationConfig
                         */
                        BigQueryDestinationConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.BigQueryDestinationConfig)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.BigQueryDestinationConfig();
                            if (object.singleTargetDataset != null) {
                                if (typeof object.singleTargetDataset !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.BigQueryDestinationConfig.singleTargetDataset: object expected");
                                message.singleTargetDataset = $root.google.cloud.datastream.v1.BigQueryDestinationConfig.SingleTargetDataset.fromObject(object.singleTargetDataset);
                            }
                            if (object.sourceHierarchyDatasets != null) {
                                if (typeof object.sourceHierarchyDatasets !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.BigQueryDestinationConfig.sourceHierarchyDatasets: object expected");
                                message.sourceHierarchyDatasets = $root.google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.fromObject(object.sourceHierarchyDatasets);
                            }
                            if (object.dataFreshness != null) {
                                if (typeof object.dataFreshness !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.BigQueryDestinationConfig.dataFreshness: object expected");
                                message.dataFreshness = $root.google.protobuf.Duration.fromObject(object.dataFreshness);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BigQueryDestinationConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig
                         * @static
                         * @param {google.cloud.datastream.v1.BigQueryDestinationConfig} message BigQueryDestinationConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BigQueryDestinationConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.dataFreshness = null;
                            if (message.singleTargetDataset != null && message.hasOwnProperty("singleTargetDataset")) {
                                object.singleTargetDataset = $root.google.cloud.datastream.v1.BigQueryDestinationConfig.SingleTargetDataset.toObject(message.singleTargetDataset, options);
                                if (options.oneofs)
                                    object.datasetConfig = "singleTargetDataset";
                            }
                            if (message.sourceHierarchyDatasets != null && message.hasOwnProperty("sourceHierarchyDatasets")) {
                                object.sourceHierarchyDatasets = $root.google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.toObject(message.sourceHierarchyDatasets, options);
                                if (options.oneofs)
                                    object.datasetConfig = "sourceHierarchyDatasets";
                            }
                            if (message.dataFreshness != null && message.hasOwnProperty("dataFreshness"))
                                object.dataFreshness = $root.google.protobuf.Duration.toObject(message.dataFreshness, options);
                            return object;
                        };
    
                        /**
                         * Converts this BigQueryDestinationConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BigQueryDestinationConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BigQueryDestinationConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BigQueryDestinationConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.BigQueryDestinationConfig";
                        };
    
                        BigQueryDestinationConfig.SingleTargetDataset = (function() {
    
                            /**
                             * Properties of a SingleTargetDataset.
                             * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig
                             * @interface ISingleTargetDataset
                             * @property {string|null} [datasetId] SingleTargetDataset datasetId
                             */
    
                            /**
                             * Constructs a new SingleTargetDataset.
                             * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig
                             * @classdesc Represents a SingleTargetDataset.
                             * @implements ISingleTargetDataset
                             * @constructor
                             * @param {google.cloud.datastream.v1.BigQueryDestinationConfig.ISingleTargetDataset=} [properties] Properties to set
                             */
                            function SingleTargetDataset(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * SingleTargetDataset datasetId.
                             * @member {string} datasetId
                             * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig.SingleTargetDataset
                             * @instance
                             */
                            SingleTargetDataset.prototype.datasetId = "";
    
                            /**
                             * Creates a new SingleTargetDataset instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig.SingleTargetDataset
                             * @static
                             * @param {google.cloud.datastream.v1.BigQueryDestinationConfig.ISingleTargetDataset=} [properties] Properties to set
                             * @returns {google.cloud.datastream.v1.BigQueryDestinationConfig.SingleTargetDataset} SingleTargetDataset instance
                             */
                            SingleTargetDataset.create = function create(properties) {
                                return new SingleTargetDataset(properties);
                            };
    
                            /**
                             * Encodes the specified SingleTargetDataset message. Does not implicitly {@link google.cloud.datastream.v1.BigQueryDestinationConfig.SingleTargetDataset.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig.SingleTargetDataset
                             * @static
                             * @param {google.cloud.datastream.v1.BigQueryDestinationConfig.ISingleTargetDataset} message SingleTargetDataset message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SingleTargetDataset.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.datasetId != null && Object.hasOwnProperty.call(message, "datasetId"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.datasetId);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified SingleTargetDataset message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.BigQueryDestinationConfig.SingleTargetDataset.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig.SingleTargetDataset
                             * @static
                             * @param {google.cloud.datastream.v1.BigQueryDestinationConfig.ISingleTargetDataset} message SingleTargetDataset message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SingleTargetDataset.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a SingleTargetDataset message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig.SingleTargetDataset
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.datastream.v1.BigQueryDestinationConfig.SingleTargetDataset} SingleTargetDataset
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SingleTargetDataset.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.BigQueryDestinationConfig.SingleTargetDataset();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.datasetId = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a SingleTargetDataset message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig.SingleTargetDataset
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.datastream.v1.BigQueryDestinationConfig.SingleTargetDataset} SingleTargetDataset
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SingleTargetDataset.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a SingleTargetDataset message.
                             * @function verify
                             * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig.SingleTargetDataset
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            SingleTargetDataset.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.datasetId != null && message.hasOwnProperty("datasetId"))
                                    if (!$util.isString(message.datasetId))
                                        return "datasetId: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a SingleTargetDataset message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig.SingleTargetDataset
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.datastream.v1.BigQueryDestinationConfig.SingleTargetDataset} SingleTargetDataset
                             */
                            SingleTargetDataset.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.datastream.v1.BigQueryDestinationConfig.SingleTargetDataset)
                                    return object;
                                var message = new $root.google.cloud.datastream.v1.BigQueryDestinationConfig.SingleTargetDataset();
                                if (object.datasetId != null)
                                    message.datasetId = String(object.datasetId);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a SingleTargetDataset message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig.SingleTargetDataset
                             * @static
                             * @param {google.cloud.datastream.v1.BigQueryDestinationConfig.SingleTargetDataset} message SingleTargetDataset
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            SingleTargetDataset.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.datasetId = "";
                                if (message.datasetId != null && message.hasOwnProperty("datasetId"))
                                    object.datasetId = message.datasetId;
                                return object;
                            };
    
                            /**
                             * Converts this SingleTargetDataset to JSON.
                             * @function toJSON
                             * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig.SingleTargetDataset
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            SingleTargetDataset.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for SingleTargetDataset
                             * @function getTypeUrl
                             * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig.SingleTargetDataset
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            SingleTargetDataset.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.datastream.v1.BigQueryDestinationConfig.SingleTargetDataset";
                            };
    
                            return SingleTargetDataset;
                        })();
    
                        BigQueryDestinationConfig.SourceHierarchyDatasets = (function() {
    
                            /**
                             * Properties of a SourceHierarchyDatasets.
                             * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig
                             * @interface ISourceHierarchyDatasets
                             * @property {google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.IDatasetTemplate|null} [datasetTemplate] SourceHierarchyDatasets datasetTemplate
                             */
    
                            /**
                             * Constructs a new SourceHierarchyDatasets.
                             * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig
                             * @classdesc Represents a SourceHierarchyDatasets.
                             * @implements ISourceHierarchyDatasets
                             * @constructor
                             * @param {google.cloud.datastream.v1.BigQueryDestinationConfig.ISourceHierarchyDatasets=} [properties] Properties to set
                             */
                            function SourceHierarchyDatasets(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * SourceHierarchyDatasets datasetTemplate.
                             * @member {google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.IDatasetTemplate|null|undefined} datasetTemplate
                             * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets
                             * @instance
                             */
                            SourceHierarchyDatasets.prototype.datasetTemplate = null;
    
                            /**
                             * Creates a new SourceHierarchyDatasets instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets
                             * @static
                             * @param {google.cloud.datastream.v1.BigQueryDestinationConfig.ISourceHierarchyDatasets=} [properties] Properties to set
                             * @returns {google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets} SourceHierarchyDatasets instance
                             */
                            SourceHierarchyDatasets.create = function create(properties) {
                                return new SourceHierarchyDatasets(properties);
                            };
    
                            /**
                             * Encodes the specified SourceHierarchyDatasets message. Does not implicitly {@link google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets
                             * @static
                             * @param {google.cloud.datastream.v1.BigQueryDestinationConfig.ISourceHierarchyDatasets} message SourceHierarchyDatasets message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SourceHierarchyDatasets.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.datasetTemplate != null && Object.hasOwnProperty.call(message, "datasetTemplate"))
                                    $root.google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.DatasetTemplate.encode(message.datasetTemplate, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified SourceHierarchyDatasets message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets
                             * @static
                             * @param {google.cloud.datastream.v1.BigQueryDestinationConfig.ISourceHierarchyDatasets} message SourceHierarchyDatasets message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SourceHierarchyDatasets.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a SourceHierarchyDatasets message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets} SourceHierarchyDatasets
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SourceHierarchyDatasets.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 2: {
                                            message.datasetTemplate = $root.google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.DatasetTemplate.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a SourceHierarchyDatasets message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets} SourceHierarchyDatasets
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SourceHierarchyDatasets.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a SourceHierarchyDatasets message.
                             * @function verify
                             * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            SourceHierarchyDatasets.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.datasetTemplate != null && message.hasOwnProperty("datasetTemplate")) {
                                    var error = $root.google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.DatasetTemplate.verify(message.datasetTemplate);
                                    if (error)
                                        return "datasetTemplate." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a SourceHierarchyDatasets message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets} SourceHierarchyDatasets
                             */
                            SourceHierarchyDatasets.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets)
                                    return object;
                                var message = new $root.google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets();
                                if (object.datasetTemplate != null) {
                                    if (typeof object.datasetTemplate !== "object")
                                        throw TypeError(".google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.datasetTemplate: object expected");
                                    message.datasetTemplate = $root.google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.DatasetTemplate.fromObject(object.datasetTemplate);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a SourceHierarchyDatasets message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets
                             * @static
                             * @param {google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets} message SourceHierarchyDatasets
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            SourceHierarchyDatasets.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.datasetTemplate = null;
                                if (message.datasetTemplate != null && message.hasOwnProperty("datasetTemplate"))
                                    object.datasetTemplate = $root.google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.DatasetTemplate.toObject(message.datasetTemplate, options);
                                return object;
                            };
    
                            /**
                             * Converts this SourceHierarchyDatasets to JSON.
                             * @function toJSON
                             * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            SourceHierarchyDatasets.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for SourceHierarchyDatasets
                             * @function getTypeUrl
                             * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            SourceHierarchyDatasets.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets";
                            };
    
                            SourceHierarchyDatasets.DatasetTemplate = (function() {
    
                                /**
                                 * Properties of a DatasetTemplate.
                                 * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets
                                 * @interface IDatasetTemplate
                                 * @property {string|null} [location] DatasetTemplate location
                                 * @property {string|null} [datasetIdPrefix] DatasetTemplate datasetIdPrefix
                                 * @property {string|null} [kmsKeyName] DatasetTemplate kmsKeyName
                                 */
    
                                /**
                                 * Constructs a new DatasetTemplate.
                                 * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets
                                 * @classdesc Represents a DatasetTemplate.
                                 * @implements IDatasetTemplate
                                 * @constructor
                                 * @param {google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.IDatasetTemplate=} [properties] Properties to set
                                 */
                                function DatasetTemplate(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * DatasetTemplate location.
                                 * @member {string} location
                                 * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.DatasetTemplate
                                 * @instance
                                 */
                                DatasetTemplate.prototype.location = "";
    
                                /**
                                 * DatasetTemplate datasetIdPrefix.
                                 * @member {string} datasetIdPrefix
                                 * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.DatasetTemplate
                                 * @instance
                                 */
                                DatasetTemplate.prototype.datasetIdPrefix = "";
    
                                /**
                                 * DatasetTemplate kmsKeyName.
                                 * @member {string} kmsKeyName
                                 * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.DatasetTemplate
                                 * @instance
                                 */
                                DatasetTemplate.prototype.kmsKeyName = "";
    
                                /**
                                 * Creates a new DatasetTemplate instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.DatasetTemplate
                                 * @static
                                 * @param {google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.IDatasetTemplate=} [properties] Properties to set
                                 * @returns {google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.DatasetTemplate} DatasetTemplate instance
                                 */
                                DatasetTemplate.create = function create(properties) {
                                    return new DatasetTemplate(properties);
                                };
    
                                /**
                                 * Encodes the specified DatasetTemplate message. Does not implicitly {@link google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.DatasetTemplate.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.DatasetTemplate
                                 * @static
                                 * @param {google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.IDatasetTemplate} message DatasetTemplate message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                DatasetTemplate.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.location != null && Object.hasOwnProperty.call(message, "location"))
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.location);
                                    if (message.datasetIdPrefix != null && Object.hasOwnProperty.call(message, "datasetIdPrefix"))
                                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.datasetIdPrefix);
                                    if (message.kmsKeyName != null && Object.hasOwnProperty.call(message, "kmsKeyName"))
                                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.kmsKeyName);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified DatasetTemplate message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.DatasetTemplate.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.DatasetTemplate
                                 * @static
                                 * @param {google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.IDatasetTemplate} message DatasetTemplate message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                DatasetTemplate.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a DatasetTemplate message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.DatasetTemplate
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.DatasetTemplate} DatasetTemplate
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                DatasetTemplate.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.DatasetTemplate();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.location = reader.string();
                                                break;
                                            }
                                        case 2: {
                                                message.datasetIdPrefix = reader.string();
                                                break;
                                            }
                                        case 3: {
                                                message.kmsKeyName = reader.string();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a DatasetTemplate message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.DatasetTemplate
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.DatasetTemplate} DatasetTemplate
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                DatasetTemplate.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a DatasetTemplate message.
                                 * @function verify
                                 * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.DatasetTemplate
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                DatasetTemplate.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.location != null && message.hasOwnProperty("location"))
                                        if (!$util.isString(message.location))
                                            return "location: string expected";
                                    if (message.datasetIdPrefix != null && message.hasOwnProperty("datasetIdPrefix"))
                                        if (!$util.isString(message.datasetIdPrefix))
                                            return "datasetIdPrefix: string expected";
                                    if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                        if (!$util.isString(message.kmsKeyName))
                                            return "kmsKeyName: string expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a DatasetTemplate message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.DatasetTemplate
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.DatasetTemplate} DatasetTemplate
                                 */
                                DatasetTemplate.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.DatasetTemplate)
                                        return object;
                                    var message = new $root.google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.DatasetTemplate();
                                    if (object.location != null)
                                        message.location = String(object.location);
                                    if (object.datasetIdPrefix != null)
                                        message.datasetIdPrefix = String(object.datasetIdPrefix);
                                    if (object.kmsKeyName != null)
                                        message.kmsKeyName = String(object.kmsKeyName);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a DatasetTemplate message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.DatasetTemplate
                                 * @static
                                 * @param {google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.DatasetTemplate} message DatasetTemplate
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                DatasetTemplate.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.location = "";
                                        object.datasetIdPrefix = "";
                                        object.kmsKeyName = "";
                                    }
                                    if (message.location != null && message.hasOwnProperty("location"))
                                        object.location = message.location;
                                    if (message.datasetIdPrefix != null && message.hasOwnProperty("datasetIdPrefix"))
                                        object.datasetIdPrefix = message.datasetIdPrefix;
                                    if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                        object.kmsKeyName = message.kmsKeyName;
                                    return object;
                                };
    
                                /**
                                 * Converts this DatasetTemplate to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.DatasetTemplate
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                DatasetTemplate.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for DatasetTemplate
                                 * @function getTypeUrl
                                 * @memberof google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.DatasetTemplate
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                DatasetTemplate.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.datastream.v1.BigQueryDestinationConfig.SourceHierarchyDatasets.DatasetTemplate";
                                };
    
                                return DatasetTemplate;
                            })();
    
                            return SourceHierarchyDatasets;
                        })();
    
                        return BigQueryDestinationConfig;
                    })();
    
                    v1.DestinationConfig = (function() {
    
                        /**
                         * Properties of a DestinationConfig.
                         * @memberof google.cloud.datastream.v1
                         * @interface IDestinationConfig
                         * @property {string|null} [destinationConnectionProfile] DestinationConfig destinationConnectionProfile
                         * @property {google.cloud.datastream.v1.IGcsDestinationConfig|null} [gcsDestinationConfig] DestinationConfig gcsDestinationConfig
                         * @property {google.cloud.datastream.v1.IBigQueryDestinationConfig|null} [bigqueryDestinationConfig] DestinationConfig bigqueryDestinationConfig
                         */
    
                        /**
                         * Constructs a new DestinationConfig.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a DestinationConfig.
                         * @implements IDestinationConfig
                         * @constructor
                         * @param {google.cloud.datastream.v1.IDestinationConfig=} [properties] Properties to set
                         */
                        function DestinationConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DestinationConfig destinationConnectionProfile.
                         * @member {string} destinationConnectionProfile
                         * @memberof google.cloud.datastream.v1.DestinationConfig
                         * @instance
                         */
                        DestinationConfig.prototype.destinationConnectionProfile = "";
    
                        /**
                         * DestinationConfig gcsDestinationConfig.
                         * @member {google.cloud.datastream.v1.IGcsDestinationConfig|null|undefined} gcsDestinationConfig
                         * @memberof google.cloud.datastream.v1.DestinationConfig
                         * @instance
                         */
                        DestinationConfig.prototype.gcsDestinationConfig = null;
    
                        /**
                         * DestinationConfig bigqueryDestinationConfig.
                         * @member {google.cloud.datastream.v1.IBigQueryDestinationConfig|null|undefined} bigqueryDestinationConfig
                         * @memberof google.cloud.datastream.v1.DestinationConfig
                         * @instance
                         */
                        DestinationConfig.prototype.bigqueryDestinationConfig = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * DestinationConfig destinationStreamConfig.
                         * @member {"gcsDestinationConfig"|"bigqueryDestinationConfig"|undefined} destinationStreamConfig
                         * @memberof google.cloud.datastream.v1.DestinationConfig
                         * @instance
                         */
                        Object.defineProperty(DestinationConfig.prototype, "destinationStreamConfig", {
                            get: $util.oneOfGetter($oneOfFields = ["gcsDestinationConfig", "bigqueryDestinationConfig"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new DestinationConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.DestinationConfig
                         * @static
                         * @param {google.cloud.datastream.v1.IDestinationConfig=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.DestinationConfig} DestinationConfig instance
                         */
                        DestinationConfig.create = function create(properties) {
                            return new DestinationConfig(properties);
                        };
    
                        /**
                         * Encodes the specified DestinationConfig message. Does not implicitly {@link google.cloud.datastream.v1.DestinationConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.DestinationConfig
                         * @static
                         * @param {google.cloud.datastream.v1.IDestinationConfig} message DestinationConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DestinationConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.destinationConnectionProfile != null && Object.hasOwnProperty.call(message, "destinationConnectionProfile"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.destinationConnectionProfile);
                            if (message.gcsDestinationConfig != null && Object.hasOwnProperty.call(message, "gcsDestinationConfig"))
                                $root.google.cloud.datastream.v1.GcsDestinationConfig.encode(message.gcsDestinationConfig, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            if (message.bigqueryDestinationConfig != null && Object.hasOwnProperty.call(message, "bigqueryDestinationConfig"))
                                $root.google.cloud.datastream.v1.BigQueryDestinationConfig.encode(message.bigqueryDestinationConfig, writer.uint32(/* id 101, wireType 2 =*/810).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DestinationConfig message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.DestinationConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.DestinationConfig
                         * @static
                         * @param {google.cloud.datastream.v1.IDestinationConfig} message DestinationConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DestinationConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DestinationConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.DestinationConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.DestinationConfig} DestinationConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DestinationConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.DestinationConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.destinationConnectionProfile = reader.string();
                                        break;
                                    }
                                case 100: {
                                        message.gcsDestinationConfig = $root.google.cloud.datastream.v1.GcsDestinationConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 101: {
                                        message.bigqueryDestinationConfig = $root.google.cloud.datastream.v1.BigQueryDestinationConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DestinationConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.DestinationConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.DestinationConfig} DestinationConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DestinationConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DestinationConfig message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.DestinationConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DestinationConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.destinationConnectionProfile != null && message.hasOwnProperty("destinationConnectionProfile"))
                                if (!$util.isString(message.destinationConnectionProfile))
                                    return "destinationConnectionProfile: string expected";
                            if (message.gcsDestinationConfig != null && message.hasOwnProperty("gcsDestinationConfig")) {
                                properties.destinationStreamConfig = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1.GcsDestinationConfig.verify(message.gcsDestinationConfig);
                                    if (error)
                                        return "gcsDestinationConfig." + error;
                                }
                            }
                            if (message.bigqueryDestinationConfig != null && message.hasOwnProperty("bigqueryDestinationConfig")) {
                                if (properties.destinationStreamConfig === 1)
                                    return "destinationStreamConfig: multiple values";
                                properties.destinationStreamConfig = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1.BigQueryDestinationConfig.verify(message.bigqueryDestinationConfig);
                                    if (error)
                                        return "bigqueryDestinationConfig." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DestinationConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.DestinationConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.DestinationConfig} DestinationConfig
                         */
                        DestinationConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.DestinationConfig)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.DestinationConfig();
                            if (object.destinationConnectionProfile != null)
                                message.destinationConnectionProfile = String(object.destinationConnectionProfile);
                            if (object.gcsDestinationConfig != null) {
                                if (typeof object.gcsDestinationConfig !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.DestinationConfig.gcsDestinationConfig: object expected");
                                message.gcsDestinationConfig = $root.google.cloud.datastream.v1.GcsDestinationConfig.fromObject(object.gcsDestinationConfig);
                            }
                            if (object.bigqueryDestinationConfig != null) {
                                if (typeof object.bigqueryDestinationConfig !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.DestinationConfig.bigqueryDestinationConfig: object expected");
                                message.bigqueryDestinationConfig = $root.google.cloud.datastream.v1.BigQueryDestinationConfig.fromObject(object.bigqueryDestinationConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DestinationConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.DestinationConfig
                         * @static
                         * @param {google.cloud.datastream.v1.DestinationConfig} message DestinationConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DestinationConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.destinationConnectionProfile = "";
                            if (message.destinationConnectionProfile != null && message.hasOwnProperty("destinationConnectionProfile"))
                                object.destinationConnectionProfile = message.destinationConnectionProfile;
                            if (message.gcsDestinationConfig != null && message.hasOwnProperty("gcsDestinationConfig")) {
                                object.gcsDestinationConfig = $root.google.cloud.datastream.v1.GcsDestinationConfig.toObject(message.gcsDestinationConfig, options);
                                if (options.oneofs)
                                    object.destinationStreamConfig = "gcsDestinationConfig";
                            }
                            if (message.bigqueryDestinationConfig != null && message.hasOwnProperty("bigqueryDestinationConfig")) {
                                object.bigqueryDestinationConfig = $root.google.cloud.datastream.v1.BigQueryDestinationConfig.toObject(message.bigqueryDestinationConfig, options);
                                if (options.oneofs)
                                    object.destinationStreamConfig = "bigqueryDestinationConfig";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this DestinationConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.DestinationConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DestinationConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DestinationConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.DestinationConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DestinationConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.DestinationConfig";
                        };
    
                        return DestinationConfig;
                    })();
    
                    v1.Stream = (function() {
    
                        /**
                         * Properties of a Stream.
                         * @memberof google.cloud.datastream.v1
                         * @interface IStream
                         * @property {string|null} [name] Stream name
                         * @property {google.protobuf.ITimestamp|null} [createTime] Stream createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Stream updateTime
                         * @property {Object.<string,string>|null} [labels] Stream labels
                         * @property {string|null} [displayName] Stream displayName
                         * @property {google.cloud.datastream.v1.ISourceConfig|null} [sourceConfig] Stream sourceConfig
                         * @property {google.cloud.datastream.v1.IDestinationConfig|null} [destinationConfig] Stream destinationConfig
                         * @property {google.cloud.datastream.v1.Stream.State|null} [state] Stream state
                         * @property {google.cloud.datastream.v1.Stream.IBackfillAllStrategy|null} [backfillAll] Stream backfillAll
                         * @property {google.cloud.datastream.v1.Stream.IBackfillNoneStrategy|null} [backfillNone] Stream backfillNone
                         * @property {Array.<google.cloud.datastream.v1.IError>|null} [errors] Stream errors
                         * @property {string|null} [customerManagedEncryptionKey] Stream customerManagedEncryptionKey
                         */
    
                        /**
                         * Constructs a new Stream.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a Stream.
                         * @implements IStream
                         * @constructor
                         * @param {google.cloud.datastream.v1.IStream=} [properties] Properties to set
                         */
                        function Stream(properties) {
                            this.labels = {};
                            this.errors = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Stream name.
                         * @member {string} name
                         * @memberof google.cloud.datastream.v1.Stream
                         * @instance
                         */
                        Stream.prototype.name = "";
    
                        /**
                         * Stream createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.datastream.v1.Stream
                         * @instance
                         */
                        Stream.prototype.createTime = null;
    
                        /**
                         * Stream updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.datastream.v1.Stream
                         * @instance
                         */
                        Stream.prototype.updateTime = null;
    
                        /**
                         * Stream labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.datastream.v1.Stream
                         * @instance
                         */
                        Stream.prototype.labels = $util.emptyObject;
    
                        /**
                         * Stream displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.datastream.v1.Stream
                         * @instance
                         */
                        Stream.prototype.displayName = "";
    
                        /**
                         * Stream sourceConfig.
                         * @member {google.cloud.datastream.v1.ISourceConfig|null|undefined} sourceConfig
                         * @memberof google.cloud.datastream.v1.Stream
                         * @instance
                         */
                        Stream.prototype.sourceConfig = null;
    
                        /**
                         * Stream destinationConfig.
                         * @member {google.cloud.datastream.v1.IDestinationConfig|null|undefined} destinationConfig
                         * @memberof google.cloud.datastream.v1.Stream
                         * @instance
                         */
                        Stream.prototype.destinationConfig = null;
    
                        /**
                         * Stream state.
                         * @member {google.cloud.datastream.v1.Stream.State} state
                         * @memberof google.cloud.datastream.v1.Stream
                         * @instance
                         */
                        Stream.prototype.state = 0;
    
                        /**
                         * Stream backfillAll.
                         * @member {google.cloud.datastream.v1.Stream.IBackfillAllStrategy|null|undefined} backfillAll
                         * @memberof google.cloud.datastream.v1.Stream
                         * @instance
                         */
                        Stream.prototype.backfillAll = null;
    
                        /**
                         * Stream backfillNone.
                         * @member {google.cloud.datastream.v1.Stream.IBackfillNoneStrategy|null|undefined} backfillNone
                         * @memberof google.cloud.datastream.v1.Stream
                         * @instance
                         */
                        Stream.prototype.backfillNone = null;
    
                        /**
                         * Stream errors.
                         * @member {Array.<google.cloud.datastream.v1.IError>} errors
                         * @memberof google.cloud.datastream.v1.Stream
                         * @instance
                         */
                        Stream.prototype.errors = $util.emptyArray;
    
                        /**
                         * Stream customerManagedEncryptionKey.
                         * @member {string|null|undefined} customerManagedEncryptionKey
                         * @memberof google.cloud.datastream.v1.Stream
                         * @instance
                         */
                        Stream.prototype.customerManagedEncryptionKey = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Stream backfillStrategy.
                         * @member {"backfillAll"|"backfillNone"|undefined} backfillStrategy
                         * @memberof google.cloud.datastream.v1.Stream
                         * @instance
                         */
                        Object.defineProperty(Stream.prototype, "backfillStrategy", {
                            get: $util.oneOfGetter($oneOfFields = ["backfillAll", "backfillNone"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Stream _customerManagedEncryptionKey.
                         * @member {"customerManagedEncryptionKey"|undefined} _customerManagedEncryptionKey
                         * @memberof google.cloud.datastream.v1.Stream
                         * @instance
                         */
                        Object.defineProperty(Stream.prototype, "_customerManagedEncryptionKey", {
                            get: $util.oneOfGetter($oneOfFields = ["customerManagedEncryptionKey"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Stream instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.Stream
                         * @static
                         * @param {google.cloud.datastream.v1.IStream=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.Stream} Stream instance
                         */
                        Stream.create = function create(properties) {
                            return new Stream(properties);
                        };
    
                        /**
                         * Encodes the specified Stream message. Does not implicitly {@link google.cloud.datastream.v1.Stream.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.Stream
                         * @static
                         * @param {google.cloud.datastream.v1.IStream} message Stream message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Stream.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.displayName);
                            if (message.sourceConfig != null && Object.hasOwnProperty.call(message, "sourceConfig"))
                                $root.google.cloud.datastream.v1.SourceConfig.encode(message.sourceConfig, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.destinationConfig != null && Object.hasOwnProperty.call(message, "destinationConfig"))
                                $root.google.cloud.datastream.v1.DestinationConfig.encode(message.destinationConfig, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 8, wireType 0 =*/64).int32(message.state);
                            if (message.errors != null && message.errors.length)
                                for (var i = 0; i < message.errors.length; ++i)
                                    $root.google.cloud.datastream.v1.Error.encode(message.errors[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.customerManagedEncryptionKey != null && Object.hasOwnProperty.call(message, "customerManagedEncryptionKey"))
                                writer.uint32(/* id 10, wireType 2 =*/82).string(message.customerManagedEncryptionKey);
                            if (message.backfillAll != null && Object.hasOwnProperty.call(message, "backfillAll"))
                                $root.google.cloud.datastream.v1.Stream.BackfillAllStrategy.encode(message.backfillAll, writer.uint32(/* id 101, wireType 2 =*/810).fork()).ldelim();
                            if (message.backfillNone != null && Object.hasOwnProperty.call(message, "backfillNone"))
                                $root.google.cloud.datastream.v1.Stream.BackfillNoneStrategy.encode(message.backfillNone, writer.uint32(/* id 102, wireType 2 =*/818).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Stream message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.Stream.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.Stream
                         * @static
                         * @param {google.cloud.datastream.v1.IStream} message Stream message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Stream.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Stream message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.Stream
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.Stream} Stream
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Stream.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.Stream(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 5: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.sourceConfig = $root.google.cloud.datastream.v1.SourceConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.destinationConfig = $root.google.cloud.datastream.v1.DestinationConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 101: {
                                        message.backfillAll = $root.google.cloud.datastream.v1.Stream.BackfillAllStrategy.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 102: {
                                        message.backfillNone = $root.google.cloud.datastream.v1.Stream.BackfillNoneStrategy.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        if (!(message.errors && message.errors.length))
                                            message.errors = [];
                                        message.errors.push($root.google.cloud.datastream.v1.Error.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 10: {
                                        message.customerManagedEncryptionKey = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Stream message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.Stream
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.Stream} Stream
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Stream.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Stream message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.Stream
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Stream.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.sourceConfig != null && message.hasOwnProperty("sourceConfig")) {
                                var error = $root.google.cloud.datastream.v1.SourceConfig.verify(message.sourceConfig);
                                if (error)
                                    return "sourceConfig." + error;
                            }
                            if (message.destinationConfig != null && message.hasOwnProperty("destinationConfig")) {
                                var error = $root.google.cloud.datastream.v1.DestinationConfig.verify(message.destinationConfig);
                                if (error)
                                    return "destinationConfig." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 8:
                                    break;
                                }
                            if (message.backfillAll != null && message.hasOwnProperty("backfillAll")) {
                                properties.backfillStrategy = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1.Stream.BackfillAllStrategy.verify(message.backfillAll);
                                    if (error)
                                        return "backfillAll." + error;
                                }
                            }
                            if (message.backfillNone != null && message.hasOwnProperty("backfillNone")) {
                                if (properties.backfillStrategy === 1)
                                    return "backfillStrategy: multiple values";
                                properties.backfillStrategy = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1.Stream.BackfillNoneStrategy.verify(message.backfillNone);
                                    if (error)
                                        return "backfillNone." + error;
                                }
                            }
                            if (message.errors != null && message.hasOwnProperty("errors")) {
                                if (!Array.isArray(message.errors))
                                    return "errors: array expected";
                                for (var i = 0; i < message.errors.length; ++i) {
                                    var error = $root.google.cloud.datastream.v1.Error.verify(message.errors[i]);
                                    if (error)
                                        return "errors." + error;
                                }
                            }
                            if (message.customerManagedEncryptionKey != null && message.hasOwnProperty("customerManagedEncryptionKey")) {
                                properties._customerManagedEncryptionKey = 1;
                                if (!$util.isString(message.customerManagedEncryptionKey))
                                    return "customerManagedEncryptionKey: string expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Stream message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.Stream
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.Stream} Stream
                         */
                        Stream.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.Stream)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.Stream();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.Stream.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.Stream.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.Stream.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.sourceConfig != null) {
                                if (typeof object.sourceConfig !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.Stream.sourceConfig: object expected");
                                message.sourceConfig = $root.google.cloud.datastream.v1.SourceConfig.fromObject(object.sourceConfig);
                            }
                            if (object.destinationConfig != null) {
                                if (typeof object.destinationConfig !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.Stream.destinationConfig: object expected");
                                message.destinationConfig = $root.google.cloud.datastream.v1.DestinationConfig.fromObject(object.destinationConfig);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "NOT_STARTED":
                            case 1:
                                message.state = 1;
                                break;
                            case "RUNNING":
                            case 2:
                                message.state = 2;
                                break;
                            case "PAUSED":
                            case 3:
                                message.state = 3;
                                break;
                            case "MAINTENANCE":
                            case 4:
                                message.state = 4;
                                break;
                            case "FAILED":
                            case 5:
                                message.state = 5;
                                break;
                            case "FAILED_PERMANENTLY":
                            case 6:
                                message.state = 6;
                                break;
                            case "STARTING":
                            case 7:
                                message.state = 7;
                                break;
                            case "DRAINING":
                            case 8:
                                message.state = 8;
                                break;
                            }
                            if (object.backfillAll != null) {
                                if (typeof object.backfillAll !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.Stream.backfillAll: object expected");
                                message.backfillAll = $root.google.cloud.datastream.v1.Stream.BackfillAllStrategy.fromObject(object.backfillAll);
                            }
                            if (object.backfillNone != null) {
                                if (typeof object.backfillNone !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.Stream.backfillNone: object expected");
                                message.backfillNone = $root.google.cloud.datastream.v1.Stream.BackfillNoneStrategy.fromObject(object.backfillNone);
                            }
                            if (object.errors) {
                                if (!Array.isArray(object.errors))
                                    throw TypeError(".google.cloud.datastream.v1.Stream.errors: array expected");
                                message.errors = [];
                                for (var i = 0; i < object.errors.length; ++i) {
                                    if (typeof object.errors[i] !== "object")
                                        throw TypeError(".google.cloud.datastream.v1.Stream.errors: object expected");
                                    message.errors[i] = $root.google.cloud.datastream.v1.Error.fromObject(object.errors[i]);
                                }
                            }
                            if (object.customerManagedEncryptionKey != null)
                                message.customerManagedEncryptionKey = String(object.customerManagedEncryptionKey);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Stream message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.Stream
                         * @static
                         * @param {google.cloud.datastream.v1.Stream} message Stream
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Stream.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.errors = [];
                            if (options.objects || options.defaults)
                                object.labels = {};
                            if (options.defaults) {
                                object.name = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.displayName = "";
                                object.sourceConfig = null;
                                object.destinationConfig = null;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.sourceConfig != null && message.hasOwnProperty("sourceConfig"))
                                object.sourceConfig = $root.google.cloud.datastream.v1.SourceConfig.toObject(message.sourceConfig, options);
                            if (message.destinationConfig != null && message.hasOwnProperty("destinationConfig"))
                                object.destinationConfig = $root.google.cloud.datastream.v1.DestinationConfig.toObject(message.destinationConfig, options);
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.datastream.v1.Stream.State[message.state] === undefined ? message.state : $root.google.cloud.datastream.v1.Stream.State[message.state] : message.state;
                            if (message.errors && message.errors.length) {
                                object.errors = [];
                                for (var j = 0; j < message.errors.length; ++j)
                                    object.errors[j] = $root.google.cloud.datastream.v1.Error.toObject(message.errors[j], options);
                            }
                            if (message.customerManagedEncryptionKey != null && message.hasOwnProperty("customerManagedEncryptionKey")) {
                                object.customerManagedEncryptionKey = message.customerManagedEncryptionKey;
                                if (options.oneofs)
                                    object._customerManagedEncryptionKey = "customerManagedEncryptionKey";
                            }
                            if (message.backfillAll != null && message.hasOwnProperty("backfillAll")) {
                                object.backfillAll = $root.google.cloud.datastream.v1.Stream.BackfillAllStrategy.toObject(message.backfillAll, options);
                                if (options.oneofs)
                                    object.backfillStrategy = "backfillAll";
                            }
                            if (message.backfillNone != null && message.hasOwnProperty("backfillNone")) {
                                object.backfillNone = $root.google.cloud.datastream.v1.Stream.BackfillNoneStrategy.toObject(message.backfillNone, options);
                                if (options.oneofs)
                                    object.backfillStrategy = "backfillNone";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Stream to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.Stream
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Stream.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Stream
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.Stream
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Stream.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.Stream";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.datastream.v1.Stream.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} NOT_STARTED=1 NOT_STARTED value
                         * @property {number} RUNNING=2 RUNNING value
                         * @property {number} PAUSED=3 PAUSED value
                         * @property {number} MAINTENANCE=4 MAINTENANCE value
                         * @property {number} FAILED=5 FAILED value
                         * @property {number} FAILED_PERMANENTLY=6 FAILED_PERMANENTLY value
                         * @property {number} STARTING=7 STARTING value
                         * @property {number} DRAINING=8 DRAINING value
                         */
                        Stream.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "NOT_STARTED"] = 1;
                            values[valuesById[2] = "RUNNING"] = 2;
                            values[valuesById[3] = "PAUSED"] = 3;
                            values[valuesById[4] = "MAINTENANCE"] = 4;
                            values[valuesById[5] = "FAILED"] = 5;
                            values[valuesById[6] = "FAILED_PERMANENTLY"] = 6;
                            values[valuesById[7] = "STARTING"] = 7;
                            values[valuesById[8] = "DRAINING"] = 8;
                            return values;
                        })();
    
                        Stream.BackfillAllStrategy = (function() {
    
                            /**
                             * Properties of a BackfillAllStrategy.
                             * @memberof google.cloud.datastream.v1.Stream
                             * @interface IBackfillAllStrategy
                             * @property {google.cloud.datastream.v1.IOracleRdbms|null} [oracleExcludedObjects] BackfillAllStrategy oracleExcludedObjects
                             * @property {google.cloud.datastream.v1.IMysqlRdbms|null} [mysqlExcludedObjects] BackfillAllStrategy mysqlExcludedObjects
                             * @property {google.cloud.datastream.v1.IPostgresqlRdbms|null} [postgresqlExcludedObjects] BackfillAllStrategy postgresqlExcludedObjects
                             */
    
                            /**
                             * Constructs a new BackfillAllStrategy.
                             * @memberof google.cloud.datastream.v1.Stream
                             * @classdesc Represents a BackfillAllStrategy.
                             * @implements IBackfillAllStrategy
                             * @constructor
                             * @param {google.cloud.datastream.v1.Stream.IBackfillAllStrategy=} [properties] Properties to set
                             */
                            function BackfillAllStrategy(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * BackfillAllStrategy oracleExcludedObjects.
                             * @member {google.cloud.datastream.v1.IOracleRdbms|null|undefined} oracleExcludedObjects
                             * @memberof google.cloud.datastream.v1.Stream.BackfillAllStrategy
                             * @instance
                             */
                            BackfillAllStrategy.prototype.oracleExcludedObjects = null;
    
                            /**
                             * BackfillAllStrategy mysqlExcludedObjects.
                             * @member {google.cloud.datastream.v1.IMysqlRdbms|null|undefined} mysqlExcludedObjects
                             * @memberof google.cloud.datastream.v1.Stream.BackfillAllStrategy
                             * @instance
                             */
                            BackfillAllStrategy.prototype.mysqlExcludedObjects = null;
    
                            /**
                             * BackfillAllStrategy postgresqlExcludedObjects.
                             * @member {google.cloud.datastream.v1.IPostgresqlRdbms|null|undefined} postgresqlExcludedObjects
                             * @memberof google.cloud.datastream.v1.Stream.BackfillAllStrategy
                             * @instance
                             */
                            BackfillAllStrategy.prototype.postgresqlExcludedObjects = null;
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * BackfillAllStrategy excludedObjects.
                             * @member {"oracleExcludedObjects"|"mysqlExcludedObjects"|"postgresqlExcludedObjects"|undefined} excludedObjects
                             * @memberof google.cloud.datastream.v1.Stream.BackfillAllStrategy
                             * @instance
                             */
                            Object.defineProperty(BackfillAllStrategy.prototype, "excludedObjects", {
                                get: $util.oneOfGetter($oneOfFields = ["oracleExcludedObjects", "mysqlExcludedObjects", "postgresqlExcludedObjects"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new BackfillAllStrategy instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.datastream.v1.Stream.BackfillAllStrategy
                             * @static
                             * @param {google.cloud.datastream.v1.Stream.IBackfillAllStrategy=} [properties] Properties to set
                             * @returns {google.cloud.datastream.v1.Stream.BackfillAllStrategy} BackfillAllStrategy instance
                             */
                            BackfillAllStrategy.create = function create(properties) {
                                return new BackfillAllStrategy(properties);
                            };
    
                            /**
                             * Encodes the specified BackfillAllStrategy message. Does not implicitly {@link google.cloud.datastream.v1.Stream.BackfillAllStrategy.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.datastream.v1.Stream.BackfillAllStrategy
                             * @static
                             * @param {google.cloud.datastream.v1.Stream.IBackfillAllStrategy} message BackfillAllStrategy message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BackfillAllStrategy.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.oracleExcludedObjects != null && Object.hasOwnProperty.call(message, "oracleExcludedObjects"))
                                    $root.google.cloud.datastream.v1.OracleRdbms.encode(message.oracleExcludedObjects, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.mysqlExcludedObjects != null && Object.hasOwnProperty.call(message, "mysqlExcludedObjects"))
                                    $root.google.cloud.datastream.v1.MysqlRdbms.encode(message.mysqlExcludedObjects, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.postgresqlExcludedObjects != null && Object.hasOwnProperty.call(message, "postgresqlExcludedObjects"))
                                    $root.google.cloud.datastream.v1.PostgresqlRdbms.encode(message.postgresqlExcludedObjects, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified BackfillAllStrategy message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.Stream.BackfillAllStrategy.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.datastream.v1.Stream.BackfillAllStrategy
                             * @static
                             * @param {google.cloud.datastream.v1.Stream.IBackfillAllStrategy} message BackfillAllStrategy message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BackfillAllStrategy.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a BackfillAllStrategy message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.datastream.v1.Stream.BackfillAllStrategy
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.datastream.v1.Stream.BackfillAllStrategy} BackfillAllStrategy
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BackfillAllStrategy.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.Stream.BackfillAllStrategy();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.oracleExcludedObjects = $root.google.cloud.datastream.v1.OracleRdbms.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.mysqlExcludedObjects = $root.google.cloud.datastream.v1.MysqlRdbms.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.postgresqlExcludedObjects = $root.google.cloud.datastream.v1.PostgresqlRdbms.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a BackfillAllStrategy message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.datastream.v1.Stream.BackfillAllStrategy
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.datastream.v1.Stream.BackfillAllStrategy} BackfillAllStrategy
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BackfillAllStrategy.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a BackfillAllStrategy message.
                             * @function verify
                             * @memberof google.cloud.datastream.v1.Stream.BackfillAllStrategy
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            BackfillAllStrategy.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.oracleExcludedObjects != null && message.hasOwnProperty("oracleExcludedObjects")) {
                                    properties.excludedObjects = 1;
                                    {
                                        var error = $root.google.cloud.datastream.v1.OracleRdbms.verify(message.oracleExcludedObjects);
                                        if (error)
                                            return "oracleExcludedObjects." + error;
                                    }
                                }
                                if (message.mysqlExcludedObjects != null && message.hasOwnProperty("mysqlExcludedObjects")) {
                                    if (properties.excludedObjects === 1)
                                        return "excludedObjects: multiple values";
                                    properties.excludedObjects = 1;
                                    {
                                        var error = $root.google.cloud.datastream.v1.MysqlRdbms.verify(message.mysqlExcludedObjects);
                                        if (error)
                                            return "mysqlExcludedObjects." + error;
                                    }
                                }
                                if (message.postgresqlExcludedObjects != null && message.hasOwnProperty("postgresqlExcludedObjects")) {
                                    if (properties.excludedObjects === 1)
                                        return "excludedObjects: multiple values";
                                    properties.excludedObjects = 1;
                                    {
                                        var error = $root.google.cloud.datastream.v1.PostgresqlRdbms.verify(message.postgresqlExcludedObjects);
                                        if (error)
                                            return "postgresqlExcludedObjects." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a BackfillAllStrategy message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.datastream.v1.Stream.BackfillAllStrategy
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.datastream.v1.Stream.BackfillAllStrategy} BackfillAllStrategy
                             */
                            BackfillAllStrategy.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.datastream.v1.Stream.BackfillAllStrategy)
                                    return object;
                                var message = new $root.google.cloud.datastream.v1.Stream.BackfillAllStrategy();
                                if (object.oracleExcludedObjects != null) {
                                    if (typeof object.oracleExcludedObjects !== "object")
                                        throw TypeError(".google.cloud.datastream.v1.Stream.BackfillAllStrategy.oracleExcludedObjects: object expected");
                                    message.oracleExcludedObjects = $root.google.cloud.datastream.v1.OracleRdbms.fromObject(object.oracleExcludedObjects);
                                }
                                if (object.mysqlExcludedObjects != null) {
                                    if (typeof object.mysqlExcludedObjects !== "object")
                                        throw TypeError(".google.cloud.datastream.v1.Stream.BackfillAllStrategy.mysqlExcludedObjects: object expected");
                                    message.mysqlExcludedObjects = $root.google.cloud.datastream.v1.MysqlRdbms.fromObject(object.mysqlExcludedObjects);
                                }
                                if (object.postgresqlExcludedObjects != null) {
                                    if (typeof object.postgresqlExcludedObjects !== "object")
                                        throw TypeError(".google.cloud.datastream.v1.Stream.BackfillAllStrategy.postgresqlExcludedObjects: object expected");
                                    message.postgresqlExcludedObjects = $root.google.cloud.datastream.v1.PostgresqlRdbms.fromObject(object.postgresqlExcludedObjects);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a BackfillAllStrategy message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.datastream.v1.Stream.BackfillAllStrategy
                             * @static
                             * @param {google.cloud.datastream.v1.Stream.BackfillAllStrategy} message BackfillAllStrategy
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            BackfillAllStrategy.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (message.oracleExcludedObjects != null && message.hasOwnProperty("oracleExcludedObjects")) {
                                    object.oracleExcludedObjects = $root.google.cloud.datastream.v1.OracleRdbms.toObject(message.oracleExcludedObjects, options);
                                    if (options.oneofs)
                                        object.excludedObjects = "oracleExcludedObjects";
                                }
                                if (message.mysqlExcludedObjects != null && message.hasOwnProperty("mysqlExcludedObjects")) {
                                    object.mysqlExcludedObjects = $root.google.cloud.datastream.v1.MysqlRdbms.toObject(message.mysqlExcludedObjects, options);
                                    if (options.oneofs)
                                        object.excludedObjects = "mysqlExcludedObjects";
                                }
                                if (message.postgresqlExcludedObjects != null && message.hasOwnProperty("postgresqlExcludedObjects")) {
                                    object.postgresqlExcludedObjects = $root.google.cloud.datastream.v1.PostgresqlRdbms.toObject(message.postgresqlExcludedObjects, options);
                                    if (options.oneofs)
                                        object.excludedObjects = "postgresqlExcludedObjects";
                                }
                                return object;
                            };
    
                            /**
                             * Converts this BackfillAllStrategy to JSON.
                             * @function toJSON
                             * @memberof google.cloud.datastream.v1.Stream.BackfillAllStrategy
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            BackfillAllStrategy.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for BackfillAllStrategy
                             * @function getTypeUrl
                             * @memberof google.cloud.datastream.v1.Stream.BackfillAllStrategy
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            BackfillAllStrategy.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.datastream.v1.Stream.BackfillAllStrategy";
                            };
    
                            return BackfillAllStrategy;
                        })();
    
                        Stream.BackfillNoneStrategy = (function() {
    
                            /**
                             * Properties of a BackfillNoneStrategy.
                             * @memberof google.cloud.datastream.v1.Stream
                             * @interface IBackfillNoneStrategy
                             */
    
                            /**
                             * Constructs a new BackfillNoneStrategy.
                             * @memberof google.cloud.datastream.v1.Stream
                             * @classdesc Represents a BackfillNoneStrategy.
                             * @implements IBackfillNoneStrategy
                             * @constructor
                             * @param {google.cloud.datastream.v1.Stream.IBackfillNoneStrategy=} [properties] Properties to set
                             */
                            function BackfillNoneStrategy(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Creates a new BackfillNoneStrategy instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.datastream.v1.Stream.BackfillNoneStrategy
                             * @static
                             * @param {google.cloud.datastream.v1.Stream.IBackfillNoneStrategy=} [properties] Properties to set
                             * @returns {google.cloud.datastream.v1.Stream.BackfillNoneStrategy} BackfillNoneStrategy instance
                             */
                            BackfillNoneStrategy.create = function create(properties) {
                                return new BackfillNoneStrategy(properties);
                            };
    
                            /**
                             * Encodes the specified BackfillNoneStrategy message. Does not implicitly {@link google.cloud.datastream.v1.Stream.BackfillNoneStrategy.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.datastream.v1.Stream.BackfillNoneStrategy
                             * @static
                             * @param {google.cloud.datastream.v1.Stream.IBackfillNoneStrategy} message BackfillNoneStrategy message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BackfillNoneStrategy.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified BackfillNoneStrategy message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.Stream.BackfillNoneStrategy.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.datastream.v1.Stream.BackfillNoneStrategy
                             * @static
                             * @param {google.cloud.datastream.v1.Stream.IBackfillNoneStrategy} message BackfillNoneStrategy message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BackfillNoneStrategy.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a BackfillNoneStrategy message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.datastream.v1.Stream.BackfillNoneStrategy
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.datastream.v1.Stream.BackfillNoneStrategy} BackfillNoneStrategy
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BackfillNoneStrategy.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.Stream.BackfillNoneStrategy();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a BackfillNoneStrategy message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.datastream.v1.Stream.BackfillNoneStrategy
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.datastream.v1.Stream.BackfillNoneStrategy} BackfillNoneStrategy
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BackfillNoneStrategy.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a BackfillNoneStrategy message.
                             * @function verify
                             * @memberof google.cloud.datastream.v1.Stream.BackfillNoneStrategy
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            BackfillNoneStrategy.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                return null;
                            };
    
                            /**
                             * Creates a BackfillNoneStrategy message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.datastream.v1.Stream.BackfillNoneStrategy
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.datastream.v1.Stream.BackfillNoneStrategy} BackfillNoneStrategy
                             */
                            BackfillNoneStrategy.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.datastream.v1.Stream.BackfillNoneStrategy)
                                    return object;
                                return new $root.google.cloud.datastream.v1.Stream.BackfillNoneStrategy();
                            };
    
                            /**
                             * Creates a plain object from a BackfillNoneStrategy message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.datastream.v1.Stream.BackfillNoneStrategy
                             * @static
                             * @param {google.cloud.datastream.v1.Stream.BackfillNoneStrategy} message BackfillNoneStrategy
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            BackfillNoneStrategy.toObject = function toObject() {
                                return {};
                            };
    
                            /**
                             * Converts this BackfillNoneStrategy to JSON.
                             * @function toJSON
                             * @memberof google.cloud.datastream.v1.Stream.BackfillNoneStrategy
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            BackfillNoneStrategy.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for BackfillNoneStrategy
                             * @function getTypeUrl
                             * @memberof google.cloud.datastream.v1.Stream.BackfillNoneStrategy
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            BackfillNoneStrategy.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.datastream.v1.Stream.BackfillNoneStrategy";
                            };
    
                            return BackfillNoneStrategy;
                        })();
    
                        return Stream;
                    })();
    
                    v1.StreamObject = (function() {
    
                        /**
                         * Properties of a StreamObject.
                         * @memberof google.cloud.datastream.v1
                         * @interface IStreamObject
                         * @property {string|null} [name] StreamObject name
                         * @property {google.protobuf.ITimestamp|null} [createTime] StreamObject createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] StreamObject updateTime
                         * @property {string|null} [displayName] StreamObject displayName
                         * @property {Array.<google.cloud.datastream.v1.IError>|null} [errors] StreamObject errors
                         * @property {google.cloud.datastream.v1.IBackfillJob|null} [backfillJob] StreamObject backfillJob
                         * @property {google.cloud.datastream.v1.ISourceObjectIdentifier|null} [sourceObject] StreamObject sourceObject
                         */
    
                        /**
                         * Constructs a new StreamObject.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a StreamObject.
                         * @implements IStreamObject
                         * @constructor
                         * @param {google.cloud.datastream.v1.IStreamObject=} [properties] Properties to set
                         */
                        function StreamObject(properties) {
                            this.errors = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * StreamObject name.
                         * @member {string} name
                         * @memberof google.cloud.datastream.v1.StreamObject
                         * @instance
                         */
                        StreamObject.prototype.name = "";
    
                        /**
                         * StreamObject createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.datastream.v1.StreamObject
                         * @instance
                         */
                        StreamObject.prototype.createTime = null;
    
                        /**
                         * StreamObject updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.datastream.v1.StreamObject
                         * @instance
                         */
                        StreamObject.prototype.updateTime = null;
    
                        /**
                         * StreamObject displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.datastream.v1.StreamObject
                         * @instance
                         */
                        StreamObject.prototype.displayName = "";
    
                        /**
                         * StreamObject errors.
                         * @member {Array.<google.cloud.datastream.v1.IError>} errors
                         * @memberof google.cloud.datastream.v1.StreamObject
                         * @instance
                         */
                        StreamObject.prototype.errors = $util.emptyArray;
    
                        /**
                         * StreamObject backfillJob.
                         * @member {google.cloud.datastream.v1.IBackfillJob|null|undefined} backfillJob
                         * @memberof google.cloud.datastream.v1.StreamObject
                         * @instance
                         */
                        StreamObject.prototype.backfillJob = null;
    
                        /**
                         * StreamObject sourceObject.
                         * @member {google.cloud.datastream.v1.ISourceObjectIdentifier|null|undefined} sourceObject
                         * @memberof google.cloud.datastream.v1.StreamObject
                         * @instance
                         */
                        StreamObject.prototype.sourceObject = null;
    
                        /**
                         * Creates a new StreamObject instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.StreamObject
                         * @static
                         * @param {google.cloud.datastream.v1.IStreamObject=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.StreamObject} StreamObject instance
                         */
                        StreamObject.create = function create(properties) {
                            return new StreamObject(properties);
                        };
    
                        /**
                         * Encodes the specified StreamObject message. Does not implicitly {@link google.cloud.datastream.v1.StreamObject.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.StreamObject
                         * @static
                         * @param {google.cloud.datastream.v1.IStreamObject} message StreamObject message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StreamObject.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.displayName);
                            if (message.errors != null && message.errors.length)
                                for (var i = 0; i < message.errors.length; ++i)
                                    $root.google.cloud.datastream.v1.Error.encode(message.errors[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.backfillJob != null && Object.hasOwnProperty.call(message, "backfillJob"))
                                $root.google.cloud.datastream.v1.BackfillJob.encode(message.backfillJob, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.sourceObject != null && Object.hasOwnProperty.call(message, "sourceObject"))
                                $root.google.cloud.datastream.v1.SourceObjectIdentifier.encode(message.sourceObject, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified StreamObject message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.StreamObject.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.StreamObject
                         * @static
                         * @param {google.cloud.datastream.v1.IStreamObject} message StreamObject message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StreamObject.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a StreamObject message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.StreamObject
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.StreamObject} StreamObject
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StreamObject.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.StreamObject();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 6: {
                                        if (!(message.errors && message.errors.length))
                                            message.errors = [];
                                        message.errors.push($root.google.cloud.datastream.v1.Error.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 7: {
                                        message.backfillJob = $root.google.cloud.datastream.v1.BackfillJob.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.sourceObject = $root.google.cloud.datastream.v1.SourceObjectIdentifier.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a StreamObject message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.StreamObject
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.StreamObject} StreamObject
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StreamObject.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a StreamObject message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.StreamObject
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StreamObject.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.errors != null && message.hasOwnProperty("errors")) {
                                if (!Array.isArray(message.errors))
                                    return "errors: array expected";
                                for (var i = 0; i < message.errors.length; ++i) {
                                    var error = $root.google.cloud.datastream.v1.Error.verify(message.errors[i]);
                                    if (error)
                                        return "errors." + error;
                                }
                            }
                            if (message.backfillJob != null && message.hasOwnProperty("backfillJob")) {
                                var error = $root.google.cloud.datastream.v1.BackfillJob.verify(message.backfillJob);
                                if (error)
                                    return "backfillJob." + error;
                            }
                            if (message.sourceObject != null && message.hasOwnProperty("sourceObject")) {
                                var error = $root.google.cloud.datastream.v1.SourceObjectIdentifier.verify(message.sourceObject);
                                if (error)
                                    return "sourceObject." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a StreamObject message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.StreamObject
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.StreamObject} StreamObject
                         */
                        StreamObject.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.StreamObject)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.StreamObject();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.StreamObject.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.StreamObject.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.errors) {
                                if (!Array.isArray(object.errors))
                                    throw TypeError(".google.cloud.datastream.v1.StreamObject.errors: array expected");
                                message.errors = [];
                                for (var i = 0; i < object.errors.length; ++i) {
                                    if (typeof object.errors[i] !== "object")
                                        throw TypeError(".google.cloud.datastream.v1.StreamObject.errors: object expected");
                                    message.errors[i] = $root.google.cloud.datastream.v1.Error.fromObject(object.errors[i]);
                                }
                            }
                            if (object.backfillJob != null) {
                                if (typeof object.backfillJob !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.StreamObject.backfillJob: object expected");
                                message.backfillJob = $root.google.cloud.datastream.v1.BackfillJob.fromObject(object.backfillJob);
                            }
                            if (object.sourceObject != null) {
                                if (typeof object.sourceObject !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.StreamObject.sourceObject: object expected");
                                message.sourceObject = $root.google.cloud.datastream.v1.SourceObjectIdentifier.fromObject(object.sourceObject);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a StreamObject message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.StreamObject
                         * @static
                         * @param {google.cloud.datastream.v1.StreamObject} message StreamObject
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StreamObject.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.errors = [];
                            if (options.defaults) {
                                object.name = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.displayName = "";
                                object.backfillJob = null;
                                object.sourceObject = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.errors && message.errors.length) {
                                object.errors = [];
                                for (var j = 0; j < message.errors.length; ++j)
                                    object.errors[j] = $root.google.cloud.datastream.v1.Error.toObject(message.errors[j], options);
                            }
                            if (message.backfillJob != null && message.hasOwnProperty("backfillJob"))
                                object.backfillJob = $root.google.cloud.datastream.v1.BackfillJob.toObject(message.backfillJob, options);
                            if (message.sourceObject != null && message.hasOwnProperty("sourceObject"))
                                object.sourceObject = $root.google.cloud.datastream.v1.SourceObjectIdentifier.toObject(message.sourceObject, options);
                            return object;
                        };
    
                        /**
                         * Converts this StreamObject to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.StreamObject
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StreamObject.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for StreamObject
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.StreamObject
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StreamObject.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.StreamObject";
                        };
    
                        return StreamObject;
                    })();
    
                    v1.SourceObjectIdentifier = (function() {
    
                        /**
                         * Properties of a SourceObjectIdentifier.
                         * @memberof google.cloud.datastream.v1
                         * @interface ISourceObjectIdentifier
                         * @property {google.cloud.datastream.v1.SourceObjectIdentifier.IOracleObjectIdentifier|null} [oracleIdentifier] SourceObjectIdentifier oracleIdentifier
                         * @property {google.cloud.datastream.v1.SourceObjectIdentifier.IMysqlObjectIdentifier|null} [mysqlIdentifier] SourceObjectIdentifier mysqlIdentifier
                         * @property {google.cloud.datastream.v1.SourceObjectIdentifier.IPostgresqlObjectIdentifier|null} [postgresqlIdentifier] SourceObjectIdentifier postgresqlIdentifier
                         */
    
                        /**
                         * Constructs a new SourceObjectIdentifier.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a SourceObjectIdentifier.
                         * @implements ISourceObjectIdentifier
                         * @constructor
                         * @param {google.cloud.datastream.v1.ISourceObjectIdentifier=} [properties] Properties to set
                         */
                        function SourceObjectIdentifier(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SourceObjectIdentifier oracleIdentifier.
                         * @member {google.cloud.datastream.v1.SourceObjectIdentifier.IOracleObjectIdentifier|null|undefined} oracleIdentifier
                         * @memberof google.cloud.datastream.v1.SourceObjectIdentifier
                         * @instance
                         */
                        SourceObjectIdentifier.prototype.oracleIdentifier = null;
    
                        /**
                         * SourceObjectIdentifier mysqlIdentifier.
                         * @member {google.cloud.datastream.v1.SourceObjectIdentifier.IMysqlObjectIdentifier|null|undefined} mysqlIdentifier
                         * @memberof google.cloud.datastream.v1.SourceObjectIdentifier
                         * @instance
                         */
                        SourceObjectIdentifier.prototype.mysqlIdentifier = null;
    
                        /**
                         * SourceObjectIdentifier postgresqlIdentifier.
                         * @member {google.cloud.datastream.v1.SourceObjectIdentifier.IPostgresqlObjectIdentifier|null|undefined} postgresqlIdentifier
                         * @memberof google.cloud.datastream.v1.SourceObjectIdentifier
                         * @instance
                         */
                        SourceObjectIdentifier.prototype.postgresqlIdentifier = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * SourceObjectIdentifier sourceIdentifier.
                         * @member {"oracleIdentifier"|"mysqlIdentifier"|"postgresqlIdentifier"|undefined} sourceIdentifier
                         * @memberof google.cloud.datastream.v1.SourceObjectIdentifier
                         * @instance
                         */
                        Object.defineProperty(SourceObjectIdentifier.prototype, "sourceIdentifier", {
                            get: $util.oneOfGetter($oneOfFields = ["oracleIdentifier", "mysqlIdentifier", "postgresqlIdentifier"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new SourceObjectIdentifier instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.SourceObjectIdentifier
                         * @static
                         * @param {google.cloud.datastream.v1.ISourceObjectIdentifier=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.SourceObjectIdentifier} SourceObjectIdentifier instance
                         */
                        SourceObjectIdentifier.create = function create(properties) {
                            return new SourceObjectIdentifier(properties);
                        };
    
                        /**
                         * Encodes the specified SourceObjectIdentifier message. Does not implicitly {@link google.cloud.datastream.v1.SourceObjectIdentifier.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.SourceObjectIdentifier
                         * @static
                         * @param {google.cloud.datastream.v1.ISourceObjectIdentifier} message SourceObjectIdentifier message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SourceObjectIdentifier.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.oracleIdentifier != null && Object.hasOwnProperty.call(message, "oracleIdentifier"))
                                $root.google.cloud.datastream.v1.SourceObjectIdentifier.OracleObjectIdentifier.encode(message.oracleIdentifier, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.mysqlIdentifier != null && Object.hasOwnProperty.call(message, "mysqlIdentifier"))
                                $root.google.cloud.datastream.v1.SourceObjectIdentifier.MysqlObjectIdentifier.encode(message.mysqlIdentifier, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.postgresqlIdentifier != null && Object.hasOwnProperty.call(message, "postgresqlIdentifier"))
                                $root.google.cloud.datastream.v1.SourceObjectIdentifier.PostgresqlObjectIdentifier.encode(message.postgresqlIdentifier, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SourceObjectIdentifier message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.SourceObjectIdentifier.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.SourceObjectIdentifier
                         * @static
                         * @param {google.cloud.datastream.v1.ISourceObjectIdentifier} message SourceObjectIdentifier message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SourceObjectIdentifier.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SourceObjectIdentifier message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.SourceObjectIdentifier
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.SourceObjectIdentifier} SourceObjectIdentifier
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SourceObjectIdentifier.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.SourceObjectIdentifier();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.oracleIdentifier = $root.google.cloud.datastream.v1.SourceObjectIdentifier.OracleObjectIdentifier.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.mysqlIdentifier = $root.google.cloud.datastream.v1.SourceObjectIdentifier.MysqlObjectIdentifier.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.postgresqlIdentifier = $root.google.cloud.datastream.v1.SourceObjectIdentifier.PostgresqlObjectIdentifier.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SourceObjectIdentifier message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.SourceObjectIdentifier
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.SourceObjectIdentifier} SourceObjectIdentifier
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SourceObjectIdentifier.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SourceObjectIdentifier message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.SourceObjectIdentifier
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SourceObjectIdentifier.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.oracleIdentifier != null && message.hasOwnProperty("oracleIdentifier")) {
                                properties.sourceIdentifier = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1.SourceObjectIdentifier.OracleObjectIdentifier.verify(message.oracleIdentifier);
                                    if (error)
                                        return "oracleIdentifier." + error;
                                }
                            }
                            if (message.mysqlIdentifier != null && message.hasOwnProperty("mysqlIdentifier")) {
                                if (properties.sourceIdentifier === 1)
                                    return "sourceIdentifier: multiple values";
                                properties.sourceIdentifier = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1.SourceObjectIdentifier.MysqlObjectIdentifier.verify(message.mysqlIdentifier);
                                    if (error)
                                        return "mysqlIdentifier." + error;
                                }
                            }
                            if (message.postgresqlIdentifier != null && message.hasOwnProperty("postgresqlIdentifier")) {
                                if (properties.sourceIdentifier === 1)
                                    return "sourceIdentifier: multiple values";
                                properties.sourceIdentifier = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1.SourceObjectIdentifier.PostgresqlObjectIdentifier.verify(message.postgresqlIdentifier);
                                    if (error)
                                        return "postgresqlIdentifier." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SourceObjectIdentifier message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.SourceObjectIdentifier
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.SourceObjectIdentifier} SourceObjectIdentifier
                         */
                        SourceObjectIdentifier.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.SourceObjectIdentifier)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.SourceObjectIdentifier();
                            if (object.oracleIdentifier != null) {
                                if (typeof object.oracleIdentifier !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.SourceObjectIdentifier.oracleIdentifier: object expected");
                                message.oracleIdentifier = $root.google.cloud.datastream.v1.SourceObjectIdentifier.OracleObjectIdentifier.fromObject(object.oracleIdentifier);
                            }
                            if (object.mysqlIdentifier != null) {
                                if (typeof object.mysqlIdentifier !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.SourceObjectIdentifier.mysqlIdentifier: object expected");
                                message.mysqlIdentifier = $root.google.cloud.datastream.v1.SourceObjectIdentifier.MysqlObjectIdentifier.fromObject(object.mysqlIdentifier);
                            }
                            if (object.postgresqlIdentifier != null) {
                                if (typeof object.postgresqlIdentifier !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.SourceObjectIdentifier.postgresqlIdentifier: object expected");
                                message.postgresqlIdentifier = $root.google.cloud.datastream.v1.SourceObjectIdentifier.PostgresqlObjectIdentifier.fromObject(object.postgresqlIdentifier);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SourceObjectIdentifier message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.SourceObjectIdentifier
                         * @static
                         * @param {google.cloud.datastream.v1.SourceObjectIdentifier} message SourceObjectIdentifier
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SourceObjectIdentifier.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.oracleIdentifier != null && message.hasOwnProperty("oracleIdentifier")) {
                                object.oracleIdentifier = $root.google.cloud.datastream.v1.SourceObjectIdentifier.OracleObjectIdentifier.toObject(message.oracleIdentifier, options);
                                if (options.oneofs)
                                    object.sourceIdentifier = "oracleIdentifier";
                            }
                            if (message.mysqlIdentifier != null && message.hasOwnProperty("mysqlIdentifier")) {
                                object.mysqlIdentifier = $root.google.cloud.datastream.v1.SourceObjectIdentifier.MysqlObjectIdentifier.toObject(message.mysqlIdentifier, options);
                                if (options.oneofs)
                                    object.sourceIdentifier = "mysqlIdentifier";
                            }
                            if (message.postgresqlIdentifier != null && message.hasOwnProperty("postgresqlIdentifier")) {
                                object.postgresqlIdentifier = $root.google.cloud.datastream.v1.SourceObjectIdentifier.PostgresqlObjectIdentifier.toObject(message.postgresqlIdentifier, options);
                                if (options.oneofs)
                                    object.sourceIdentifier = "postgresqlIdentifier";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this SourceObjectIdentifier to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.SourceObjectIdentifier
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SourceObjectIdentifier.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SourceObjectIdentifier
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.SourceObjectIdentifier
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SourceObjectIdentifier.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.SourceObjectIdentifier";
                        };
    
                        SourceObjectIdentifier.OracleObjectIdentifier = (function() {
    
                            /**
                             * Properties of an OracleObjectIdentifier.
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier
                             * @interface IOracleObjectIdentifier
                             * @property {string|null} [schema] OracleObjectIdentifier schema
                             * @property {string|null} [table] OracleObjectIdentifier table
                             */
    
                            /**
                             * Constructs a new OracleObjectIdentifier.
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier
                             * @classdesc Represents an OracleObjectIdentifier.
                             * @implements IOracleObjectIdentifier
                             * @constructor
                             * @param {google.cloud.datastream.v1.SourceObjectIdentifier.IOracleObjectIdentifier=} [properties] Properties to set
                             */
                            function OracleObjectIdentifier(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * OracleObjectIdentifier schema.
                             * @member {string} schema
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier.OracleObjectIdentifier
                             * @instance
                             */
                            OracleObjectIdentifier.prototype.schema = "";
    
                            /**
                             * OracleObjectIdentifier table.
                             * @member {string} table
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier.OracleObjectIdentifier
                             * @instance
                             */
                            OracleObjectIdentifier.prototype.table = "";
    
                            /**
                             * Creates a new OracleObjectIdentifier instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier.OracleObjectIdentifier
                             * @static
                             * @param {google.cloud.datastream.v1.SourceObjectIdentifier.IOracleObjectIdentifier=} [properties] Properties to set
                             * @returns {google.cloud.datastream.v1.SourceObjectIdentifier.OracleObjectIdentifier} OracleObjectIdentifier instance
                             */
                            OracleObjectIdentifier.create = function create(properties) {
                                return new OracleObjectIdentifier(properties);
                            };
    
                            /**
                             * Encodes the specified OracleObjectIdentifier message. Does not implicitly {@link google.cloud.datastream.v1.SourceObjectIdentifier.OracleObjectIdentifier.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier.OracleObjectIdentifier
                             * @static
                             * @param {google.cloud.datastream.v1.SourceObjectIdentifier.IOracleObjectIdentifier} message OracleObjectIdentifier message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            OracleObjectIdentifier.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.schema != null && Object.hasOwnProperty.call(message, "schema"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.schema);
                                if (message.table != null && Object.hasOwnProperty.call(message, "table"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.table);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified OracleObjectIdentifier message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.SourceObjectIdentifier.OracleObjectIdentifier.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier.OracleObjectIdentifier
                             * @static
                             * @param {google.cloud.datastream.v1.SourceObjectIdentifier.IOracleObjectIdentifier} message OracleObjectIdentifier message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            OracleObjectIdentifier.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an OracleObjectIdentifier message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier.OracleObjectIdentifier
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.datastream.v1.SourceObjectIdentifier.OracleObjectIdentifier} OracleObjectIdentifier
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            OracleObjectIdentifier.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.SourceObjectIdentifier.OracleObjectIdentifier();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.schema = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.table = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an OracleObjectIdentifier message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier.OracleObjectIdentifier
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.datastream.v1.SourceObjectIdentifier.OracleObjectIdentifier} OracleObjectIdentifier
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            OracleObjectIdentifier.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an OracleObjectIdentifier message.
                             * @function verify
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier.OracleObjectIdentifier
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            OracleObjectIdentifier.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.schema != null && message.hasOwnProperty("schema"))
                                    if (!$util.isString(message.schema))
                                        return "schema: string expected";
                                if (message.table != null && message.hasOwnProperty("table"))
                                    if (!$util.isString(message.table))
                                        return "table: string expected";
                                return null;
                            };
    
                            /**
                             * Creates an OracleObjectIdentifier message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier.OracleObjectIdentifier
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.datastream.v1.SourceObjectIdentifier.OracleObjectIdentifier} OracleObjectIdentifier
                             */
                            OracleObjectIdentifier.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.datastream.v1.SourceObjectIdentifier.OracleObjectIdentifier)
                                    return object;
                                var message = new $root.google.cloud.datastream.v1.SourceObjectIdentifier.OracleObjectIdentifier();
                                if (object.schema != null)
                                    message.schema = String(object.schema);
                                if (object.table != null)
                                    message.table = String(object.table);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an OracleObjectIdentifier message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier.OracleObjectIdentifier
                             * @static
                             * @param {google.cloud.datastream.v1.SourceObjectIdentifier.OracleObjectIdentifier} message OracleObjectIdentifier
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            OracleObjectIdentifier.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.schema = "";
                                    object.table = "";
                                }
                                if (message.schema != null && message.hasOwnProperty("schema"))
                                    object.schema = message.schema;
                                if (message.table != null && message.hasOwnProperty("table"))
                                    object.table = message.table;
                                return object;
                            };
    
                            /**
                             * Converts this OracleObjectIdentifier to JSON.
                             * @function toJSON
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier.OracleObjectIdentifier
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            OracleObjectIdentifier.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for OracleObjectIdentifier
                             * @function getTypeUrl
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier.OracleObjectIdentifier
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            OracleObjectIdentifier.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.datastream.v1.SourceObjectIdentifier.OracleObjectIdentifier";
                            };
    
                            return OracleObjectIdentifier;
                        })();
    
                        SourceObjectIdentifier.PostgresqlObjectIdentifier = (function() {
    
                            /**
                             * Properties of a PostgresqlObjectIdentifier.
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier
                             * @interface IPostgresqlObjectIdentifier
                             * @property {string|null} [schema] PostgresqlObjectIdentifier schema
                             * @property {string|null} [table] PostgresqlObjectIdentifier table
                             */
    
                            /**
                             * Constructs a new PostgresqlObjectIdentifier.
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier
                             * @classdesc Represents a PostgresqlObjectIdentifier.
                             * @implements IPostgresqlObjectIdentifier
                             * @constructor
                             * @param {google.cloud.datastream.v1.SourceObjectIdentifier.IPostgresqlObjectIdentifier=} [properties] Properties to set
                             */
                            function PostgresqlObjectIdentifier(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * PostgresqlObjectIdentifier schema.
                             * @member {string} schema
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier.PostgresqlObjectIdentifier
                             * @instance
                             */
                            PostgresqlObjectIdentifier.prototype.schema = "";
    
                            /**
                             * PostgresqlObjectIdentifier table.
                             * @member {string} table
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier.PostgresqlObjectIdentifier
                             * @instance
                             */
                            PostgresqlObjectIdentifier.prototype.table = "";
    
                            /**
                             * Creates a new PostgresqlObjectIdentifier instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier.PostgresqlObjectIdentifier
                             * @static
                             * @param {google.cloud.datastream.v1.SourceObjectIdentifier.IPostgresqlObjectIdentifier=} [properties] Properties to set
                             * @returns {google.cloud.datastream.v1.SourceObjectIdentifier.PostgresqlObjectIdentifier} PostgresqlObjectIdentifier instance
                             */
                            PostgresqlObjectIdentifier.create = function create(properties) {
                                return new PostgresqlObjectIdentifier(properties);
                            };
    
                            /**
                             * Encodes the specified PostgresqlObjectIdentifier message. Does not implicitly {@link google.cloud.datastream.v1.SourceObjectIdentifier.PostgresqlObjectIdentifier.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier.PostgresqlObjectIdentifier
                             * @static
                             * @param {google.cloud.datastream.v1.SourceObjectIdentifier.IPostgresqlObjectIdentifier} message PostgresqlObjectIdentifier message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PostgresqlObjectIdentifier.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.schema != null && Object.hasOwnProperty.call(message, "schema"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.schema);
                                if (message.table != null && Object.hasOwnProperty.call(message, "table"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.table);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified PostgresqlObjectIdentifier message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.SourceObjectIdentifier.PostgresqlObjectIdentifier.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier.PostgresqlObjectIdentifier
                             * @static
                             * @param {google.cloud.datastream.v1.SourceObjectIdentifier.IPostgresqlObjectIdentifier} message PostgresqlObjectIdentifier message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PostgresqlObjectIdentifier.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a PostgresqlObjectIdentifier message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier.PostgresqlObjectIdentifier
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.datastream.v1.SourceObjectIdentifier.PostgresqlObjectIdentifier} PostgresqlObjectIdentifier
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PostgresqlObjectIdentifier.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.SourceObjectIdentifier.PostgresqlObjectIdentifier();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.schema = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.table = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a PostgresqlObjectIdentifier message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier.PostgresqlObjectIdentifier
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.datastream.v1.SourceObjectIdentifier.PostgresqlObjectIdentifier} PostgresqlObjectIdentifier
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PostgresqlObjectIdentifier.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a PostgresqlObjectIdentifier message.
                             * @function verify
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier.PostgresqlObjectIdentifier
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            PostgresqlObjectIdentifier.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.schema != null && message.hasOwnProperty("schema"))
                                    if (!$util.isString(message.schema))
                                        return "schema: string expected";
                                if (message.table != null && message.hasOwnProperty("table"))
                                    if (!$util.isString(message.table))
                                        return "table: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a PostgresqlObjectIdentifier message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier.PostgresqlObjectIdentifier
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.datastream.v1.SourceObjectIdentifier.PostgresqlObjectIdentifier} PostgresqlObjectIdentifier
                             */
                            PostgresqlObjectIdentifier.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.datastream.v1.SourceObjectIdentifier.PostgresqlObjectIdentifier)
                                    return object;
                                var message = new $root.google.cloud.datastream.v1.SourceObjectIdentifier.PostgresqlObjectIdentifier();
                                if (object.schema != null)
                                    message.schema = String(object.schema);
                                if (object.table != null)
                                    message.table = String(object.table);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a PostgresqlObjectIdentifier message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier.PostgresqlObjectIdentifier
                             * @static
                             * @param {google.cloud.datastream.v1.SourceObjectIdentifier.PostgresqlObjectIdentifier} message PostgresqlObjectIdentifier
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            PostgresqlObjectIdentifier.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.schema = "";
                                    object.table = "";
                                }
                                if (message.schema != null && message.hasOwnProperty("schema"))
                                    object.schema = message.schema;
                                if (message.table != null && message.hasOwnProperty("table"))
                                    object.table = message.table;
                                return object;
                            };
    
                            /**
                             * Converts this PostgresqlObjectIdentifier to JSON.
                             * @function toJSON
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier.PostgresqlObjectIdentifier
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            PostgresqlObjectIdentifier.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for PostgresqlObjectIdentifier
                             * @function getTypeUrl
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier.PostgresqlObjectIdentifier
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            PostgresqlObjectIdentifier.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.datastream.v1.SourceObjectIdentifier.PostgresqlObjectIdentifier";
                            };
    
                            return PostgresqlObjectIdentifier;
                        })();
    
                        SourceObjectIdentifier.MysqlObjectIdentifier = (function() {
    
                            /**
                             * Properties of a MysqlObjectIdentifier.
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier
                             * @interface IMysqlObjectIdentifier
                             * @property {string|null} [database] MysqlObjectIdentifier database
                             * @property {string|null} [table] MysqlObjectIdentifier table
                             */
    
                            /**
                             * Constructs a new MysqlObjectIdentifier.
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier
                             * @classdesc Represents a MysqlObjectIdentifier.
                             * @implements IMysqlObjectIdentifier
                             * @constructor
                             * @param {google.cloud.datastream.v1.SourceObjectIdentifier.IMysqlObjectIdentifier=} [properties] Properties to set
                             */
                            function MysqlObjectIdentifier(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * MysqlObjectIdentifier database.
                             * @member {string} database
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier.MysqlObjectIdentifier
                             * @instance
                             */
                            MysqlObjectIdentifier.prototype.database = "";
    
                            /**
                             * MysqlObjectIdentifier table.
                             * @member {string} table
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier.MysqlObjectIdentifier
                             * @instance
                             */
                            MysqlObjectIdentifier.prototype.table = "";
    
                            /**
                             * Creates a new MysqlObjectIdentifier instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier.MysqlObjectIdentifier
                             * @static
                             * @param {google.cloud.datastream.v1.SourceObjectIdentifier.IMysqlObjectIdentifier=} [properties] Properties to set
                             * @returns {google.cloud.datastream.v1.SourceObjectIdentifier.MysqlObjectIdentifier} MysqlObjectIdentifier instance
                             */
                            MysqlObjectIdentifier.create = function create(properties) {
                                return new MysqlObjectIdentifier(properties);
                            };
    
                            /**
                             * Encodes the specified MysqlObjectIdentifier message. Does not implicitly {@link google.cloud.datastream.v1.SourceObjectIdentifier.MysqlObjectIdentifier.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier.MysqlObjectIdentifier
                             * @static
                             * @param {google.cloud.datastream.v1.SourceObjectIdentifier.IMysqlObjectIdentifier} message MysqlObjectIdentifier message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MysqlObjectIdentifier.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.database != null && Object.hasOwnProperty.call(message, "database"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.database);
                                if (message.table != null && Object.hasOwnProperty.call(message, "table"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.table);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified MysqlObjectIdentifier message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.SourceObjectIdentifier.MysqlObjectIdentifier.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier.MysqlObjectIdentifier
                             * @static
                             * @param {google.cloud.datastream.v1.SourceObjectIdentifier.IMysqlObjectIdentifier} message MysqlObjectIdentifier message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MysqlObjectIdentifier.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a MysqlObjectIdentifier message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier.MysqlObjectIdentifier
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.datastream.v1.SourceObjectIdentifier.MysqlObjectIdentifier} MysqlObjectIdentifier
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MysqlObjectIdentifier.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.SourceObjectIdentifier.MysqlObjectIdentifier();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.database = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.table = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a MysqlObjectIdentifier message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier.MysqlObjectIdentifier
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.datastream.v1.SourceObjectIdentifier.MysqlObjectIdentifier} MysqlObjectIdentifier
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MysqlObjectIdentifier.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a MysqlObjectIdentifier message.
                             * @function verify
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier.MysqlObjectIdentifier
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            MysqlObjectIdentifier.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.database != null && message.hasOwnProperty("database"))
                                    if (!$util.isString(message.database))
                                        return "database: string expected";
                                if (message.table != null && message.hasOwnProperty("table"))
                                    if (!$util.isString(message.table))
                                        return "table: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a MysqlObjectIdentifier message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier.MysqlObjectIdentifier
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.datastream.v1.SourceObjectIdentifier.MysqlObjectIdentifier} MysqlObjectIdentifier
                             */
                            MysqlObjectIdentifier.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.datastream.v1.SourceObjectIdentifier.MysqlObjectIdentifier)
                                    return object;
                                var message = new $root.google.cloud.datastream.v1.SourceObjectIdentifier.MysqlObjectIdentifier();
                                if (object.database != null)
                                    message.database = String(object.database);
                                if (object.table != null)
                                    message.table = String(object.table);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a MysqlObjectIdentifier message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier.MysqlObjectIdentifier
                             * @static
                             * @param {google.cloud.datastream.v1.SourceObjectIdentifier.MysqlObjectIdentifier} message MysqlObjectIdentifier
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            MysqlObjectIdentifier.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.database = "";
                                    object.table = "";
                                }
                                if (message.database != null && message.hasOwnProperty("database"))
                                    object.database = message.database;
                                if (message.table != null && message.hasOwnProperty("table"))
                                    object.table = message.table;
                                return object;
                            };
    
                            /**
                             * Converts this MysqlObjectIdentifier to JSON.
                             * @function toJSON
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier.MysqlObjectIdentifier
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            MysqlObjectIdentifier.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for MysqlObjectIdentifier
                             * @function getTypeUrl
                             * @memberof google.cloud.datastream.v1.SourceObjectIdentifier.MysqlObjectIdentifier
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            MysqlObjectIdentifier.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.datastream.v1.SourceObjectIdentifier.MysqlObjectIdentifier";
                            };
    
                            return MysqlObjectIdentifier;
                        })();
    
                        return SourceObjectIdentifier;
                    })();
    
                    v1.BackfillJob = (function() {
    
                        /**
                         * Properties of a BackfillJob.
                         * @memberof google.cloud.datastream.v1
                         * @interface IBackfillJob
                         * @property {google.cloud.datastream.v1.BackfillJob.State|null} [state] BackfillJob state
                         * @property {google.cloud.datastream.v1.BackfillJob.Trigger|null} [trigger] BackfillJob trigger
                         * @property {google.protobuf.ITimestamp|null} [lastStartTime] BackfillJob lastStartTime
                         * @property {google.protobuf.ITimestamp|null} [lastEndTime] BackfillJob lastEndTime
                         * @property {Array.<google.cloud.datastream.v1.IError>|null} [errors] BackfillJob errors
                         */
    
                        /**
                         * Constructs a new BackfillJob.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a BackfillJob.
                         * @implements IBackfillJob
                         * @constructor
                         * @param {google.cloud.datastream.v1.IBackfillJob=} [properties] Properties to set
                         */
                        function BackfillJob(properties) {
                            this.errors = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BackfillJob state.
                         * @member {google.cloud.datastream.v1.BackfillJob.State} state
                         * @memberof google.cloud.datastream.v1.BackfillJob
                         * @instance
                         */
                        BackfillJob.prototype.state = 0;
    
                        /**
                         * BackfillJob trigger.
                         * @member {google.cloud.datastream.v1.BackfillJob.Trigger} trigger
                         * @memberof google.cloud.datastream.v1.BackfillJob
                         * @instance
                         */
                        BackfillJob.prototype.trigger = 0;
    
                        /**
                         * BackfillJob lastStartTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} lastStartTime
                         * @memberof google.cloud.datastream.v1.BackfillJob
                         * @instance
                         */
                        BackfillJob.prototype.lastStartTime = null;
    
                        /**
                         * BackfillJob lastEndTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} lastEndTime
                         * @memberof google.cloud.datastream.v1.BackfillJob
                         * @instance
                         */
                        BackfillJob.prototype.lastEndTime = null;
    
                        /**
                         * BackfillJob errors.
                         * @member {Array.<google.cloud.datastream.v1.IError>} errors
                         * @memberof google.cloud.datastream.v1.BackfillJob
                         * @instance
                         */
                        BackfillJob.prototype.errors = $util.emptyArray;
    
                        /**
                         * Creates a new BackfillJob instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.BackfillJob
                         * @static
                         * @param {google.cloud.datastream.v1.IBackfillJob=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.BackfillJob} BackfillJob instance
                         */
                        BackfillJob.create = function create(properties) {
                            return new BackfillJob(properties);
                        };
    
                        /**
                         * Encodes the specified BackfillJob message. Does not implicitly {@link google.cloud.datastream.v1.BackfillJob.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.BackfillJob
                         * @static
                         * @param {google.cloud.datastream.v1.IBackfillJob} message BackfillJob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BackfillJob.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.state);
                            if (message.trigger != null && Object.hasOwnProperty.call(message, "trigger"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.trigger);
                            if (message.lastStartTime != null && Object.hasOwnProperty.call(message, "lastStartTime"))
                                $root.google.protobuf.Timestamp.encode(message.lastStartTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.lastEndTime != null && Object.hasOwnProperty.call(message, "lastEndTime"))
                                $root.google.protobuf.Timestamp.encode(message.lastEndTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.errors != null && message.errors.length)
                                for (var i = 0; i < message.errors.length; ++i)
                                    $root.google.cloud.datastream.v1.Error.encode(message.errors[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BackfillJob message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.BackfillJob.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.BackfillJob
                         * @static
                         * @param {google.cloud.datastream.v1.IBackfillJob} message BackfillJob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BackfillJob.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BackfillJob message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.BackfillJob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.BackfillJob} BackfillJob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BackfillJob.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.BackfillJob();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.trigger = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.lastStartTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.lastEndTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        if (!(message.errors && message.errors.length))
                                            message.errors = [];
                                        message.errors.push($root.google.cloud.datastream.v1.Error.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BackfillJob message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.BackfillJob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.BackfillJob} BackfillJob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BackfillJob.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BackfillJob message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.BackfillJob
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BackfillJob.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                    break;
                                }
                            if (message.trigger != null && message.hasOwnProperty("trigger"))
                                switch (message.trigger) {
                                default:
                                    return "trigger: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.lastStartTime != null && message.hasOwnProperty("lastStartTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.lastStartTime);
                                if (error)
                                    return "lastStartTime." + error;
                            }
                            if (message.lastEndTime != null && message.hasOwnProperty("lastEndTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.lastEndTime);
                                if (error)
                                    return "lastEndTime." + error;
                            }
                            if (message.errors != null && message.hasOwnProperty("errors")) {
                                if (!Array.isArray(message.errors))
                                    return "errors: array expected";
                                for (var i = 0; i < message.errors.length; ++i) {
                                    var error = $root.google.cloud.datastream.v1.Error.verify(message.errors[i]);
                                    if (error)
                                        return "errors." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a BackfillJob message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.BackfillJob
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.BackfillJob} BackfillJob
                         */
                        BackfillJob.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.BackfillJob)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.BackfillJob();
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "NOT_STARTED":
                            case 1:
                                message.state = 1;
                                break;
                            case "PENDING":
                            case 2:
                                message.state = 2;
                                break;
                            case "ACTIVE":
                            case 3:
                                message.state = 3;
                                break;
                            case "STOPPED":
                            case 4:
                                message.state = 4;
                                break;
                            case "FAILED":
                            case 5:
                                message.state = 5;
                                break;
                            case "COMPLETED":
                            case 6:
                                message.state = 6;
                                break;
                            case "UNSUPPORTED":
                            case 7:
                                message.state = 7;
                                break;
                            }
                            switch (object.trigger) {
                            default:
                                if (typeof object.trigger === "number") {
                                    message.trigger = object.trigger;
                                    break;
                                }
                                break;
                            case "TRIGGER_UNSPECIFIED":
                            case 0:
                                message.trigger = 0;
                                break;
                            case "AUTOMATIC":
                            case 1:
                                message.trigger = 1;
                                break;
                            case "MANUAL":
                            case 2:
                                message.trigger = 2;
                                break;
                            }
                            if (object.lastStartTime != null) {
                                if (typeof object.lastStartTime !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.BackfillJob.lastStartTime: object expected");
                                message.lastStartTime = $root.google.protobuf.Timestamp.fromObject(object.lastStartTime);
                            }
                            if (object.lastEndTime != null) {
                                if (typeof object.lastEndTime !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.BackfillJob.lastEndTime: object expected");
                                message.lastEndTime = $root.google.protobuf.Timestamp.fromObject(object.lastEndTime);
                            }
                            if (object.errors) {
                                if (!Array.isArray(object.errors))
                                    throw TypeError(".google.cloud.datastream.v1.BackfillJob.errors: array expected");
                                message.errors = [];
                                for (var i = 0; i < object.errors.length; ++i) {
                                    if (typeof object.errors[i] !== "object")
                                        throw TypeError(".google.cloud.datastream.v1.BackfillJob.errors: object expected");
                                    message.errors[i] = $root.google.cloud.datastream.v1.Error.fromObject(object.errors[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BackfillJob message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.BackfillJob
                         * @static
                         * @param {google.cloud.datastream.v1.BackfillJob} message BackfillJob
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BackfillJob.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.errors = [];
                            if (options.defaults) {
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.trigger = options.enums === String ? "TRIGGER_UNSPECIFIED" : 0;
                                object.lastStartTime = null;
                                object.lastEndTime = null;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.datastream.v1.BackfillJob.State[message.state] === undefined ? message.state : $root.google.cloud.datastream.v1.BackfillJob.State[message.state] : message.state;
                            if (message.trigger != null && message.hasOwnProperty("trigger"))
                                object.trigger = options.enums === String ? $root.google.cloud.datastream.v1.BackfillJob.Trigger[message.trigger] === undefined ? message.trigger : $root.google.cloud.datastream.v1.BackfillJob.Trigger[message.trigger] : message.trigger;
                            if (message.lastStartTime != null && message.hasOwnProperty("lastStartTime"))
                                object.lastStartTime = $root.google.protobuf.Timestamp.toObject(message.lastStartTime, options);
                            if (message.lastEndTime != null && message.hasOwnProperty("lastEndTime"))
                                object.lastEndTime = $root.google.protobuf.Timestamp.toObject(message.lastEndTime, options);
                            if (message.errors && message.errors.length) {
                                object.errors = [];
                                for (var j = 0; j < message.errors.length; ++j)
                                    object.errors[j] = $root.google.cloud.datastream.v1.Error.toObject(message.errors[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this BackfillJob to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.BackfillJob
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BackfillJob.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BackfillJob
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.BackfillJob
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BackfillJob.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.BackfillJob";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.datastream.v1.BackfillJob.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} NOT_STARTED=1 NOT_STARTED value
                         * @property {number} PENDING=2 PENDING value
                         * @property {number} ACTIVE=3 ACTIVE value
                         * @property {number} STOPPED=4 STOPPED value
                         * @property {number} FAILED=5 FAILED value
                         * @property {number} COMPLETED=6 COMPLETED value
                         * @property {number} UNSUPPORTED=7 UNSUPPORTED value
                         */
                        BackfillJob.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "NOT_STARTED"] = 1;
                            values[valuesById[2] = "PENDING"] = 2;
                            values[valuesById[3] = "ACTIVE"] = 3;
                            values[valuesById[4] = "STOPPED"] = 4;
                            values[valuesById[5] = "FAILED"] = 5;
                            values[valuesById[6] = "COMPLETED"] = 6;
                            values[valuesById[7] = "UNSUPPORTED"] = 7;
                            return values;
                        })();
    
                        /**
                         * Trigger enum.
                         * @name google.cloud.datastream.v1.BackfillJob.Trigger
                         * @enum {number}
                         * @property {number} TRIGGER_UNSPECIFIED=0 TRIGGER_UNSPECIFIED value
                         * @property {number} AUTOMATIC=1 AUTOMATIC value
                         * @property {number} MANUAL=2 MANUAL value
                         */
                        BackfillJob.Trigger = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "TRIGGER_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "AUTOMATIC"] = 1;
                            values[valuesById[2] = "MANUAL"] = 2;
                            return values;
                        })();
    
                        return BackfillJob;
                    })();
    
                    v1.Error = (function() {
    
                        /**
                         * Properties of an Error.
                         * @memberof google.cloud.datastream.v1
                         * @interface IError
                         * @property {string|null} [reason] Error reason
                         * @property {string|null} [errorUuid] Error errorUuid
                         * @property {string|null} [message] Error message
                         * @property {google.protobuf.ITimestamp|null} [errorTime] Error errorTime
                         * @property {Object.<string,string>|null} [details] Error details
                         */
    
                        /**
                         * Constructs a new Error.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents an Error.
                         * @implements IError
                         * @constructor
                         * @param {google.cloud.datastream.v1.IError=} [properties] Properties to set
                         */
                        function Error(properties) {
                            this.details = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Error reason.
                         * @member {string} reason
                         * @memberof google.cloud.datastream.v1.Error
                         * @instance
                         */
                        Error.prototype.reason = "";
    
                        /**
                         * Error errorUuid.
                         * @member {string} errorUuid
                         * @memberof google.cloud.datastream.v1.Error
                         * @instance
                         */
                        Error.prototype.errorUuid = "";
    
                        /**
                         * Error message.
                         * @member {string} message
                         * @memberof google.cloud.datastream.v1.Error
                         * @instance
                         */
                        Error.prototype.message = "";
    
                        /**
                         * Error errorTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} errorTime
                         * @memberof google.cloud.datastream.v1.Error
                         * @instance
                         */
                        Error.prototype.errorTime = null;
    
                        /**
                         * Error details.
                         * @member {Object.<string,string>} details
                         * @memberof google.cloud.datastream.v1.Error
                         * @instance
                         */
                        Error.prototype.details = $util.emptyObject;
    
                        /**
                         * Creates a new Error instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.Error
                         * @static
                         * @param {google.cloud.datastream.v1.IError=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.Error} Error instance
                         */
                        Error.create = function create(properties) {
                            return new Error(properties);
                        };
    
                        /**
                         * Encodes the specified Error message. Does not implicitly {@link google.cloud.datastream.v1.Error.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.Error
                         * @static
                         * @param {google.cloud.datastream.v1.IError} message Error message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Error.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.reason != null && Object.hasOwnProperty.call(message, "reason"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.reason);
                            if (message.errorUuid != null && Object.hasOwnProperty.call(message, "errorUuid"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.errorUuid);
                            if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.message);
                            if (message.errorTime != null && Object.hasOwnProperty.call(message, "errorTime"))
                                $root.google.protobuf.Timestamp.encode(message.errorTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.details != null && Object.hasOwnProperty.call(message, "details"))
                                for (var keys = Object.keys(message.details), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 5, wireType 2 =*/42).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.details[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Error message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.Error.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.Error
                         * @static
                         * @param {google.cloud.datastream.v1.IError} message Error message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Error.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Error message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.Error
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.Error} Error
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Error.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.Error(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.reason = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.errorUuid = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.message = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.errorTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        if (message.details === $util.emptyObject)
                                            message.details = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.details[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Error message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.Error
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.Error} Error
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Error.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Error message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.Error
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Error.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.reason != null && message.hasOwnProperty("reason"))
                                if (!$util.isString(message.reason))
                                    return "reason: string expected";
                            if (message.errorUuid != null && message.hasOwnProperty("errorUuid"))
                                if (!$util.isString(message.errorUuid))
                                    return "errorUuid: string expected";
                            if (message.message != null && message.hasOwnProperty("message"))
                                if (!$util.isString(message.message))
                                    return "message: string expected";
                            if (message.errorTime != null && message.hasOwnProperty("errorTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.errorTime);
                                if (error)
                                    return "errorTime." + error;
                            }
                            if (message.details != null && message.hasOwnProperty("details")) {
                                if (!$util.isObject(message.details))
                                    return "details: object expected";
                                var key = Object.keys(message.details);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.details[key[i]]))
                                        return "details: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates an Error message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.Error
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.Error} Error
                         */
                        Error.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.Error)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.Error();
                            if (object.reason != null)
                                message.reason = String(object.reason);
                            if (object.errorUuid != null)
                                message.errorUuid = String(object.errorUuid);
                            if (object.message != null)
                                message.message = String(object.message);
                            if (object.errorTime != null) {
                                if (typeof object.errorTime !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.Error.errorTime: object expected");
                                message.errorTime = $root.google.protobuf.Timestamp.fromObject(object.errorTime);
                            }
                            if (object.details) {
                                if (typeof object.details !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.Error.details: object expected");
                                message.details = {};
                                for (var keys = Object.keys(object.details), i = 0; i < keys.length; ++i)
                                    message.details[keys[i]] = String(object.details[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Error message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.Error
                         * @static
                         * @param {google.cloud.datastream.v1.Error} message Error
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Error.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.details = {};
                            if (options.defaults) {
                                object.reason = "";
                                object.errorUuid = "";
                                object.message = "";
                                object.errorTime = null;
                            }
                            if (message.reason != null && message.hasOwnProperty("reason"))
                                object.reason = message.reason;
                            if (message.errorUuid != null && message.hasOwnProperty("errorUuid"))
                                object.errorUuid = message.errorUuid;
                            if (message.message != null && message.hasOwnProperty("message"))
                                object.message = message.message;
                            if (message.errorTime != null && message.hasOwnProperty("errorTime"))
                                object.errorTime = $root.google.protobuf.Timestamp.toObject(message.errorTime, options);
                            var keys2;
                            if (message.details && (keys2 = Object.keys(message.details)).length) {
                                object.details = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.details[keys2[j]] = message.details[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Error to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.Error
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Error.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Error
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.Error
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Error.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.Error";
                        };
    
                        return Error;
                    })();
    
                    v1.ValidationResult = (function() {
    
                        /**
                         * Properties of a ValidationResult.
                         * @memberof google.cloud.datastream.v1
                         * @interface IValidationResult
                         * @property {Array.<google.cloud.datastream.v1.IValidation>|null} [validations] ValidationResult validations
                         */
    
                        /**
                         * Constructs a new ValidationResult.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a ValidationResult.
                         * @implements IValidationResult
                         * @constructor
                         * @param {google.cloud.datastream.v1.IValidationResult=} [properties] Properties to set
                         */
                        function ValidationResult(properties) {
                            this.validations = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ValidationResult validations.
                         * @member {Array.<google.cloud.datastream.v1.IValidation>} validations
                         * @memberof google.cloud.datastream.v1.ValidationResult
                         * @instance
                         */
                        ValidationResult.prototype.validations = $util.emptyArray;
    
                        /**
                         * Creates a new ValidationResult instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.ValidationResult
                         * @static
                         * @param {google.cloud.datastream.v1.IValidationResult=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.ValidationResult} ValidationResult instance
                         */
                        ValidationResult.create = function create(properties) {
                            return new ValidationResult(properties);
                        };
    
                        /**
                         * Encodes the specified ValidationResult message. Does not implicitly {@link google.cloud.datastream.v1.ValidationResult.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.ValidationResult
                         * @static
                         * @param {google.cloud.datastream.v1.IValidationResult} message ValidationResult message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ValidationResult.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.validations != null && message.validations.length)
                                for (var i = 0; i < message.validations.length; ++i)
                                    $root.google.cloud.datastream.v1.Validation.encode(message.validations[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ValidationResult message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.ValidationResult.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.ValidationResult
                         * @static
                         * @param {google.cloud.datastream.v1.IValidationResult} message ValidationResult message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ValidationResult.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ValidationResult message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.ValidationResult
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.ValidationResult} ValidationResult
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ValidationResult.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.ValidationResult();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.validations && message.validations.length))
                                            message.validations = [];
                                        message.validations.push($root.google.cloud.datastream.v1.Validation.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ValidationResult message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.ValidationResult
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.ValidationResult} ValidationResult
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ValidationResult.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ValidationResult message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.ValidationResult
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ValidationResult.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.validations != null && message.hasOwnProperty("validations")) {
                                if (!Array.isArray(message.validations))
                                    return "validations: array expected";
                                for (var i = 0; i < message.validations.length; ++i) {
                                    var error = $root.google.cloud.datastream.v1.Validation.verify(message.validations[i]);
                                    if (error)
                                        return "validations." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ValidationResult message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.ValidationResult
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.ValidationResult} ValidationResult
                         */
                        ValidationResult.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.ValidationResult)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.ValidationResult();
                            if (object.validations) {
                                if (!Array.isArray(object.validations))
                                    throw TypeError(".google.cloud.datastream.v1.ValidationResult.validations: array expected");
                                message.validations = [];
                                for (var i = 0; i < object.validations.length; ++i) {
                                    if (typeof object.validations[i] !== "object")
                                        throw TypeError(".google.cloud.datastream.v1.ValidationResult.validations: object expected");
                                    message.validations[i] = $root.google.cloud.datastream.v1.Validation.fromObject(object.validations[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ValidationResult message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.ValidationResult
                         * @static
                         * @param {google.cloud.datastream.v1.ValidationResult} message ValidationResult
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ValidationResult.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.validations = [];
                            if (message.validations && message.validations.length) {
                                object.validations = [];
                                for (var j = 0; j < message.validations.length; ++j)
                                    object.validations[j] = $root.google.cloud.datastream.v1.Validation.toObject(message.validations[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ValidationResult to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.ValidationResult
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ValidationResult.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ValidationResult
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.ValidationResult
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ValidationResult.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.ValidationResult";
                        };
    
                        return ValidationResult;
                    })();
    
                    v1.Validation = (function() {
    
                        /**
                         * Properties of a Validation.
                         * @memberof google.cloud.datastream.v1
                         * @interface IValidation
                         * @property {string|null} [description] Validation description
                         * @property {google.cloud.datastream.v1.Validation.State|null} [state] Validation state
                         * @property {Array.<google.cloud.datastream.v1.IValidationMessage>|null} [message] Validation message
                         * @property {string|null} [code] Validation code
                         */
    
                        /**
                         * Constructs a new Validation.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a Validation.
                         * @implements IValidation
                         * @constructor
                         * @param {google.cloud.datastream.v1.IValidation=} [properties] Properties to set
                         */
                        function Validation(properties) {
                            this.message = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Validation description.
                         * @member {string} description
                         * @memberof google.cloud.datastream.v1.Validation
                         * @instance
                         */
                        Validation.prototype.description = "";
    
                        /**
                         * Validation state.
                         * @member {google.cloud.datastream.v1.Validation.State} state
                         * @memberof google.cloud.datastream.v1.Validation
                         * @instance
                         */
                        Validation.prototype.state = 0;
    
                        /**
                         * Validation message.
                         * @member {Array.<google.cloud.datastream.v1.IValidationMessage>} message
                         * @memberof google.cloud.datastream.v1.Validation
                         * @instance
                         */
                        Validation.prototype.message = $util.emptyArray;
    
                        /**
                         * Validation code.
                         * @member {string} code
                         * @memberof google.cloud.datastream.v1.Validation
                         * @instance
                         */
                        Validation.prototype.code = "";
    
                        /**
                         * Creates a new Validation instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.Validation
                         * @static
                         * @param {google.cloud.datastream.v1.IValidation=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.Validation} Validation instance
                         */
                        Validation.create = function create(properties) {
                            return new Validation(properties);
                        };
    
                        /**
                         * Encodes the specified Validation message. Does not implicitly {@link google.cloud.datastream.v1.Validation.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.Validation
                         * @static
                         * @param {google.cloud.datastream.v1.IValidation} message Validation message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Validation.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.description);
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.state);
                            if (message.message != null && message.message.length)
                                for (var i = 0; i < message.message.length; ++i)
                                    $root.google.cloud.datastream.v1.ValidationMessage.encode(message.message[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.code);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Validation message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.Validation.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.Validation
                         * @static
                         * @param {google.cloud.datastream.v1.IValidation} message Validation message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Validation.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Validation message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.Validation
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.Validation} Validation
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Validation.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.Validation();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.message && message.message.length))
                                            message.message = [];
                                        message.message.push($root.google.cloud.datastream.v1.ValidationMessage.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 4: {
                                        message.code = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Validation message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.Validation
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.Validation} Validation
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Validation.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Validation message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.Validation
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Validation.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.message != null && message.hasOwnProperty("message")) {
                                if (!Array.isArray(message.message))
                                    return "message: array expected";
                                for (var i = 0; i < message.message.length; ++i) {
                                    var error = $root.google.cloud.datastream.v1.ValidationMessage.verify(message.message[i]);
                                    if (error)
                                        return "message." + error;
                                }
                            }
                            if (message.code != null && message.hasOwnProperty("code"))
                                if (!$util.isString(message.code))
                                    return "code: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Validation message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.Validation
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.Validation} Validation
                         */
                        Validation.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.Validation)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.Validation();
                            if (object.description != null)
                                message.description = String(object.description);
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "NOT_EXECUTED":
                            case 1:
                                message.state = 1;
                                break;
                            case "FAILED":
                            case 2:
                                message.state = 2;
                                break;
                            case "PASSED":
                            case 3:
                                message.state = 3;
                                break;
                            }
                            if (object.message) {
                                if (!Array.isArray(object.message))
                                    throw TypeError(".google.cloud.datastream.v1.Validation.message: array expected");
                                message.message = [];
                                for (var i = 0; i < object.message.length; ++i) {
                                    if (typeof object.message[i] !== "object")
                                        throw TypeError(".google.cloud.datastream.v1.Validation.message: object expected");
                                    message.message[i] = $root.google.cloud.datastream.v1.ValidationMessage.fromObject(object.message[i]);
                                }
                            }
                            if (object.code != null)
                                message.code = String(object.code);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Validation message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.Validation
                         * @static
                         * @param {google.cloud.datastream.v1.Validation} message Validation
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Validation.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.message = [];
                            if (options.defaults) {
                                object.description = "";
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.code = "";
                            }
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.datastream.v1.Validation.State[message.state] === undefined ? message.state : $root.google.cloud.datastream.v1.Validation.State[message.state] : message.state;
                            if (message.message && message.message.length) {
                                object.message = [];
                                for (var j = 0; j < message.message.length; ++j)
                                    object.message[j] = $root.google.cloud.datastream.v1.ValidationMessage.toObject(message.message[j], options);
                            }
                            if (message.code != null && message.hasOwnProperty("code"))
                                object.code = message.code;
                            return object;
                        };
    
                        /**
                         * Converts this Validation to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.Validation
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Validation.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Validation
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.Validation
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Validation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.Validation";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.datastream.v1.Validation.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} NOT_EXECUTED=1 NOT_EXECUTED value
                         * @property {number} FAILED=2 FAILED value
                         * @property {number} PASSED=3 PASSED value
                         */
                        Validation.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "NOT_EXECUTED"] = 1;
                            values[valuesById[2] = "FAILED"] = 2;
                            values[valuesById[3] = "PASSED"] = 3;
                            return values;
                        })();
    
                        return Validation;
                    })();
    
                    v1.ValidationMessage = (function() {
    
                        /**
                         * Properties of a ValidationMessage.
                         * @memberof google.cloud.datastream.v1
                         * @interface IValidationMessage
                         * @property {string|null} [message] ValidationMessage message
                         * @property {google.cloud.datastream.v1.ValidationMessage.Level|null} [level] ValidationMessage level
                         * @property {Object.<string,string>|null} [metadata] ValidationMessage metadata
                         * @property {string|null} [code] ValidationMessage code
                         */
    
                        /**
                         * Constructs a new ValidationMessage.
                         * @memberof google.cloud.datastream.v1
                         * @classdesc Represents a ValidationMessage.
                         * @implements IValidationMessage
                         * @constructor
                         * @param {google.cloud.datastream.v1.IValidationMessage=} [properties] Properties to set
                         */
                        function ValidationMessage(properties) {
                            this.metadata = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ValidationMessage message.
                         * @member {string} message
                         * @memberof google.cloud.datastream.v1.ValidationMessage
                         * @instance
                         */
                        ValidationMessage.prototype.message = "";
    
                        /**
                         * ValidationMessage level.
                         * @member {google.cloud.datastream.v1.ValidationMessage.Level} level
                         * @memberof google.cloud.datastream.v1.ValidationMessage
                         * @instance
                         */
                        ValidationMessage.prototype.level = 0;
    
                        /**
                         * ValidationMessage metadata.
                         * @member {Object.<string,string>} metadata
                         * @memberof google.cloud.datastream.v1.ValidationMessage
                         * @instance
                         */
                        ValidationMessage.prototype.metadata = $util.emptyObject;
    
                        /**
                         * ValidationMessage code.
                         * @member {string} code
                         * @memberof google.cloud.datastream.v1.ValidationMessage
                         * @instance
                         */
                        ValidationMessage.prototype.code = "";
    
                        /**
                         * Creates a new ValidationMessage instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1.ValidationMessage
                         * @static
                         * @param {google.cloud.datastream.v1.IValidationMessage=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1.ValidationMessage} ValidationMessage instance
                         */
                        ValidationMessage.create = function create(properties) {
                            return new ValidationMessage(properties);
                        };
    
                        /**
                         * Encodes the specified ValidationMessage message. Does not implicitly {@link google.cloud.datastream.v1.ValidationMessage.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1.ValidationMessage
                         * @static
                         * @param {google.cloud.datastream.v1.IValidationMessage} message ValidationMessage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ValidationMessage.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.message);
                            if (message.level != null && Object.hasOwnProperty.call(message, "level"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.level);
                            if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                                for (var keys = Object.keys(message.metadata), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.metadata[keys[i]]).ldelim();
                            if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.code);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ValidationMessage message, length delimited. Does not implicitly {@link google.cloud.datastream.v1.ValidationMessage.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1.ValidationMessage
                         * @static
                         * @param {google.cloud.datastream.v1.IValidationMessage} message ValidationMessage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ValidationMessage.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ValidationMessage message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1.ValidationMessage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1.ValidationMessage} ValidationMessage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ValidationMessage.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1.ValidationMessage(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.message = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.level = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        if (message.metadata === $util.emptyObject)
                                            message.metadata = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.metadata[key] = value;
                                        break;
                                    }
                                case 4: {
                                        message.code = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ValidationMessage message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1.ValidationMessage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1.ValidationMessage} ValidationMessage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ValidationMessage.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ValidationMessage message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1.ValidationMessage
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ValidationMessage.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.message != null && message.hasOwnProperty("message"))
                                if (!$util.isString(message.message))
                                    return "message: string expected";
                            if (message.level != null && message.hasOwnProperty("level"))
                                switch (message.level) {
                                default:
                                    return "level: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.metadata != null && message.hasOwnProperty("metadata")) {
                                if (!$util.isObject(message.metadata))
                                    return "metadata: object expected";
                                var key = Object.keys(message.metadata);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.metadata[key[i]]))
                                        return "metadata: string{k:string} expected";
                            }
                            if (message.code != null && message.hasOwnProperty("code"))
                                if (!$util.isString(message.code))
                                    return "code: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ValidationMessage message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1.ValidationMessage
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1.ValidationMessage} ValidationMessage
                         */
                        ValidationMessage.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1.ValidationMessage)
                                return object;
                            var message = new $root.google.cloud.datastream.v1.ValidationMessage();
                            if (object.message != null)
                                message.message = String(object.message);
                            switch (object.level) {
                            default:
                                if (typeof object.level === "number") {
                                    message.level = object.level;
                                    break;
                                }
                                break;
                            case "LEVEL_UNSPECIFIED":
                            case 0:
                                message.level = 0;
                                break;
                            case "WARNING":
                            case 1:
                                message.level = 1;
                                break;
                            case "ERROR":
                            case 2:
                                message.level = 2;
                                break;
                            }
                            if (object.metadata) {
                                if (typeof object.metadata !== "object")
                                    throw TypeError(".google.cloud.datastream.v1.ValidationMessage.metadata: object expected");
                                message.metadata = {};
                                for (var keys = Object.keys(object.metadata), i = 0; i < keys.length; ++i)
                                    message.metadata[keys[i]] = String(object.metadata[keys[i]]);
                            }
                            if (object.code != null)
                                message.code = String(object.code);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ValidationMessage message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1.ValidationMessage
                         * @static
                         * @param {google.cloud.datastream.v1.ValidationMessage} message ValidationMessage
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ValidationMessage.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.metadata = {};
                            if (options.defaults) {
                                object.message = "";
                                object.level = options.enums === String ? "LEVEL_UNSPECIFIED" : 0;
                                object.code = "";
                            }
                            if (message.message != null && message.hasOwnProperty("message"))
                                object.message = message.message;
                            if (message.level != null && message.hasOwnProperty("level"))
                                object.level = options.enums === String ? $root.google.cloud.datastream.v1.ValidationMessage.Level[message.level] === undefined ? message.level : $root.google.cloud.datastream.v1.ValidationMessage.Level[message.level] : message.level;
                            var keys2;
                            if (message.metadata && (keys2 = Object.keys(message.metadata)).length) {
                                object.metadata = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.metadata[keys2[j]] = message.metadata[keys2[j]];
                            }
                            if (message.code != null && message.hasOwnProperty("code"))
                                object.code = message.code;
                            return object;
                        };
    
                        /**
                         * Converts this ValidationMessage to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1.ValidationMessage
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ValidationMessage.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ValidationMessage
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1.ValidationMessage
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ValidationMessage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1.ValidationMessage";
                        };
    
                        /**
                         * Level enum.
                         * @name google.cloud.datastream.v1.ValidationMessage.Level
                         * @enum {number}
                         * @property {number} LEVEL_UNSPECIFIED=0 LEVEL_UNSPECIFIED value
                         * @property {number} WARNING=1 WARNING value
                         * @property {number} ERROR=2 ERROR value
                         */
                        ValidationMessage.Level = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "LEVEL_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "WARNING"] = 1;
                            values[valuesById[2] = "ERROR"] = 2;
                            return values;
                        })();
    
                        return ValidationMessage;
                    })();
    
                    return v1;
                })();
    
                datastream.v1alpha1 = (function() {
    
                    /**
                     * Namespace v1alpha1.
                     * @memberof google.cloud.datastream
                     * @namespace
                     */
                    var v1alpha1 = {};
    
                    v1alpha1.Datastream = (function() {
    
                        /**
                         * Constructs a new Datastream service.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a Datastream
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function Datastream(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (Datastream.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Datastream;
    
                        /**
                         * Creates new Datastream service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {Datastream} RPC service. Useful where requests and/or responses are streamed.
                         */
                        Datastream.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1alpha1.Datastream|listConnectionProfiles}.
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @typedef ListConnectionProfilesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.datastream.v1alpha1.ListConnectionProfilesResponse} [response] ListConnectionProfilesResponse
                         */
    
                        /**
                         * Calls ListConnectionProfiles.
                         * @function listConnectionProfiles
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.IListConnectionProfilesRequest} request ListConnectionProfilesRequest message or plain object
                         * @param {google.cloud.datastream.v1alpha1.Datastream.ListConnectionProfilesCallback} callback Node-style callback called with the error, if any, and ListConnectionProfilesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.listConnectionProfiles = function listConnectionProfiles(request, callback) {
                            return this.rpcCall(listConnectionProfiles, $root.google.cloud.datastream.v1alpha1.ListConnectionProfilesRequest, $root.google.cloud.datastream.v1alpha1.ListConnectionProfilesResponse, request, callback);
                        }, "name", { value: "ListConnectionProfiles" });
    
                        /**
                         * Calls ListConnectionProfiles.
                         * @function listConnectionProfiles
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.IListConnectionProfilesRequest} request ListConnectionProfilesRequest message or plain object
                         * @returns {Promise<google.cloud.datastream.v1alpha1.ListConnectionProfilesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1alpha1.Datastream|getConnectionProfile}.
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @typedef GetConnectionProfileCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.datastream.v1alpha1.ConnectionProfile} [response] ConnectionProfile
                         */
    
                        /**
                         * Calls GetConnectionProfile.
                         * @function getConnectionProfile
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.IGetConnectionProfileRequest} request GetConnectionProfileRequest message or plain object
                         * @param {google.cloud.datastream.v1alpha1.Datastream.GetConnectionProfileCallback} callback Node-style callback called with the error, if any, and ConnectionProfile
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.getConnectionProfile = function getConnectionProfile(request, callback) {
                            return this.rpcCall(getConnectionProfile, $root.google.cloud.datastream.v1alpha1.GetConnectionProfileRequest, $root.google.cloud.datastream.v1alpha1.ConnectionProfile, request, callback);
                        }, "name", { value: "GetConnectionProfile" });
    
                        /**
                         * Calls GetConnectionProfile.
                         * @function getConnectionProfile
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.IGetConnectionProfileRequest} request GetConnectionProfileRequest message or plain object
                         * @returns {Promise<google.cloud.datastream.v1alpha1.ConnectionProfile>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1alpha1.Datastream|createConnectionProfile}.
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @typedef CreateConnectionProfileCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateConnectionProfile.
                         * @function createConnectionProfile
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.ICreateConnectionProfileRequest} request CreateConnectionProfileRequest message or plain object
                         * @param {google.cloud.datastream.v1alpha1.Datastream.CreateConnectionProfileCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.createConnectionProfile = function createConnectionProfile(request, callback) {
                            return this.rpcCall(createConnectionProfile, $root.google.cloud.datastream.v1alpha1.CreateConnectionProfileRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateConnectionProfile" });
    
                        /**
                         * Calls CreateConnectionProfile.
                         * @function createConnectionProfile
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.ICreateConnectionProfileRequest} request CreateConnectionProfileRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1alpha1.Datastream|updateConnectionProfile}.
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @typedef UpdateConnectionProfileCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateConnectionProfile.
                         * @function updateConnectionProfile
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.IUpdateConnectionProfileRequest} request UpdateConnectionProfileRequest message or plain object
                         * @param {google.cloud.datastream.v1alpha1.Datastream.UpdateConnectionProfileCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.updateConnectionProfile = function updateConnectionProfile(request, callback) {
                            return this.rpcCall(updateConnectionProfile, $root.google.cloud.datastream.v1alpha1.UpdateConnectionProfileRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateConnectionProfile" });
    
                        /**
                         * Calls UpdateConnectionProfile.
                         * @function updateConnectionProfile
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.IUpdateConnectionProfileRequest} request UpdateConnectionProfileRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1alpha1.Datastream|deleteConnectionProfile}.
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @typedef DeleteConnectionProfileCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteConnectionProfile.
                         * @function deleteConnectionProfile
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.IDeleteConnectionProfileRequest} request DeleteConnectionProfileRequest message or plain object
                         * @param {google.cloud.datastream.v1alpha1.Datastream.DeleteConnectionProfileCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.deleteConnectionProfile = function deleteConnectionProfile(request, callback) {
                            return this.rpcCall(deleteConnectionProfile, $root.google.cloud.datastream.v1alpha1.DeleteConnectionProfileRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteConnectionProfile" });
    
                        /**
                         * Calls DeleteConnectionProfile.
                         * @function deleteConnectionProfile
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.IDeleteConnectionProfileRequest} request DeleteConnectionProfileRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1alpha1.Datastream|discoverConnectionProfile}.
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @typedef DiscoverConnectionProfileCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.datastream.v1alpha1.DiscoverConnectionProfileResponse} [response] DiscoverConnectionProfileResponse
                         */
    
                        /**
                         * Calls DiscoverConnectionProfile.
                         * @function discoverConnectionProfile
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.IDiscoverConnectionProfileRequest} request DiscoverConnectionProfileRequest message or plain object
                         * @param {google.cloud.datastream.v1alpha1.Datastream.DiscoverConnectionProfileCallback} callback Node-style callback called with the error, if any, and DiscoverConnectionProfileResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.discoverConnectionProfile = function discoverConnectionProfile(request, callback) {
                            return this.rpcCall(discoverConnectionProfile, $root.google.cloud.datastream.v1alpha1.DiscoverConnectionProfileRequest, $root.google.cloud.datastream.v1alpha1.DiscoverConnectionProfileResponse, request, callback);
                        }, "name", { value: "DiscoverConnectionProfile" });
    
                        /**
                         * Calls DiscoverConnectionProfile.
                         * @function discoverConnectionProfile
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.IDiscoverConnectionProfileRequest} request DiscoverConnectionProfileRequest message or plain object
                         * @returns {Promise<google.cloud.datastream.v1alpha1.DiscoverConnectionProfileResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1alpha1.Datastream|listStreams}.
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @typedef ListStreamsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.datastream.v1alpha1.ListStreamsResponse} [response] ListStreamsResponse
                         */
    
                        /**
                         * Calls ListStreams.
                         * @function listStreams
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.IListStreamsRequest} request ListStreamsRequest message or plain object
                         * @param {google.cloud.datastream.v1alpha1.Datastream.ListStreamsCallback} callback Node-style callback called with the error, if any, and ListStreamsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.listStreams = function listStreams(request, callback) {
                            return this.rpcCall(listStreams, $root.google.cloud.datastream.v1alpha1.ListStreamsRequest, $root.google.cloud.datastream.v1alpha1.ListStreamsResponse, request, callback);
                        }, "name", { value: "ListStreams" });
    
                        /**
                         * Calls ListStreams.
                         * @function listStreams
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.IListStreamsRequest} request ListStreamsRequest message or plain object
                         * @returns {Promise<google.cloud.datastream.v1alpha1.ListStreamsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1alpha1.Datastream|getStream}.
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @typedef GetStreamCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.datastream.v1alpha1.Stream} [response] Stream
                         */
    
                        /**
                         * Calls GetStream.
                         * @function getStream
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.IGetStreamRequest} request GetStreamRequest message or plain object
                         * @param {google.cloud.datastream.v1alpha1.Datastream.GetStreamCallback} callback Node-style callback called with the error, if any, and Stream
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.getStream = function getStream(request, callback) {
                            return this.rpcCall(getStream, $root.google.cloud.datastream.v1alpha1.GetStreamRequest, $root.google.cloud.datastream.v1alpha1.Stream, request, callback);
                        }, "name", { value: "GetStream" });
    
                        /**
                         * Calls GetStream.
                         * @function getStream
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.IGetStreamRequest} request GetStreamRequest message or plain object
                         * @returns {Promise<google.cloud.datastream.v1alpha1.Stream>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1alpha1.Datastream|createStream}.
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @typedef CreateStreamCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateStream.
                         * @function createStream
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.ICreateStreamRequest} request CreateStreamRequest message or plain object
                         * @param {google.cloud.datastream.v1alpha1.Datastream.CreateStreamCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.createStream = function createStream(request, callback) {
                            return this.rpcCall(createStream, $root.google.cloud.datastream.v1alpha1.CreateStreamRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateStream" });
    
                        /**
                         * Calls CreateStream.
                         * @function createStream
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.ICreateStreamRequest} request CreateStreamRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1alpha1.Datastream|updateStream}.
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @typedef UpdateStreamCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateStream.
                         * @function updateStream
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.IUpdateStreamRequest} request UpdateStreamRequest message or plain object
                         * @param {google.cloud.datastream.v1alpha1.Datastream.UpdateStreamCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.updateStream = function updateStream(request, callback) {
                            return this.rpcCall(updateStream, $root.google.cloud.datastream.v1alpha1.UpdateStreamRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateStream" });
    
                        /**
                         * Calls UpdateStream.
                         * @function updateStream
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.IUpdateStreamRequest} request UpdateStreamRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1alpha1.Datastream|deleteStream}.
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @typedef DeleteStreamCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteStream.
                         * @function deleteStream
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.IDeleteStreamRequest} request DeleteStreamRequest message or plain object
                         * @param {google.cloud.datastream.v1alpha1.Datastream.DeleteStreamCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.deleteStream = function deleteStream(request, callback) {
                            return this.rpcCall(deleteStream, $root.google.cloud.datastream.v1alpha1.DeleteStreamRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteStream" });
    
                        /**
                         * Calls DeleteStream.
                         * @function deleteStream
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.IDeleteStreamRequest} request DeleteStreamRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1alpha1.Datastream|fetchErrors}.
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @typedef FetchErrorsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls FetchErrors.
                         * @function fetchErrors
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.IFetchErrorsRequest} request FetchErrorsRequest message or plain object
                         * @param {google.cloud.datastream.v1alpha1.Datastream.FetchErrorsCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.fetchErrors = function fetchErrors(request, callback) {
                            return this.rpcCall(fetchErrors, $root.google.cloud.datastream.v1alpha1.FetchErrorsRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "FetchErrors" });
    
                        /**
                         * Calls FetchErrors.
                         * @function fetchErrors
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.IFetchErrorsRequest} request FetchErrorsRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1alpha1.Datastream|fetchStaticIps}.
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @typedef FetchStaticIpsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.datastream.v1alpha1.FetchStaticIpsResponse} [response] FetchStaticIpsResponse
                         */
    
                        /**
                         * Calls FetchStaticIps.
                         * @function fetchStaticIps
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.IFetchStaticIpsRequest} request FetchStaticIpsRequest message or plain object
                         * @param {google.cloud.datastream.v1alpha1.Datastream.FetchStaticIpsCallback} callback Node-style callback called with the error, if any, and FetchStaticIpsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.fetchStaticIps = function fetchStaticIps(request, callback) {
                            return this.rpcCall(fetchStaticIps, $root.google.cloud.datastream.v1alpha1.FetchStaticIpsRequest, $root.google.cloud.datastream.v1alpha1.FetchStaticIpsResponse, request, callback);
                        }, "name", { value: "FetchStaticIps" });
    
                        /**
                         * Calls FetchStaticIps.
                         * @function fetchStaticIps
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.IFetchStaticIpsRequest} request FetchStaticIpsRequest message or plain object
                         * @returns {Promise<google.cloud.datastream.v1alpha1.FetchStaticIpsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1alpha1.Datastream|createPrivateConnection}.
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @typedef CreatePrivateConnectionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreatePrivateConnection.
                         * @function createPrivateConnection
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.ICreatePrivateConnectionRequest} request CreatePrivateConnectionRequest message or plain object
                         * @param {google.cloud.datastream.v1alpha1.Datastream.CreatePrivateConnectionCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.createPrivateConnection = function createPrivateConnection(request, callback) {
                            return this.rpcCall(createPrivateConnection, $root.google.cloud.datastream.v1alpha1.CreatePrivateConnectionRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreatePrivateConnection" });
    
                        /**
                         * Calls CreatePrivateConnection.
                         * @function createPrivateConnection
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.ICreatePrivateConnectionRequest} request CreatePrivateConnectionRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1alpha1.Datastream|getPrivateConnection}.
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @typedef GetPrivateConnectionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.datastream.v1alpha1.PrivateConnection} [response] PrivateConnection
                         */
    
                        /**
                         * Calls GetPrivateConnection.
                         * @function getPrivateConnection
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.IGetPrivateConnectionRequest} request GetPrivateConnectionRequest message or plain object
                         * @param {google.cloud.datastream.v1alpha1.Datastream.GetPrivateConnectionCallback} callback Node-style callback called with the error, if any, and PrivateConnection
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.getPrivateConnection = function getPrivateConnection(request, callback) {
                            return this.rpcCall(getPrivateConnection, $root.google.cloud.datastream.v1alpha1.GetPrivateConnectionRequest, $root.google.cloud.datastream.v1alpha1.PrivateConnection, request, callback);
                        }, "name", { value: "GetPrivateConnection" });
    
                        /**
                         * Calls GetPrivateConnection.
                         * @function getPrivateConnection
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.IGetPrivateConnectionRequest} request GetPrivateConnectionRequest message or plain object
                         * @returns {Promise<google.cloud.datastream.v1alpha1.PrivateConnection>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1alpha1.Datastream|listPrivateConnections}.
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @typedef ListPrivateConnectionsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.datastream.v1alpha1.ListPrivateConnectionsResponse} [response] ListPrivateConnectionsResponse
                         */
    
                        /**
                         * Calls ListPrivateConnections.
                         * @function listPrivateConnections
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.IListPrivateConnectionsRequest} request ListPrivateConnectionsRequest message or plain object
                         * @param {google.cloud.datastream.v1alpha1.Datastream.ListPrivateConnectionsCallback} callback Node-style callback called with the error, if any, and ListPrivateConnectionsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.listPrivateConnections = function listPrivateConnections(request, callback) {
                            return this.rpcCall(listPrivateConnections, $root.google.cloud.datastream.v1alpha1.ListPrivateConnectionsRequest, $root.google.cloud.datastream.v1alpha1.ListPrivateConnectionsResponse, request, callback);
                        }, "name", { value: "ListPrivateConnections" });
    
                        /**
                         * Calls ListPrivateConnections.
                         * @function listPrivateConnections
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.IListPrivateConnectionsRequest} request ListPrivateConnectionsRequest message or plain object
                         * @returns {Promise<google.cloud.datastream.v1alpha1.ListPrivateConnectionsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1alpha1.Datastream|deletePrivateConnection}.
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @typedef DeletePrivateConnectionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeletePrivateConnection.
                         * @function deletePrivateConnection
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.IDeletePrivateConnectionRequest} request DeletePrivateConnectionRequest message or plain object
                         * @param {google.cloud.datastream.v1alpha1.Datastream.DeletePrivateConnectionCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.deletePrivateConnection = function deletePrivateConnection(request, callback) {
                            return this.rpcCall(deletePrivateConnection, $root.google.cloud.datastream.v1alpha1.DeletePrivateConnectionRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeletePrivateConnection" });
    
                        /**
                         * Calls DeletePrivateConnection.
                         * @function deletePrivateConnection
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.IDeletePrivateConnectionRequest} request DeletePrivateConnectionRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1alpha1.Datastream|createRoute}.
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @typedef CreateRouteCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateRoute.
                         * @function createRoute
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.ICreateRouteRequest} request CreateRouteRequest message or plain object
                         * @param {google.cloud.datastream.v1alpha1.Datastream.CreateRouteCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.createRoute = function createRoute(request, callback) {
                            return this.rpcCall(createRoute, $root.google.cloud.datastream.v1alpha1.CreateRouteRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateRoute" });
    
                        /**
                         * Calls CreateRoute.
                         * @function createRoute
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.ICreateRouteRequest} request CreateRouteRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1alpha1.Datastream|getRoute}.
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @typedef GetRouteCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.datastream.v1alpha1.Route} [response] Route
                         */
    
                        /**
                         * Calls GetRoute.
                         * @function getRoute
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.IGetRouteRequest} request GetRouteRequest message or plain object
                         * @param {google.cloud.datastream.v1alpha1.Datastream.GetRouteCallback} callback Node-style callback called with the error, if any, and Route
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.getRoute = function getRoute(request, callback) {
                            return this.rpcCall(getRoute, $root.google.cloud.datastream.v1alpha1.GetRouteRequest, $root.google.cloud.datastream.v1alpha1.Route, request, callback);
                        }, "name", { value: "GetRoute" });
    
                        /**
                         * Calls GetRoute.
                         * @function getRoute
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.IGetRouteRequest} request GetRouteRequest message or plain object
                         * @returns {Promise<google.cloud.datastream.v1alpha1.Route>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1alpha1.Datastream|listRoutes}.
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @typedef ListRoutesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.datastream.v1alpha1.ListRoutesResponse} [response] ListRoutesResponse
                         */
    
                        /**
                         * Calls ListRoutes.
                         * @function listRoutes
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.IListRoutesRequest} request ListRoutesRequest message or plain object
                         * @param {google.cloud.datastream.v1alpha1.Datastream.ListRoutesCallback} callback Node-style callback called with the error, if any, and ListRoutesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.listRoutes = function listRoutes(request, callback) {
                            return this.rpcCall(listRoutes, $root.google.cloud.datastream.v1alpha1.ListRoutesRequest, $root.google.cloud.datastream.v1alpha1.ListRoutesResponse, request, callback);
                        }, "name", { value: "ListRoutes" });
    
                        /**
                         * Calls ListRoutes.
                         * @function listRoutes
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.IListRoutesRequest} request ListRoutesRequest message or plain object
                         * @returns {Promise<google.cloud.datastream.v1alpha1.ListRoutesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.datastream.v1alpha1.Datastream|deleteRoute}.
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @typedef DeleteRouteCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteRoute.
                         * @function deleteRoute
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.IDeleteRouteRequest} request DeleteRouteRequest message or plain object
                         * @param {google.cloud.datastream.v1alpha1.Datastream.DeleteRouteCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Datastream.prototype.deleteRoute = function deleteRoute(request, callback) {
                            return this.rpcCall(deleteRoute, $root.google.cloud.datastream.v1alpha1.DeleteRouteRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteRoute" });
    
                        /**
                         * Calls DeleteRoute.
                         * @function deleteRoute
                         * @memberof google.cloud.datastream.v1alpha1.Datastream
                         * @instance
                         * @param {google.cloud.datastream.v1alpha1.IDeleteRouteRequest} request DeleteRouteRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        return Datastream;
                    })();
    
                    v1alpha1.DiscoverConnectionProfileRequest = (function() {
    
                        /**
                         * Properties of a DiscoverConnectionProfileRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IDiscoverConnectionProfileRequest
                         * @property {string|null} [parent] DiscoverConnectionProfileRequest parent
                         * @property {google.cloud.datastream.v1alpha1.IConnectionProfile|null} [connectionProfile] DiscoverConnectionProfileRequest connectionProfile
                         * @property {string|null} [connectionProfileName] DiscoverConnectionProfileRequest connectionProfileName
                         * @property {boolean|null} [recursive] DiscoverConnectionProfileRequest recursive
                         * @property {number|null} [recursionDepth] DiscoverConnectionProfileRequest recursionDepth
                         * @property {google.cloud.datastream.v1alpha1.IOracleRdbms|null} [oracleRdbms] DiscoverConnectionProfileRequest oracleRdbms
                         * @property {google.cloud.datastream.v1alpha1.IMysqlRdbms|null} [mysqlRdbms] DiscoverConnectionProfileRequest mysqlRdbms
                         */
    
                        /**
                         * Constructs a new DiscoverConnectionProfileRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a DiscoverConnectionProfileRequest.
                         * @implements IDiscoverConnectionProfileRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IDiscoverConnectionProfileRequest=} [properties] Properties to set
                         */
                        function DiscoverConnectionProfileRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DiscoverConnectionProfileRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.datastream.v1alpha1.DiscoverConnectionProfileRequest
                         * @instance
                         */
                        DiscoverConnectionProfileRequest.prototype.parent = "";
    
                        /**
                         * DiscoverConnectionProfileRequest connectionProfile.
                         * @member {google.cloud.datastream.v1alpha1.IConnectionProfile|null|undefined} connectionProfile
                         * @memberof google.cloud.datastream.v1alpha1.DiscoverConnectionProfileRequest
                         * @instance
                         */
                        DiscoverConnectionProfileRequest.prototype.connectionProfile = null;
    
                        /**
                         * DiscoverConnectionProfileRequest connectionProfileName.
                         * @member {string|null|undefined} connectionProfileName
                         * @memberof google.cloud.datastream.v1alpha1.DiscoverConnectionProfileRequest
                         * @instance
                         */
                        DiscoverConnectionProfileRequest.prototype.connectionProfileName = null;
    
                        /**
                         * DiscoverConnectionProfileRequest recursive.
                         * @member {boolean|null|undefined} recursive
                         * @memberof google.cloud.datastream.v1alpha1.DiscoverConnectionProfileRequest
                         * @instance
                         */
                        DiscoverConnectionProfileRequest.prototype.recursive = null;
    
                        /**
                         * DiscoverConnectionProfileRequest recursionDepth.
                         * @member {number|null|undefined} recursionDepth
                         * @memberof google.cloud.datastream.v1alpha1.DiscoverConnectionProfileRequest
                         * @instance
                         */
                        DiscoverConnectionProfileRequest.prototype.recursionDepth = null;
    
                        /**
                         * DiscoverConnectionProfileRequest oracleRdbms.
                         * @member {google.cloud.datastream.v1alpha1.IOracleRdbms|null|undefined} oracleRdbms
                         * @memberof google.cloud.datastream.v1alpha1.DiscoverConnectionProfileRequest
                         * @instance
                         */
                        DiscoverConnectionProfileRequest.prototype.oracleRdbms = null;
    
                        /**
                         * DiscoverConnectionProfileRequest mysqlRdbms.
                         * @member {google.cloud.datastream.v1alpha1.IMysqlRdbms|null|undefined} mysqlRdbms
                         * @memberof google.cloud.datastream.v1alpha1.DiscoverConnectionProfileRequest
                         * @instance
                         */
                        DiscoverConnectionProfileRequest.prototype.mysqlRdbms = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * DiscoverConnectionProfileRequest target.
                         * @member {"connectionProfile"|"connectionProfileName"|undefined} target
                         * @memberof google.cloud.datastream.v1alpha1.DiscoverConnectionProfileRequest
                         * @instance
                         */
                        Object.defineProperty(DiscoverConnectionProfileRequest.prototype, "target", {
                            get: $util.oneOfGetter($oneOfFields = ["connectionProfile", "connectionProfileName"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * DiscoverConnectionProfileRequest depth.
                         * @member {"recursive"|"recursionDepth"|undefined} depth
                         * @memberof google.cloud.datastream.v1alpha1.DiscoverConnectionProfileRequest
                         * @instance
                         */
                        Object.defineProperty(DiscoverConnectionProfileRequest.prototype, "depth", {
                            get: $util.oneOfGetter($oneOfFields = ["recursive", "recursionDepth"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * DiscoverConnectionProfileRequest dataObject.
                         * @member {"oracleRdbms"|"mysqlRdbms"|undefined} dataObject
                         * @memberof google.cloud.datastream.v1alpha1.DiscoverConnectionProfileRequest
                         * @instance
                         */
                        Object.defineProperty(DiscoverConnectionProfileRequest.prototype, "dataObject", {
                            get: $util.oneOfGetter($oneOfFields = ["oracleRdbms", "mysqlRdbms"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new DiscoverConnectionProfileRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.DiscoverConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IDiscoverConnectionProfileRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.DiscoverConnectionProfileRequest} DiscoverConnectionProfileRequest instance
                         */
                        DiscoverConnectionProfileRequest.create = function create(properties) {
                            return new DiscoverConnectionProfileRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DiscoverConnectionProfileRequest message. Does not implicitly {@link google.cloud.datastream.v1alpha1.DiscoverConnectionProfileRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.DiscoverConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IDiscoverConnectionProfileRequest} message DiscoverConnectionProfileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DiscoverConnectionProfileRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.recursive != null && Object.hasOwnProperty.call(message, "recursive"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.recursive);
                            if (message.recursionDepth != null && Object.hasOwnProperty.call(message, "recursionDepth"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.recursionDepth);
                            if (message.oracleRdbms != null && Object.hasOwnProperty.call(message, "oracleRdbms"))
                                $root.google.cloud.datastream.v1alpha1.OracleRdbms.encode(message.oracleRdbms, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            if (message.mysqlRdbms != null && Object.hasOwnProperty.call(message, "mysqlRdbms"))
                                $root.google.cloud.datastream.v1alpha1.MysqlRdbms.encode(message.mysqlRdbms, writer.uint32(/* id 101, wireType 2 =*/810).fork()).ldelim();
                            if (message.connectionProfile != null && Object.hasOwnProperty.call(message, "connectionProfile"))
                                $root.google.cloud.datastream.v1alpha1.ConnectionProfile.encode(message.connectionProfile, writer.uint32(/* id 200, wireType 2 =*/1602).fork()).ldelim();
                            if (message.connectionProfileName != null && Object.hasOwnProperty.call(message, "connectionProfileName"))
                                writer.uint32(/* id 201, wireType 2 =*/1610).string(message.connectionProfileName);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DiscoverConnectionProfileRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.DiscoverConnectionProfileRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.DiscoverConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IDiscoverConnectionProfileRequest} message DiscoverConnectionProfileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DiscoverConnectionProfileRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DiscoverConnectionProfileRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.DiscoverConnectionProfileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.DiscoverConnectionProfileRequest} DiscoverConnectionProfileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DiscoverConnectionProfileRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.DiscoverConnectionProfileRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 200: {
                                        message.connectionProfile = $root.google.cloud.datastream.v1alpha1.ConnectionProfile.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 201: {
                                        message.connectionProfileName = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.recursive = reader.bool();
                                        break;
                                    }
                                case 4: {
                                        message.recursionDepth = reader.int32();
                                        break;
                                    }
                                case 100: {
                                        message.oracleRdbms = $root.google.cloud.datastream.v1alpha1.OracleRdbms.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 101: {
                                        message.mysqlRdbms = $root.google.cloud.datastream.v1alpha1.MysqlRdbms.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DiscoverConnectionProfileRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.DiscoverConnectionProfileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.DiscoverConnectionProfileRequest} DiscoverConnectionProfileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DiscoverConnectionProfileRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DiscoverConnectionProfileRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.DiscoverConnectionProfileRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DiscoverConnectionProfileRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.connectionProfile != null && message.hasOwnProperty("connectionProfile")) {
                                properties.target = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1alpha1.ConnectionProfile.verify(message.connectionProfile);
                                    if (error)
                                        return "connectionProfile." + error;
                                }
                            }
                            if (message.connectionProfileName != null && message.hasOwnProperty("connectionProfileName")) {
                                if (properties.target === 1)
                                    return "target: multiple values";
                                properties.target = 1;
                                if (!$util.isString(message.connectionProfileName))
                                    return "connectionProfileName: string expected";
                            }
                            if (message.recursive != null && message.hasOwnProperty("recursive")) {
                                properties.depth = 1;
                                if (typeof message.recursive !== "boolean")
                                    return "recursive: boolean expected";
                            }
                            if (message.recursionDepth != null && message.hasOwnProperty("recursionDepth")) {
                                if (properties.depth === 1)
                                    return "depth: multiple values";
                                properties.depth = 1;
                                if (!$util.isInteger(message.recursionDepth))
                                    return "recursionDepth: integer expected";
                            }
                            if (message.oracleRdbms != null && message.hasOwnProperty("oracleRdbms")) {
                                properties.dataObject = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1alpha1.OracleRdbms.verify(message.oracleRdbms);
                                    if (error)
                                        return "oracleRdbms." + error;
                                }
                            }
                            if (message.mysqlRdbms != null && message.hasOwnProperty("mysqlRdbms")) {
                                if (properties.dataObject === 1)
                                    return "dataObject: multiple values";
                                properties.dataObject = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1alpha1.MysqlRdbms.verify(message.mysqlRdbms);
                                    if (error)
                                        return "mysqlRdbms." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DiscoverConnectionProfileRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.DiscoverConnectionProfileRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.DiscoverConnectionProfileRequest} DiscoverConnectionProfileRequest
                         */
                        DiscoverConnectionProfileRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.DiscoverConnectionProfileRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.DiscoverConnectionProfileRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.connectionProfile != null) {
                                if (typeof object.connectionProfile !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.DiscoverConnectionProfileRequest.connectionProfile: object expected");
                                message.connectionProfile = $root.google.cloud.datastream.v1alpha1.ConnectionProfile.fromObject(object.connectionProfile);
                            }
                            if (object.connectionProfileName != null)
                                message.connectionProfileName = String(object.connectionProfileName);
                            if (object.recursive != null)
                                message.recursive = Boolean(object.recursive);
                            if (object.recursionDepth != null)
                                message.recursionDepth = object.recursionDepth | 0;
                            if (object.oracleRdbms != null) {
                                if (typeof object.oracleRdbms !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.DiscoverConnectionProfileRequest.oracleRdbms: object expected");
                                message.oracleRdbms = $root.google.cloud.datastream.v1alpha1.OracleRdbms.fromObject(object.oracleRdbms);
                            }
                            if (object.mysqlRdbms != null) {
                                if (typeof object.mysqlRdbms !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.DiscoverConnectionProfileRequest.mysqlRdbms: object expected");
                                message.mysqlRdbms = $root.google.cloud.datastream.v1alpha1.MysqlRdbms.fromObject(object.mysqlRdbms);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DiscoverConnectionProfileRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.DiscoverConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.DiscoverConnectionProfileRequest} message DiscoverConnectionProfileRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DiscoverConnectionProfileRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.parent = "";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.recursive != null && message.hasOwnProperty("recursive")) {
                                object.recursive = message.recursive;
                                if (options.oneofs)
                                    object.depth = "recursive";
                            }
                            if (message.recursionDepth != null && message.hasOwnProperty("recursionDepth")) {
                                object.recursionDepth = message.recursionDepth;
                                if (options.oneofs)
                                    object.depth = "recursionDepth";
                            }
                            if (message.oracleRdbms != null && message.hasOwnProperty("oracleRdbms")) {
                                object.oracleRdbms = $root.google.cloud.datastream.v1alpha1.OracleRdbms.toObject(message.oracleRdbms, options);
                                if (options.oneofs)
                                    object.dataObject = "oracleRdbms";
                            }
                            if (message.mysqlRdbms != null && message.hasOwnProperty("mysqlRdbms")) {
                                object.mysqlRdbms = $root.google.cloud.datastream.v1alpha1.MysqlRdbms.toObject(message.mysqlRdbms, options);
                                if (options.oneofs)
                                    object.dataObject = "mysqlRdbms";
                            }
                            if (message.connectionProfile != null && message.hasOwnProperty("connectionProfile")) {
                                object.connectionProfile = $root.google.cloud.datastream.v1alpha1.ConnectionProfile.toObject(message.connectionProfile, options);
                                if (options.oneofs)
                                    object.target = "connectionProfile";
                            }
                            if (message.connectionProfileName != null && message.hasOwnProperty("connectionProfileName")) {
                                object.connectionProfileName = message.connectionProfileName;
                                if (options.oneofs)
                                    object.target = "connectionProfileName";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this DiscoverConnectionProfileRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.DiscoverConnectionProfileRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DiscoverConnectionProfileRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DiscoverConnectionProfileRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.DiscoverConnectionProfileRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DiscoverConnectionProfileRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.DiscoverConnectionProfileRequest";
                        };
    
                        return DiscoverConnectionProfileRequest;
                    })();
    
                    v1alpha1.DiscoverConnectionProfileResponse = (function() {
    
                        /**
                         * Properties of a DiscoverConnectionProfileResponse.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IDiscoverConnectionProfileResponse
                         * @property {google.cloud.datastream.v1alpha1.IOracleRdbms|null} [oracleRdbms] DiscoverConnectionProfileResponse oracleRdbms
                         * @property {google.cloud.datastream.v1alpha1.IMysqlRdbms|null} [mysqlRdbms] DiscoverConnectionProfileResponse mysqlRdbms
                         */
    
                        /**
                         * Constructs a new DiscoverConnectionProfileResponse.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a DiscoverConnectionProfileResponse.
                         * @implements IDiscoverConnectionProfileResponse
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IDiscoverConnectionProfileResponse=} [properties] Properties to set
                         */
                        function DiscoverConnectionProfileResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DiscoverConnectionProfileResponse oracleRdbms.
                         * @member {google.cloud.datastream.v1alpha1.IOracleRdbms|null|undefined} oracleRdbms
                         * @memberof google.cloud.datastream.v1alpha1.DiscoverConnectionProfileResponse
                         * @instance
                         */
                        DiscoverConnectionProfileResponse.prototype.oracleRdbms = null;
    
                        /**
                         * DiscoverConnectionProfileResponse mysqlRdbms.
                         * @member {google.cloud.datastream.v1alpha1.IMysqlRdbms|null|undefined} mysqlRdbms
                         * @memberof google.cloud.datastream.v1alpha1.DiscoverConnectionProfileResponse
                         * @instance
                         */
                        DiscoverConnectionProfileResponse.prototype.mysqlRdbms = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * DiscoverConnectionProfileResponse dataObject.
                         * @member {"oracleRdbms"|"mysqlRdbms"|undefined} dataObject
                         * @memberof google.cloud.datastream.v1alpha1.DiscoverConnectionProfileResponse
                         * @instance
                         */
                        Object.defineProperty(DiscoverConnectionProfileResponse.prototype, "dataObject", {
                            get: $util.oneOfGetter($oneOfFields = ["oracleRdbms", "mysqlRdbms"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new DiscoverConnectionProfileResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.DiscoverConnectionProfileResponse
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IDiscoverConnectionProfileResponse=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.DiscoverConnectionProfileResponse} DiscoverConnectionProfileResponse instance
                         */
                        DiscoverConnectionProfileResponse.create = function create(properties) {
                            return new DiscoverConnectionProfileResponse(properties);
                        };
    
                        /**
                         * Encodes the specified DiscoverConnectionProfileResponse message. Does not implicitly {@link google.cloud.datastream.v1alpha1.DiscoverConnectionProfileResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.DiscoverConnectionProfileResponse
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IDiscoverConnectionProfileResponse} message DiscoverConnectionProfileResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DiscoverConnectionProfileResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.oracleRdbms != null && Object.hasOwnProperty.call(message, "oracleRdbms"))
                                $root.google.cloud.datastream.v1alpha1.OracleRdbms.encode(message.oracleRdbms, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            if (message.mysqlRdbms != null && Object.hasOwnProperty.call(message, "mysqlRdbms"))
                                $root.google.cloud.datastream.v1alpha1.MysqlRdbms.encode(message.mysqlRdbms, writer.uint32(/* id 101, wireType 2 =*/810).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DiscoverConnectionProfileResponse message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.DiscoverConnectionProfileResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.DiscoverConnectionProfileResponse
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IDiscoverConnectionProfileResponse} message DiscoverConnectionProfileResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DiscoverConnectionProfileResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DiscoverConnectionProfileResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.DiscoverConnectionProfileResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.DiscoverConnectionProfileResponse} DiscoverConnectionProfileResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DiscoverConnectionProfileResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.DiscoverConnectionProfileResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 100: {
                                        message.oracleRdbms = $root.google.cloud.datastream.v1alpha1.OracleRdbms.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 101: {
                                        message.mysqlRdbms = $root.google.cloud.datastream.v1alpha1.MysqlRdbms.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DiscoverConnectionProfileResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.DiscoverConnectionProfileResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.DiscoverConnectionProfileResponse} DiscoverConnectionProfileResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DiscoverConnectionProfileResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DiscoverConnectionProfileResponse message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.DiscoverConnectionProfileResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DiscoverConnectionProfileResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.oracleRdbms != null && message.hasOwnProperty("oracleRdbms")) {
                                properties.dataObject = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1alpha1.OracleRdbms.verify(message.oracleRdbms);
                                    if (error)
                                        return "oracleRdbms." + error;
                                }
                            }
                            if (message.mysqlRdbms != null && message.hasOwnProperty("mysqlRdbms")) {
                                if (properties.dataObject === 1)
                                    return "dataObject: multiple values";
                                properties.dataObject = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1alpha1.MysqlRdbms.verify(message.mysqlRdbms);
                                    if (error)
                                        return "mysqlRdbms." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DiscoverConnectionProfileResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.DiscoverConnectionProfileResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.DiscoverConnectionProfileResponse} DiscoverConnectionProfileResponse
                         */
                        DiscoverConnectionProfileResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.DiscoverConnectionProfileResponse)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.DiscoverConnectionProfileResponse();
                            if (object.oracleRdbms != null) {
                                if (typeof object.oracleRdbms !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.DiscoverConnectionProfileResponse.oracleRdbms: object expected");
                                message.oracleRdbms = $root.google.cloud.datastream.v1alpha1.OracleRdbms.fromObject(object.oracleRdbms);
                            }
                            if (object.mysqlRdbms != null) {
                                if (typeof object.mysqlRdbms !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.DiscoverConnectionProfileResponse.mysqlRdbms: object expected");
                                message.mysqlRdbms = $root.google.cloud.datastream.v1alpha1.MysqlRdbms.fromObject(object.mysqlRdbms);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DiscoverConnectionProfileResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.DiscoverConnectionProfileResponse
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.DiscoverConnectionProfileResponse} message DiscoverConnectionProfileResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DiscoverConnectionProfileResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.oracleRdbms != null && message.hasOwnProperty("oracleRdbms")) {
                                object.oracleRdbms = $root.google.cloud.datastream.v1alpha1.OracleRdbms.toObject(message.oracleRdbms, options);
                                if (options.oneofs)
                                    object.dataObject = "oracleRdbms";
                            }
                            if (message.mysqlRdbms != null && message.hasOwnProperty("mysqlRdbms")) {
                                object.mysqlRdbms = $root.google.cloud.datastream.v1alpha1.MysqlRdbms.toObject(message.mysqlRdbms, options);
                                if (options.oneofs)
                                    object.dataObject = "mysqlRdbms";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this DiscoverConnectionProfileResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.DiscoverConnectionProfileResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DiscoverConnectionProfileResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DiscoverConnectionProfileResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.DiscoverConnectionProfileResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DiscoverConnectionProfileResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.DiscoverConnectionProfileResponse";
                        };
    
                        return DiscoverConnectionProfileResponse;
                    })();
    
                    v1alpha1.FetchStaticIpsRequest = (function() {
    
                        /**
                         * Properties of a FetchStaticIpsRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IFetchStaticIpsRequest
                         * @property {string|null} [name] FetchStaticIpsRequest name
                         * @property {number|null} [pageSize] FetchStaticIpsRequest pageSize
                         * @property {string|null} [pageToken] FetchStaticIpsRequest pageToken
                         */
    
                        /**
                         * Constructs a new FetchStaticIpsRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a FetchStaticIpsRequest.
                         * @implements IFetchStaticIpsRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IFetchStaticIpsRequest=} [properties] Properties to set
                         */
                        function FetchStaticIpsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FetchStaticIpsRequest name.
                         * @member {string} name
                         * @memberof google.cloud.datastream.v1alpha1.FetchStaticIpsRequest
                         * @instance
                         */
                        FetchStaticIpsRequest.prototype.name = "";
    
                        /**
                         * FetchStaticIpsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.datastream.v1alpha1.FetchStaticIpsRequest
                         * @instance
                         */
                        FetchStaticIpsRequest.prototype.pageSize = 0;
    
                        /**
                         * FetchStaticIpsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.datastream.v1alpha1.FetchStaticIpsRequest
                         * @instance
                         */
                        FetchStaticIpsRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new FetchStaticIpsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.FetchStaticIpsRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IFetchStaticIpsRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.FetchStaticIpsRequest} FetchStaticIpsRequest instance
                         */
                        FetchStaticIpsRequest.create = function create(properties) {
                            return new FetchStaticIpsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified FetchStaticIpsRequest message. Does not implicitly {@link google.cloud.datastream.v1alpha1.FetchStaticIpsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.FetchStaticIpsRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IFetchStaticIpsRequest} message FetchStaticIpsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FetchStaticIpsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FetchStaticIpsRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.FetchStaticIpsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.FetchStaticIpsRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IFetchStaticIpsRequest} message FetchStaticIpsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FetchStaticIpsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FetchStaticIpsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.FetchStaticIpsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.FetchStaticIpsRequest} FetchStaticIpsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FetchStaticIpsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.FetchStaticIpsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FetchStaticIpsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.FetchStaticIpsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.FetchStaticIpsRequest} FetchStaticIpsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FetchStaticIpsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FetchStaticIpsRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.FetchStaticIpsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FetchStaticIpsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a FetchStaticIpsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.FetchStaticIpsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.FetchStaticIpsRequest} FetchStaticIpsRequest
                         */
                        FetchStaticIpsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.FetchStaticIpsRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.FetchStaticIpsRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FetchStaticIpsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.FetchStaticIpsRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.FetchStaticIpsRequest} message FetchStaticIpsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FetchStaticIpsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this FetchStaticIpsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.FetchStaticIpsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FetchStaticIpsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FetchStaticIpsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.FetchStaticIpsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FetchStaticIpsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.FetchStaticIpsRequest";
                        };
    
                        return FetchStaticIpsRequest;
                    })();
    
                    v1alpha1.FetchStaticIpsResponse = (function() {
    
                        /**
                         * Properties of a FetchStaticIpsResponse.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IFetchStaticIpsResponse
                         * @property {Array.<string>|null} [staticIps] FetchStaticIpsResponse staticIps
                         * @property {string|null} [nextPageToken] FetchStaticIpsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new FetchStaticIpsResponse.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a FetchStaticIpsResponse.
                         * @implements IFetchStaticIpsResponse
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IFetchStaticIpsResponse=} [properties] Properties to set
                         */
                        function FetchStaticIpsResponse(properties) {
                            this.staticIps = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FetchStaticIpsResponse staticIps.
                         * @member {Array.<string>} staticIps
                         * @memberof google.cloud.datastream.v1alpha1.FetchStaticIpsResponse
                         * @instance
                         */
                        FetchStaticIpsResponse.prototype.staticIps = $util.emptyArray;
    
                        /**
                         * FetchStaticIpsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.datastream.v1alpha1.FetchStaticIpsResponse
                         * @instance
                         */
                        FetchStaticIpsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new FetchStaticIpsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.FetchStaticIpsResponse
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IFetchStaticIpsResponse=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.FetchStaticIpsResponse} FetchStaticIpsResponse instance
                         */
                        FetchStaticIpsResponse.create = function create(properties) {
                            return new FetchStaticIpsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified FetchStaticIpsResponse message. Does not implicitly {@link google.cloud.datastream.v1alpha1.FetchStaticIpsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.FetchStaticIpsResponse
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IFetchStaticIpsResponse} message FetchStaticIpsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FetchStaticIpsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.staticIps != null && message.staticIps.length)
                                for (var i = 0; i < message.staticIps.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.staticIps[i]);
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FetchStaticIpsResponse message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.FetchStaticIpsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.FetchStaticIpsResponse
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IFetchStaticIpsResponse} message FetchStaticIpsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FetchStaticIpsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FetchStaticIpsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.FetchStaticIpsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.FetchStaticIpsResponse} FetchStaticIpsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FetchStaticIpsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.FetchStaticIpsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.staticIps && message.staticIps.length))
                                            message.staticIps = [];
                                        message.staticIps.push(reader.string());
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FetchStaticIpsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.FetchStaticIpsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.FetchStaticIpsResponse} FetchStaticIpsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FetchStaticIpsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FetchStaticIpsResponse message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.FetchStaticIpsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FetchStaticIpsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.staticIps != null && message.hasOwnProperty("staticIps")) {
                                if (!Array.isArray(message.staticIps))
                                    return "staticIps: array expected";
                                for (var i = 0; i < message.staticIps.length; ++i)
                                    if (!$util.isString(message.staticIps[i]))
                                        return "staticIps: string[] expected";
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a FetchStaticIpsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.FetchStaticIpsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.FetchStaticIpsResponse} FetchStaticIpsResponse
                         */
                        FetchStaticIpsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.FetchStaticIpsResponse)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.FetchStaticIpsResponse();
                            if (object.staticIps) {
                                if (!Array.isArray(object.staticIps))
                                    throw TypeError(".google.cloud.datastream.v1alpha1.FetchStaticIpsResponse.staticIps: array expected");
                                message.staticIps = [];
                                for (var i = 0; i < object.staticIps.length; ++i)
                                    message.staticIps[i] = String(object.staticIps[i]);
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FetchStaticIpsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.FetchStaticIpsResponse
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.FetchStaticIpsResponse} message FetchStaticIpsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FetchStaticIpsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.staticIps = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.staticIps && message.staticIps.length) {
                                object.staticIps = [];
                                for (var j = 0; j < message.staticIps.length; ++j)
                                    object.staticIps[j] = message.staticIps[j];
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this FetchStaticIpsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.FetchStaticIpsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FetchStaticIpsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FetchStaticIpsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.FetchStaticIpsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FetchStaticIpsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.FetchStaticIpsResponse";
                        };
    
                        return FetchStaticIpsResponse;
                    })();
    
                    v1alpha1.FetchErrorsRequest = (function() {
    
                        /**
                         * Properties of a FetchErrorsRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IFetchErrorsRequest
                         * @property {string|null} [stream] FetchErrorsRequest stream
                         */
    
                        /**
                         * Constructs a new FetchErrorsRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a FetchErrorsRequest.
                         * @implements IFetchErrorsRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IFetchErrorsRequest=} [properties] Properties to set
                         */
                        function FetchErrorsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FetchErrorsRequest stream.
                         * @member {string} stream
                         * @memberof google.cloud.datastream.v1alpha1.FetchErrorsRequest
                         * @instance
                         */
                        FetchErrorsRequest.prototype.stream = "";
    
                        /**
                         * Creates a new FetchErrorsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.FetchErrorsRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IFetchErrorsRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.FetchErrorsRequest} FetchErrorsRequest instance
                         */
                        FetchErrorsRequest.create = function create(properties) {
                            return new FetchErrorsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified FetchErrorsRequest message. Does not implicitly {@link google.cloud.datastream.v1alpha1.FetchErrorsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.FetchErrorsRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IFetchErrorsRequest} message FetchErrorsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FetchErrorsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.stream != null && Object.hasOwnProperty.call(message, "stream"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.stream);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FetchErrorsRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.FetchErrorsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.FetchErrorsRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IFetchErrorsRequest} message FetchErrorsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FetchErrorsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FetchErrorsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.FetchErrorsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.FetchErrorsRequest} FetchErrorsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FetchErrorsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.FetchErrorsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.stream = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FetchErrorsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.FetchErrorsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.FetchErrorsRequest} FetchErrorsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FetchErrorsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FetchErrorsRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.FetchErrorsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FetchErrorsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.stream != null && message.hasOwnProperty("stream"))
                                if (!$util.isString(message.stream))
                                    return "stream: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a FetchErrorsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.FetchErrorsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.FetchErrorsRequest} FetchErrorsRequest
                         */
                        FetchErrorsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.FetchErrorsRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.FetchErrorsRequest();
                            if (object.stream != null)
                                message.stream = String(object.stream);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FetchErrorsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.FetchErrorsRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.FetchErrorsRequest} message FetchErrorsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FetchErrorsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.stream = "";
                            if (message.stream != null && message.hasOwnProperty("stream"))
                                object.stream = message.stream;
                            return object;
                        };
    
                        /**
                         * Converts this FetchErrorsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.FetchErrorsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FetchErrorsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FetchErrorsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.FetchErrorsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FetchErrorsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.FetchErrorsRequest";
                        };
    
                        return FetchErrorsRequest;
                    })();
    
                    v1alpha1.FetchErrorsResponse = (function() {
    
                        /**
                         * Properties of a FetchErrorsResponse.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IFetchErrorsResponse
                         * @property {Array.<google.cloud.datastream.v1alpha1.IError>|null} [errors] FetchErrorsResponse errors
                         */
    
                        /**
                         * Constructs a new FetchErrorsResponse.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a FetchErrorsResponse.
                         * @implements IFetchErrorsResponse
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IFetchErrorsResponse=} [properties] Properties to set
                         */
                        function FetchErrorsResponse(properties) {
                            this.errors = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FetchErrorsResponse errors.
                         * @member {Array.<google.cloud.datastream.v1alpha1.IError>} errors
                         * @memberof google.cloud.datastream.v1alpha1.FetchErrorsResponse
                         * @instance
                         */
                        FetchErrorsResponse.prototype.errors = $util.emptyArray;
    
                        /**
                         * Creates a new FetchErrorsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.FetchErrorsResponse
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IFetchErrorsResponse=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.FetchErrorsResponse} FetchErrorsResponse instance
                         */
                        FetchErrorsResponse.create = function create(properties) {
                            return new FetchErrorsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified FetchErrorsResponse message. Does not implicitly {@link google.cloud.datastream.v1alpha1.FetchErrorsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.FetchErrorsResponse
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IFetchErrorsResponse} message FetchErrorsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FetchErrorsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.errors != null && message.errors.length)
                                for (var i = 0; i < message.errors.length; ++i)
                                    $root.google.cloud.datastream.v1alpha1.Error.encode(message.errors[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FetchErrorsResponse message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.FetchErrorsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.FetchErrorsResponse
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IFetchErrorsResponse} message FetchErrorsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FetchErrorsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FetchErrorsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.FetchErrorsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.FetchErrorsResponse} FetchErrorsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FetchErrorsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.FetchErrorsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.errors && message.errors.length))
                                            message.errors = [];
                                        message.errors.push($root.google.cloud.datastream.v1alpha1.Error.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FetchErrorsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.FetchErrorsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.FetchErrorsResponse} FetchErrorsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FetchErrorsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FetchErrorsResponse message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.FetchErrorsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FetchErrorsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.errors != null && message.hasOwnProperty("errors")) {
                                if (!Array.isArray(message.errors))
                                    return "errors: array expected";
                                for (var i = 0; i < message.errors.length; ++i) {
                                    var error = $root.google.cloud.datastream.v1alpha1.Error.verify(message.errors[i]);
                                    if (error)
                                        return "errors." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a FetchErrorsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.FetchErrorsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.FetchErrorsResponse} FetchErrorsResponse
                         */
                        FetchErrorsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.FetchErrorsResponse)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.FetchErrorsResponse();
                            if (object.errors) {
                                if (!Array.isArray(object.errors))
                                    throw TypeError(".google.cloud.datastream.v1alpha1.FetchErrorsResponse.errors: array expected");
                                message.errors = [];
                                for (var i = 0; i < object.errors.length; ++i) {
                                    if (typeof object.errors[i] !== "object")
                                        throw TypeError(".google.cloud.datastream.v1alpha1.FetchErrorsResponse.errors: object expected");
                                    message.errors[i] = $root.google.cloud.datastream.v1alpha1.Error.fromObject(object.errors[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FetchErrorsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.FetchErrorsResponse
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.FetchErrorsResponse} message FetchErrorsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FetchErrorsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.errors = [];
                            if (message.errors && message.errors.length) {
                                object.errors = [];
                                for (var j = 0; j < message.errors.length; ++j)
                                    object.errors[j] = $root.google.cloud.datastream.v1alpha1.Error.toObject(message.errors[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this FetchErrorsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.FetchErrorsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FetchErrorsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FetchErrorsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.FetchErrorsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FetchErrorsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.FetchErrorsResponse";
                        };
    
                        return FetchErrorsResponse;
                    })();
    
                    v1alpha1.ListConnectionProfilesRequest = (function() {
    
                        /**
                         * Properties of a ListConnectionProfilesRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IListConnectionProfilesRequest
                         * @property {string|null} [parent] ListConnectionProfilesRequest parent
                         * @property {number|null} [pageSize] ListConnectionProfilesRequest pageSize
                         * @property {string|null} [pageToken] ListConnectionProfilesRequest pageToken
                         * @property {string|null} [filter] ListConnectionProfilesRequest filter
                         * @property {string|null} [orderBy] ListConnectionProfilesRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListConnectionProfilesRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a ListConnectionProfilesRequest.
                         * @implements IListConnectionProfilesRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IListConnectionProfilesRequest=} [properties] Properties to set
                         */
                        function ListConnectionProfilesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListConnectionProfilesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.datastream.v1alpha1.ListConnectionProfilesRequest
                         * @instance
                         */
                        ListConnectionProfilesRequest.prototype.parent = "";
    
                        /**
                         * ListConnectionProfilesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.datastream.v1alpha1.ListConnectionProfilesRequest
                         * @instance
                         */
                        ListConnectionProfilesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListConnectionProfilesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.datastream.v1alpha1.ListConnectionProfilesRequest
                         * @instance
                         */
                        ListConnectionProfilesRequest.prototype.pageToken = "";
    
                        /**
                         * ListConnectionProfilesRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.datastream.v1alpha1.ListConnectionProfilesRequest
                         * @instance
                         */
                        ListConnectionProfilesRequest.prototype.filter = "";
    
                        /**
                         * ListConnectionProfilesRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.datastream.v1alpha1.ListConnectionProfilesRequest
                         * @instance
                         */
                        ListConnectionProfilesRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListConnectionProfilesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.ListConnectionProfilesRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IListConnectionProfilesRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.ListConnectionProfilesRequest} ListConnectionProfilesRequest instance
                         */
                        ListConnectionProfilesRequest.create = function create(properties) {
                            return new ListConnectionProfilesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListConnectionProfilesRequest message. Does not implicitly {@link google.cloud.datastream.v1alpha1.ListConnectionProfilesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.ListConnectionProfilesRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IListConnectionProfilesRequest} message ListConnectionProfilesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListConnectionProfilesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListConnectionProfilesRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.ListConnectionProfilesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.ListConnectionProfilesRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IListConnectionProfilesRequest} message ListConnectionProfilesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListConnectionProfilesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListConnectionProfilesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.ListConnectionProfilesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.ListConnectionProfilesRequest} ListConnectionProfilesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListConnectionProfilesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.ListConnectionProfilesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListConnectionProfilesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.ListConnectionProfilesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.ListConnectionProfilesRequest} ListConnectionProfilesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListConnectionProfilesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListConnectionProfilesRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.ListConnectionProfilesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListConnectionProfilesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListConnectionProfilesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.ListConnectionProfilesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.ListConnectionProfilesRequest} ListConnectionProfilesRequest
                         */
                        ListConnectionProfilesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.ListConnectionProfilesRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.ListConnectionProfilesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListConnectionProfilesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.ListConnectionProfilesRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.ListConnectionProfilesRequest} message ListConnectionProfilesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListConnectionProfilesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListConnectionProfilesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.ListConnectionProfilesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListConnectionProfilesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListConnectionProfilesRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.ListConnectionProfilesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListConnectionProfilesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.ListConnectionProfilesRequest";
                        };
    
                        return ListConnectionProfilesRequest;
                    })();
    
                    v1alpha1.ListConnectionProfilesResponse = (function() {
    
                        /**
                         * Properties of a ListConnectionProfilesResponse.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IListConnectionProfilesResponse
                         * @property {Array.<google.cloud.datastream.v1alpha1.IConnectionProfile>|null} [connectionProfiles] ListConnectionProfilesResponse connectionProfiles
                         * @property {string|null} [nextPageToken] ListConnectionProfilesResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListConnectionProfilesResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListConnectionProfilesResponse.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a ListConnectionProfilesResponse.
                         * @implements IListConnectionProfilesResponse
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IListConnectionProfilesResponse=} [properties] Properties to set
                         */
                        function ListConnectionProfilesResponse(properties) {
                            this.connectionProfiles = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListConnectionProfilesResponse connectionProfiles.
                         * @member {Array.<google.cloud.datastream.v1alpha1.IConnectionProfile>} connectionProfiles
                         * @memberof google.cloud.datastream.v1alpha1.ListConnectionProfilesResponse
                         * @instance
                         */
                        ListConnectionProfilesResponse.prototype.connectionProfiles = $util.emptyArray;
    
                        /**
                         * ListConnectionProfilesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.datastream.v1alpha1.ListConnectionProfilesResponse
                         * @instance
                         */
                        ListConnectionProfilesResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListConnectionProfilesResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.datastream.v1alpha1.ListConnectionProfilesResponse
                         * @instance
                         */
                        ListConnectionProfilesResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListConnectionProfilesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.ListConnectionProfilesResponse
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IListConnectionProfilesResponse=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.ListConnectionProfilesResponse} ListConnectionProfilesResponse instance
                         */
                        ListConnectionProfilesResponse.create = function create(properties) {
                            return new ListConnectionProfilesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListConnectionProfilesResponse message. Does not implicitly {@link google.cloud.datastream.v1alpha1.ListConnectionProfilesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.ListConnectionProfilesResponse
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IListConnectionProfilesResponse} message ListConnectionProfilesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListConnectionProfilesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.connectionProfiles != null && message.connectionProfiles.length)
                                for (var i = 0; i < message.connectionProfiles.length; ++i)
                                    $root.google.cloud.datastream.v1alpha1.ConnectionProfile.encode(message.connectionProfiles[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListConnectionProfilesResponse message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.ListConnectionProfilesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.ListConnectionProfilesResponse
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IListConnectionProfilesResponse} message ListConnectionProfilesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListConnectionProfilesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListConnectionProfilesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.ListConnectionProfilesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.ListConnectionProfilesResponse} ListConnectionProfilesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListConnectionProfilesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.ListConnectionProfilesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.connectionProfiles && message.connectionProfiles.length))
                                            message.connectionProfiles = [];
                                        message.connectionProfiles.push($root.google.cloud.datastream.v1alpha1.ConnectionProfile.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListConnectionProfilesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.ListConnectionProfilesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.ListConnectionProfilesResponse} ListConnectionProfilesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListConnectionProfilesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListConnectionProfilesResponse message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.ListConnectionProfilesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListConnectionProfilesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.connectionProfiles != null && message.hasOwnProperty("connectionProfiles")) {
                                if (!Array.isArray(message.connectionProfiles))
                                    return "connectionProfiles: array expected";
                                for (var i = 0; i < message.connectionProfiles.length; ++i) {
                                    var error = $root.google.cloud.datastream.v1alpha1.ConnectionProfile.verify(message.connectionProfiles[i]);
                                    if (error)
                                        return "connectionProfiles." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListConnectionProfilesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.ListConnectionProfilesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.ListConnectionProfilesResponse} ListConnectionProfilesResponse
                         */
                        ListConnectionProfilesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.ListConnectionProfilesResponse)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.ListConnectionProfilesResponse();
                            if (object.connectionProfiles) {
                                if (!Array.isArray(object.connectionProfiles))
                                    throw TypeError(".google.cloud.datastream.v1alpha1.ListConnectionProfilesResponse.connectionProfiles: array expected");
                                message.connectionProfiles = [];
                                for (var i = 0; i < object.connectionProfiles.length; ++i) {
                                    if (typeof object.connectionProfiles[i] !== "object")
                                        throw TypeError(".google.cloud.datastream.v1alpha1.ListConnectionProfilesResponse.connectionProfiles: object expected");
                                    message.connectionProfiles[i] = $root.google.cloud.datastream.v1alpha1.ConnectionProfile.fromObject(object.connectionProfiles[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.datastream.v1alpha1.ListConnectionProfilesResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListConnectionProfilesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.ListConnectionProfilesResponse
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.ListConnectionProfilesResponse} message ListConnectionProfilesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListConnectionProfilesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.connectionProfiles = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.connectionProfiles && message.connectionProfiles.length) {
                                object.connectionProfiles = [];
                                for (var j = 0; j < message.connectionProfiles.length; ++j)
                                    object.connectionProfiles[j] = $root.google.cloud.datastream.v1alpha1.ConnectionProfile.toObject(message.connectionProfiles[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListConnectionProfilesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.ListConnectionProfilesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListConnectionProfilesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListConnectionProfilesResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.ListConnectionProfilesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListConnectionProfilesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.ListConnectionProfilesResponse";
                        };
    
                        return ListConnectionProfilesResponse;
                    })();
    
                    v1alpha1.GetConnectionProfileRequest = (function() {
    
                        /**
                         * Properties of a GetConnectionProfileRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IGetConnectionProfileRequest
                         * @property {string|null} [name] GetConnectionProfileRequest name
                         */
    
                        /**
                         * Constructs a new GetConnectionProfileRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a GetConnectionProfileRequest.
                         * @implements IGetConnectionProfileRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IGetConnectionProfileRequest=} [properties] Properties to set
                         */
                        function GetConnectionProfileRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetConnectionProfileRequest name.
                         * @member {string} name
                         * @memberof google.cloud.datastream.v1alpha1.GetConnectionProfileRequest
                         * @instance
                         */
                        GetConnectionProfileRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetConnectionProfileRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.GetConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IGetConnectionProfileRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.GetConnectionProfileRequest} GetConnectionProfileRequest instance
                         */
                        GetConnectionProfileRequest.create = function create(properties) {
                            return new GetConnectionProfileRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetConnectionProfileRequest message. Does not implicitly {@link google.cloud.datastream.v1alpha1.GetConnectionProfileRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.GetConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IGetConnectionProfileRequest} message GetConnectionProfileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetConnectionProfileRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetConnectionProfileRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.GetConnectionProfileRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.GetConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IGetConnectionProfileRequest} message GetConnectionProfileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetConnectionProfileRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetConnectionProfileRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.GetConnectionProfileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.GetConnectionProfileRequest} GetConnectionProfileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetConnectionProfileRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.GetConnectionProfileRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetConnectionProfileRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.GetConnectionProfileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.GetConnectionProfileRequest} GetConnectionProfileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetConnectionProfileRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetConnectionProfileRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.GetConnectionProfileRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetConnectionProfileRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetConnectionProfileRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.GetConnectionProfileRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.GetConnectionProfileRequest} GetConnectionProfileRequest
                         */
                        GetConnectionProfileRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.GetConnectionProfileRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.GetConnectionProfileRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetConnectionProfileRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.GetConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.GetConnectionProfileRequest} message GetConnectionProfileRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetConnectionProfileRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetConnectionProfileRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.GetConnectionProfileRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetConnectionProfileRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetConnectionProfileRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.GetConnectionProfileRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetConnectionProfileRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.GetConnectionProfileRequest";
                        };
    
                        return GetConnectionProfileRequest;
                    })();
    
                    v1alpha1.CreateConnectionProfileRequest = (function() {
    
                        /**
                         * Properties of a CreateConnectionProfileRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface ICreateConnectionProfileRequest
                         * @property {string|null} [parent] CreateConnectionProfileRequest parent
                         * @property {string|null} [connectionProfileId] CreateConnectionProfileRequest connectionProfileId
                         * @property {google.cloud.datastream.v1alpha1.IConnectionProfile|null} [connectionProfile] CreateConnectionProfileRequest connectionProfile
                         * @property {string|null} [requestId] CreateConnectionProfileRequest requestId
                         */
    
                        /**
                         * Constructs a new CreateConnectionProfileRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a CreateConnectionProfileRequest.
                         * @implements ICreateConnectionProfileRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.ICreateConnectionProfileRequest=} [properties] Properties to set
                         */
                        function CreateConnectionProfileRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateConnectionProfileRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.datastream.v1alpha1.CreateConnectionProfileRequest
                         * @instance
                         */
                        CreateConnectionProfileRequest.prototype.parent = "";
    
                        /**
                         * CreateConnectionProfileRequest connectionProfileId.
                         * @member {string} connectionProfileId
                         * @memberof google.cloud.datastream.v1alpha1.CreateConnectionProfileRequest
                         * @instance
                         */
                        CreateConnectionProfileRequest.prototype.connectionProfileId = "";
    
                        /**
                         * CreateConnectionProfileRequest connectionProfile.
                         * @member {google.cloud.datastream.v1alpha1.IConnectionProfile|null|undefined} connectionProfile
                         * @memberof google.cloud.datastream.v1alpha1.CreateConnectionProfileRequest
                         * @instance
                         */
                        CreateConnectionProfileRequest.prototype.connectionProfile = null;
    
                        /**
                         * CreateConnectionProfileRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.datastream.v1alpha1.CreateConnectionProfileRequest
                         * @instance
                         */
                        CreateConnectionProfileRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new CreateConnectionProfileRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.CreateConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.ICreateConnectionProfileRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.CreateConnectionProfileRequest} CreateConnectionProfileRequest instance
                         */
                        CreateConnectionProfileRequest.create = function create(properties) {
                            return new CreateConnectionProfileRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateConnectionProfileRequest message. Does not implicitly {@link google.cloud.datastream.v1alpha1.CreateConnectionProfileRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.CreateConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.ICreateConnectionProfileRequest} message CreateConnectionProfileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateConnectionProfileRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.connectionProfileId != null && Object.hasOwnProperty.call(message, "connectionProfileId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.connectionProfileId);
                            if (message.connectionProfile != null && Object.hasOwnProperty.call(message, "connectionProfile"))
                                $root.google.cloud.datastream.v1alpha1.ConnectionProfile.encode(message.connectionProfile, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateConnectionProfileRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.CreateConnectionProfileRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.CreateConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.ICreateConnectionProfileRequest} message CreateConnectionProfileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateConnectionProfileRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateConnectionProfileRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.CreateConnectionProfileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.CreateConnectionProfileRequest} CreateConnectionProfileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateConnectionProfileRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.CreateConnectionProfileRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.connectionProfileId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.connectionProfile = $root.google.cloud.datastream.v1alpha1.ConnectionProfile.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateConnectionProfileRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.CreateConnectionProfileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.CreateConnectionProfileRequest} CreateConnectionProfileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateConnectionProfileRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateConnectionProfileRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.CreateConnectionProfileRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateConnectionProfileRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.connectionProfileId != null && message.hasOwnProperty("connectionProfileId"))
                                if (!$util.isString(message.connectionProfileId))
                                    return "connectionProfileId: string expected";
                            if (message.connectionProfile != null && message.hasOwnProperty("connectionProfile")) {
                                var error = $root.google.cloud.datastream.v1alpha1.ConnectionProfile.verify(message.connectionProfile);
                                if (error)
                                    return "connectionProfile." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateConnectionProfileRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.CreateConnectionProfileRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.CreateConnectionProfileRequest} CreateConnectionProfileRequest
                         */
                        CreateConnectionProfileRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.CreateConnectionProfileRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.CreateConnectionProfileRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.connectionProfileId != null)
                                message.connectionProfileId = String(object.connectionProfileId);
                            if (object.connectionProfile != null) {
                                if (typeof object.connectionProfile !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.CreateConnectionProfileRequest.connectionProfile: object expected");
                                message.connectionProfile = $root.google.cloud.datastream.v1alpha1.ConnectionProfile.fromObject(object.connectionProfile);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateConnectionProfileRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.CreateConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.CreateConnectionProfileRequest} message CreateConnectionProfileRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateConnectionProfileRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.connectionProfileId = "";
                                object.connectionProfile = null;
                                object.requestId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.connectionProfileId != null && message.hasOwnProperty("connectionProfileId"))
                                object.connectionProfileId = message.connectionProfileId;
                            if (message.connectionProfile != null && message.hasOwnProperty("connectionProfile"))
                                object.connectionProfile = $root.google.cloud.datastream.v1alpha1.ConnectionProfile.toObject(message.connectionProfile, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this CreateConnectionProfileRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.CreateConnectionProfileRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateConnectionProfileRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateConnectionProfileRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.CreateConnectionProfileRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateConnectionProfileRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.CreateConnectionProfileRequest";
                        };
    
                        return CreateConnectionProfileRequest;
                    })();
    
                    v1alpha1.UpdateConnectionProfileRequest = (function() {
    
                        /**
                         * Properties of an UpdateConnectionProfileRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IUpdateConnectionProfileRequest
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateConnectionProfileRequest updateMask
                         * @property {google.cloud.datastream.v1alpha1.IConnectionProfile|null} [connectionProfile] UpdateConnectionProfileRequest connectionProfile
                         * @property {string|null} [requestId] UpdateConnectionProfileRequest requestId
                         */
    
                        /**
                         * Constructs a new UpdateConnectionProfileRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents an UpdateConnectionProfileRequest.
                         * @implements IUpdateConnectionProfileRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IUpdateConnectionProfileRequest=} [properties] Properties to set
                         */
                        function UpdateConnectionProfileRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateConnectionProfileRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.datastream.v1alpha1.UpdateConnectionProfileRequest
                         * @instance
                         */
                        UpdateConnectionProfileRequest.prototype.updateMask = null;
    
                        /**
                         * UpdateConnectionProfileRequest connectionProfile.
                         * @member {google.cloud.datastream.v1alpha1.IConnectionProfile|null|undefined} connectionProfile
                         * @memberof google.cloud.datastream.v1alpha1.UpdateConnectionProfileRequest
                         * @instance
                         */
                        UpdateConnectionProfileRequest.prototype.connectionProfile = null;
    
                        /**
                         * UpdateConnectionProfileRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.datastream.v1alpha1.UpdateConnectionProfileRequest
                         * @instance
                         */
                        UpdateConnectionProfileRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new UpdateConnectionProfileRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.UpdateConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IUpdateConnectionProfileRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.UpdateConnectionProfileRequest} UpdateConnectionProfileRequest instance
                         */
                        UpdateConnectionProfileRequest.create = function create(properties) {
                            return new UpdateConnectionProfileRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateConnectionProfileRequest message. Does not implicitly {@link google.cloud.datastream.v1alpha1.UpdateConnectionProfileRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.UpdateConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IUpdateConnectionProfileRequest} message UpdateConnectionProfileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateConnectionProfileRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.connectionProfile != null && Object.hasOwnProperty.call(message, "connectionProfile"))
                                $root.google.cloud.datastream.v1alpha1.ConnectionProfile.encode(message.connectionProfile, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateConnectionProfileRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.UpdateConnectionProfileRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.UpdateConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IUpdateConnectionProfileRequest} message UpdateConnectionProfileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateConnectionProfileRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateConnectionProfileRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.UpdateConnectionProfileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.UpdateConnectionProfileRequest} UpdateConnectionProfileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateConnectionProfileRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.UpdateConnectionProfileRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.connectionProfile = $root.google.cloud.datastream.v1alpha1.ConnectionProfile.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateConnectionProfileRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.UpdateConnectionProfileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.UpdateConnectionProfileRequest} UpdateConnectionProfileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateConnectionProfileRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateConnectionProfileRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.UpdateConnectionProfileRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateConnectionProfileRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.connectionProfile != null && message.hasOwnProperty("connectionProfile")) {
                                var error = $root.google.cloud.datastream.v1alpha1.ConnectionProfile.verify(message.connectionProfile);
                                if (error)
                                    return "connectionProfile." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdateConnectionProfileRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.UpdateConnectionProfileRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.UpdateConnectionProfileRequest} UpdateConnectionProfileRequest
                         */
                        UpdateConnectionProfileRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.UpdateConnectionProfileRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.UpdateConnectionProfileRequest();
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.UpdateConnectionProfileRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.connectionProfile != null) {
                                if (typeof object.connectionProfile !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.UpdateConnectionProfileRequest.connectionProfile: object expected");
                                message.connectionProfile = $root.google.cloud.datastream.v1alpha1.ConnectionProfile.fromObject(object.connectionProfile);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateConnectionProfileRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.UpdateConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.UpdateConnectionProfileRequest} message UpdateConnectionProfileRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateConnectionProfileRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.updateMask = null;
                                object.connectionProfile = null;
                                object.requestId = "";
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.connectionProfile != null && message.hasOwnProperty("connectionProfile"))
                                object.connectionProfile = $root.google.cloud.datastream.v1alpha1.ConnectionProfile.toObject(message.connectionProfile, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this UpdateConnectionProfileRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.UpdateConnectionProfileRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateConnectionProfileRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateConnectionProfileRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.UpdateConnectionProfileRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateConnectionProfileRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.UpdateConnectionProfileRequest";
                        };
    
                        return UpdateConnectionProfileRequest;
                    })();
    
                    v1alpha1.DeleteConnectionProfileRequest = (function() {
    
                        /**
                         * Properties of a DeleteConnectionProfileRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IDeleteConnectionProfileRequest
                         * @property {string|null} [name] DeleteConnectionProfileRequest name
                         * @property {string|null} [requestId] DeleteConnectionProfileRequest requestId
                         */
    
                        /**
                         * Constructs a new DeleteConnectionProfileRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a DeleteConnectionProfileRequest.
                         * @implements IDeleteConnectionProfileRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IDeleteConnectionProfileRequest=} [properties] Properties to set
                         */
                        function DeleteConnectionProfileRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteConnectionProfileRequest name.
                         * @member {string} name
                         * @memberof google.cloud.datastream.v1alpha1.DeleteConnectionProfileRequest
                         * @instance
                         */
                        DeleteConnectionProfileRequest.prototype.name = "";
    
                        /**
                         * DeleteConnectionProfileRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.datastream.v1alpha1.DeleteConnectionProfileRequest
                         * @instance
                         */
                        DeleteConnectionProfileRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new DeleteConnectionProfileRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.DeleteConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IDeleteConnectionProfileRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.DeleteConnectionProfileRequest} DeleteConnectionProfileRequest instance
                         */
                        DeleteConnectionProfileRequest.create = function create(properties) {
                            return new DeleteConnectionProfileRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteConnectionProfileRequest message. Does not implicitly {@link google.cloud.datastream.v1alpha1.DeleteConnectionProfileRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.DeleteConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IDeleteConnectionProfileRequest} message DeleteConnectionProfileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteConnectionProfileRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteConnectionProfileRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.DeleteConnectionProfileRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.DeleteConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IDeleteConnectionProfileRequest} message DeleteConnectionProfileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteConnectionProfileRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteConnectionProfileRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.DeleteConnectionProfileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.DeleteConnectionProfileRequest} DeleteConnectionProfileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteConnectionProfileRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.DeleteConnectionProfileRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteConnectionProfileRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.DeleteConnectionProfileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.DeleteConnectionProfileRequest} DeleteConnectionProfileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteConnectionProfileRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteConnectionProfileRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.DeleteConnectionProfileRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteConnectionProfileRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteConnectionProfileRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.DeleteConnectionProfileRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.DeleteConnectionProfileRequest} DeleteConnectionProfileRequest
                         */
                        DeleteConnectionProfileRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.DeleteConnectionProfileRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.DeleteConnectionProfileRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteConnectionProfileRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.DeleteConnectionProfileRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.DeleteConnectionProfileRequest} message DeleteConnectionProfileRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteConnectionProfileRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteConnectionProfileRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.DeleteConnectionProfileRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteConnectionProfileRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteConnectionProfileRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.DeleteConnectionProfileRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteConnectionProfileRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.DeleteConnectionProfileRequest";
                        };
    
                        return DeleteConnectionProfileRequest;
                    })();
    
                    v1alpha1.ListStreamsRequest = (function() {
    
                        /**
                         * Properties of a ListStreamsRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IListStreamsRequest
                         * @property {string|null} [parent] ListStreamsRequest parent
                         * @property {number|null} [pageSize] ListStreamsRequest pageSize
                         * @property {string|null} [pageToken] ListStreamsRequest pageToken
                         * @property {string|null} [filter] ListStreamsRequest filter
                         * @property {string|null} [orderBy] ListStreamsRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListStreamsRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a ListStreamsRequest.
                         * @implements IListStreamsRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IListStreamsRequest=} [properties] Properties to set
                         */
                        function ListStreamsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListStreamsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.datastream.v1alpha1.ListStreamsRequest
                         * @instance
                         */
                        ListStreamsRequest.prototype.parent = "";
    
                        /**
                         * ListStreamsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.datastream.v1alpha1.ListStreamsRequest
                         * @instance
                         */
                        ListStreamsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListStreamsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.datastream.v1alpha1.ListStreamsRequest
                         * @instance
                         */
                        ListStreamsRequest.prototype.pageToken = "";
    
                        /**
                         * ListStreamsRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.datastream.v1alpha1.ListStreamsRequest
                         * @instance
                         */
                        ListStreamsRequest.prototype.filter = "";
    
                        /**
                         * ListStreamsRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.datastream.v1alpha1.ListStreamsRequest
                         * @instance
                         */
                        ListStreamsRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListStreamsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.ListStreamsRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IListStreamsRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.ListStreamsRequest} ListStreamsRequest instance
                         */
                        ListStreamsRequest.create = function create(properties) {
                            return new ListStreamsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListStreamsRequest message. Does not implicitly {@link google.cloud.datastream.v1alpha1.ListStreamsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.ListStreamsRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IListStreamsRequest} message ListStreamsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListStreamsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListStreamsRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.ListStreamsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.ListStreamsRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IListStreamsRequest} message ListStreamsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListStreamsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListStreamsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.ListStreamsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.ListStreamsRequest} ListStreamsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListStreamsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.ListStreamsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListStreamsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.ListStreamsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.ListStreamsRequest} ListStreamsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListStreamsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListStreamsRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.ListStreamsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListStreamsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListStreamsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.ListStreamsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.ListStreamsRequest} ListStreamsRequest
                         */
                        ListStreamsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.ListStreamsRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.ListStreamsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListStreamsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.ListStreamsRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.ListStreamsRequest} message ListStreamsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListStreamsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListStreamsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.ListStreamsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListStreamsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListStreamsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.ListStreamsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListStreamsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.ListStreamsRequest";
                        };
    
                        return ListStreamsRequest;
                    })();
    
                    v1alpha1.ListStreamsResponse = (function() {
    
                        /**
                         * Properties of a ListStreamsResponse.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IListStreamsResponse
                         * @property {Array.<google.cloud.datastream.v1alpha1.IStream>|null} [streams] ListStreamsResponse streams
                         * @property {string|null} [nextPageToken] ListStreamsResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListStreamsResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListStreamsResponse.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a ListStreamsResponse.
                         * @implements IListStreamsResponse
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IListStreamsResponse=} [properties] Properties to set
                         */
                        function ListStreamsResponse(properties) {
                            this.streams = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListStreamsResponse streams.
                         * @member {Array.<google.cloud.datastream.v1alpha1.IStream>} streams
                         * @memberof google.cloud.datastream.v1alpha1.ListStreamsResponse
                         * @instance
                         */
                        ListStreamsResponse.prototype.streams = $util.emptyArray;
    
                        /**
                         * ListStreamsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.datastream.v1alpha1.ListStreamsResponse
                         * @instance
                         */
                        ListStreamsResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListStreamsResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.datastream.v1alpha1.ListStreamsResponse
                         * @instance
                         */
                        ListStreamsResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListStreamsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.ListStreamsResponse
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IListStreamsResponse=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.ListStreamsResponse} ListStreamsResponse instance
                         */
                        ListStreamsResponse.create = function create(properties) {
                            return new ListStreamsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListStreamsResponse message. Does not implicitly {@link google.cloud.datastream.v1alpha1.ListStreamsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.ListStreamsResponse
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IListStreamsResponse} message ListStreamsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListStreamsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.streams != null && message.streams.length)
                                for (var i = 0; i < message.streams.length; ++i)
                                    $root.google.cloud.datastream.v1alpha1.Stream.encode(message.streams[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListStreamsResponse message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.ListStreamsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.ListStreamsResponse
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IListStreamsResponse} message ListStreamsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListStreamsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListStreamsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.ListStreamsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.ListStreamsResponse} ListStreamsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListStreamsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.ListStreamsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.streams && message.streams.length))
                                            message.streams = [];
                                        message.streams.push($root.google.cloud.datastream.v1alpha1.Stream.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListStreamsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.ListStreamsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.ListStreamsResponse} ListStreamsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListStreamsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListStreamsResponse message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.ListStreamsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListStreamsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.streams != null && message.hasOwnProperty("streams")) {
                                if (!Array.isArray(message.streams))
                                    return "streams: array expected";
                                for (var i = 0; i < message.streams.length; ++i) {
                                    var error = $root.google.cloud.datastream.v1alpha1.Stream.verify(message.streams[i]);
                                    if (error)
                                        return "streams." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListStreamsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.ListStreamsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.ListStreamsResponse} ListStreamsResponse
                         */
                        ListStreamsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.ListStreamsResponse)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.ListStreamsResponse();
                            if (object.streams) {
                                if (!Array.isArray(object.streams))
                                    throw TypeError(".google.cloud.datastream.v1alpha1.ListStreamsResponse.streams: array expected");
                                message.streams = [];
                                for (var i = 0; i < object.streams.length; ++i) {
                                    if (typeof object.streams[i] !== "object")
                                        throw TypeError(".google.cloud.datastream.v1alpha1.ListStreamsResponse.streams: object expected");
                                    message.streams[i] = $root.google.cloud.datastream.v1alpha1.Stream.fromObject(object.streams[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.datastream.v1alpha1.ListStreamsResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListStreamsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.ListStreamsResponse
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.ListStreamsResponse} message ListStreamsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListStreamsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.streams = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.streams && message.streams.length) {
                                object.streams = [];
                                for (var j = 0; j < message.streams.length; ++j)
                                    object.streams[j] = $root.google.cloud.datastream.v1alpha1.Stream.toObject(message.streams[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListStreamsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.ListStreamsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListStreamsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListStreamsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.ListStreamsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListStreamsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.ListStreamsResponse";
                        };
    
                        return ListStreamsResponse;
                    })();
    
                    v1alpha1.GetStreamRequest = (function() {
    
                        /**
                         * Properties of a GetStreamRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IGetStreamRequest
                         * @property {string|null} [name] GetStreamRequest name
                         */
    
                        /**
                         * Constructs a new GetStreamRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a GetStreamRequest.
                         * @implements IGetStreamRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IGetStreamRequest=} [properties] Properties to set
                         */
                        function GetStreamRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetStreamRequest name.
                         * @member {string} name
                         * @memberof google.cloud.datastream.v1alpha1.GetStreamRequest
                         * @instance
                         */
                        GetStreamRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetStreamRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.GetStreamRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IGetStreamRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.GetStreamRequest} GetStreamRequest instance
                         */
                        GetStreamRequest.create = function create(properties) {
                            return new GetStreamRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetStreamRequest message. Does not implicitly {@link google.cloud.datastream.v1alpha1.GetStreamRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.GetStreamRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IGetStreamRequest} message GetStreamRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetStreamRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetStreamRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.GetStreamRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.GetStreamRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IGetStreamRequest} message GetStreamRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetStreamRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetStreamRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.GetStreamRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.GetStreamRequest} GetStreamRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetStreamRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.GetStreamRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetStreamRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.GetStreamRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.GetStreamRequest} GetStreamRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetStreamRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetStreamRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.GetStreamRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetStreamRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetStreamRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.GetStreamRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.GetStreamRequest} GetStreamRequest
                         */
                        GetStreamRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.GetStreamRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.GetStreamRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetStreamRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.GetStreamRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.GetStreamRequest} message GetStreamRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetStreamRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetStreamRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.GetStreamRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetStreamRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetStreamRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.GetStreamRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetStreamRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.GetStreamRequest";
                        };
    
                        return GetStreamRequest;
                    })();
    
                    v1alpha1.CreateStreamRequest = (function() {
    
                        /**
                         * Properties of a CreateStreamRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface ICreateStreamRequest
                         * @property {string|null} [parent] CreateStreamRequest parent
                         * @property {string|null} [streamId] CreateStreamRequest streamId
                         * @property {google.cloud.datastream.v1alpha1.IStream|null} [stream] CreateStreamRequest stream
                         * @property {string|null} [requestId] CreateStreamRequest requestId
                         * @property {boolean|null} [validateOnly] CreateStreamRequest validateOnly
                         * @property {boolean|null} [force] CreateStreamRequest force
                         */
    
                        /**
                         * Constructs a new CreateStreamRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a CreateStreamRequest.
                         * @implements ICreateStreamRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.ICreateStreamRequest=} [properties] Properties to set
                         */
                        function CreateStreamRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateStreamRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.datastream.v1alpha1.CreateStreamRequest
                         * @instance
                         */
                        CreateStreamRequest.prototype.parent = "";
    
                        /**
                         * CreateStreamRequest streamId.
                         * @member {string} streamId
                         * @memberof google.cloud.datastream.v1alpha1.CreateStreamRequest
                         * @instance
                         */
                        CreateStreamRequest.prototype.streamId = "";
    
                        /**
                         * CreateStreamRequest stream.
                         * @member {google.cloud.datastream.v1alpha1.IStream|null|undefined} stream
                         * @memberof google.cloud.datastream.v1alpha1.CreateStreamRequest
                         * @instance
                         */
                        CreateStreamRequest.prototype.stream = null;
    
                        /**
                         * CreateStreamRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.datastream.v1alpha1.CreateStreamRequest
                         * @instance
                         */
                        CreateStreamRequest.prototype.requestId = "";
    
                        /**
                         * CreateStreamRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.datastream.v1alpha1.CreateStreamRequest
                         * @instance
                         */
                        CreateStreamRequest.prototype.validateOnly = false;
    
                        /**
                         * CreateStreamRequest force.
                         * @member {boolean} force
                         * @memberof google.cloud.datastream.v1alpha1.CreateStreamRequest
                         * @instance
                         */
                        CreateStreamRequest.prototype.force = false;
    
                        /**
                         * Creates a new CreateStreamRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.CreateStreamRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.ICreateStreamRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.CreateStreamRequest} CreateStreamRequest instance
                         */
                        CreateStreamRequest.create = function create(properties) {
                            return new CreateStreamRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateStreamRequest message. Does not implicitly {@link google.cloud.datastream.v1alpha1.CreateStreamRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.CreateStreamRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.ICreateStreamRequest} message CreateStreamRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateStreamRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.streamId != null && Object.hasOwnProperty.call(message, "streamId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.streamId);
                            if (message.stream != null && Object.hasOwnProperty.call(message, "stream"))
                                $root.google.cloud.datastream.v1alpha1.Stream.encode(message.stream, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.validateOnly);
                            if (message.force != null && Object.hasOwnProperty.call(message, "force"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.force);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateStreamRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.CreateStreamRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.CreateStreamRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.ICreateStreamRequest} message CreateStreamRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateStreamRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateStreamRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.CreateStreamRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.CreateStreamRequest} CreateStreamRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateStreamRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.CreateStreamRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.streamId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.stream = $root.google.cloud.datastream.v1alpha1.Stream.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                case 6: {
                                        message.force = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateStreamRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.CreateStreamRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.CreateStreamRequest} CreateStreamRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateStreamRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateStreamRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.CreateStreamRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateStreamRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.streamId != null && message.hasOwnProperty("streamId"))
                                if (!$util.isString(message.streamId))
                                    return "streamId: string expected";
                            if (message.stream != null && message.hasOwnProperty("stream")) {
                                var error = $root.google.cloud.datastream.v1alpha1.Stream.verify(message.stream);
                                if (error)
                                    return "stream." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            if (message.force != null && message.hasOwnProperty("force"))
                                if (typeof message.force !== "boolean")
                                    return "force: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateStreamRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.CreateStreamRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.CreateStreamRequest} CreateStreamRequest
                         */
                        CreateStreamRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.CreateStreamRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.CreateStreamRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.streamId != null)
                                message.streamId = String(object.streamId);
                            if (object.stream != null) {
                                if (typeof object.stream !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.CreateStreamRequest.stream: object expected");
                                message.stream = $root.google.cloud.datastream.v1alpha1.Stream.fromObject(object.stream);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            if (object.force != null)
                                message.force = Boolean(object.force);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateStreamRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.CreateStreamRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.CreateStreamRequest} message CreateStreamRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateStreamRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.streamId = "";
                                object.stream = null;
                                object.requestId = "";
                                object.validateOnly = false;
                                object.force = false;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.streamId != null && message.hasOwnProperty("streamId"))
                                object.streamId = message.streamId;
                            if (message.stream != null && message.hasOwnProperty("stream"))
                                object.stream = $root.google.cloud.datastream.v1alpha1.Stream.toObject(message.stream, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            if (message.force != null && message.hasOwnProperty("force"))
                                object.force = message.force;
                            return object;
                        };
    
                        /**
                         * Converts this CreateStreamRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.CreateStreamRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateStreamRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateStreamRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.CreateStreamRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateStreamRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.CreateStreamRequest";
                        };
    
                        return CreateStreamRequest;
                    })();
    
                    v1alpha1.UpdateStreamRequest = (function() {
    
                        /**
                         * Properties of an UpdateStreamRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IUpdateStreamRequest
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateStreamRequest updateMask
                         * @property {google.cloud.datastream.v1alpha1.IStream|null} [stream] UpdateStreamRequest stream
                         * @property {string|null} [requestId] UpdateStreamRequest requestId
                         * @property {boolean|null} [validateOnly] UpdateStreamRequest validateOnly
                         * @property {boolean|null} [force] UpdateStreamRequest force
                         */
    
                        /**
                         * Constructs a new UpdateStreamRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents an UpdateStreamRequest.
                         * @implements IUpdateStreamRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IUpdateStreamRequest=} [properties] Properties to set
                         */
                        function UpdateStreamRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateStreamRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.datastream.v1alpha1.UpdateStreamRequest
                         * @instance
                         */
                        UpdateStreamRequest.prototype.updateMask = null;
    
                        /**
                         * UpdateStreamRequest stream.
                         * @member {google.cloud.datastream.v1alpha1.IStream|null|undefined} stream
                         * @memberof google.cloud.datastream.v1alpha1.UpdateStreamRequest
                         * @instance
                         */
                        UpdateStreamRequest.prototype.stream = null;
    
                        /**
                         * UpdateStreamRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.datastream.v1alpha1.UpdateStreamRequest
                         * @instance
                         */
                        UpdateStreamRequest.prototype.requestId = "";
    
                        /**
                         * UpdateStreamRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.datastream.v1alpha1.UpdateStreamRequest
                         * @instance
                         */
                        UpdateStreamRequest.prototype.validateOnly = false;
    
                        /**
                         * UpdateStreamRequest force.
                         * @member {boolean} force
                         * @memberof google.cloud.datastream.v1alpha1.UpdateStreamRequest
                         * @instance
                         */
                        UpdateStreamRequest.prototype.force = false;
    
                        /**
                         * Creates a new UpdateStreamRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.UpdateStreamRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IUpdateStreamRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.UpdateStreamRequest} UpdateStreamRequest instance
                         */
                        UpdateStreamRequest.create = function create(properties) {
                            return new UpdateStreamRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateStreamRequest message. Does not implicitly {@link google.cloud.datastream.v1alpha1.UpdateStreamRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.UpdateStreamRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IUpdateStreamRequest} message UpdateStreamRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateStreamRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.stream != null && Object.hasOwnProperty.call(message, "stream"))
                                $root.google.cloud.datastream.v1alpha1.Stream.encode(message.stream, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.validateOnly);
                            if (message.force != null && Object.hasOwnProperty.call(message, "force"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.force);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateStreamRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.UpdateStreamRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.UpdateStreamRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IUpdateStreamRequest} message UpdateStreamRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateStreamRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateStreamRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.UpdateStreamRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.UpdateStreamRequest} UpdateStreamRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateStreamRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.UpdateStreamRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.stream = $root.google.cloud.datastream.v1alpha1.Stream.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                case 5: {
                                        message.force = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateStreamRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.UpdateStreamRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.UpdateStreamRequest} UpdateStreamRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateStreamRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateStreamRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.UpdateStreamRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateStreamRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.stream != null && message.hasOwnProperty("stream")) {
                                var error = $root.google.cloud.datastream.v1alpha1.Stream.verify(message.stream);
                                if (error)
                                    return "stream." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            if (message.force != null && message.hasOwnProperty("force"))
                                if (typeof message.force !== "boolean")
                                    return "force: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdateStreamRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.UpdateStreamRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.UpdateStreamRequest} UpdateStreamRequest
                         */
                        UpdateStreamRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.UpdateStreamRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.UpdateStreamRequest();
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.UpdateStreamRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.stream != null) {
                                if (typeof object.stream !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.UpdateStreamRequest.stream: object expected");
                                message.stream = $root.google.cloud.datastream.v1alpha1.Stream.fromObject(object.stream);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            if (object.force != null)
                                message.force = Boolean(object.force);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateStreamRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.UpdateStreamRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.UpdateStreamRequest} message UpdateStreamRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateStreamRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.updateMask = null;
                                object.stream = null;
                                object.requestId = "";
                                object.validateOnly = false;
                                object.force = false;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.stream != null && message.hasOwnProperty("stream"))
                                object.stream = $root.google.cloud.datastream.v1alpha1.Stream.toObject(message.stream, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            if (message.force != null && message.hasOwnProperty("force"))
                                object.force = message.force;
                            return object;
                        };
    
                        /**
                         * Converts this UpdateStreamRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.UpdateStreamRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateStreamRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateStreamRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.UpdateStreamRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateStreamRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.UpdateStreamRequest";
                        };
    
                        return UpdateStreamRequest;
                    })();
    
                    v1alpha1.DeleteStreamRequest = (function() {
    
                        /**
                         * Properties of a DeleteStreamRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IDeleteStreamRequest
                         * @property {string|null} [name] DeleteStreamRequest name
                         * @property {string|null} [requestId] DeleteStreamRequest requestId
                         */
    
                        /**
                         * Constructs a new DeleteStreamRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a DeleteStreamRequest.
                         * @implements IDeleteStreamRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IDeleteStreamRequest=} [properties] Properties to set
                         */
                        function DeleteStreamRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteStreamRequest name.
                         * @member {string} name
                         * @memberof google.cloud.datastream.v1alpha1.DeleteStreamRequest
                         * @instance
                         */
                        DeleteStreamRequest.prototype.name = "";
    
                        /**
                         * DeleteStreamRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.datastream.v1alpha1.DeleteStreamRequest
                         * @instance
                         */
                        DeleteStreamRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new DeleteStreamRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.DeleteStreamRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IDeleteStreamRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.DeleteStreamRequest} DeleteStreamRequest instance
                         */
                        DeleteStreamRequest.create = function create(properties) {
                            return new DeleteStreamRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteStreamRequest message. Does not implicitly {@link google.cloud.datastream.v1alpha1.DeleteStreamRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.DeleteStreamRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IDeleteStreamRequest} message DeleteStreamRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteStreamRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteStreamRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.DeleteStreamRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.DeleteStreamRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IDeleteStreamRequest} message DeleteStreamRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteStreamRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteStreamRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.DeleteStreamRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.DeleteStreamRequest} DeleteStreamRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteStreamRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.DeleteStreamRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteStreamRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.DeleteStreamRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.DeleteStreamRequest} DeleteStreamRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteStreamRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteStreamRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.DeleteStreamRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteStreamRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteStreamRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.DeleteStreamRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.DeleteStreamRequest} DeleteStreamRequest
                         */
                        DeleteStreamRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.DeleteStreamRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.DeleteStreamRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteStreamRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.DeleteStreamRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.DeleteStreamRequest} message DeleteStreamRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteStreamRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteStreamRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.DeleteStreamRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteStreamRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteStreamRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.DeleteStreamRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteStreamRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.DeleteStreamRequest";
                        };
    
                        return DeleteStreamRequest;
                    })();
    
                    v1alpha1.OperationMetadata = (function() {
    
                        /**
                         * Properties of an OperationMetadata.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IOperationMetadata
                         * @property {google.protobuf.ITimestamp|null} [createTime] OperationMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] OperationMetadata endTime
                         * @property {string|null} [target] OperationMetadata target
                         * @property {string|null} [verb] OperationMetadata verb
                         * @property {string|null} [statusMessage] OperationMetadata statusMessage
                         * @property {boolean|null} [requestedCancellation] OperationMetadata requestedCancellation
                         * @property {string|null} [apiVersion] OperationMetadata apiVersion
                         * @property {google.cloud.datastream.v1alpha1.IValidationResult|null} [validationResult] OperationMetadata validationResult
                         */
    
                        /**
                         * Constructs a new OperationMetadata.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents an OperationMetadata.
                         * @implements IOperationMetadata
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IOperationMetadata=} [properties] Properties to set
                         */
                        function OperationMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OperationMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.datastream.v1alpha1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.createTime = null;
    
                        /**
                         * OperationMetadata endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.datastream.v1alpha1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.endTime = null;
    
                        /**
                         * OperationMetadata target.
                         * @member {string} target
                         * @memberof google.cloud.datastream.v1alpha1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.target = "";
    
                        /**
                         * OperationMetadata verb.
                         * @member {string} verb
                         * @memberof google.cloud.datastream.v1alpha1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.verb = "";
    
                        /**
                         * OperationMetadata statusMessage.
                         * @member {string} statusMessage
                         * @memberof google.cloud.datastream.v1alpha1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.statusMessage = "";
    
                        /**
                         * OperationMetadata requestedCancellation.
                         * @member {boolean} requestedCancellation
                         * @memberof google.cloud.datastream.v1alpha1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.requestedCancellation = false;
    
                        /**
                         * OperationMetadata apiVersion.
                         * @member {string} apiVersion
                         * @memberof google.cloud.datastream.v1alpha1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.apiVersion = "";
    
                        /**
                         * OperationMetadata validationResult.
                         * @member {google.cloud.datastream.v1alpha1.IValidationResult|null|undefined} validationResult
                         * @memberof google.cloud.datastream.v1alpha1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.validationResult = null;
    
                        /**
                         * Creates a new OperationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.OperationMetadata
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IOperationMetadata=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.OperationMetadata} OperationMetadata instance
                         */
                        OperationMetadata.create = function create(properties) {
                            return new OperationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message. Does not implicitly {@link google.cloud.datastream.v1alpha1.OperationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.OperationMetadata
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.target != null && Object.hasOwnProperty.call(message, "target"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.target);
                            if (message.verb != null && Object.hasOwnProperty.call(message, "verb"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.verb);
                            if (message.statusMessage != null && Object.hasOwnProperty.call(message, "statusMessage"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.statusMessage);
                            if (message.requestedCancellation != null && Object.hasOwnProperty.call(message, "requestedCancellation"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.requestedCancellation);
                            if (message.apiVersion != null && Object.hasOwnProperty.call(message, "apiVersion"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.apiVersion);
                            if (message.validationResult != null && Object.hasOwnProperty.call(message, "validationResult"))
                                $root.google.cloud.datastream.v1alpha1.ValidationResult.encode(message.validationResult, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.OperationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.OperationMetadata
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.OperationMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.target = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.verb = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.statusMessage = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.requestedCancellation = reader.bool();
                                        break;
                                    }
                                case 7: {
                                        message.apiVersion = reader.string();
                                        break;
                                    }
                                case 8: {
                                        message.validationResult = $root.google.cloud.datastream.v1alpha1.ValidationResult.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OperationMetadata message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OperationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.target != null && message.hasOwnProperty("target"))
                                if (!$util.isString(message.target))
                                    return "target: string expected";
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                if (!$util.isString(message.verb))
                                    return "verb: string expected";
                            if (message.statusMessage != null && message.hasOwnProperty("statusMessage"))
                                if (!$util.isString(message.statusMessage))
                                    return "statusMessage: string expected";
                            if (message.requestedCancellation != null && message.hasOwnProperty("requestedCancellation"))
                                if (typeof message.requestedCancellation !== "boolean")
                                    return "requestedCancellation: boolean expected";
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                if (!$util.isString(message.apiVersion))
                                    return "apiVersion: string expected";
                            if (message.validationResult != null && message.hasOwnProperty("validationResult")) {
                                var error = $root.google.cloud.datastream.v1alpha1.ValidationResult.verify(message.validationResult);
                                if (error)
                                    return "validationResult." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an OperationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.OperationMetadata} OperationMetadata
                         */
                        OperationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.OperationMetadata)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.OperationMetadata();
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.OperationMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.OperationMetadata.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            if (object.target != null)
                                message.target = String(object.target);
                            if (object.verb != null)
                                message.verb = String(object.verb);
                            if (object.statusMessage != null)
                                message.statusMessage = String(object.statusMessage);
                            if (object.requestedCancellation != null)
                                message.requestedCancellation = Boolean(object.requestedCancellation);
                            if (object.apiVersion != null)
                                message.apiVersion = String(object.apiVersion);
                            if (object.validationResult != null) {
                                if (typeof object.validationResult !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.OperationMetadata.validationResult: object expected");
                                message.validationResult = $root.google.cloud.datastream.v1alpha1.ValidationResult.fromObject(object.validationResult);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OperationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.OperationMetadata
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.OperationMetadata} message OperationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OperationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.createTime = null;
                                object.endTime = null;
                                object.target = "";
                                object.verb = "";
                                object.statusMessage = "";
                                object.requestedCancellation = false;
                                object.apiVersion = "";
                                object.validationResult = null;
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            if (message.target != null && message.hasOwnProperty("target"))
                                object.target = message.target;
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                object.verb = message.verb;
                            if (message.statusMessage != null && message.hasOwnProperty("statusMessage"))
                                object.statusMessage = message.statusMessage;
                            if (message.requestedCancellation != null && message.hasOwnProperty("requestedCancellation"))
                                object.requestedCancellation = message.requestedCancellation;
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                object.apiVersion = message.apiVersion;
                            if (message.validationResult != null && message.hasOwnProperty("validationResult"))
                                object.validationResult = $root.google.cloud.datastream.v1alpha1.ValidationResult.toObject(message.validationResult, options);
                            return object;
                        };
    
                        /**
                         * Converts this OperationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.OperationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OperationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OperationMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.OperationMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OperationMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.OperationMetadata";
                        };
    
                        return OperationMetadata;
                    })();
    
                    v1alpha1.CreatePrivateConnectionRequest = (function() {
    
                        /**
                         * Properties of a CreatePrivateConnectionRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface ICreatePrivateConnectionRequest
                         * @property {string|null} [parent] CreatePrivateConnectionRequest parent
                         * @property {string|null} [privateConnectionId] CreatePrivateConnectionRequest privateConnectionId
                         * @property {google.cloud.datastream.v1alpha1.IPrivateConnection|null} [privateConnection] CreatePrivateConnectionRequest privateConnection
                         * @property {string|null} [requestId] CreatePrivateConnectionRequest requestId
                         */
    
                        /**
                         * Constructs a new CreatePrivateConnectionRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a CreatePrivateConnectionRequest.
                         * @implements ICreatePrivateConnectionRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.ICreatePrivateConnectionRequest=} [properties] Properties to set
                         */
                        function CreatePrivateConnectionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreatePrivateConnectionRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.datastream.v1alpha1.CreatePrivateConnectionRequest
                         * @instance
                         */
                        CreatePrivateConnectionRequest.prototype.parent = "";
    
                        /**
                         * CreatePrivateConnectionRequest privateConnectionId.
                         * @member {string} privateConnectionId
                         * @memberof google.cloud.datastream.v1alpha1.CreatePrivateConnectionRequest
                         * @instance
                         */
                        CreatePrivateConnectionRequest.prototype.privateConnectionId = "";
    
                        /**
                         * CreatePrivateConnectionRequest privateConnection.
                         * @member {google.cloud.datastream.v1alpha1.IPrivateConnection|null|undefined} privateConnection
                         * @memberof google.cloud.datastream.v1alpha1.CreatePrivateConnectionRequest
                         * @instance
                         */
                        CreatePrivateConnectionRequest.prototype.privateConnection = null;
    
                        /**
                         * CreatePrivateConnectionRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.datastream.v1alpha1.CreatePrivateConnectionRequest
                         * @instance
                         */
                        CreatePrivateConnectionRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new CreatePrivateConnectionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.CreatePrivateConnectionRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.ICreatePrivateConnectionRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.CreatePrivateConnectionRequest} CreatePrivateConnectionRequest instance
                         */
                        CreatePrivateConnectionRequest.create = function create(properties) {
                            return new CreatePrivateConnectionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreatePrivateConnectionRequest message. Does not implicitly {@link google.cloud.datastream.v1alpha1.CreatePrivateConnectionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.CreatePrivateConnectionRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.ICreatePrivateConnectionRequest} message CreatePrivateConnectionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreatePrivateConnectionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.privateConnectionId != null && Object.hasOwnProperty.call(message, "privateConnectionId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.privateConnectionId);
                            if (message.privateConnection != null && Object.hasOwnProperty.call(message, "privateConnection"))
                                $root.google.cloud.datastream.v1alpha1.PrivateConnection.encode(message.privateConnection, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreatePrivateConnectionRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.CreatePrivateConnectionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.CreatePrivateConnectionRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.ICreatePrivateConnectionRequest} message CreatePrivateConnectionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreatePrivateConnectionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreatePrivateConnectionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.CreatePrivateConnectionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.CreatePrivateConnectionRequest} CreatePrivateConnectionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreatePrivateConnectionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.CreatePrivateConnectionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.privateConnectionId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.privateConnection = $root.google.cloud.datastream.v1alpha1.PrivateConnection.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreatePrivateConnectionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.CreatePrivateConnectionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.CreatePrivateConnectionRequest} CreatePrivateConnectionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreatePrivateConnectionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreatePrivateConnectionRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.CreatePrivateConnectionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreatePrivateConnectionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.privateConnectionId != null && message.hasOwnProperty("privateConnectionId"))
                                if (!$util.isString(message.privateConnectionId))
                                    return "privateConnectionId: string expected";
                            if (message.privateConnection != null && message.hasOwnProperty("privateConnection")) {
                                var error = $root.google.cloud.datastream.v1alpha1.PrivateConnection.verify(message.privateConnection);
                                if (error)
                                    return "privateConnection." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreatePrivateConnectionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.CreatePrivateConnectionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.CreatePrivateConnectionRequest} CreatePrivateConnectionRequest
                         */
                        CreatePrivateConnectionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.CreatePrivateConnectionRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.CreatePrivateConnectionRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.privateConnectionId != null)
                                message.privateConnectionId = String(object.privateConnectionId);
                            if (object.privateConnection != null) {
                                if (typeof object.privateConnection !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.CreatePrivateConnectionRequest.privateConnection: object expected");
                                message.privateConnection = $root.google.cloud.datastream.v1alpha1.PrivateConnection.fromObject(object.privateConnection);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreatePrivateConnectionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.CreatePrivateConnectionRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.CreatePrivateConnectionRequest} message CreatePrivateConnectionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreatePrivateConnectionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.privateConnectionId = "";
                                object.privateConnection = null;
                                object.requestId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.privateConnectionId != null && message.hasOwnProperty("privateConnectionId"))
                                object.privateConnectionId = message.privateConnectionId;
                            if (message.privateConnection != null && message.hasOwnProperty("privateConnection"))
                                object.privateConnection = $root.google.cloud.datastream.v1alpha1.PrivateConnection.toObject(message.privateConnection, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this CreatePrivateConnectionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.CreatePrivateConnectionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreatePrivateConnectionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreatePrivateConnectionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.CreatePrivateConnectionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreatePrivateConnectionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.CreatePrivateConnectionRequest";
                        };
    
                        return CreatePrivateConnectionRequest;
                    })();
    
                    v1alpha1.ListPrivateConnectionsRequest = (function() {
    
                        /**
                         * Properties of a ListPrivateConnectionsRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IListPrivateConnectionsRequest
                         * @property {string|null} [parent] ListPrivateConnectionsRequest parent
                         * @property {number|null} [pageSize] ListPrivateConnectionsRequest pageSize
                         * @property {string|null} [pageToken] ListPrivateConnectionsRequest pageToken
                         * @property {string|null} [filter] ListPrivateConnectionsRequest filter
                         * @property {string|null} [orderBy] ListPrivateConnectionsRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListPrivateConnectionsRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a ListPrivateConnectionsRequest.
                         * @implements IListPrivateConnectionsRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IListPrivateConnectionsRequest=} [properties] Properties to set
                         */
                        function ListPrivateConnectionsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListPrivateConnectionsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.datastream.v1alpha1.ListPrivateConnectionsRequest
                         * @instance
                         */
                        ListPrivateConnectionsRequest.prototype.parent = "";
    
                        /**
                         * ListPrivateConnectionsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.datastream.v1alpha1.ListPrivateConnectionsRequest
                         * @instance
                         */
                        ListPrivateConnectionsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListPrivateConnectionsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.datastream.v1alpha1.ListPrivateConnectionsRequest
                         * @instance
                         */
                        ListPrivateConnectionsRequest.prototype.pageToken = "";
    
                        /**
                         * ListPrivateConnectionsRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.datastream.v1alpha1.ListPrivateConnectionsRequest
                         * @instance
                         */
                        ListPrivateConnectionsRequest.prototype.filter = "";
    
                        /**
                         * ListPrivateConnectionsRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.datastream.v1alpha1.ListPrivateConnectionsRequest
                         * @instance
                         */
                        ListPrivateConnectionsRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListPrivateConnectionsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.ListPrivateConnectionsRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IListPrivateConnectionsRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.ListPrivateConnectionsRequest} ListPrivateConnectionsRequest instance
                         */
                        ListPrivateConnectionsRequest.create = function create(properties) {
                            return new ListPrivateConnectionsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListPrivateConnectionsRequest message. Does not implicitly {@link google.cloud.datastream.v1alpha1.ListPrivateConnectionsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.ListPrivateConnectionsRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IListPrivateConnectionsRequest} message ListPrivateConnectionsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPrivateConnectionsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListPrivateConnectionsRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.ListPrivateConnectionsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.ListPrivateConnectionsRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IListPrivateConnectionsRequest} message ListPrivateConnectionsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPrivateConnectionsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListPrivateConnectionsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.ListPrivateConnectionsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.ListPrivateConnectionsRequest} ListPrivateConnectionsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPrivateConnectionsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.ListPrivateConnectionsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListPrivateConnectionsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.ListPrivateConnectionsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.ListPrivateConnectionsRequest} ListPrivateConnectionsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPrivateConnectionsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListPrivateConnectionsRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.ListPrivateConnectionsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListPrivateConnectionsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListPrivateConnectionsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.ListPrivateConnectionsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.ListPrivateConnectionsRequest} ListPrivateConnectionsRequest
                         */
                        ListPrivateConnectionsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.ListPrivateConnectionsRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.ListPrivateConnectionsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListPrivateConnectionsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.ListPrivateConnectionsRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.ListPrivateConnectionsRequest} message ListPrivateConnectionsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListPrivateConnectionsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListPrivateConnectionsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.ListPrivateConnectionsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListPrivateConnectionsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListPrivateConnectionsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.ListPrivateConnectionsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListPrivateConnectionsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.ListPrivateConnectionsRequest";
                        };
    
                        return ListPrivateConnectionsRequest;
                    })();
    
                    v1alpha1.ListPrivateConnectionsResponse = (function() {
    
                        /**
                         * Properties of a ListPrivateConnectionsResponse.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IListPrivateConnectionsResponse
                         * @property {Array.<google.cloud.datastream.v1alpha1.IPrivateConnection>|null} [privateConnections] ListPrivateConnectionsResponse privateConnections
                         * @property {string|null} [nextPageToken] ListPrivateConnectionsResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListPrivateConnectionsResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListPrivateConnectionsResponse.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a ListPrivateConnectionsResponse.
                         * @implements IListPrivateConnectionsResponse
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IListPrivateConnectionsResponse=} [properties] Properties to set
                         */
                        function ListPrivateConnectionsResponse(properties) {
                            this.privateConnections = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListPrivateConnectionsResponse privateConnections.
                         * @member {Array.<google.cloud.datastream.v1alpha1.IPrivateConnection>} privateConnections
                         * @memberof google.cloud.datastream.v1alpha1.ListPrivateConnectionsResponse
                         * @instance
                         */
                        ListPrivateConnectionsResponse.prototype.privateConnections = $util.emptyArray;
    
                        /**
                         * ListPrivateConnectionsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.datastream.v1alpha1.ListPrivateConnectionsResponse
                         * @instance
                         */
                        ListPrivateConnectionsResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListPrivateConnectionsResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.datastream.v1alpha1.ListPrivateConnectionsResponse
                         * @instance
                         */
                        ListPrivateConnectionsResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListPrivateConnectionsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.ListPrivateConnectionsResponse
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IListPrivateConnectionsResponse=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.ListPrivateConnectionsResponse} ListPrivateConnectionsResponse instance
                         */
                        ListPrivateConnectionsResponse.create = function create(properties) {
                            return new ListPrivateConnectionsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListPrivateConnectionsResponse message. Does not implicitly {@link google.cloud.datastream.v1alpha1.ListPrivateConnectionsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.ListPrivateConnectionsResponse
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IListPrivateConnectionsResponse} message ListPrivateConnectionsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPrivateConnectionsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.privateConnections != null && message.privateConnections.length)
                                for (var i = 0; i < message.privateConnections.length; ++i)
                                    $root.google.cloud.datastream.v1alpha1.PrivateConnection.encode(message.privateConnections[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListPrivateConnectionsResponse message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.ListPrivateConnectionsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.ListPrivateConnectionsResponse
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IListPrivateConnectionsResponse} message ListPrivateConnectionsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPrivateConnectionsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListPrivateConnectionsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.ListPrivateConnectionsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.ListPrivateConnectionsResponse} ListPrivateConnectionsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPrivateConnectionsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.ListPrivateConnectionsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.privateConnections && message.privateConnections.length))
                                            message.privateConnections = [];
                                        message.privateConnections.push($root.google.cloud.datastream.v1alpha1.PrivateConnection.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListPrivateConnectionsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.ListPrivateConnectionsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.ListPrivateConnectionsResponse} ListPrivateConnectionsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPrivateConnectionsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListPrivateConnectionsResponse message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.ListPrivateConnectionsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListPrivateConnectionsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.privateConnections != null && message.hasOwnProperty("privateConnections")) {
                                if (!Array.isArray(message.privateConnections))
                                    return "privateConnections: array expected";
                                for (var i = 0; i < message.privateConnections.length; ++i) {
                                    var error = $root.google.cloud.datastream.v1alpha1.PrivateConnection.verify(message.privateConnections[i]);
                                    if (error)
                                        return "privateConnections." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListPrivateConnectionsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.ListPrivateConnectionsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.ListPrivateConnectionsResponse} ListPrivateConnectionsResponse
                         */
                        ListPrivateConnectionsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.ListPrivateConnectionsResponse)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.ListPrivateConnectionsResponse();
                            if (object.privateConnections) {
                                if (!Array.isArray(object.privateConnections))
                                    throw TypeError(".google.cloud.datastream.v1alpha1.ListPrivateConnectionsResponse.privateConnections: array expected");
                                message.privateConnections = [];
                                for (var i = 0; i < object.privateConnections.length; ++i) {
                                    if (typeof object.privateConnections[i] !== "object")
                                        throw TypeError(".google.cloud.datastream.v1alpha1.ListPrivateConnectionsResponse.privateConnections: object expected");
                                    message.privateConnections[i] = $root.google.cloud.datastream.v1alpha1.PrivateConnection.fromObject(object.privateConnections[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.datastream.v1alpha1.ListPrivateConnectionsResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListPrivateConnectionsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.ListPrivateConnectionsResponse
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.ListPrivateConnectionsResponse} message ListPrivateConnectionsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListPrivateConnectionsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.privateConnections = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.privateConnections && message.privateConnections.length) {
                                object.privateConnections = [];
                                for (var j = 0; j < message.privateConnections.length; ++j)
                                    object.privateConnections[j] = $root.google.cloud.datastream.v1alpha1.PrivateConnection.toObject(message.privateConnections[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListPrivateConnectionsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.ListPrivateConnectionsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListPrivateConnectionsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListPrivateConnectionsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.ListPrivateConnectionsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListPrivateConnectionsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.ListPrivateConnectionsResponse";
                        };
    
                        return ListPrivateConnectionsResponse;
                    })();
    
                    v1alpha1.DeletePrivateConnectionRequest = (function() {
    
                        /**
                         * Properties of a DeletePrivateConnectionRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IDeletePrivateConnectionRequest
                         * @property {string|null} [name] DeletePrivateConnectionRequest name
                         * @property {string|null} [requestId] DeletePrivateConnectionRequest requestId
                         * @property {boolean|null} [force] DeletePrivateConnectionRequest force
                         */
    
                        /**
                         * Constructs a new DeletePrivateConnectionRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a DeletePrivateConnectionRequest.
                         * @implements IDeletePrivateConnectionRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IDeletePrivateConnectionRequest=} [properties] Properties to set
                         */
                        function DeletePrivateConnectionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeletePrivateConnectionRequest name.
                         * @member {string} name
                         * @memberof google.cloud.datastream.v1alpha1.DeletePrivateConnectionRequest
                         * @instance
                         */
                        DeletePrivateConnectionRequest.prototype.name = "";
    
                        /**
                         * DeletePrivateConnectionRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.datastream.v1alpha1.DeletePrivateConnectionRequest
                         * @instance
                         */
                        DeletePrivateConnectionRequest.prototype.requestId = "";
    
                        /**
                         * DeletePrivateConnectionRequest force.
                         * @member {boolean} force
                         * @memberof google.cloud.datastream.v1alpha1.DeletePrivateConnectionRequest
                         * @instance
                         */
                        DeletePrivateConnectionRequest.prototype.force = false;
    
                        /**
                         * Creates a new DeletePrivateConnectionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.DeletePrivateConnectionRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IDeletePrivateConnectionRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.DeletePrivateConnectionRequest} DeletePrivateConnectionRequest instance
                         */
                        DeletePrivateConnectionRequest.create = function create(properties) {
                            return new DeletePrivateConnectionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeletePrivateConnectionRequest message. Does not implicitly {@link google.cloud.datastream.v1alpha1.DeletePrivateConnectionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.DeletePrivateConnectionRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IDeletePrivateConnectionRequest} message DeletePrivateConnectionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeletePrivateConnectionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                            if (message.force != null && Object.hasOwnProperty.call(message, "force"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.force);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeletePrivateConnectionRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.DeletePrivateConnectionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.DeletePrivateConnectionRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IDeletePrivateConnectionRequest} message DeletePrivateConnectionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeletePrivateConnectionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeletePrivateConnectionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.DeletePrivateConnectionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.DeletePrivateConnectionRequest} DeletePrivateConnectionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeletePrivateConnectionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.DeletePrivateConnectionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.force = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeletePrivateConnectionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.DeletePrivateConnectionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.DeletePrivateConnectionRequest} DeletePrivateConnectionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeletePrivateConnectionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeletePrivateConnectionRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.DeletePrivateConnectionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeletePrivateConnectionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            if (message.force != null && message.hasOwnProperty("force"))
                                if (typeof message.force !== "boolean")
                                    return "force: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeletePrivateConnectionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.DeletePrivateConnectionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.DeletePrivateConnectionRequest} DeletePrivateConnectionRequest
                         */
                        DeletePrivateConnectionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.DeletePrivateConnectionRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.DeletePrivateConnectionRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            if (object.force != null)
                                message.force = Boolean(object.force);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeletePrivateConnectionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.DeletePrivateConnectionRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.DeletePrivateConnectionRequest} message DeletePrivateConnectionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeletePrivateConnectionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                                object.force = false;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            if (message.force != null && message.hasOwnProperty("force"))
                                object.force = message.force;
                            return object;
                        };
    
                        /**
                         * Converts this DeletePrivateConnectionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.DeletePrivateConnectionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeletePrivateConnectionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeletePrivateConnectionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.DeletePrivateConnectionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeletePrivateConnectionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.DeletePrivateConnectionRequest";
                        };
    
                        return DeletePrivateConnectionRequest;
                    })();
    
                    v1alpha1.GetPrivateConnectionRequest = (function() {
    
                        /**
                         * Properties of a GetPrivateConnectionRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IGetPrivateConnectionRequest
                         * @property {string|null} [name] GetPrivateConnectionRequest name
                         */
    
                        /**
                         * Constructs a new GetPrivateConnectionRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a GetPrivateConnectionRequest.
                         * @implements IGetPrivateConnectionRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IGetPrivateConnectionRequest=} [properties] Properties to set
                         */
                        function GetPrivateConnectionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetPrivateConnectionRequest name.
                         * @member {string} name
                         * @memberof google.cloud.datastream.v1alpha1.GetPrivateConnectionRequest
                         * @instance
                         */
                        GetPrivateConnectionRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetPrivateConnectionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.GetPrivateConnectionRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IGetPrivateConnectionRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.GetPrivateConnectionRequest} GetPrivateConnectionRequest instance
                         */
                        GetPrivateConnectionRequest.create = function create(properties) {
                            return new GetPrivateConnectionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetPrivateConnectionRequest message. Does not implicitly {@link google.cloud.datastream.v1alpha1.GetPrivateConnectionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.GetPrivateConnectionRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IGetPrivateConnectionRequest} message GetPrivateConnectionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetPrivateConnectionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetPrivateConnectionRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.GetPrivateConnectionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.GetPrivateConnectionRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IGetPrivateConnectionRequest} message GetPrivateConnectionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetPrivateConnectionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetPrivateConnectionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.GetPrivateConnectionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.GetPrivateConnectionRequest} GetPrivateConnectionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetPrivateConnectionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.GetPrivateConnectionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetPrivateConnectionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.GetPrivateConnectionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.GetPrivateConnectionRequest} GetPrivateConnectionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetPrivateConnectionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetPrivateConnectionRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.GetPrivateConnectionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetPrivateConnectionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetPrivateConnectionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.GetPrivateConnectionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.GetPrivateConnectionRequest} GetPrivateConnectionRequest
                         */
                        GetPrivateConnectionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.GetPrivateConnectionRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.GetPrivateConnectionRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetPrivateConnectionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.GetPrivateConnectionRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.GetPrivateConnectionRequest} message GetPrivateConnectionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetPrivateConnectionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetPrivateConnectionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.GetPrivateConnectionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetPrivateConnectionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetPrivateConnectionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.GetPrivateConnectionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetPrivateConnectionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.GetPrivateConnectionRequest";
                        };
    
                        return GetPrivateConnectionRequest;
                    })();
    
                    v1alpha1.CreateRouteRequest = (function() {
    
                        /**
                         * Properties of a CreateRouteRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface ICreateRouteRequest
                         * @property {string|null} [parent] CreateRouteRequest parent
                         * @property {string|null} [routeId] CreateRouteRequest routeId
                         * @property {google.cloud.datastream.v1alpha1.IRoute|null} [route] CreateRouteRequest route
                         * @property {string|null} [requestId] CreateRouteRequest requestId
                         */
    
                        /**
                         * Constructs a new CreateRouteRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a CreateRouteRequest.
                         * @implements ICreateRouteRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.ICreateRouteRequest=} [properties] Properties to set
                         */
                        function CreateRouteRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateRouteRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.datastream.v1alpha1.CreateRouteRequest
                         * @instance
                         */
                        CreateRouteRequest.prototype.parent = "";
    
                        /**
                         * CreateRouteRequest routeId.
                         * @member {string} routeId
                         * @memberof google.cloud.datastream.v1alpha1.CreateRouteRequest
                         * @instance
                         */
                        CreateRouteRequest.prototype.routeId = "";
    
                        /**
                         * CreateRouteRequest route.
                         * @member {google.cloud.datastream.v1alpha1.IRoute|null|undefined} route
                         * @memberof google.cloud.datastream.v1alpha1.CreateRouteRequest
                         * @instance
                         */
                        CreateRouteRequest.prototype.route = null;
    
                        /**
                         * CreateRouteRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.datastream.v1alpha1.CreateRouteRequest
                         * @instance
                         */
                        CreateRouteRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new CreateRouteRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.CreateRouteRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.ICreateRouteRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.CreateRouteRequest} CreateRouteRequest instance
                         */
                        CreateRouteRequest.create = function create(properties) {
                            return new CreateRouteRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateRouteRequest message. Does not implicitly {@link google.cloud.datastream.v1alpha1.CreateRouteRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.CreateRouteRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.ICreateRouteRequest} message CreateRouteRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateRouteRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.routeId != null && Object.hasOwnProperty.call(message, "routeId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.routeId);
                            if (message.route != null && Object.hasOwnProperty.call(message, "route"))
                                $root.google.cloud.datastream.v1alpha1.Route.encode(message.route, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateRouteRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.CreateRouteRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.CreateRouteRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.ICreateRouteRequest} message CreateRouteRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateRouteRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateRouteRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.CreateRouteRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.CreateRouteRequest} CreateRouteRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateRouteRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.CreateRouteRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.routeId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.route = $root.google.cloud.datastream.v1alpha1.Route.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateRouteRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.CreateRouteRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.CreateRouteRequest} CreateRouteRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateRouteRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateRouteRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.CreateRouteRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateRouteRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.routeId != null && message.hasOwnProperty("routeId"))
                                if (!$util.isString(message.routeId))
                                    return "routeId: string expected";
                            if (message.route != null && message.hasOwnProperty("route")) {
                                var error = $root.google.cloud.datastream.v1alpha1.Route.verify(message.route);
                                if (error)
                                    return "route." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateRouteRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.CreateRouteRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.CreateRouteRequest} CreateRouteRequest
                         */
                        CreateRouteRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.CreateRouteRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.CreateRouteRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.routeId != null)
                                message.routeId = String(object.routeId);
                            if (object.route != null) {
                                if (typeof object.route !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.CreateRouteRequest.route: object expected");
                                message.route = $root.google.cloud.datastream.v1alpha1.Route.fromObject(object.route);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateRouteRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.CreateRouteRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.CreateRouteRequest} message CreateRouteRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateRouteRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.routeId = "";
                                object.route = null;
                                object.requestId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.routeId != null && message.hasOwnProperty("routeId"))
                                object.routeId = message.routeId;
                            if (message.route != null && message.hasOwnProperty("route"))
                                object.route = $root.google.cloud.datastream.v1alpha1.Route.toObject(message.route, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this CreateRouteRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.CreateRouteRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateRouteRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateRouteRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.CreateRouteRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateRouteRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.CreateRouteRequest";
                        };
    
                        return CreateRouteRequest;
                    })();
    
                    v1alpha1.ListRoutesRequest = (function() {
    
                        /**
                         * Properties of a ListRoutesRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IListRoutesRequest
                         * @property {string|null} [parent] ListRoutesRequest parent
                         * @property {number|null} [pageSize] ListRoutesRequest pageSize
                         * @property {string|null} [pageToken] ListRoutesRequest pageToken
                         * @property {string|null} [filter] ListRoutesRequest filter
                         * @property {string|null} [orderBy] ListRoutesRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListRoutesRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a ListRoutesRequest.
                         * @implements IListRoutesRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IListRoutesRequest=} [properties] Properties to set
                         */
                        function ListRoutesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListRoutesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.datastream.v1alpha1.ListRoutesRequest
                         * @instance
                         */
                        ListRoutesRequest.prototype.parent = "";
    
                        /**
                         * ListRoutesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.datastream.v1alpha1.ListRoutesRequest
                         * @instance
                         */
                        ListRoutesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListRoutesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.datastream.v1alpha1.ListRoutesRequest
                         * @instance
                         */
                        ListRoutesRequest.prototype.pageToken = "";
    
                        /**
                         * ListRoutesRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.datastream.v1alpha1.ListRoutesRequest
                         * @instance
                         */
                        ListRoutesRequest.prototype.filter = "";
    
                        /**
                         * ListRoutesRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.datastream.v1alpha1.ListRoutesRequest
                         * @instance
                         */
                        ListRoutesRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListRoutesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.ListRoutesRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IListRoutesRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.ListRoutesRequest} ListRoutesRequest instance
                         */
                        ListRoutesRequest.create = function create(properties) {
                            return new ListRoutesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListRoutesRequest message. Does not implicitly {@link google.cloud.datastream.v1alpha1.ListRoutesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.ListRoutesRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IListRoutesRequest} message ListRoutesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRoutesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListRoutesRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.ListRoutesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.ListRoutesRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IListRoutesRequest} message ListRoutesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRoutesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListRoutesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.ListRoutesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.ListRoutesRequest} ListRoutesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRoutesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.ListRoutesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListRoutesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.ListRoutesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.ListRoutesRequest} ListRoutesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRoutesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListRoutesRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.ListRoutesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListRoutesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListRoutesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.ListRoutesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.ListRoutesRequest} ListRoutesRequest
                         */
                        ListRoutesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.ListRoutesRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.ListRoutesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListRoutesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.ListRoutesRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.ListRoutesRequest} message ListRoutesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListRoutesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListRoutesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.ListRoutesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListRoutesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListRoutesRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.ListRoutesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListRoutesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.ListRoutesRequest";
                        };
    
                        return ListRoutesRequest;
                    })();
    
                    v1alpha1.ListRoutesResponse = (function() {
    
                        /**
                         * Properties of a ListRoutesResponse.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IListRoutesResponse
                         * @property {Array.<google.cloud.datastream.v1alpha1.IRoute>|null} [routes] ListRoutesResponse routes
                         * @property {string|null} [nextPageToken] ListRoutesResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListRoutesResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListRoutesResponse.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a ListRoutesResponse.
                         * @implements IListRoutesResponse
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IListRoutesResponse=} [properties] Properties to set
                         */
                        function ListRoutesResponse(properties) {
                            this.routes = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListRoutesResponse routes.
                         * @member {Array.<google.cloud.datastream.v1alpha1.IRoute>} routes
                         * @memberof google.cloud.datastream.v1alpha1.ListRoutesResponse
                         * @instance
                         */
                        ListRoutesResponse.prototype.routes = $util.emptyArray;
    
                        /**
                         * ListRoutesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.datastream.v1alpha1.ListRoutesResponse
                         * @instance
                         */
                        ListRoutesResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListRoutesResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.datastream.v1alpha1.ListRoutesResponse
                         * @instance
                         */
                        ListRoutesResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListRoutesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.ListRoutesResponse
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IListRoutesResponse=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.ListRoutesResponse} ListRoutesResponse instance
                         */
                        ListRoutesResponse.create = function create(properties) {
                            return new ListRoutesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListRoutesResponse message. Does not implicitly {@link google.cloud.datastream.v1alpha1.ListRoutesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.ListRoutesResponse
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IListRoutesResponse} message ListRoutesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRoutesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.routes != null && message.routes.length)
                                for (var i = 0; i < message.routes.length; ++i)
                                    $root.google.cloud.datastream.v1alpha1.Route.encode(message.routes[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListRoutesResponse message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.ListRoutesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.ListRoutesResponse
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IListRoutesResponse} message ListRoutesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRoutesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListRoutesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.ListRoutesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.ListRoutesResponse} ListRoutesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRoutesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.ListRoutesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.routes && message.routes.length))
                                            message.routes = [];
                                        message.routes.push($root.google.cloud.datastream.v1alpha1.Route.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListRoutesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.ListRoutesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.ListRoutesResponse} ListRoutesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRoutesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListRoutesResponse message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.ListRoutesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListRoutesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.routes != null && message.hasOwnProperty("routes")) {
                                if (!Array.isArray(message.routes))
                                    return "routes: array expected";
                                for (var i = 0; i < message.routes.length; ++i) {
                                    var error = $root.google.cloud.datastream.v1alpha1.Route.verify(message.routes[i]);
                                    if (error)
                                        return "routes." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListRoutesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.ListRoutesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.ListRoutesResponse} ListRoutesResponse
                         */
                        ListRoutesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.ListRoutesResponse)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.ListRoutesResponse();
                            if (object.routes) {
                                if (!Array.isArray(object.routes))
                                    throw TypeError(".google.cloud.datastream.v1alpha1.ListRoutesResponse.routes: array expected");
                                message.routes = [];
                                for (var i = 0; i < object.routes.length; ++i) {
                                    if (typeof object.routes[i] !== "object")
                                        throw TypeError(".google.cloud.datastream.v1alpha1.ListRoutesResponse.routes: object expected");
                                    message.routes[i] = $root.google.cloud.datastream.v1alpha1.Route.fromObject(object.routes[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.datastream.v1alpha1.ListRoutesResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListRoutesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.ListRoutesResponse
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.ListRoutesResponse} message ListRoutesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListRoutesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.routes = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.routes && message.routes.length) {
                                object.routes = [];
                                for (var j = 0; j < message.routes.length; ++j)
                                    object.routes[j] = $root.google.cloud.datastream.v1alpha1.Route.toObject(message.routes[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListRoutesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.ListRoutesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListRoutesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListRoutesResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.ListRoutesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListRoutesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.ListRoutesResponse";
                        };
    
                        return ListRoutesResponse;
                    })();
    
                    v1alpha1.DeleteRouteRequest = (function() {
    
                        /**
                         * Properties of a DeleteRouteRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IDeleteRouteRequest
                         * @property {string|null} [name] DeleteRouteRequest name
                         * @property {string|null} [requestId] DeleteRouteRequest requestId
                         */
    
                        /**
                         * Constructs a new DeleteRouteRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a DeleteRouteRequest.
                         * @implements IDeleteRouteRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IDeleteRouteRequest=} [properties] Properties to set
                         */
                        function DeleteRouteRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteRouteRequest name.
                         * @member {string} name
                         * @memberof google.cloud.datastream.v1alpha1.DeleteRouteRequest
                         * @instance
                         */
                        DeleteRouteRequest.prototype.name = "";
    
                        /**
                         * DeleteRouteRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.datastream.v1alpha1.DeleteRouteRequest
                         * @instance
                         */
                        DeleteRouteRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new DeleteRouteRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.DeleteRouteRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IDeleteRouteRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.DeleteRouteRequest} DeleteRouteRequest instance
                         */
                        DeleteRouteRequest.create = function create(properties) {
                            return new DeleteRouteRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteRouteRequest message. Does not implicitly {@link google.cloud.datastream.v1alpha1.DeleteRouteRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.DeleteRouteRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IDeleteRouteRequest} message DeleteRouteRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteRouteRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteRouteRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.DeleteRouteRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.DeleteRouteRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IDeleteRouteRequest} message DeleteRouteRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteRouteRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteRouteRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.DeleteRouteRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.DeleteRouteRequest} DeleteRouteRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteRouteRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.DeleteRouteRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteRouteRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.DeleteRouteRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.DeleteRouteRequest} DeleteRouteRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteRouteRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteRouteRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.DeleteRouteRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteRouteRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteRouteRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.DeleteRouteRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.DeleteRouteRequest} DeleteRouteRequest
                         */
                        DeleteRouteRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.DeleteRouteRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.DeleteRouteRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteRouteRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.DeleteRouteRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.DeleteRouteRequest} message DeleteRouteRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteRouteRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteRouteRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.DeleteRouteRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteRouteRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteRouteRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.DeleteRouteRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteRouteRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.DeleteRouteRequest";
                        };
    
                        return DeleteRouteRequest;
                    })();
    
                    v1alpha1.GetRouteRequest = (function() {
    
                        /**
                         * Properties of a GetRouteRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IGetRouteRequest
                         * @property {string|null} [name] GetRouteRequest name
                         */
    
                        /**
                         * Constructs a new GetRouteRequest.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a GetRouteRequest.
                         * @implements IGetRouteRequest
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IGetRouteRequest=} [properties] Properties to set
                         */
                        function GetRouteRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetRouteRequest name.
                         * @member {string} name
                         * @memberof google.cloud.datastream.v1alpha1.GetRouteRequest
                         * @instance
                         */
                        GetRouteRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetRouteRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.GetRouteRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IGetRouteRequest=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.GetRouteRequest} GetRouteRequest instance
                         */
                        GetRouteRequest.create = function create(properties) {
                            return new GetRouteRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetRouteRequest message. Does not implicitly {@link google.cloud.datastream.v1alpha1.GetRouteRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.GetRouteRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IGetRouteRequest} message GetRouteRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetRouteRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetRouteRequest message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.GetRouteRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.GetRouteRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IGetRouteRequest} message GetRouteRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetRouteRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetRouteRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.GetRouteRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.GetRouteRequest} GetRouteRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetRouteRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.GetRouteRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetRouteRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.GetRouteRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.GetRouteRequest} GetRouteRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetRouteRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetRouteRequest message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.GetRouteRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetRouteRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetRouteRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.GetRouteRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.GetRouteRequest} GetRouteRequest
                         */
                        GetRouteRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.GetRouteRequest)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.GetRouteRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetRouteRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.GetRouteRequest
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.GetRouteRequest} message GetRouteRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetRouteRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetRouteRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.GetRouteRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetRouteRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetRouteRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.GetRouteRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetRouteRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.GetRouteRequest";
                        };
    
                        return GetRouteRequest;
                    })();
    
                    v1alpha1.OracleProfile = (function() {
    
                        /**
                         * Properties of an OracleProfile.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IOracleProfile
                         * @property {string|null} [hostname] OracleProfile hostname
                         * @property {number|null} [port] OracleProfile port
                         * @property {string|null} [username] OracleProfile username
                         * @property {string|null} [password] OracleProfile password
                         * @property {string|null} [databaseService] OracleProfile databaseService
                         * @property {Object.<string,string>|null} [connectionAttributes] OracleProfile connectionAttributes
                         */
    
                        /**
                         * Constructs a new OracleProfile.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents an OracleProfile.
                         * @implements IOracleProfile
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IOracleProfile=} [properties] Properties to set
                         */
                        function OracleProfile(properties) {
                            this.connectionAttributes = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OracleProfile hostname.
                         * @member {string} hostname
                         * @memberof google.cloud.datastream.v1alpha1.OracleProfile
                         * @instance
                         */
                        OracleProfile.prototype.hostname = "";
    
                        /**
                         * OracleProfile port.
                         * @member {number} port
                         * @memberof google.cloud.datastream.v1alpha1.OracleProfile
                         * @instance
                         */
                        OracleProfile.prototype.port = 0;
    
                        /**
                         * OracleProfile username.
                         * @member {string} username
                         * @memberof google.cloud.datastream.v1alpha1.OracleProfile
                         * @instance
                         */
                        OracleProfile.prototype.username = "";
    
                        /**
                         * OracleProfile password.
                         * @member {string} password
                         * @memberof google.cloud.datastream.v1alpha1.OracleProfile
                         * @instance
                         */
                        OracleProfile.prototype.password = "";
    
                        /**
                         * OracleProfile databaseService.
                         * @member {string} databaseService
                         * @memberof google.cloud.datastream.v1alpha1.OracleProfile
                         * @instance
                         */
                        OracleProfile.prototype.databaseService = "";
    
                        /**
                         * OracleProfile connectionAttributes.
                         * @member {Object.<string,string>} connectionAttributes
                         * @memberof google.cloud.datastream.v1alpha1.OracleProfile
                         * @instance
                         */
                        OracleProfile.prototype.connectionAttributes = $util.emptyObject;
    
                        /**
                         * Creates a new OracleProfile instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.OracleProfile
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IOracleProfile=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.OracleProfile} OracleProfile instance
                         */
                        OracleProfile.create = function create(properties) {
                            return new OracleProfile(properties);
                        };
    
                        /**
                         * Encodes the specified OracleProfile message. Does not implicitly {@link google.cloud.datastream.v1alpha1.OracleProfile.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.OracleProfile
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IOracleProfile} message OracleProfile message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OracleProfile.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.hostname != null && Object.hasOwnProperty.call(message, "hostname"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.hostname);
                            if (message.port != null && Object.hasOwnProperty.call(message, "port"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.port);
                            if (message.username != null && Object.hasOwnProperty.call(message, "username"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.username);
                            if (message.password != null && Object.hasOwnProperty.call(message, "password"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.password);
                            if (message.databaseService != null && Object.hasOwnProperty.call(message, "databaseService"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.databaseService);
                            if (message.connectionAttributes != null && Object.hasOwnProperty.call(message, "connectionAttributes"))
                                for (var keys = Object.keys(message.connectionAttributes), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 6, wireType 2 =*/50).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.connectionAttributes[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OracleProfile message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.OracleProfile.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.OracleProfile
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IOracleProfile} message OracleProfile message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OracleProfile.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OracleProfile message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.OracleProfile
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.OracleProfile} OracleProfile
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OracleProfile.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.OracleProfile(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.hostname = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.port = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.username = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.password = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.databaseService = reader.string();
                                        break;
                                    }
                                case 6: {
                                        if (message.connectionAttributes === $util.emptyObject)
                                            message.connectionAttributes = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.connectionAttributes[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OracleProfile message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.OracleProfile
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.OracleProfile} OracleProfile
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OracleProfile.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OracleProfile message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.OracleProfile
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OracleProfile.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.hostname != null && message.hasOwnProperty("hostname"))
                                if (!$util.isString(message.hostname))
                                    return "hostname: string expected";
                            if (message.port != null && message.hasOwnProperty("port"))
                                if (!$util.isInteger(message.port))
                                    return "port: integer expected";
                            if (message.username != null && message.hasOwnProperty("username"))
                                if (!$util.isString(message.username))
                                    return "username: string expected";
                            if (message.password != null && message.hasOwnProperty("password"))
                                if (!$util.isString(message.password))
                                    return "password: string expected";
                            if (message.databaseService != null && message.hasOwnProperty("databaseService"))
                                if (!$util.isString(message.databaseService))
                                    return "databaseService: string expected";
                            if (message.connectionAttributes != null && message.hasOwnProperty("connectionAttributes")) {
                                if (!$util.isObject(message.connectionAttributes))
                                    return "connectionAttributes: object expected";
                                var key = Object.keys(message.connectionAttributes);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.connectionAttributes[key[i]]))
                                        return "connectionAttributes: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates an OracleProfile message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.OracleProfile
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.OracleProfile} OracleProfile
                         */
                        OracleProfile.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.OracleProfile)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.OracleProfile();
                            if (object.hostname != null)
                                message.hostname = String(object.hostname);
                            if (object.port != null)
                                message.port = object.port | 0;
                            if (object.username != null)
                                message.username = String(object.username);
                            if (object.password != null)
                                message.password = String(object.password);
                            if (object.databaseService != null)
                                message.databaseService = String(object.databaseService);
                            if (object.connectionAttributes) {
                                if (typeof object.connectionAttributes !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.OracleProfile.connectionAttributes: object expected");
                                message.connectionAttributes = {};
                                for (var keys = Object.keys(object.connectionAttributes), i = 0; i < keys.length; ++i)
                                    message.connectionAttributes[keys[i]] = String(object.connectionAttributes[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OracleProfile message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.OracleProfile
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.OracleProfile} message OracleProfile
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OracleProfile.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.connectionAttributes = {};
                            if (options.defaults) {
                                object.hostname = "";
                                object.port = 0;
                                object.username = "";
                                object.password = "";
                                object.databaseService = "";
                            }
                            if (message.hostname != null && message.hasOwnProperty("hostname"))
                                object.hostname = message.hostname;
                            if (message.port != null && message.hasOwnProperty("port"))
                                object.port = message.port;
                            if (message.username != null && message.hasOwnProperty("username"))
                                object.username = message.username;
                            if (message.password != null && message.hasOwnProperty("password"))
                                object.password = message.password;
                            if (message.databaseService != null && message.hasOwnProperty("databaseService"))
                                object.databaseService = message.databaseService;
                            var keys2;
                            if (message.connectionAttributes && (keys2 = Object.keys(message.connectionAttributes)).length) {
                                object.connectionAttributes = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.connectionAttributes[keys2[j]] = message.connectionAttributes[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this OracleProfile to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.OracleProfile
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OracleProfile.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OracleProfile
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.OracleProfile
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OracleProfile.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.OracleProfile";
                        };
    
                        return OracleProfile;
                    })();
    
                    v1alpha1.MysqlProfile = (function() {
    
                        /**
                         * Properties of a MysqlProfile.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IMysqlProfile
                         * @property {string|null} [hostname] MysqlProfile hostname
                         * @property {number|null} [port] MysqlProfile port
                         * @property {string|null} [username] MysqlProfile username
                         * @property {string|null} [password] MysqlProfile password
                         * @property {google.cloud.datastream.v1alpha1.IMysqlSslConfig|null} [sslConfig] MysqlProfile sslConfig
                         */
    
                        /**
                         * Constructs a new MysqlProfile.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a MysqlProfile.
                         * @implements IMysqlProfile
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IMysqlProfile=} [properties] Properties to set
                         */
                        function MysqlProfile(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MysqlProfile hostname.
                         * @member {string} hostname
                         * @memberof google.cloud.datastream.v1alpha1.MysqlProfile
                         * @instance
                         */
                        MysqlProfile.prototype.hostname = "";
    
                        /**
                         * MysqlProfile port.
                         * @member {number} port
                         * @memberof google.cloud.datastream.v1alpha1.MysqlProfile
                         * @instance
                         */
                        MysqlProfile.prototype.port = 0;
    
                        /**
                         * MysqlProfile username.
                         * @member {string} username
                         * @memberof google.cloud.datastream.v1alpha1.MysqlProfile
                         * @instance
                         */
                        MysqlProfile.prototype.username = "";
    
                        /**
                         * MysqlProfile password.
                         * @member {string} password
                         * @memberof google.cloud.datastream.v1alpha1.MysqlProfile
                         * @instance
                         */
                        MysqlProfile.prototype.password = "";
    
                        /**
                         * MysqlProfile sslConfig.
                         * @member {google.cloud.datastream.v1alpha1.IMysqlSslConfig|null|undefined} sslConfig
                         * @memberof google.cloud.datastream.v1alpha1.MysqlProfile
                         * @instance
                         */
                        MysqlProfile.prototype.sslConfig = null;
    
                        /**
                         * Creates a new MysqlProfile instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.MysqlProfile
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IMysqlProfile=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.MysqlProfile} MysqlProfile instance
                         */
                        MysqlProfile.create = function create(properties) {
                            return new MysqlProfile(properties);
                        };
    
                        /**
                         * Encodes the specified MysqlProfile message. Does not implicitly {@link google.cloud.datastream.v1alpha1.MysqlProfile.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.MysqlProfile
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IMysqlProfile} message MysqlProfile message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MysqlProfile.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.hostname != null && Object.hasOwnProperty.call(message, "hostname"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.hostname);
                            if (message.port != null && Object.hasOwnProperty.call(message, "port"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.port);
                            if (message.username != null && Object.hasOwnProperty.call(message, "username"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.username);
                            if (message.password != null && Object.hasOwnProperty.call(message, "password"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.password);
                            if (message.sslConfig != null && Object.hasOwnProperty.call(message, "sslConfig"))
                                $root.google.cloud.datastream.v1alpha1.MysqlSslConfig.encode(message.sslConfig, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MysqlProfile message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.MysqlProfile.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.MysqlProfile
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IMysqlProfile} message MysqlProfile message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MysqlProfile.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MysqlProfile message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.MysqlProfile
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.MysqlProfile} MysqlProfile
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MysqlProfile.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.MysqlProfile();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.hostname = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.port = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.username = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.password = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.sslConfig = $root.google.cloud.datastream.v1alpha1.MysqlSslConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MysqlProfile message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.MysqlProfile
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.MysqlProfile} MysqlProfile
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MysqlProfile.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MysqlProfile message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.MysqlProfile
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MysqlProfile.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.hostname != null && message.hasOwnProperty("hostname"))
                                if (!$util.isString(message.hostname))
                                    return "hostname: string expected";
                            if (message.port != null && message.hasOwnProperty("port"))
                                if (!$util.isInteger(message.port))
                                    return "port: integer expected";
                            if (message.username != null && message.hasOwnProperty("username"))
                                if (!$util.isString(message.username))
                                    return "username: string expected";
                            if (message.password != null && message.hasOwnProperty("password"))
                                if (!$util.isString(message.password))
                                    return "password: string expected";
                            if (message.sslConfig != null && message.hasOwnProperty("sslConfig")) {
                                var error = $root.google.cloud.datastream.v1alpha1.MysqlSslConfig.verify(message.sslConfig);
                                if (error)
                                    return "sslConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a MysqlProfile message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.MysqlProfile
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.MysqlProfile} MysqlProfile
                         */
                        MysqlProfile.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.MysqlProfile)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.MysqlProfile();
                            if (object.hostname != null)
                                message.hostname = String(object.hostname);
                            if (object.port != null)
                                message.port = object.port | 0;
                            if (object.username != null)
                                message.username = String(object.username);
                            if (object.password != null)
                                message.password = String(object.password);
                            if (object.sslConfig != null) {
                                if (typeof object.sslConfig !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.MysqlProfile.sslConfig: object expected");
                                message.sslConfig = $root.google.cloud.datastream.v1alpha1.MysqlSslConfig.fromObject(object.sslConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MysqlProfile message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.MysqlProfile
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.MysqlProfile} message MysqlProfile
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MysqlProfile.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.hostname = "";
                                object.port = 0;
                                object.username = "";
                                object.password = "";
                                object.sslConfig = null;
                            }
                            if (message.hostname != null && message.hasOwnProperty("hostname"))
                                object.hostname = message.hostname;
                            if (message.port != null && message.hasOwnProperty("port"))
                                object.port = message.port;
                            if (message.username != null && message.hasOwnProperty("username"))
                                object.username = message.username;
                            if (message.password != null && message.hasOwnProperty("password"))
                                object.password = message.password;
                            if (message.sslConfig != null && message.hasOwnProperty("sslConfig"))
                                object.sslConfig = $root.google.cloud.datastream.v1alpha1.MysqlSslConfig.toObject(message.sslConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this MysqlProfile to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.MysqlProfile
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MysqlProfile.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MysqlProfile
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.MysqlProfile
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MysqlProfile.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.MysqlProfile";
                        };
    
                        return MysqlProfile;
                    })();
    
                    v1alpha1.GcsProfile = (function() {
    
                        /**
                         * Properties of a GcsProfile.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IGcsProfile
                         * @property {string|null} [bucketName] GcsProfile bucketName
                         * @property {string|null} [rootPath] GcsProfile rootPath
                         */
    
                        /**
                         * Constructs a new GcsProfile.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a GcsProfile.
                         * @implements IGcsProfile
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IGcsProfile=} [properties] Properties to set
                         */
                        function GcsProfile(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GcsProfile bucketName.
                         * @member {string} bucketName
                         * @memberof google.cloud.datastream.v1alpha1.GcsProfile
                         * @instance
                         */
                        GcsProfile.prototype.bucketName = "";
    
                        /**
                         * GcsProfile rootPath.
                         * @member {string} rootPath
                         * @memberof google.cloud.datastream.v1alpha1.GcsProfile
                         * @instance
                         */
                        GcsProfile.prototype.rootPath = "";
    
                        /**
                         * Creates a new GcsProfile instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.GcsProfile
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IGcsProfile=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.GcsProfile} GcsProfile instance
                         */
                        GcsProfile.create = function create(properties) {
                            return new GcsProfile(properties);
                        };
    
                        /**
                         * Encodes the specified GcsProfile message. Does not implicitly {@link google.cloud.datastream.v1alpha1.GcsProfile.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.GcsProfile
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IGcsProfile} message GcsProfile message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GcsProfile.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.bucketName != null && Object.hasOwnProperty.call(message, "bucketName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.bucketName);
                            if (message.rootPath != null && Object.hasOwnProperty.call(message, "rootPath"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.rootPath);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GcsProfile message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.GcsProfile.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.GcsProfile
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IGcsProfile} message GcsProfile message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GcsProfile.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GcsProfile message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.GcsProfile
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.GcsProfile} GcsProfile
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GcsProfile.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.GcsProfile();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.bucketName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.rootPath = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GcsProfile message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.GcsProfile
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.GcsProfile} GcsProfile
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GcsProfile.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GcsProfile message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.GcsProfile
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GcsProfile.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.bucketName != null && message.hasOwnProperty("bucketName"))
                                if (!$util.isString(message.bucketName))
                                    return "bucketName: string expected";
                            if (message.rootPath != null && message.hasOwnProperty("rootPath"))
                                if (!$util.isString(message.rootPath))
                                    return "rootPath: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GcsProfile message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.GcsProfile
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.GcsProfile} GcsProfile
                         */
                        GcsProfile.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.GcsProfile)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.GcsProfile();
                            if (object.bucketName != null)
                                message.bucketName = String(object.bucketName);
                            if (object.rootPath != null)
                                message.rootPath = String(object.rootPath);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GcsProfile message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.GcsProfile
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.GcsProfile} message GcsProfile
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GcsProfile.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.bucketName = "";
                                object.rootPath = "";
                            }
                            if (message.bucketName != null && message.hasOwnProperty("bucketName"))
                                object.bucketName = message.bucketName;
                            if (message.rootPath != null && message.hasOwnProperty("rootPath"))
                                object.rootPath = message.rootPath;
                            return object;
                        };
    
                        /**
                         * Converts this GcsProfile to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.GcsProfile
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GcsProfile.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GcsProfile
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.GcsProfile
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GcsProfile.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.GcsProfile";
                        };
    
                        return GcsProfile;
                    })();
    
                    v1alpha1.NoConnectivitySettings = (function() {
    
                        /**
                         * Properties of a NoConnectivitySettings.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface INoConnectivitySettings
                         */
    
                        /**
                         * Constructs a new NoConnectivitySettings.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a NoConnectivitySettings.
                         * @implements INoConnectivitySettings
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.INoConnectivitySettings=} [properties] Properties to set
                         */
                        function NoConnectivitySettings(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new NoConnectivitySettings instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.NoConnectivitySettings
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.INoConnectivitySettings=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.NoConnectivitySettings} NoConnectivitySettings instance
                         */
                        NoConnectivitySettings.create = function create(properties) {
                            return new NoConnectivitySettings(properties);
                        };
    
                        /**
                         * Encodes the specified NoConnectivitySettings message. Does not implicitly {@link google.cloud.datastream.v1alpha1.NoConnectivitySettings.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.NoConnectivitySettings
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.INoConnectivitySettings} message NoConnectivitySettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NoConnectivitySettings.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified NoConnectivitySettings message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.NoConnectivitySettings.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.NoConnectivitySettings
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.INoConnectivitySettings} message NoConnectivitySettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NoConnectivitySettings.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a NoConnectivitySettings message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.NoConnectivitySettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.NoConnectivitySettings} NoConnectivitySettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NoConnectivitySettings.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.NoConnectivitySettings();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a NoConnectivitySettings message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.NoConnectivitySettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.NoConnectivitySettings} NoConnectivitySettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NoConnectivitySettings.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a NoConnectivitySettings message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.NoConnectivitySettings
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        NoConnectivitySettings.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates a NoConnectivitySettings message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.NoConnectivitySettings
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.NoConnectivitySettings} NoConnectivitySettings
                         */
                        NoConnectivitySettings.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.NoConnectivitySettings)
                                return object;
                            return new $root.google.cloud.datastream.v1alpha1.NoConnectivitySettings();
                        };
    
                        /**
                         * Creates a plain object from a NoConnectivitySettings message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.NoConnectivitySettings
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.NoConnectivitySettings} message NoConnectivitySettings
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        NoConnectivitySettings.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this NoConnectivitySettings to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.NoConnectivitySettings
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        NoConnectivitySettings.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for NoConnectivitySettings
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.NoConnectivitySettings
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        NoConnectivitySettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.NoConnectivitySettings";
                        };
    
                        return NoConnectivitySettings;
                    })();
    
                    v1alpha1.StaticServiceIpConnectivity = (function() {
    
                        /**
                         * Properties of a StaticServiceIpConnectivity.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IStaticServiceIpConnectivity
                         */
    
                        /**
                         * Constructs a new StaticServiceIpConnectivity.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a StaticServiceIpConnectivity.
                         * @implements IStaticServiceIpConnectivity
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IStaticServiceIpConnectivity=} [properties] Properties to set
                         */
                        function StaticServiceIpConnectivity(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new StaticServiceIpConnectivity instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.StaticServiceIpConnectivity
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IStaticServiceIpConnectivity=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.StaticServiceIpConnectivity} StaticServiceIpConnectivity instance
                         */
                        StaticServiceIpConnectivity.create = function create(properties) {
                            return new StaticServiceIpConnectivity(properties);
                        };
    
                        /**
                         * Encodes the specified StaticServiceIpConnectivity message. Does not implicitly {@link google.cloud.datastream.v1alpha1.StaticServiceIpConnectivity.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.StaticServiceIpConnectivity
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IStaticServiceIpConnectivity} message StaticServiceIpConnectivity message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StaticServiceIpConnectivity.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified StaticServiceIpConnectivity message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.StaticServiceIpConnectivity.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.StaticServiceIpConnectivity
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IStaticServiceIpConnectivity} message StaticServiceIpConnectivity message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StaticServiceIpConnectivity.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a StaticServiceIpConnectivity message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.StaticServiceIpConnectivity
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.StaticServiceIpConnectivity} StaticServiceIpConnectivity
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StaticServiceIpConnectivity.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.StaticServiceIpConnectivity();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a StaticServiceIpConnectivity message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.StaticServiceIpConnectivity
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.StaticServiceIpConnectivity} StaticServiceIpConnectivity
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StaticServiceIpConnectivity.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a StaticServiceIpConnectivity message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.StaticServiceIpConnectivity
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StaticServiceIpConnectivity.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates a StaticServiceIpConnectivity message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.StaticServiceIpConnectivity
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.StaticServiceIpConnectivity} StaticServiceIpConnectivity
                         */
                        StaticServiceIpConnectivity.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.StaticServiceIpConnectivity)
                                return object;
                            return new $root.google.cloud.datastream.v1alpha1.StaticServiceIpConnectivity();
                        };
    
                        /**
                         * Creates a plain object from a StaticServiceIpConnectivity message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.StaticServiceIpConnectivity
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.StaticServiceIpConnectivity} message StaticServiceIpConnectivity
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StaticServiceIpConnectivity.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this StaticServiceIpConnectivity to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.StaticServiceIpConnectivity
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StaticServiceIpConnectivity.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for StaticServiceIpConnectivity
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.StaticServiceIpConnectivity
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StaticServiceIpConnectivity.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.StaticServiceIpConnectivity";
                        };
    
                        return StaticServiceIpConnectivity;
                    })();
    
                    v1alpha1.ForwardSshTunnelConnectivity = (function() {
    
                        /**
                         * Properties of a ForwardSshTunnelConnectivity.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IForwardSshTunnelConnectivity
                         * @property {string|null} [hostname] ForwardSshTunnelConnectivity hostname
                         * @property {string|null} [username] ForwardSshTunnelConnectivity username
                         * @property {number|null} [port] ForwardSshTunnelConnectivity port
                         * @property {string|null} [password] ForwardSshTunnelConnectivity password
                         * @property {string|null} [privateKey] ForwardSshTunnelConnectivity privateKey
                         */
    
                        /**
                         * Constructs a new ForwardSshTunnelConnectivity.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a ForwardSshTunnelConnectivity.
                         * @implements IForwardSshTunnelConnectivity
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IForwardSshTunnelConnectivity=} [properties] Properties to set
                         */
                        function ForwardSshTunnelConnectivity(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ForwardSshTunnelConnectivity hostname.
                         * @member {string} hostname
                         * @memberof google.cloud.datastream.v1alpha1.ForwardSshTunnelConnectivity
                         * @instance
                         */
                        ForwardSshTunnelConnectivity.prototype.hostname = "";
    
                        /**
                         * ForwardSshTunnelConnectivity username.
                         * @member {string} username
                         * @memberof google.cloud.datastream.v1alpha1.ForwardSshTunnelConnectivity
                         * @instance
                         */
                        ForwardSshTunnelConnectivity.prototype.username = "";
    
                        /**
                         * ForwardSshTunnelConnectivity port.
                         * @member {number} port
                         * @memberof google.cloud.datastream.v1alpha1.ForwardSshTunnelConnectivity
                         * @instance
                         */
                        ForwardSshTunnelConnectivity.prototype.port = 0;
    
                        /**
                         * ForwardSshTunnelConnectivity password.
                         * @member {string|null|undefined} password
                         * @memberof google.cloud.datastream.v1alpha1.ForwardSshTunnelConnectivity
                         * @instance
                         */
                        ForwardSshTunnelConnectivity.prototype.password = null;
    
                        /**
                         * ForwardSshTunnelConnectivity privateKey.
                         * @member {string|null|undefined} privateKey
                         * @memberof google.cloud.datastream.v1alpha1.ForwardSshTunnelConnectivity
                         * @instance
                         */
                        ForwardSshTunnelConnectivity.prototype.privateKey = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * ForwardSshTunnelConnectivity authenticationMethod.
                         * @member {"password"|"privateKey"|undefined} authenticationMethod
                         * @memberof google.cloud.datastream.v1alpha1.ForwardSshTunnelConnectivity
                         * @instance
                         */
                        Object.defineProperty(ForwardSshTunnelConnectivity.prototype, "authenticationMethod", {
                            get: $util.oneOfGetter($oneOfFields = ["password", "privateKey"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new ForwardSshTunnelConnectivity instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.ForwardSshTunnelConnectivity
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IForwardSshTunnelConnectivity=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.ForwardSshTunnelConnectivity} ForwardSshTunnelConnectivity instance
                         */
                        ForwardSshTunnelConnectivity.create = function create(properties) {
                            return new ForwardSshTunnelConnectivity(properties);
                        };
    
                        /**
                         * Encodes the specified ForwardSshTunnelConnectivity message. Does not implicitly {@link google.cloud.datastream.v1alpha1.ForwardSshTunnelConnectivity.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.ForwardSshTunnelConnectivity
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IForwardSshTunnelConnectivity} message ForwardSshTunnelConnectivity message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ForwardSshTunnelConnectivity.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.hostname != null && Object.hasOwnProperty.call(message, "hostname"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.hostname);
                            if (message.username != null && Object.hasOwnProperty.call(message, "username"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.username);
                            if (message.port != null && Object.hasOwnProperty.call(message, "port"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.port);
                            if (message.password != null && Object.hasOwnProperty.call(message, "password"))
                                writer.uint32(/* id 100, wireType 2 =*/802).string(message.password);
                            if (message.privateKey != null && Object.hasOwnProperty.call(message, "privateKey"))
                                writer.uint32(/* id 101, wireType 2 =*/810).string(message.privateKey);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ForwardSshTunnelConnectivity message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.ForwardSshTunnelConnectivity.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.ForwardSshTunnelConnectivity
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IForwardSshTunnelConnectivity} message ForwardSshTunnelConnectivity message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ForwardSshTunnelConnectivity.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ForwardSshTunnelConnectivity message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.ForwardSshTunnelConnectivity
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.ForwardSshTunnelConnectivity} ForwardSshTunnelConnectivity
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ForwardSshTunnelConnectivity.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.ForwardSshTunnelConnectivity();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.hostname = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.username = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.port = reader.int32();
                                        break;
                                    }
                                case 100: {
                                        message.password = reader.string();
                                        break;
                                    }
                                case 101: {
                                        message.privateKey = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ForwardSshTunnelConnectivity message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.ForwardSshTunnelConnectivity
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.ForwardSshTunnelConnectivity} ForwardSshTunnelConnectivity
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ForwardSshTunnelConnectivity.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ForwardSshTunnelConnectivity message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.ForwardSshTunnelConnectivity
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ForwardSshTunnelConnectivity.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.hostname != null && message.hasOwnProperty("hostname"))
                                if (!$util.isString(message.hostname))
                                    return "hostname: string expected";
                            if (message.username != null && message.hasOwnProperty("username"))
                                if (!$util.isString(message.username))
                                    return "username: string expected";
                            if (message.port != null && message.hasOwnProperty("port"))
                                if (!$util.isInteger(message.port))
                                    return "port: integer expected";
                            if (message.password != null && message.hasOwnProperty("password")) {
                                properties.authenticationMethod = 1;
                                if (!$util.isString(message.password))
                                    return "password: string expected";
                            }
                            if (message.privateKey != null && message.hasOwnProperty("privateKey")) {
                                if (properties.authenticationMethod === 1)
                                    return "authenticationMethod: multiple values";
                                properties.authenticationMethod = 1;
                                if (!$util.isString(message.privateKey))
                                    return "privateKey: string expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ForwardSshTunnelConnectivity message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.ForwardSshTunnelConnectivity
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.ForwardSshTunnelConnectivity} ForwardSshTunnelConnectivity
                         */
                        ForwardSshTunnelConnectivity.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.ForwardSshTunnelConnectivity)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.ForwardSshTunnelConnectivity();
                            if (object.hostname != null)
                                message.hostname = String(object.hostname);
                            if (object.username != null)
                                message.username = String(object.username);
                            if (object.port != null)
                                message.port = object.port | 0;
                            if (object.password != null)
                                message.password = String(object.password);
                            if (object.privateKey != null)
                                message.privateKey = String(object.privateKey);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ForwardSshTunnelConnectivity message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.ForwardSshTunnelConnectivity
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.ForwardSshTunnelConnectivity} message ForwardSshTunnelConnectivity
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ForwardSshTunnelConnectivity.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.hostname = "";
                                object.username = "";
                                object.port = 0;
                            }
                            if (message.hostname != null && message.hasOwnProperty("hostname"))
                                object.hostname = message.hostname;
                            if (message.username != null && message.hasOwnProperty("username"))
                                object.username = message.username;
                            if (message.port != null && message.hasOwnProperty("port"))
                                object.port = message.port;
                            if (message.password != null && message.hasOwnProperty("password")) {
                                object.password = message.password;
                                if (options.oneofs)
                                    object.authenticationMethod = "password";
                            }
                            if (message.privateKey != null && message.hasOwnProperty("privateKey")) {
                                object.privateKey = message.privateKey;
                                if (options.oneofs)
                                    object.authenticationMethod = "privateKey";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ForwardSshTunnelConnectivity to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.ForwardSshTunnelConnectivity
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ForwardSshTunnelConnectivity.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ForwardSshTunnelConnectivity
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.ForwardSshTunnelConnectivity
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ForwardSshTunnelConnectivity.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.ForwardSshTunnelConnectivity";
                        };
    
                        return ForwardSshTunnelConnectivity;
                    })();
    
                    v1alpha1.VpcPeeringConfig = (function() {
    
                        /**
                         * Properties of a VpcPeeringConfig.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IVpcPeeringConfig
                         * @property {string|null} [vpcName] VpcPeeringConfig vpcName
                         * @property {string|null} [subnet] VpcPeeringConfig subnet
                         */
    
                        /**
                         * Constructs a new VpcPeeringConfig.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a VpcPeeringConfig.
                         * @implements IVpcPeeringConfig
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IVpcPeeringConfig=} [properties] Properties to set
                         */
                        function VpcPeeringConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * VpcPeeringConfig vpcName.
                         * @member {string} vpcName
                         * @memberof google.cloud.datastream.v1alpha1.VpcPeeringConfig
                         * @instance
                         */
                        VpcPeeringConfig.prototype.vpcName = "";
    
                        /**
                         * VpcPeeringConfig subnet.
                         * @member {string} subnet
                         * @memberof google.cloud.datastream.v1alpha1.VpcPeeringConfig
                         * @instance
                         */
                        VpcPeeringConfig.prototype.subnet = "";
    
                        /**
                         * Creates a new VpcPeeringConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.VpcPeeringConfig
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IVpcPeeringConfig=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.VpcPeeringConfig} VpcPeeringConfig instance
                         */
                        VpcPeeringConfig.create = function create(properties) {
                            return new VpcPeeringConfig(properties);
                        };
    
                        /**
                         * Encodes the specified VpcPeeringConfig message. Does not implicitly {@link google.cloud.datastream.v1alpha1.VpcPeeringConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.VpcPeeringConfig
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IVpcPeeringConfig} message VpcPeeringConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VpcPeeringConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.vpcName != null && Object.hasOwnProperty.call(message, "vpcName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.vpcName);
                            if (message.subnet != null && Object.hasOwnProperty.call(message, "subnet"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.subnet);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified VpcPeeringConfig message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.VpcPeeringConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.VpcPeeringConfig
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IVpcPeeringConfig} message VpcPeeringConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VpcPeeringConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a VpcPeeringConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.VpcPeeringConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.VpcPeeringConfig} VpcPeeringConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VpcPeeringConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.VpcPeeringConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.vpcName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.subnet = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a VpcPeeringConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.VpcPeeringConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.VpcPeeringConfig} VpcPeeringConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VpcPeeringConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a VpcPeeringConfig message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.VpcPeeringConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        VpcPeeringConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.vpcName != null && message.hasOwnProperty("vpcName"))
                                if (!$util.isString(message.vpcName))
                                    return "vpcName: string expected";
                            if (message.subnet != null && message.hasOwnProperty("subnet"))
                                if (!$util.isString(message.subnet))
                                    return "subnet: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a VpcPeeringConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.VpcPeeringConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.VpcPeeringConfig} VpcPeeringConfig
                         */
                        VpcPeeringConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.VpcPeeringConfig)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.VpcPeeringConfig();
                            if (object.vpcName != null)
                                message.vpcName = String(object.vpcName);
                            if (object.subnet != null)
                                message.subnet = String(object.subnet);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a VpcPeeringConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.VpcPeeringConfig
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.VpcPeeringConfig} message VpcPeeringConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        VpcPeeringConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.vpcName = "";
                                object.subnet = "";
                            }
                            if (message.vpcName != null && message.hasOwnProperty("vpcName"))
                                object.vpcName = message.vpcName;
                            if (message.subnet != null && message.hasOwnProperty("subnet"))
                                object.subnet = message.subnet;
                            return object;
                        };
    
                        /**
                         * Converts this VpcPeeringConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.VpcPeeringConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        VpcPeeringConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for VpcPeeringConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.VpcPeeringConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        VpcPeeringConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.VpcPeeringConfig";
                        };
    
                        return VpcPeeringConfig;
                    })();
    
                    v1alpha1.PrivateConnection = (function() {
    
                        /**
                         * Properties of a PrivateConnection.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IPrivateConnection
                         * @property {string|null} [name] PrivateConnection name
                         * @property {google.protobuf.ITimestamp|null} [createTime] PrivateConnection createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] PrivateConnection updateTime
                         * @property {Object.<string,string>|null} [labels] PrivateConnection labels
                         * @property {string|null} [displayName] PrivateConnection displayName
                         * @property {google.cloud.datastream.v1alpha1.PrivateConnection.State|null} [state] PrivateConnection state
                         * @property {google.cloud.datastream.v1alpha1.IError|null} [error] PrivateConnection error
                         * @property {google.cloud.datastream.v1alpha1.IVpcPeeringConfig|null} [vpcPeeringConfig] PrivateConnection vpcPeeringConfig
                         */
    
                        /**
                         * Constructs a new PrivateConnection.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a PrivateConnection.
                         * @implements IPrivateConnection
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IPrivateConnection=} [properties] Properties to set
                         */
                        function PrivateConnection(properties) {
                            this.labels = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PrivateConnection name.
                         * @member {string} name
                         * @memberof google.cloud.datastream.v1alpha1.PrivateConnection
                         * @instance
                         */
                        PrivateConnection.prototype.name = "";
    
                        /**
                         * PrivateConnection createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.datastream.v1alpha1.PrivateConnection
                         * @instance
                         */
                        PrivateConnection.prototype.createTime = null;
    
                        /**
                         * PrivateConnection updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.datastream.v1alpha1.PrivateConnection
                         * @instance
                         */
                        PrivateConnection.prototype.updateTime = null;
    
                        /**
                         * PrivateConnection labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.datastream.v1alpha1.PrivateConnection
                         * @instance
                         */
                        PrivateConnection.prototype.labels = $util.emptyObject;
    
                        /**
                         * PrivateConnection displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.datastream.v1alpha1.PrivateConnection
                         * @instance
                         */
                        PrivateConnection.prototype.displayName = "";
    
                        /**
                         * PrivateConnection state.
                         * @member {google.cloud.datastream.v1alpha1.PrivateConnection.State} state
                         * @memberof google.cloud.datastream.v1alpha1.PrivateConnection
                         * @instance
                         */
                        PrivateConnection.prototype.state = 0;
    
                        /**
                         * PrivateConnection error.
                         * @member {google.cloud.datastream.v1alpha1.IError|null|undefined} error
                         * @memberof google.cloud.datastream.v1alpha1.PrivateConnection
                         * @instance
                         */
                        PrivateConnection.prototype.error = null;
    
                        /**
                         * PrivateConnection vpcPeeringConfig.
                         * @member {google.cloud.datastream.v1alpha1.IVpcPeeringConfig|null|undefined} vpcPeeringConfig
                         * @memberof google.cloud.datastream.v1alpha1.PrivateConnection
                         * @instance
                         */
                        PrivateConnection.prototype.vpcPeeringConfig = null;
    
                        /**
                         * Creates a new PrivateConnection instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.PrivateConnection
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IPrivateConnection=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.PrivateConnection} PrivateConnection instance
                         */
                        PrivateConnection.create = function create(properties) {
                            return new PrivateConnection(properties);
                        };
    
                        /**
                         * Encodes the specified PrivateConnection message. Does not implicitly {@link google.cloud.datastream.v1alpha1.PrivateConnection.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.PrivateConnection
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IPrivateConnection} message PrivateConnection message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PrivateConnection.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.displayName);
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.state);
                            if (message.error != null && Object.hasOwnProperty.call(message, "error"))
                                $root.google.cloud.datastream.v1alpha1.Error.encode(message.error, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.vpcPeeringConfig != null && Object.hasOwnProperty.call(message, "vpcPeeringConfig"))
                                $root.google.cloud.datastream.v1alpha1.VpcPeeringConfig.encode(message.vpcPeeringConfig, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PrivateConnection message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.PrivateConnection.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.PrivateConnection
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IPrivateConnection} message PrivateConnection message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PrivateConnection.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PrivateConnection message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.PrivateConnection
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.PrivateConnection} PrivateConnection
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PrivateConnection.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.PrivateConnection(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 5: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 7: {
                                        message.error = $root.google.cloud.datastream.v1alpha1.Error.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 100: {
                                        message.vpcPeeringConfig = $root.google.cloud.datastream.v1alpha1.VpcPeeringConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PrivateConnection message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.PrivateConnection
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.PrivateConnection} PrivateConnection
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PrivateConnection.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PrivateConnection message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.PrivateConnection
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PrivateConnection.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.error != null && message.hasOwnProperty("error")) {
                                var error = $root.google.cloud.datastream.v1alpha1.Error.verify(message.error);
                                if (error)
                                    return "error." + error;
                            }
                            if (message.vpcPeeringConfig != null && message.hasOwnProperty("vpcPeeringConfig")) {
                                var error = $root.google.cloud.datastream.v1alpha1.VpcPeeringConfig.verify(message.vpcPeeringConfig);
                                if (error)
                                    return "vpcPeeringConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a PrivateConnection message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.PrivateConnection
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.PrivateConnection} PrivateConnection
                         */
                        PrivateConnection.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.PrivateConnection)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.PrivateConnection();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.PrivateConnection.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.PrivateConnection.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.PrivateConnection.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "CREATING":
                            case 1:
                                message.state = 1;
                                break;
                            case "CREATED":
                            case 2:
                                message.state = 2;
                                break;
                            case "FAILED":
                            case 3:
                                message.state = 3;
                                break;
                            }
                            if (object.error != null) {
                                if (typeof object.error !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.PrivateConnection.error: object expected");
                                message.error = $root.google.cloud.datastream.v1alpha1.Error.fromObject(object.error);
                            }
                            if (object.vpcPeeringConfig != null) {
                                if (typeof object.vpcPeeringConfig !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.PrivateConnection.vpcPeeringConfig: object expected");
                                message.vpcPeeringConfig = $root.google.cloud.datastream.v1alpha1.VpcPeeringConfig.fromObject(object.vpcPeeringConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PrivateConnection message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.PrivateConnection
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.PrivateConnection} message PrivateConnection
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PrivateConnection.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.labels = {};
                            if (options.defaults) {
                                object.name = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.displayName = "";
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.error = null;
                                object.vpcPeeringConfig = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.datastream.v1alpha1.PrivateConnection.State[message.state] === undefined ? message.state : $root.google.cloud.datastream.v1alpha1.PrivateConnection.State[message.state] : message.state;
                            if (message.error != null && message.hasOwnProperty("error"))
                                object.error = $root.google.cloud.datastream.v1alpha1.Error.toObject(message.error, options);
                            if (message.vpcPeeringConfig != null && message.hasOwnProperty("vpcPeeringConfig"))
                                object.vpcPeeringConfig = $root.google.cloud.datastream.v1alpha1.VpcPeeringConfig.toObject(message.vpcPeeringConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this PrivateConnection to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.PrivateConnection
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PrivateConnection.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PrivateConnection
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.PrivateConnection
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PrivateConnection.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.PrivateConnection";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.datastream.v1alpha1.PrivateConnection.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} CREATING=1 CREATING value
                         * @property {number} CREATED=2 CREATED value
                         * @property {number} FAILED=3 FAILED value
                         */
                        PrivateConnection.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CREATING"] = 1;
                            values[valuesById[2] = "CREATED"] = 2;
                            values[valuesById[3] = "FAILED"] = 3;
                            return values;
                        })();
    
                        return PrivateConnection;
                    })();
    
                    v1alpha1.PrivateConnectivity = (function() {
    
                        /**
                         * Properties of a PrivateConnectivity.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IPrivateConnectivity
                         * @property {string|null} [privateConnectionName] PrivateConnectivity privateConnectionName
                         */
    
                        /**
                         * Constructs a new PrivateConnectivity.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a PrivateConnectivity.
                         * @implements IPrivateConnectivity
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IPrivateConnectivity=} [properties] Properties to set
                         */
                        function PrivateConnectivity(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PrivateConnectivity privateConnectionName.
                         * @member {string} privateConnectionName
                         * @memberof google.cloud.datastream.v1alpha1.PrivateConnectivity
                         * @instance
                         */
                        PrivateConnectivity.prototype.privateConnectionName = "";
    
                        /**
                         * Creates a new PrivateConnectivity instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.PrivateConnectivity
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IPrivateConnectivity=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.PrivateConnectivity} PrivateConnectivity instance
                         */
                        PrivateConnectivity.create = function create(properties) {
                            return new PrivateConnectivity(properties);
                        };
    
                        /**
                         * Encodes the specified PrivateConnectivity message. Does not implicitly {@link google.cloud.datastream.v1alpha1.PrivateConnectivity.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.PrivateConnectivity
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IPrivateConnectivity} message PrivateConnectivity message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PrivateConnectivity.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.privateConnectionName != null && Object.hasOwnProperty.call(message, "privateConnectionName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.privateConnectionName);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PrivateConnectivity message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.PrivateConnectivity.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.PrivateConnectivity
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IPrivateConnectivity} message PrivateConnectivity message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PrivateConnectivity.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PrivateConnectivity message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.PrivateConnectivity
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.PrivateConnectivity} PrivateConnectivity
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PrivateConnectivity.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.PrivateConnectivity();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.privateConnectionName = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PrivateConnectivity message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.PrivateConnectivity
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.PrivateConnectivity} PrivateConnectivity
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PrivateConnectivity.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PrivateConnectivity message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.PrivateConnectivity
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PrivateConnectivity.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.privateConnectionName != null && message.hasOwnProperty("privateConnectionName"))
                                if (!$util.isString(message.privateConnectionName))
                                    return "privateConnectionName: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a PrivateConnectivity message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.PrivateConnectivity
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.PrivateConnectivity} PrivateConnectivity
                         */
                        PrivateConnectivity.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.PrivateConnectivity)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.PrivateConnectivity();
                            if (object.privateConnectionName != null)
                                message.privateConnectionName = String(object.privateConnectionName);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PrivateConnectivity message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.PrivateConnectivity
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.PrivateConnectivity} message PrivateConnectivity
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PrivateConnectivity.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.privateConnectionName = "";
                            if (message.privateConnectionName != null && message.hasOwnProperty("privateConnectionName"))
                                object.privateConnectionName = message.privateConnectionName;
                            return object;
                        };
    
                        /**
                         * Converts this PrivateConnectivity to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.PrivateConnectivity
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PrivateConnectivity.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PrivateConnectivity
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.PrivateConnectivity
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PrivateConnectivity.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.PrivateConnectivity";
                        };
    
                        return PrivateConnectivity;
                    })();
    
                    v1alpha1.Route = (function() {
    
                        /**
                         * Properties of a Route.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IRoute
                         * @property {string|null} [name] Route name
                         * @property {google.protobuf.ITimestamp|null} [createTime] Route createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Route updateTime
                         * @property {Object.<string,string>|null} [labels] Route labels
                         * @property {string|null} [displayName] Route displayName
                         * @property {string|null} [destinationAddress] Route destinationAddress
                         * @property {number|null} [destinationPort] Route destinationPort
                         */
    
                        /**
                         * Constructs a new Route.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a Route.
                         * @implements IRoute
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IRoute=} [properties] Properties to set
                         */
                        function Route(properties) {
                            this.labels = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Route name.
                         * @member {string} name
                         * @memberof google.cloud.datastream.v1alpha1.Route
                         * @instance
                         */
                        Route.prototype.name = "";
    
                        /**
                         * Route createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.datastream.v1alpha1.Route
                         * @instance
                         */
                        Route.prototype.createTime = null;
    
                        /**
                         * Route updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.datastream.v1alpha1.Route
                         * @instance
                         */
                        Route.prototype.updateTime = null;
    
                        /**
                         * Route labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.datastream.v1alpha1.Route
                         * @instance
                         */
                        Route.prototype.labels = $util.emptyObject;
    
                        /**
                         * Route displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.datastream.v1alpha1.Route
                         * @instance
                         */
                        Route.prototype.displayName = "";
    
                        /**
                         * Route destinationAddress.
                         * @member {string} destinationAddress
                         * @memberof google.cloud.datastream.v1alpha1.Route
                         * @instance
                         */
                        Route.prototype.destinationAddress = "";
    
                        /**
                         * Route destinationPort.
                         * @member {number} destinationPort
                         * @memberof google.cloud.datastream.v1alpha1.Route
                         * @instance
                         */
                        Route.prototype.destinationPort = 0;
    
                        /**
                         * Creates a new Route instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.Route
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IRoute=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.Route} Route instance
                         */
                        Route.create = function create(properties) {
                            return new Route(properties);
                        };
    
                        /**
                         * Encodes the specified Route message. Does not implicitly {@link google.cloud.datastream.v1alpha1.Route.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.Route
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IRoute} message Route message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Route.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.displayName);
                            if (message.destinationAddress != null && Object.hasOwnProperty.call(message, "destinationAddress"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.destinationAddress);
                            if (message.destinationPort != null && Object.hasOwnProperty.call(message, "destinationPort"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.destinationPort);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Route message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.Route.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.Route
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IRoute} message Route message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Route.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Route message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.Route
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.Route} Route
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Route.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.Route(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 5: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.destinationAddress = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.destinationPort = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Route message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.Route
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.Route} Route
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Route.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Route message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.Route
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Route.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.destinationAddress != null && message.hasOwnProperty("destinationAddress"))
                                if (!$util.isString(message.destinationAddress))
                                    return "destinationAddress: string expected";
                            if (message.destinationPort != null && message.hasOwnProperty("destinationPort"))
                                if (!$util.isInteger(message.destinationPort))
                                    return "destinationPort: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a Route message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.Route
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.Route} Route
                         */
                        Route.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.Route)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.Route();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.Route.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.Route.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.Route.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.destinationAddress != null)
                                message.destinationAddress = String(object.destinationAddress);
                            if (object.destinationPort != null)
                                message.destinationPort = object.destinationPort | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Route message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.Route
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.Route} message Route
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Route.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.labels = {};
                            if (options.defaults) {
                                object.name = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.displayName = "";
                                object.destinationAddress = "";
                                object.destinationPort = 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.destinationAddress != null && message.hasOwnProperty("destinationAddress"))
                                object.destinationAddress = message.destinationAddress;
                            if (message.destinationPort != null && message.hasOwnProperty("destinationPort"))
                                object.destinationPort = message.destinationPort;
                            return object;
                        };
    
                        /**
                         * Converts this Route to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.Route
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Route.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Route
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.Route
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Route.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.Route";
                        };
    
                        return Route;
                    })();
    
                    v1alpha1.MysqlSslConfig = (function() {
    
                        /**
                         * Properties of a MysqlSslConfig.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IMysqlSslConfig
                         * @property {string|null} [clientKey] MysqlSslConfig clientKey
                         * @property {boolean|null} [clientKeySet] MysqlSslConfig clientKeySet
                         * @property {string|null} [clientCertificate] MysqlSslConfig clientCertificate
                         * @property {boolean|null} [clientCertificateSet] MysqlSslConfig clientCertificateSet
                         * @property {string|null} [caCertificate] MysqlSslConfig caCertificate
                         * @property {boolean|null} [caCertificateSet] MysqlSslConfig caCertificateSet
                         */
    
                        /**
                         * Constructs a new MysqlSslConfig.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a MysqlSslConfig.
                         * @implements IMysqlSslConfig
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IMysqlSslConfig=} [properties] Properties to set
                         */
                        function MysqlSslConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MysqlSslConfig clientKey.
                         * @member {string} clientKey
                         * @memberof google.cloud.datastream.v1alpha1.MysqlSslConfig
                         * @instance
                         */
                        MysqlSslConfig.prototype.clientKey = "";
    
                        /**
                         * MysqlSslConfig clientKeySet.
                         * @member {boolean} clientKeySet
                         * @memberof google.cloud.datastream.v1alpha1.MysqlSslConfig
                         * @instance
                         */
                        MysqlSslConfig.prototype.clientKeySet = false;
    
                        /**
                         * MysqlSslConfig clientCertificate.
                         * @member {string} clientCertificate
                         * @memberof google.cloud.datastream.v1alpha1.MysqlSslConfig
                         * @instance
                         */
                        MysqlSslConfig.prototype.clientCertificate = "";
    
                        /**
                         * MysqlSslConfig clientCertificateSet.
                         * @member {boolean} clientCertificateSet
                         * @memberof google.cloud.datastream.v1alpha1.MysqlSslConfig
                         * @instance
                         */
                        MysqlSslConfig.prototype.clientCertificateSet = false;
    
                        /**
                         * MysqlSslConfig caCertificate.
                         * @member {string} caCertificate
                         * @memberof google.cloud.datastream.v1alpha1.MysqlSslConfig
                         * @instance
                         */
                        MysqlSslConfig.prototype.caCertificate = "";
    
                        /**
                         * MysqlSslConfig caCertificateSet.
                         * @member {boolean} caCertificateSet
                         * @memberof google.cloud.datastream.v1alpha1.MysqlSslConfig
                         * @instance
                         */
                        MysqlSslConfig.prototype.caCertificateSet = false;
    
                        /**
                         * Creates a new MysqlSslConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.MysqlSslConfig
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IMysqlSslConfig=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.MysqlSslConfig} MysqlSslConfig instance
                         */
                        MysqlSslConfig.create = function create(properties) {
                            return new MysqlSslConfig(properties);
                        };
    
                        /**
                         * Encodes the specified MysqlSslConfig message. Does not implicitly {@link google.cloud.datastream.v1alpha1.MysqlSslConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.MysqlSslConfig
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IMysqlSslConfig} message MysqlSslConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MysqlSslConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.clientKey != null && Object.hasOwnProperty.call(message, "clientKey"))
                                writer.uint32(/* id 11, wireType 2 =*/90).string(message.clientKey);
                            if (message.clientKeySet != null && Object.hasOwnProperty.call(message, "clientKeySet"))
                                writer.uint32(/* id 12, wireType 0 =*/96).bool(message.clientKeySet);
                            if (message.clientCertificate != null && Object.hasOwnProperty.call(message, "clientCertificate"))
                                writer.uint32(/* id 13, wireType 2 =*/106).string(message.clientCertificate);
                            if (message.clientCertificateSet != null && Object.hasOwnProperty.call(message, "clientCertificateSet"))
                                writer.uint32(/* id 14, wireType 0 =*/112).bool(message.clientCertificateSet);
                            if (message.caCertificate != null && Object.hasOwnProperty.call(message, "caCertificate"))
                                writer.uint32(/* id 15, wireType 2 =*/122).string(message.caCertificate);
                            if (message.caCertificateSet != null && Object.hasOwnProperty.call(message, "caCertificateSet"))
                                writer.uint32(/* id 16, wireType 0 =*/128).bool(message.caCertificateSet);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MysqlSslConfig message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.MysqlSslConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.MysqlSslConfig
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IMysqlSslConfig} message MysqlSslConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MysqlSslConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MysqlSslConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.MysqlSslConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.MysqlSslConfig} MysqlSslConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MysqlSslConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.MysqlSslConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 11: {
                                        message.clientKey = reader.string();
                                        break;
                                    }
                                case 12: {
                                        message.clientKeySet = reader.bool();
                                        break;
                                    }
                                case 13: {
                                        message.clientCertificate = reader.string();
                                        break;
                                    }
                                case 14: {
                                        message.clientCertificateSet = reader.bool();
                                        break;
                                    }
                                case 15: {
                                        message.caCertificate = reader.string();
                                        break;
                                    }
                                case 16: {
                                        message.caCertificateSet = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MysqlSslConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.MysqlSslConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.MysqlSslConfig} MysqlSslConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MysqlSslConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MysqlSslConfig message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.MysqlSslConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MysqlSslConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.clientKey != null && message.hasOwnProperty("clientKey"))
                                if (!$util.isString(message.clientKey))
                                    return "clientKey: string expected";
                            if (message.clientKeySet != null && message.hasOwnProperty("clientKeySet"))
                                if (typeof message.clientKeySet !== "boolean")
                                    return "clientKeySet: boolean expected";
                            if (message.clientCertificate != null && message.hasOwnProperty("clientCertificate"))
                                if (!$util.isString(message.clientCertificate))
                                    return "clientCertificate: string expected";
                            if (message.clientCertificateSet != null && message.hasOwnProperty("clientCertificateSet"))
                                if (typeof message.clientCertificateSet !== "boolean")
                                    return "clientCertificateSet: boolean expected";
                            if (message.caCertificate != null && message.hasOwnProperty("caCertificate"))
                                if (!$util.isString(message.caCertificate))
                                    return "caCertificate: string expected";
                            if (message.caCertificateSet != null && message.hasOwnProperty("caCertificateSet"))
                                if (typeof message.caCertificateSet !== "boolean")
                                    return "caCertificateSet: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a MysqlSslConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.MysqlSslConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.MysqlSslConfig} MysqlSslConfig
                         */
                        MysqlSslConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.MysqlSslConfig)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.MysqlSslConfig();
                            if (object.clientKey != null)
                                message.clientKey = String(object.clientKey);
                            if (object.clientKeySet != null)
                                message.clientKeySet = Boolean(object.clientKeySet);
                            if (object.clientCertificate != null)
                                message.clientCertificate = String(object.clientCertificate);
                            if (object.clientCertificateSet != null)
                                message.clientCertificateSet = Boolean(object.clientCertificateSet);
                            if (object.caCertificate != null)
                                message.caCertificate = String(object.caCertificate);
                            if (object.caCertificateSet != null)
                                message.caCertificateSet = Boolean(object.caCertificateSet);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MysqlSslConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.MysqlSslConfig
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.MysqlSslConfig} message MysqlSslConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MysqlSslConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.clientKey = "";
                                object.clientKeySet = false;
                                object.clientCertificate = "";
                                object.clientCertificateSet = false;
                                object.caCertificate = "";
                                object.caCertificateSet = false;
                            }
                            if (message.clientKey != null && message.hasOwnProperty("clientKey"))
                                object.clientKey = message.clientKey;
                            if (message.clientKeySet != null && message.hasOwnProperty("clientKeySet"))
                                object.clientKeySet = message.clientKeySet;
                            if (message.clientCertificate != null && message.hasOwnProperty("clientCertificate"))
                                object.clientCertificate = message.clientCertificate;
                            if (message.clientCertificateSet != null && message.hasOwnProperty("clientCertificateSet"))
                                object.clientCertificateSet = message.clientCertificateSet;
                            if (message.caCertificate != null && message.hasOwnProperty("caCertificate"))
                                object.caCertificate = message.caCertificate;
                            if (message.caCertificateSet != null && message.hasOwnProperty("caCertificateSet"))
                                object.caCertificateSet = message.caCertificateSet;
                            return object;
                        };
    
                        /**
                         * Converts this MysqlSslConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.MysqlSslConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MysqlSslConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MysqlSslConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.MysqlSslConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MysqlSslConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.MysqlSslConfig";
                        };
    
                        return MysqlSslConfig;
                    })();
    
                    v1alpha1.ConnectionProfile = (function() {
    
                        /**
                         * Properties of a ConnectionProfile.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IConnectionProfile
                         * @property {string|null} [name] ConnectionProfile name
                         * @property {google.protobuf.ITimestamp|null} [createTime] ConnectionProfile createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] ConnectionProfile updateTime
                         * @property {Object.<string,string>|null} [labels] ConnectionProfile labels
                         * @property {string|null} [displayName] ConnectionProfile displayName
                         * @property {google.cloud.datastream.v1alpha1.IOracleProfile|null} [oracleProfile] ConnectionProfile oracleProfile
                         * @property {google.cloud.datastream.v1alpha1.IGcsProfile|null} [gcsProfile] ConnectionProfile gcsProfile
                         * @property {google.cloud.datastream.v1alpha1.IMysqlProfile|null} [mysqlProfile] ConnectionProfile mysqlProfile
                         * @property {google.cloud.datastream.v1alpha1.INoConnectivitySettings|null} [noConnectivity] ConnectionProfile noConnectivity
                         * @property {google.cloud.datastream.v1alpha1.IStaticServiceIpConnectivity|null} [staticServiceIpConnectivity] ConnectionProfile staticServiceIpConnectivity
                         * @property {google.cloud.datastream.v1alpha1.IForwardSshTunnelConnectivity|null} [forwardSshConnectivity] ConnectionProfile forwardSshConnectivity
                         * @property {google.cloud.datastream.v1alpha1.IPrivateConnectivity|null} [privateConnectivity] ConnectionProfile privateConnectivity
                         */
    
                        /**
                         * Constructs a new ConnectionProfile.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a ConnectionProfile.
                         * @implements IConnectionProfile
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IConnectionProfile=} [properties] Properties to set
                         */
                        function ConnectionProfile(properties) {
                            this.labels = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ConnectionProfile name.
                         * @member {string} name
                         * @memberof google.cloud.datastream.v1alpha1.ConnectionProfile
                         * @instance
                         */
                        ConnectionProfile.prototype.name = "";
    
                        /**
                         * ConnectionProfile createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.datastream.v1alpha1.ConnectionProfile
                         * @instance
                         */
                        ConnectionProfile.prototype.createTime = null;
    
                        /**
                         * ConnectionProfile updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.datastream.v1alpha1.ConnectionProfile
                         * @instance
                         */
                        ConnectionProfile.prototype.updateTime = null;
    
                        /**
                         * ConnectionProfile labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.datastream.v1alpha1.ConnectionProfile
                         * @instance
                         */
                        ConnectionProfile.prototype.labels = $util.emptyObject;
    
                        /**
                         * ConnectionProfile displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.datastream.v1alpha1.ConnectionProfile
                         * @instance
                         */
                        ConnectionProfile.prototype.displayName = "";
    
                        /**
                         * ConnectionProfile oracleProfile.
                         * @member {google.cloud.datastream.v1alpha1.IOracleProfile|null|undefined} oracleProfile
                         * @memberof google.cloud.datastream.v1alpha1.ConnectionProfile
                         * @instance
                         */
                        ConnectionProfile.prototype.oracleProfile = null;
    
                        /**
                         * ConnectionProfile gcsProfile.
                         * @member {google.cloud.datastream.v1alpha1.IGcsProfile|null|undefined} gcsProfile
                         * @memberof google.cloud.datastream.v1alpha1.ConnectionProfile
                         * @instance
                         */
                        ConnectionProfile.prototype.gcsProfile = null;
    
                        /**
                         * ConnectionProfile mysqlProfile.
                         * @member {google.cloud.datastream.v1alpha1.IMysqlProfile|null|undefined} mysqlProfile
                         * @memberof google.cloud.datastream.v1alpha1.ConnectionProfile
                         * @instance
                         */
                        ConnectionProfile.prototype.mysqlProfile = null;
    
                        /**
                         * ConnectionProfile noConnectivity.
                         * @member {google.cloud.datastream.v1alpha1.INoConnectivitySettings|null|undefined} noConnectivity
                         * @memberof google.cloud.datastream.v1alpha1.ConnectionProfile
                         * @instance
                         */
                        ConnectionProfile.prototype.noConnectivity = null;
    
                        /**
                         * ConnectionProfile staticServiceIpConnectivity.
                         * @member {google.cloud.datastream.v1alpha1.IStaticServiceIpConnectivity|null|undefined} staticServiceIpConnectivity
                         * @memberof google.cloud.datastream.v1alpha1.ConnectionProfile
                         * @instance
                         */
                        ConnectionProfile.prototype.staticServiceIpConnectivity = null;
    
                        /**
                         * ConnectionProfile forwardSshConnectivity.
                         * @member {google.cloud.datastream.v1alpha1.IForwardSshTunnelConnectivity|null|undefined} forwardSshConnectivity
                         * @memberof google.cloud.datastream.v1alpha1.ConnectionProfile
                         * @instance
                         */
                        ConnectionProfile.prototype.forwardSshConnectivity = null;
    
                        /**
                         * ConnectionProfile privateConnectivity.
                         * @member {google.cloud.datastream.v1alpha1.IPrivateConnectivity|null|undefined} privateConnectivity
                         * @memberof google.cloud.datastream.v1alpha1.ConnectionProfile
                         * @instance
                         */
                        ConnectionProfile.prototype.privateConnectivity = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * ConnectionProfile profile.
                         * @member {"oracleProfile"|"gcsProfile"|"mysqlProfile"|undefined} profile
                         * @memberof google.cloud.datastream.v1alpha1.ConnectionProfile
                         * @instance
                         */
                        Object.defineProperty(ConnectionProfile.prototype, "profile", {
                            get: $util.oneOfGetter($oneOfFields = ["oracleProfile", "gcsProfile", "mysqlProfile"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * ConnectionProfile connectivity.
                         * @member {"noConnectivity"|"staticServiceIpConnectivity"|"forwardSshConnectivity"|"privateConnectivity"|undefined} connectivity
                         * @memberof google.cloud.datastream.v1alpha1.ConnectionProfile
                         * @instance
                         */
                        Object.defineProperty(ConnectionProfile.prototype, "connectivity", {
                            get: $util.oneOfGetter($oneOfFields = ["noConnectivity", "staticServiceIpConnectivity", "forwardSshConnectivity", "privateConnectivity"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new ConnectionProfile instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.ConnectionProfile
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IConnectionProfile=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.ConnectionProfile} ConnectionProfile instance
                         */
                        ConnectionProfile.create = function create(properties) {
                            return new ConnectionProfile(properties);
                        };
    
                        /**
                         * Encodes the specified ConnectionProfile message. Does not implicitly {@link google.cloud.datastream.v1alpha1.ConnectionProfile.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.ConnectionProfile
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IConnectionProfile} message ConnectionProfile message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConnectionProfile.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.displayName);
                            if (message.oracleProfile != null && Object.hasOwnProperty.call(message, "oracleProfile"))
                                $root.google.cloud.datastream.v1alpha1.OracleProfile.encode(message.oracleProfile, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            if (message.gcsProfile != null && Object.hasOwnProperty.call(message, "gcsProfile"))
                                $root.google.cloud.datastream.v1alpha1.GcsProfile.encode(message.gcsProfile, writer.uint32(/* id 101, wireType 2 =*/810).fork()).ldelim();
                            if (message.mysqlProfile != null && Object.hasOwnProperty.call(message, "mysqlProfile"))
                                $root.google.cloud.datastream.v1alpha1.MysqlProfile.encode(message.mysqlProfile, writer.uint32(/* id 102, wireType 2 =*/818).fork()).ldelim();
                            if (message.noConnectivity != null && Object.hasOwnProperty.call(message, "noConnectivity"))
                                $root.google.cloud.datastream.v1alpha1.NoConnectivitySettings.encode(message.noConnectivity, writer.uint32(/* id 200, wireType 2 =*/1602).fork()).ldelim();
                            if (message.staticServiceIpConnectivity != null && Object.hasOwnProperty.call(message, "staticServiceIpConnectivity"))
                                $root.google.cloud.datastream.v1alpha1.StaticServiceIpConnectivity.encode(message.staticServiceIpConnectivity, writer.uint32(/* id 201, wireType 2 =*/1610).fork()).ldelim();
                            if (message.forwardSshConnectivity != null && Object.hasOwnProperty.call(message, "forwardSshConnectivity"))
                                $root.google.cloud.datastream.v1alpha1.ForwardSshTunnelConnectivity.encode(message.forwardSshConnectivity, writer.uint32(/* id 202, wireType 2 =*/1618).fork()).ldelim();
                            if (message.privateConnectivity != null && Object.hasOwnProperty.call(message, "privateConnectivity"))
                                $root.google.cloud.datastream.v1alpha1.PrivateConnectivity.encode(message.privateConnectivity, writer.uint32(/* id 203, wireType 2 =*/1626).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ConnectionProfile message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.ConnectionProfile.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.ConnectionProfile
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IConnectionProfile} message ConnectionProfile message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConnectionProfile.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ConnectionProfile message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.ConnectionProfile
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.ConnectionProfile} ConnectionProfile
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConnectionProfile.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.ConnectionProfile(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 5: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 100: {
                                        message.oracleProfile = $root.google.cloud.datastream.v1alpha1.OracleProfile.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 101: {
                                        message.gcsProfile = $root.google.cloud.datastream.v1alpha1.GcsProfile.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 102: {
                                        message.mysqlProfile = $root.google.cloud.datastream.v1alpha1.MysqlProfile.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 200: {
                                        message.noConnectivity = $root.google.cloud.datastream.v1alpha1.NoConnectivitySettings.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 201: {
                                        message.staticServiceIpConnectivity = $root.google.cloud.datastream.v1alpha1.StaticServiceIpConnectivity.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 202: {
                                        message.forwardSshConnectivity = $root.google.cloud.datastream.v1alpha1.ForwardSshTunnelConnectivity.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 203: {
                                        message.privateConnectivity = $root.google.cloud.datastream.v1alpha1.PrivateConnectivity.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ConnectionProfile message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.ConnectionProfile
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.ConnectionProfile} ConnectionProfile
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConnectionProfile.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ConnectionProfile message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.ConnectionProfile
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ConnectionProfile.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.oracleProfile != null && message.hasOwnProperty("oracleProfile")) {
                                properties.profile = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1alpha1.OracleProfile.verify(message.oracleProfile);
                                    if (error)
                                        return "oracleProfile." + error;
                                }
                            }
                            if (message.gcsProfile != null && message.hasOwnProperty("gcsProfile")) {
                                if (properties.profile === 1)
                                    return "profile: multiple values";
                                properties.profile = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1alpha1.GcsProfile.verify(message.gcsProfile);
                                    if (error)
                                        return "gcsProfile." + error;
                                }
                            }
                            if (message.mysqlProfile != null && message.hasOwnProperty("mysqlProfile")) {
                                if (properties.profile === 1)
                                    return "profile: multiple values";
                                properties.profile = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1alpha1.MysqlProfile.verify(message.mysqlProfile);
                                    if (error)
                                        return "mysqlProfile." + error;
                                }
                            }
                            if (message.noConnectivity != null && message.hasOwnProperty("noConnectivity")) {
                                properties.connectivity = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1alpha1.NoConnectivitySettings.verify(message.noConnectivity);
                                    if (error)
                                        return "noConnectivity." + error;
                                }
                            }
                            if (message.staticServiceIpConnectivity != null && message.hasOwnProperty("staticServiceIpConnectivity")) {
                                if (properties.connectivity === 1)
                                    return "connectivity: multiple values";
                                properties.connectivity = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1alpha1.StaticServiceIpConnectivity.verify(message.staticServiceIpConnectivity);
                                    if (error)
                                        return "staticServiceIpConnectivity." + error;
                                }
                            }
                            if (message.forwardSshConnectivity != null && message.hasOwnProperty("forwardSshConnectivity")) {
                                if (properties.connectivity === 1)
                                    return "connectivity: multiple values";
                                properties.connectivity = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1alpha1.ForwardSshTunnelConnectivity.verify(message.forwardSshConnectivity);
                                    if (error)
                                        return "forwardSshConnectivity." + error;
                                }
                            }
                            if (message.privateConnectivity != null && message.hasOwnProperty("privateConnectivity")) {
                                if (properties.connectivity === 1)
                                    return "connectivity: multiple values";
                                properties.connectivity = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1alpha1.PrivateConnectivity.verify(message.privateConnectivity);
                                    if (error)
                                        return "privateConnectivity." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ConnectionProfile message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.ConnectionProfile
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.ConnectionProfile} ConnectionProfile
                         */
                        ConnectionProfile.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.ConnectionProfile)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.ConnectionProfile();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.ConnectionProfile.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.ConnectionProfile.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.ConnectionProfile.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.oracleProfile != null) {
                                if (typeof object.oracleProfile !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.ConnectionProfile.oracleProfile: object expected");
                                message.oracleProfile = $root.google.cloud.datastream.v1alpha1.OracleProfile.fromObject(object.oracleProfile);
                            }
                            if (object.gcsProfile != null) {
                                if (typeof object.gcsProfile !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.ConnectionProfile.gcsProfile: object expected");
                                message.gcsProfile = $root.google.cloud.datastream.v1alpha1.GcsProfile.fromObject(object.gcsProfile);
                            }
                            if (object.mysqlProfile != null) {
                                if (typeof object.mysqlProfile !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.ConnectionProfile.mysqlProfile: object expected");
                                message.mysqlProfile = $root.google.cloud.datastream.v1alpha1.MysqlProfile.fromObject(object.mysqlProfile);
                            }
                            if (object.noConnectivity != null) {
                                if (typeof object.noConnectivity !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.ConnectionProfile.noConnectivity: object expected");
                                message.noConnectivity = $root.google.cloud.datastream.v1alpha1.NoConnectivitySettings.fromObject(object.noConnectivity);
                            }
                            if (object.staticServiceIpConnectivity != null) {
                                if (typeof object.staticServiceIpConnectivity !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.ConnectionProfile.staticServiceIpConnectivity: object expected");
                                message.staticServiceIpConnectivity = $root.google.cloud.datastream.v1alpha1.StaticServiceIpConnectivity.fromObject(object.staticServiceIpConnectivity);
                            }
                            if (object.forwardSshConnectivity != null) {
                                if (typeof object.forwardSshConnectivity !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.ConnectionProfile.forwardSshConnectivity: object expected");
                                message.forwardSshConnectivity = $root.google.cloud.datastream.v1alpha1.ForwardSshTunnelConnectivity.fromObject(object.forwardSshConnectivity);
                            }
                            if (object.privateConnectivity != null) {
                                if (typeof object.privateConnectivity !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.ConnectionProfile.privateConnectivity: object expected");
                                message.privateConnectivity = $root.google.cloud.datastream.v1alpha1.PrivateConnectivity.fromObject(object.privateConnectivity);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ConnectionProfile message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.ConnectionProfile
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.ConnectionProfile} message ConnectionProfile
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ConnectionProfile.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.labels = {};
                            if (options.defaults) {
                                object.name = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.displayName = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.oracleProfile != null && message.hasOwnProperty("oracleProfile")) {
                                object.oracleProfile = $root.google.cloud.datastream.v1alpha1.OracleProfile.toObject(message.oracleProfile, options);
                                if (options.oneofs)
                                    object.profile = "oracleProfile";
                            }
                            if (message.gcsProfile != null && message.hasOwnProperty("gcsProfile")) {
                                object.gcsProfile = $root.google.cloud.datastream.v1alpha1.GcsProfile.toObject(message.gcsProfile, options);
                                if (options.oneofs)
                                    object.profile = "gcsProfile";
                            }
                            if (message.mysqlProfile != null && message.hasOwnProperty("mysqlProfile")) {
                                object.mysqlProfile = $root.google.cloud.datastream.v1alpha1.MysqlProfile.toObject(message.mysqlProfile, options);
                                if (options.oneofs)
                                    object.profile = "mysqlProfile";
                            }
                            if (message.noConnectivity != null && message.hasOwnProperty("noConnectivity")) {
                                object.noConnectivity = $root.google.cloud.datastream.v1alpha1.NoConnectivitySettings.toObject(message.noConnectivity, options);
                                if (options.oneofs)
                                    object.connectivity = "noConnectivity";
                            }
                            if (message.staticServiceIpConnectivity != null && message.hasOwnProperty("staticServiceIpConnectivity")) {
                                object.staticServiceIpConnectivity = $root.google.cloud.datastream.v1alpha1.StaticServiceIpConnectivity.toObject(message.staticServiceIpConnectivity, options);
                                if (options.oneofs)
                                    object.connectivity = "staticServiceIpConnectivity";
                            }
                            if (message.forwardSshConnectivity != null && message.hasOwnProperty("forwardSshConnectivity")) {
                                object.forwardSshConnectivity = $root.google.cloud.datastream.v1alpha1.ForwardSshTunnelConnectivity.toObject(message.forwardSshConnectivity, options);
                                if (options.oneofs)
                                    object.connectivity = "forwardSshConnectivity";
                            }
                            if (message.privateConnectivity != null && message.hasOwnProperty("privateConnectivity")) {
                                object.privateConnectivity = $root.google.cloud.datastream.v1alpha1.PrivateConnectivity.toObject(message.privateConnectivity, options);
                                if (options.oneofs)
                                    object.connectivity = "privateConnectivity";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ConnectionProfile to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.ConnectionProfile
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ConnectionProfile.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ConnectionProfile
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.ConnectionProfile
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ConnectionProfile.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.ConnectionProfile";
                        };
    
                        return ConnectionProfile;
                    })();
    
                    v1alpha1.OracleColumn = (function() {
    
                        /**
                         * Properties of an OracleColumn.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IOracleColumn
                         * @property {string|null} [columnName] OracleColumn columnName
                         * @property {string|null} [dataType] OracleColumn dataType
                         * @property {number|null} [length] OracleColumn length
                         * @property {number|null} [precision] OracleColumn precision
                         * @property {number|null} [scale] OracleColumn scale
                         * @property {string|null} [encoding] OracleColumn encoding
                         * @property {boolean|null} [primaryKey] OracleColumn primaryKey
                         * @property {boolean|null} [nullable] OracleColumn nullable
                         * @property {number|null} [ordinalPosition] OracleColumn ordinalPosition
                         */
    
                        /**
                         * Constructs a new OracleColumn.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents an OracleColumn.
                         * @implements IOracleColumn
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IOracleColumn=} [properties] Properties to set
                         */
                        function OracleColumn(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OracleColumn columnName.
                         * @member {string} columnName
                         * @memberof google.cloud.datastream.v1alpha1.OracleColumn
                         * @instance
                         */
                        OracleColumn.prototype.columnName = "";
    
                        /**
                         * OracleColumn dataType.
                         * @member {string} dataType
                         * @memberof google.cloud.datastream.v1alpha1.OracleColumn
                         * @instance
                         */
                        OracleColumn.prototype.dataType = "";
    
                        /**
                         * OracleColumn length.
                         * @member {number} length
                         * @memberof google.cloud.datastream.v1alpha1.OracleColumn
                         * @instance
                         */
                        OracleColumn.prototype.length = 0;
    
                        /**
                         * OracleColumn precision.
                         * @member {number} precision
                         * @memberof google.cloud.datastream.v1alpha1.OracleColumn
                         * @instance
                         */
                        OracleColumn.prototype.precision = 0;
    
                        /**
                         * OracleColumn scale.
                         * @member {number} scale
                         * @memberof google.cloud.datastream.v1alpha1.OracleColumn
                         * @instance
                         */
                        OracleColumn.prototype.scale = 0;
    
                        /**
                         * OracleColumn encoding.
                         * @member {string} encoding
                         * @memberof google.cloud.datastream.v1alpha1.OracleColumn
                         * @instance
                         */
                        OracleColumn.prototype.encoding = "";
    
                        /**
                         * OracleColumn primaryKey.
                         * @member {boolean} primaryKey
                         * @memberof google.cloud.datastream.v1alpha1.OracleColumn
                         * @instance
                         */
                        OracleColumn.prototype.primaryKey = false;
    
                        /**
                         * OracleColumn nullable.
                         * @member {boolean} nullable
                         * @memberof google.cloud.datastream.v1alpha1.OracleColumn
                         * @instance
                         */
                        OracleColumn.prototype.nullable = false;
    
                        /**
                         * OracleColumn ordinalPosition.
                         * @member {number} ordinalPosition
                         * @memberof google.cloud.datastream.v1alpha1.OracleColumn
                         * @instance
                         */
                        OracleColumn.prototype.ordinalPosition = 0;
    
                        /**
                         * Creates a new OracleColumn instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.OracleColumn
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IOracleColumn=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.OracleColumn} OracleColumn instance
                         */
                        OracleColumn.create = function create(properties) {
                            return new OracleColumn(properties);
                        };
    
                        /**
                         * Encodes the specified OracleColumn message. Does not implicitly {@link google.cloud.datastream.v1alpha1.OracleColumn.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.OracleColumn
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IOracleColumn} message OracleColumn message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OracleColumn.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.columnName != null && Object.hasOwnProperty.call(message, "columnName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.columnName);
                            if (message.dataType != null && Object.hasOwnProperty.call(message, "dataType"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.dataType);
                            if (message.length != null && Object.hasOwnProperty.call(message, "length"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.length);
                            if (message.precision != null && Object.hasOwnProperty.call(message, "precision"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.precision);
                            if (message.scale != null && Object.hasOwnProperty.call(message, "scale"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.scale);
                            if (message.encoding != null && Object.hasOwnProperty.call(message, "encoding"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.encoding);
                            if (message.primaryKey != null && Object.hasOwnProperty.call(message, "primaryKey"))
                                writer.uint32(/* id 7, wireType 0 =*/56).bool(message.primaryKey);
                            if (message.nullable != null && Object.hasOwnProperty.call(message, "nullable"))
                                writer.uint32(/* id 8, wireType 0 =*/64).bool(message.nullable);
                            if (message.ordinalPosition != null && Object.hasOwnProperty.call(message, "ordinalPosition"))
                                writer.uint32(/* id 9, wireType 0 =*/72).int32(message.ordinalPosition);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OracleColumn message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.OracleColumn.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.OracleColumn
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IOracleColumn} message OracleColumn message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OracleColumn.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OracleColumn message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.OracleColumn
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.OracleColumn} OracleColumn
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OracleColumn.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.OracleColumn();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.columnName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.dataType = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.length = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.precision = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        message.scale = reader.int32();
                                        break;
                                    }
                                case 6: {
                                        message.encoding = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.primaryKey = reader.bool();
                                        break;
                                    }
                                case 8: {
                                        message.nullable = reader.bool();
                                        break;
                                    }
                                case 9: {
                                        message.ordinalPosition = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OracleColumn message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.OracleColumn
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.OracleColumn} OracleColumn
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OracleColumn.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OracleColumn message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.OracleColumn
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OracleColumn.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.columnName != null && message.hasOwnProperty("columnName"))
                                if (!$util.isString(message.columnName))
                                    return "columnName: string expected";
                            if (message.dataType != null && message.hasOwnProperty("dataType"))
                                if (!$util.isString(message.dataType))
                                    return "dataType: string expected";
                            if (message.length != null && message.hasOwnProperty("length"))
                                if (!$util.isInteger(message.length))
                                    return "length: integer expected";
                            if (message.precision != null && message.hasOwnProperty("precision"))
                                if (!$util.isInteger(message.precision))
                                    return "precision: integer expected";
                            if (message.scale != null && message.hasOwnProperty("scale"))
                                if (!$util.isInteger(message.scale))
                                    return "scale: integer expected";
                            if (message.encoding != null && message.hasOwnProperty("encoding"))
                                if (!$util.isString(message.encoding))
                                    return "encoding: string expected";
                            if (message.primaryKey != null && message.hasOwnProperty("primaryKey"))
                                if (typeof message.primaryKey !== "boolean")
                                    return "primaryKey: boolean expected";
                            if (message.nullable != null && message.hasOwnProperty("nullable"))
                                if (typeof message.nullable !== "boolean")
                                    return "nullable: boolean expected";
                            if (message.ordinalPosition != null && message.hasOwnProperty("ordinalPosition"))
                                if (!$util.isInteger(message.ordinalPosition))
                                    return "ordinalPosition: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates an OracleColumn message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.OracleColumn
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.OracleColumn} OracleColumn
                         */
                        OracleColumn.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.OracleColumn)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.OracleColumn();
                            if (object.columnName != null)
                                message.columnName = String(object.columnName);
                            if (object.dataType != null)
                                message.dataType = String(object.dataType);
                            if (object.length != null)
                                message.length = object.length | 0;
                            if (object.precision != null)
                                message.precision = object.precision | 0;
                            if (object.scale != null)
                                message.scale = object.scale | 0;
                            if (object.encoding != null)
                                message.encoding = String(object.encoding);
                            if (object.primaryKey != null)
                                message.primaryKey = Boolean(object.primaryKey);
                            if (object.nullable != null)
                                message.nullable = Boolean(object.nullable);
                            if (object.ordinalPosition != null)
                                message.ordinalPosition = object.ordinalPosition | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OracleColumn message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.OracleColumn
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.OracleColumn} message OracleColumn
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OracleColumn.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.columnName = "";
                                object.dataType = "";
                                object.length = 0;
                                object.precision = 0;
                                object.scale = 0;
                                object.encoding = "";
                                object.primaryKey = false;
                                object.nullable = false;
                                object.ordinalPosition = 0;
                            }
                            if (message.columnName != null && message.hasOwnProperty("columnName"))
                                object.columnName = message.columnName;
                            if (message.dataType != null && message.hasOwnProperty("dataType"))
                                object.dataType = message.dataType;
                            if (message.length != null && message.hasOwnProperty("length"))
                                object.length = message.length;
                            if (message.precision != null && message.hasOwnProperty("precision"))
                                object.precision = message.precision;
                            if (message.scale != null && message.hasOwnProperty("scale"))
                                object.scale = message.scale;
                            if (message.encoding != null && message.hasOwnProperty("encoding"))
                                object.encoding = message.encoding;
                            if (message.primaryKey != null && message.hasOwnProperty("primaryKey"))
                                object.primaryKey = message.primaryKey;
                            if (message.nullable != null && message.hasOwnProperty("nullable"))
                                object.nullable = message.nullable;
                            if (message.ordinalPosition != null && message.hasOwnProperty("ordinalPosition"))
                                object.ordinalPosition = message.ordinalPosition;
                            return object;
                        };
    
                        /**
                         * Converts this OracleColumn to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.OracleColumn
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OracleColumn.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OracleColumn
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.OracleColumn
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OracleColumn.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.OracleColumn";
                        };
    
                        return OracleColumn;
                    })();
    
                    v1alpha1.OracleTable = (function() {
    
                        /**
                         * Properties of an OracleTable.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IOracleTable
                         * @property {string|null} [tableName] OracleTable tableName
                         * @property {Array.<google.cloud.datastream.v1alpha1.IOracleColumn>|null} [oracleColumns] OracleTable oracleColumns
                         */
    
                        /**
                         * Constructs a new OracleTable.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents an OracleTable.
                         * @implements IOracleTable
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IOracleTable=} [properties] Properties to set
                         */
                        function OracleTable(properties) {
                            this.oracleColumns = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OracleTable tableName.
                         * @member {string} tableName
                         * @memberof google.cloud.datastream.v1alpha1.OracleTable
                         * @instance
                         */
                        OracleTable.prototype.tableName = "";
    
                        /**
                         * OracleTable oracleColumns.
                         * @member {Array.<google.cloud.datastream.v1alpha1.IOracleColumn>} oracleColumns
                         * @memberof google.cloud.datastream.v1alpha1.OracleTable
                         * @instance
                         */
                        OracleTable.prototype.oracleColumns = $util.emptyArray;
    
                        /**
                         * Creates a new OracleTable instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.OracleTable
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IOracleTable=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.OracleTable} OracleTable instance
                         */
                        OracleTable.create = function create(properties) {
                            return new OracleTable(properties);
                        };
    
                        /**
                         * Encodes the specified OracleTable message. Does not implicitly {@link google.cloud.datastream.v1alpha1.OracleTable.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.OracleTable
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IOracleTable} message OracleTable message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OracleTable.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.tableName != null && Object.hasOwnProperty.call(message, "tableName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.tableName);
                            if (message.oracleColumns != null && message.oracleColumns.length)
                                for (var i = 0; i < message.oracleColumns.length; ++i)
                                    $root.google.cloud.datastream.v1alpha1.OracleColumn.encode(message.oracleColumns[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OracleTable message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.OracleTable.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.OracleTable
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IOracleTable} message OracleTable message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OracleTable.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OracleTable message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.OracleTable
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.OracleTable} OracleTable
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OracleTable.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.OracleTable();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.tableName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.oracleColumns && message.oracleColumns.length))
                                            message.oracleColumns = [];
                                        message.oracleColumns.push($root.google.cloud.datastream.v1alpha1.OracleColumn.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OracleTable message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.OracleTable
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.OracleTable} OracleTable
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OracleTable.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OracleTable message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.OracleTable
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OracleTable.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.tableName != null && message.hasOwnProperty("tableName"))
                                if (!$util.isString(message.tableName))
                                    return "tableName: string expected";
                            if (message.oracleColumns != null && message.hasOwnProperty("oracleColumns")) {
                                if (!Array.isArray(message.oracleColumns))
                                    return "oracleColumns: array expected";
                                for (var i = 0; i < message.oracleColumns.length; ++i) {
                                    var error = $root.google.cloud.datastream.v1alpha1.OracleColumn.verify(message.oracleColumns[i]);
                                    if (error)
                                        return "oracleColumns." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates an OracleTable message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.OracleTable
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.OracleTable} OracleTable
                         */
                        OracleTable.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.OracleTable)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.OracleTable();
                            if (object.tableName != null)
                                message.tableName = String(object.tableName);
                            if (object.oracleColumns) {
                                if (!Array.isArray(object.oracleColumns))
                                    throw TypeError(".google.cloud.datastream.v1alpha1.OracleTable.oracleColumns: array expected");
                                message.oracleColumns = [];
                                for (var i = 0; i < object.oracleColumns.length; ++i) {
                                    if (typeof object.oracleColumns[i] !== "object")
                                        throw TypeError(".google.cloud.datastream.v1alpha1.OracleTable.oracleColumns: object expected");
                                    message.oracleColumns[i] = $root.google.cloud.datastream.v1alpha1.OracleColumn.fromObject(object.oracleColumns[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OracleTable message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.OracleTable
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.OracleTable} message OracleTable
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OracleTable.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.oracleColumns = [];
                            if (options.defaults)
                                object.tableName = "";
                            if (message.tableName != null && message.hasOwnProperty("tableName"))
                                object.tableName = message.tableName;
                            if (message.oracleColumns && message.oracleColumns.length) {
                                object.oracleColumns = [];
                                for (var j = 0; j < message.oracleColumns.length; ++j)
                                    object.oracleColumns[j] = $root.google.cloud.datastream.v1alpha1.OracleColumn.toObject(message.oracleColumns[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this OracleTable to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.OracleTable
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OracleTable.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OracleTable
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.OracleTable
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OracleTable.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.OracleTable";
                        };
    
                        return OracleTable;
                    })();
    
                    v1alpha1.OracleSchema = (function() {
    
                        /**
                         * Properties of an OracleSchema.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IOracleSchema
                         * @property {string|null} [schemaName] OracleSchema schemaName
                         * @property {Array.<google.cloud.datastream.v1alpha1.IOracleTable>|null} [oracleTables] OracleSchema oracleTables
                         */
    
                        /**
                         * Constructs a new OracleSchema.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents an OracleSchema.
                         * @implements IOracleSchema
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IOracleSchema=} [properties] Properties to set
                         */
                        function OracleSchema(properties) {
                            this.oracleTables = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OracleSchema schemaName.
                         * @member {string} schemaName
                         * @memberof google.cloud.datastream.v1alpha1.OracleSchema
                         * @instance
                         */
                        OracleSchema.prototype.schemaName = "";
    
                        /**
                         * OracleSchema oracleTables.
                         * @member {Array.<google.cloud.datastream.v1alpha1.IOracleTable>} oracleTables
                         * @memberof google.cloud.datastream.v1alpha1.OracleSchema
                         * @instance
                         */
                        OracleSchema.prototype.oracleTables = $util.emptyArray;
    
                        /**
                         * Creates a new OracleSchema instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.OracleSchema
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IOracleSchema=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.OracleSchema} OracleSchema instance
                         */
                        OracleSchema.create = function create(properties) {
                            return new OracleSchema(properties);
                        };
    
                        /**
                         * Encodes the specified OracleSchema message. Does not implicitly {@link google.cloud.datastream.v1alpha1.OracleSchema.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.OracleSchema
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IOracleSchema} message OracleSchema message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OracleSchema.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.schemaName != null && Object.hasOwnProperty.call(message, "schemaName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.schemaName);
                            if (message.oracleTables != null && message.oracleTables.length)
                                for (var i = 0; i < message.oracleTables.length; ++i)
                                    $root.google.cloud.datastream.v1alpha1.OracleTable.encode(message.oracleTables[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OracleSchema message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.OracleSchema.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.OracleSchema
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IOracleSchema} message OracleSchema message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OracleSchema.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OracleSchema message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.OracleSchema
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.OracleSchema} OracleSchema
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OracleSchema.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.OracleSchema();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.schemaName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.oracleTables && message.oracleTables.length))
                                            message.oracleTables = [];
                                        message.oracleTables.push($root.google.cloud.datastream.v1alpha1.OracleTable.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OracleSchema message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.OracleSchema
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.OracleSchema} OracleSchema
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OracleSchema.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OracleSchema message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.OracleSchema
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OracleSchema.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.schemaName != null && message.hasOwnProperty("schemaName"))
                                if (!$util.isString(message.schemaName))
                                    return "schemaName: string expected";
                            if (message.oracleTables != null && message.hasOwnProperty("oracleTables")) {
                                if (!Array.isArray(message.oracleTables))
                                    return "oracleTables: array expected";
                                for (var i = 0; i < message.oracleTables.length; ++i) {
                                    var error = $root.google.cloud.datastream.v1alpha1.OracleTable.verify(message.oracleTables[i]);
                                    if (error)
                                        return "oracleTables." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates an OracleSchema message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.OracleSchema
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.OracleSchema} OracleSchema
                         */
                        OracleSchema.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.OracleSchema)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.OracleSchema();
                            if (object.schemaName != null)
                                message.schemaName = String(object.schemaName);
                            if (object.oracleTables) {
                                if (!Array.isArray(object.oracleTables))
                                    throw TypeError(".google.cloud.datastream.v1alpha1.OracleSchema.oracleTables: array expected");
                                message.oracleTables = [];
                                for (var i = 0; i < object.oracleTables.length; ++i) {
                                    if (typeof object.oracleTables[i] !== "object")
                                        throw TypeError(".google.cloud.datastream.v1alpha1.OracleSchema.oracleTables: object expected");
                                    message.oracleTables[i] = $root.google.cloud.datastream.v1alpha1.OracleTable.fromObject(object.oracleTables[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OracleSchema message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.OracleSchema
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.OracleSchema} message OracleSchema
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OracleSchema.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.oracleTables = [];
                            if (options.defaults)
                                object.schemaName = "";
                            if (message.schemaName != null && message.hasOwnProperty("schemaName"))
                                object.schemaName = message.schemaName;
                            if (message.oracleTables && message.oracleTables.length) {
                                object.oracleTables = [];
                                for (var j = 0; j < message.oracleTables.length; ++j)
                                    object.oracleTables[j] = $root.google.cloud.datastream.v1alpha1.OracleTable.toObject(message.oracleTables[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this OracleSchema to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.OracleSchema
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OracleSchema.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OracleSchema
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.OracleSchema
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OracleSchema.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.OracleSchema";
                        };
    
                        return OracleSchema;
                    })();
    
                    v1alpha1.OracleRdbms = (function() {
    
                        /**
                         * Properties of an OracleRdbms.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IOracleRdbms
                         * @property {Array.<google.cloud.datastream.v1alpha1.IOracleSchema>|null} [oracleSchemas] OracleRdbms oracleSchemas
                         */
    
                        /**
                         * Constructs a new OracleRdbms.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents an OracleRdbms.
                         * @implements IOracleRdbms
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IOracleRdbms=} [properties] Properties to set
                         */
                        function OracleRdbms(properties) {
                            this.oracleSchemas = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OracleRdbms oracleSchemas.
                         * @member {Array.<google.cloud.datastream.v1alpha1.IOracleSchema>} oracleSchemas
                         * @memberof google.cloud.datastream.v1alpha1.OracleRdbms
                         * @instance
                         */
                        OracleRdbms.prototype.oracleSchemas = $util.emptyArray;
    
                        /**
                         * Creates a new OracleRdbms instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.OracleRdbms
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IOracleRdbms=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.OracleRdbms} OracleRdbms instance
                         */
                        OracleRdbms.create = function create(properties) {
                            return new OracleRdbms(properties);
                        };
    
                        /**
                         * Encodes the specified OracleRdbms message. Does not implicitly {@link google.cloud.datastream.v1alpha1.OracleRdbms.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.OracleRdbms
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IOracleRdbms} message OracleRdbms message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OracleRdbms.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.oracleSchemas != null && message.oracleSchemas.length)
                                for (var i = 0; i < message.oracleSchemas.length; ++i)
                                    $root.google.cloud.datastream.v1alpha1.OracleSchema.encode(message.oracleSchemas[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OracleRdbms message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.OracleRdbms.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.OracleRdbms
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IOracleRdbms} message OracleRdbms message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OracleRdbms.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OracleRdbms message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.OracleRdbms
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.OracleRdbms} OracleRdbms
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OracleRdbms.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.OracleRdbms();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.oracleSchemas && message.oracleSchemas.length))
                                            message.oracleSchemas = [];
                                        message.oracleSchemas.push($root.google.cloud.datastream.v1alpha1.OracleSchema.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OracleRdbms message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.OracleRdbms
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.OracleRdbms} OracleRdbms
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OracleRdbms.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OracleRdbms message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.OracleRdbms
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OracleRdbms.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.oracleSchemas != null && message.hasOwnProperty("oracleSchemas")) {
                                if (!Array.isArray(message.oracleSchemas))
                                    return "oracleSchemas: array expected";
                                for (var i = 0; i < message.oracleSchemas.length; ++i) {
                                    var error = $root.google.cloud.datastream.v1alpha1.OracleSchema.verify(message.oracleSchemas[i]);
                                    if (error)
                                        return "oracleSchemas." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates an OracleRdbms message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.OracleRdbms
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.OracleRdbms} OracleRdbms
                         */
                        OracleRdbms.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.OracleRdbms)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.OracleRdbms();
                            if (object.oracleSchemas) {
                                if (!Array.isArray(object.oracleSchemas))
                                    throw TypeError(".google.cloud.datastream.v1alpha1.OracleRdbms.oracleSchemas: array expected");
                                message.oracleSchemas = [];
                                for (var i = 0; i < object.oracleSchemas.length; ++i) {
                                    if (typeof object.oracleSchemas[i] !== "object")
                                        throw TypeError(".google.cloud.datastream.v1alpha1.OracleRdbms.oracleSchemas: object expected");
                                    message.oracleSchemas[i] = $root.google.cloud.datastream.v1alpha1.OracleSchema.fromObject(object.oracleSchemas[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OracleRdbms message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.OracleRdbms
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.OracleRdbms} message OracleRdbms
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OracleRdbms.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.oracleSchemas = [];
                            if (message.oracleSchemas && message.oracleSchemas.length) {
                                object.oracleSchemas = [];
                                for (var j = 0; j < message.oracleSchemas.length; ++j)
                                    object.oracleSchemas[j] = $root.google.cloud.datastream.v1alpha1.OracleSchema.toObject(message.oracleSchemas[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this OracleRdbms to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.OracleRdbms
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OracleRdbms.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OracleRdbms
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.OracleRdbms
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OracleRdbms.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.OracleRdbms";
                        };
    
                        return OracleRdbms;
                    })();
    
                    v1alpha1.OracleSourceConfig = (function() {
    
                        /**
                         * Properties of an OracleSourceConfig.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IOracleSourceConfig
                         * @property {google.cloud.datastream.v1alpha1.IOracleRdbms|null} [allowlist] OracleSourceConfig allowlist
                         * @property {google.cloud.datastream.v1alpha1.IOracleRdbms|null} [rejectlist] OracleSourceConfig rejectlist
                         */
    
                        /**
                         * Constructs a new OracleSourceConfig.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents an OracleSourceConfig.
                         * @implements IOracleSourceConfig
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IOracleSourceConfig=} [properties] Properties to set
                         */
                        function OracleSourceConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OracleSourceConfig allowlist.
                         * @member {google.cloud.datastream.v1alpha1.IOracleRdbms|null|undefined} allowlist
                         * @memberof google.cloud.datastream.v1alpha1.OracleSourceConfig
                         * @instance
                         */
                        OracleSourceConfig.prototype.allowlist = null;
    
                        /**
                         * OracleSourceConfig rejectlist.
                         * @member {google.cloud.datastream.v1alpha1.IOracleRdbms|null|undefined} rejectlist
                         * @memberof google.cloud.datastream.v1alpha1.OracleSourceConfig
                         * @instance
                         */
                        OracleSourceConfig.prototype.rejectlist = null;
    
                        /**
                         * Creates a new OracleSourceConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.OracleSourceConfig
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IOracleSourceConfig=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.OracleSourceConfig} OracleSourceConfig instance
                         */
                        OracleSourceConfig.create = function create(properties) {
                            return new OracleSourceConfig(properties);
                        };
    
                        /**
                         * Encodes the specified OracleSourceConfig message. Does not implicitly {@link google.cloud.datastream.v1alpha1.OracleSourceConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.OracleSourceConfig
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IOracleSourceConfig} message OracleSourceConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OracleSourceConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.allowlist != null && Object.hasOwnProperty.call(message, "allowlist"))
                                $root.google.cloud.datastream.v1alpha1.OracleRdbms.encode(message.allowlist, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.rejectlist != null && Object.hasOwnProperty.call(message, "rejectlist"))
                                $root.google.cloud.datastream.v1alpha1.OracleRdbms.encode(message.rejectlist, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OracleSourceConfig message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.OracleSourceConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.OracleSourceConfig
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IOracleSourceConfig} message OracleSourceConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OracleSourceConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OracleSourceConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.OracleSourceConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.OracleSourceConfig} OracleSourceConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OracleSourceConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.OracleSourceConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.allowlist = $root.google.cloud.datastream.v1alpha1.OracleRdbms.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.rejectlist = $root.google.cloud.datastream.v1alpha1.OracleRdbms.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OracleSourceConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.OracleSourceConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.OracleSourceConfig} OracleSourceConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OracleSourceConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OracleSourceConfig message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.OracleSourceConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OracleSourceConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.allowlist != null && message.hasOwnProperty("allowlist")) {
                                var error = $root.google.cloud.datastream.v1alpha1.OracleRdbms.verify(message.allowlist);
                                if (error)
                                    return "allowlist." + error;
                            }
                            if (message.rejectlist != null && message.hasOwnProperty("rejectlist")) {
                                var error = $root.google.cloud.datastream.v1alpha1.OracleRdbms.verify(message.rejectlist);
                                if (error)
                                    return "rejectlist." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an OracleSourceConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.OracleSourceConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.OracleSourceConfig} OracleSourceConfig
                         */
                        OracleSourceConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.OracleSourceConfig)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.OracleSourceConfig();
                            if (object.allowlist != null) {
                                if (typeof object.allowlist !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.OracleSourceConfig.allowlist: object expected");
                                message.allowlist = $root.google.cloud.datastream.v1alpha1.OracleRdbms.fromObject(object.allowlist);
                            }
                            if (object.rejectlist != null) {
                                if (typeof object.rejectlist !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.OracleSourceConfig.rejectlist: object expected");
                                message.rejectlist = $root.google.cloud.datastream.v1alpha1.OracleRdbms.fromObject(object.rejectlist);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OracleSourceConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.OracleSourceConfig
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.OracleSourceConfig} message OracleSourceConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OracleSourceConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.allowlist = null;
                                object.rejectlist = null;
                            }
                            if (message.allowlist != null && message.hasOwnProperty("allowlist"))
                                object.allowlist = $root.google.cloud.datastream.v1alpha1.OracleRdbms.toObject(message.allowlist, options);
                            if (message.rejectlist != null && message.hasOwnProperty("rejectlist"))
                                object.rejectlist = $root.google.cloud.datastream.v1alpha1.OracleRdbms.toObject(message.rejectlist, options);
                            return object;
                        };
    
                        /**
                         * Converts this OracleSourceConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.OracleSourceConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OracleSourceConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OracleSourceConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.OracleSourceConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OracleSourceConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.OracleSourceConfig";
                        };
    
                        return OracleSourceConfig;
                    })();
    
                    v1alpha1.MysqlColumn = (function() {
    
                        /**
                         * Properties of a MysqlColumn.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IMysqlColumn
                         * @property {string|null} [columnName] MysqlColumn columnName
                         * @property {string|null} [dataType] MysqlColumn dataType
                         * @property {number|null} [length] MysqlColumn length
                         * @property {string|null} [collation] MysqlColumn collation
                         * @property {boolean|null} [primaryKey] MysqlColumn primaryKey
                         * @property {boolean|null} [nullable] MysqlColumn nullable
                         * @property {number|null} [ordinalPosition] MysqlColumn ordinalPosition
                         */
    
                        /**
                         * Constructs a new MysqlColumn.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a MysqlColumn.
                         * @implements IMysqlColumn
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IMysqlColumn=} [properties] Properties to set
                         */
                        function MysqlColumn(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MysqlColumn columnName.
                         * @member {string} columnName
                         * @memberof google.cloud.datastream.v1alpha1.MysqlColumn
                         * @instance
                         */
                        MysqlColumn.prototype.columnName = "";
    
                        /**
                         * MysqlColumn dataType.
                         * @member {string} dataType
                         * @memberof google.cloud.datastream.v1alpha1.MysqlColumn
                         * @instance
                         */
                        MysqlColumn.prototype.dataType = "";
    
                        /**
                         * MysqlColumn length.
                         * @member {number} length
                         * @memberof google.cloud.datastream.v1alpha1.MysqlColumn
                         * @instance
                         */
                        MysqlColumn.prototype.length = 0;
    
                        /**
                         * MysqlColumn collation.
                         * @member {string} collation
                         * @memberof google.cloud.datastream.v1alpha1.MysqlColumn
                         * @instance
                         */
                        MysqlColumn.prototype.collation = "";
    
                        /**
                         * MysqlColumn primaryKey.
                         * @member {boolean} primaryKey
                         * @memberof google.cloud.datastream.v1alpha1.MysqlColumn
                         * @instance
                         */
                        MysqlColumn.prototype.primaryKey = false;
    
                        /**
                         * MysqlColumn nullable.
                         * @member {boolean} nullable
                         * @memberof google.cloud.datastream.v1alpha1.MysqlColumn
                         * @instance
                         */
                        MysqlColumn.prototype.nullable = false;
    
                        /**
                         * MysqlColumn ordinalPosition.
                         * @member {number} ordinalPosition
                         * @memberof google.cloud.datastream.v1alpha1.MysqlColumn
                         * @instance
                         */
                        MysqlColumn.prototype.ordinalPosition = 0;
    
                        /**
                         * Creates a new MysqlColumn instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.MysqlColumn
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IMysqlColumn=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.MysqlColumn} MysqlColumn instance
                         */
                        MysqlColumn.create = function create(properties) {
                            return new MysqlColumn(properties);
                        };
    
                        /**
                         * Encodes the specified MysqlColumn message. Does not implicitly {@link google.cloud.datastream.v1alpha1.MysqlColumn.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.MysqlColumn
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IMysqlColumn} message MysqlColumn message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MysqlColumn.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.columnName != null && Object.hasOwnProperty.call(message, "columnName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.columnName);
                            if (message.dataType != null && Object.hasOwnProperty.call(message, "dataType"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.dataType);
                            if (message.length != null && Object.hasOwnProperty.call(message, "length"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.length);
                            if (message.collation != null && Object.hasOwnProperty.call(message, "collation"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.collation);
                            if (message.primaryKey != null && Object.hasOwnProperty.call(message, "primaryKey"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.primaryKey);
                            if (message.nullable != null && Object.hasOwnProperty.call(message, "nullable"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.nullable);
                            if (message.ordinalPosition != null && Object.hasOwnProperty.call(message, "ordinalPosition"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.ordinalPosition);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MysqlColumn message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.MysqlColumn.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.MysqlColumn
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IMysqlColumn} message MysqlColumn message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MysqlColumn.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MysqlColumn message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.MysqlColumn
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.MysqlColumn} MysqlColumn
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MysqlColumn.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.MysqlColumn();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.columnName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.dataType = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.length = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.collation = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.primaryKey = reader.bool();
                                        break;
                                    }
                                case 6: {
                                        message.nullable = reader.bool();
                                        break;
                                    }
                                case 7: {
                                        message.ordinalPosition = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MysqlColumn message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.MysqlColumn
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.MysqlColumn} MysqlColumn
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MysqlColumn.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MysqlColumn message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.MysqlColumn
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MysqlColumn.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.columnName != null && message.hasOwnProperty("columnName"))
                                if (!$util.isString(message.columnName))
                                    return "columnName: string expected";
                            if (message.dataType != null && message.hasOwnProperty("dataType"))
                                if (!$util.isString(message.dataType))
                                    return "dataType: string expected";
                            if (message.length != null && message.hasOwnProperty("length"))
                                if (!$util.isInteger(message.length))
                                    return "length: integer expected";
                            if (message.collation != null && message.hasOwnProperty("collation"))
                                if (!$util.isString(message.collation))
                                    return "collation: string expected";
                            if (message.primaryKey != null && message.hasOwnProperty("primaryKey"))
                                if (typeof message.primaryKey !== "boolean")
                                    return "primaryKey: boolean expected";
                            if (message.nullable != null && message.hasOwnProperty("nullable"))
                                if (typeof message.nullable !== "boolean")
                                    return "nullable: boolean expected";
                            if (message.ordinalPosition != null && message.hasOwnProperty("ordinalPosition"))
                                if (!$util.isInteger(message.ordinalPosition))
                                    return "ordinalPosition: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a MysqlColumn message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.MysqlColumn
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.MysqlColumn} MysqlColumn
                         */
                        MysqlColumn.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.MysqlColumn)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.MysqlColumn();
                            if (object.columnName != null)
                                message.columnName = String(object.columnName);
                            if (object.dataType != null)
                                message.dataType = String(object.dataType);
                            if (object.length != null)
                                message.length = object.length | 0;
                            if (object.collation != null)
                                message.collation = String(object.collation);
                            if (object.primaryKey != null)
                                message.primaryKey = Boolean(object.primaryKey);
                            if (object.nullable != null)
                                message.nullable = Boolean(object.nullable);
                            if (object.ordinalPosition != null)
                                message.ordinalPosition = object.ordinalPosition | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MysqlColumn message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.MysqlColumn
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.MysqlColumn} message MysqlColumn
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MysqlColumn.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.columnName = "";
                                object.dataType = "";
                                object.length = 0;
                                object.collation = "";
                                object.primaryKey = false;
                                object.nullable = false;
                                object.ordinalPosition = 0;
                            }
                            if (message.columnName != null && message.hasOwnProperty("columnName"))
                                object.columnName = message.columnName;
                            if (message.dataType != null && message.hasOwnProperty("dataType"))
                                object.dataType = message.dataType;
                            if (message.length != null && message.hasOwnProperty("length"))
                                object.length = message.length;
                            if (message.collation != null && message.hasOwnProperty("collation"))
                                object.collation = message.collation;
                            if (message.primaryKey != null && message.hasOwnProperty("primaryKey"))
                                object.primaryKey = message.primaryKey;
                            if (message.nullable != null && message.hasOwnProperty("nullable"))
                                object.nullable = message.nullable;
                            if (message.ordinalPosition != null && message.hasOwnProperty("ordinalPosition"))
                                object.ordinalPosition = message.ordinalPosition;
                            return object;
                        };
    
                        /**
                         * Converts this MysqlColumn to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.MysqlColumn
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MysqlColumn.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MysqlColumn
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.MysqlColumn
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MysqlColumn.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.MysqlColumn";
                        };
    
                        return MysqlColumn;
                    })();
    
                    v1alpha1.MysqlTable = (function() {
    
                        /**
                         * Properties of a MysqlTable.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IMysqlTable
                         * @property {string|null} [tableName] MysqlTable tableName
                         * @property {Array.<google.cloud.datastream.v1alpha1.IMysqlColumn>|null} [mysqlColumns] MysqlTable mysqlColumns
                         */
    
                        /**
                         * Constructs a new MysqlTable.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a MysqlTable.
                         * @implements IMysqlTable
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IMysqlTable=} [properties] Properties to set
                         */
                        function MysqlTable(properties) {
                            this.mysqlColumns = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MysqlTable tableName.
                         * @member {string} tableName
                         * @memberof google.cloud.datastream.v1alpha1.MysqlTable
                         * @instance
                         */
                        MysqlTable.prototype.tableName = "";
    
                        /**
                         * MysqlTable mysqlColumns.
                         * @member {Array.<google.cloud.datastream.v1alpha1.IMysqlColumn>} mysqlColumns
                         * @memberof google.cloud.datastream.v1alpha1.MysqlTable
                         * @instance
                         */
                        MysqlTable.prototype.mysqlColumns = $util.emptyArray;
    
                        /**
                         * Creates a new MysqlTable instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.MysqlTable
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IMysqlTable=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.MysqlTable} MysqlTable instance
                         */
                        MysqlTable.create = function create(properties) {
                            return new MysqlTable(properties);
                        };
    
                        /**
                         * Encodes the specified MysqlTable message. Does not implicitly {@link google.cloud.datastream.v1alpha1.MysqlTable.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.MysqlTable
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IMysqlTable} message MysqlTable message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MysqlTable.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.tableName != null && Object.hasOwnProperty.call(message, "tableName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.tableName);
                            if (message.mysqlColumns != null && message.mysqlColumns.length)
                                for (var i = 0; i < message.mysqlColumns.length; ++i)
                                    $root.google.cloud.datastream.v1alpha1.MysqlColumn.encode(message.mysqlColumns[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MysqlTable message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.MysqlTable.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.MysqlTable
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IMysqlTable} message MysqlTable message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MysqlTable.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MysqlTable message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.MysqlTable
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.MysqlTable} MysqlTable
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MysqlTable.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.MysqlTable();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.tableName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.mysqlColumns && message.mysqlColumns.length))
                                            message.mysqlColumns = [];
                                        message.mysqlColumns.push($root.google.cloud.datastream.v1alpha1.MysqlColumn.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MysqlTable message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.MysqlTable
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.MysqlTable} MysqlTable
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MysqlTable.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MysqlTable message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.MysqlTable
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MysqlTable.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.tableName != null && message.hasOwnProperty("tableName"))
                                if (!$util.isString(message.tableName))
                                    return "tableName: string expected";
                            if (message.mysqlColumns != null && message.hasOwnProperty("mysqlColumns")) {
                                if (!Array.isArray(message.mysqlColumns))
                                    return "mysqlColumns: array expected";
                                for (var i = 0; i < message.mysqlColumns.length; ++i) {
                                    var error = $root.google.cloud.datastream.v1alpha1.MysqlColumn.verify(message.mysqlColumns[i]);
                                    if (error)
                                        return "mysqlColumns." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a MysqlTable message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.MysqlTable
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.MysqlTable} MysqlTable
                         */
                        MysqlTable.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.MysqlTable)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.MysqlTable();
                            if (object.tableName != null)
                                message.tableName = String(object.tableName);
                            if (object.mysqlColumns) {
                                if (!Array.isArray(object.mysqlColumns))
                                    throw TypeError(".google.cloud.datastream.v1alpha1.MysqlTable.mysqlColumns: array expected");
                                message.mysqlColumns = [];
                                for (var i = 0; i < object.mysqlColumns.length; ++i) {
                                    if (typeof object.mysqlColumns[i] !== "object")
                                        throw TypeError(".google.cloud.datastream.v1alpha1.MysqlTable.mysqlColumns: object expected");
                                    message.mysqlColumns[i] = $root.google.cloud.datastream.v1alpha1.MysqlColumn.fromObject(object.mysqlColumns[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MysqlTable message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.MysqlTable
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.MysqlTable} message MysqlTable
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MysqlTable.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.mysqlColumns = [];
                            if (options.defaults)
                                object.tableName = "";
                            if (message.tableName != null && message.hasOwnProperty("tableName"))
                                object.tableName = message.tableName;
                            if (message.mysqlColumns && message.mysqlColumns.length) {
                                object.mysqlColumns = [];
                                for (var j = 0; j < message.mysqlColumns.length; ++j)
                                    object.mysqlColumns[j] = $root.google.cloud.datastream.v1alpha1.MysqlColumn.toObject(message.mysqlColumns[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this MysqlTable to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.MysqlTable
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MysqlTable.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MysqlTable
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.MysqlTable
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MysqlTable.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.MysqlTable";
                        };
    
                        return MysqlTable;
                    })();
    
                    v1alpha1.MysqlDatabase = (function() {
    
                        /**
                         * Properties of a MysqlDatabase.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IMysqlDatabase
                         * @property {string|null} [databaseName] MysqlDatabase databaseName
                         * @property {Array.<google.cloud.datastream.v1alpha1.IMysqlTable>|null} [mysqlTables] MysqlDatabase mysqlTables
                         */
    
                        /**
                         * Constructs a new MysqlDatabase.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a MysqlDatabase.
                         * @implements IMysqlDatabase
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IMysqlDatabase=} [properties] Properties to set
                         */
                        function MysqlDatabase(properties) {
                            this.mysqlTables = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MysqlDatabase databaseName.
                         * @member {string} databaseName
                         * @memberof google.cloud.datastream.v1alpha1.MysqlDatabase
                         * @instance
                         */
                        MysqlDatabase.prototype.databaseName = "";
    
                        /**
                         * MysqlDatabase mysqlTables.
                         * @member {Array.<google.cloud.datastream.v1alpha1.IMysqlTable>} mysqlTables
                         * @memberof google.cloud.datastream.v1alpha1.MysqlDatabase
                         * @instance
                         */
                        MysqlDatabase.prototype.mysqlTables = $util.emptyArray;
    
                        /**
                         * Creates a new MysqlDatabase instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.MysqlDatabase
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IMysqlDatabase=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.MysqlDatabase} MysqlDatabase instance
                         */
                        MysqlDatabase.create = function create(properties) {
                            return new MysqlDatabase(properties);
                        };
    
                        /**
                         * Encodes the specified MysqlDatabase message. Does not implicitly {@link google.cloud.datastream.v1alpha1.MysqlDatabase.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.MysqlDatabase
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IMysqlDatabase} message MysqlDatabase message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MysqlDatabase.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.databaseName != null && Object.hasOwnProperty.call(message, "databaseName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.databaseName);
                            if (message.mysqlTables != null && message.mysqlTables.length)
                                for (var i = 0; i < message.mysqlTables.length; ++i)
                                    $root.google.cloud.datastream.v1alpha1.MysqlTable.encode(message.mysqlTables[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MysqlDatabase message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.MysqlDatabase.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.MysqlDatabase
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IMysqlDatabase} message MysqlDatabase message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MysqlDatabase.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MysqlDatabase message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.MysqlDatabase
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.MysqlDatabase} MysqlDatabase
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MysqlDatabase.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.MysqlDatabase();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.databaseName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.mysqlTables && message.mysqlTables.length))
                                            message.mysqlTables = [];
                                        message.mysqlTables.push($root.google.cloud.datastream.v1alpha1.MysqlTable.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MysqlDatabase message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.MysqlDatabase
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.MysqlDatabase} MysqlDatabase
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MysqlDatabase.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MysqlDatabase message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.MysqlDatabase
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MysqlDatabase.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.databaseName != null && message.hasOwnProperty("databaseName"))
                                if (!$util.isString(message.databaseName))
                                    return "databaseName: string expected";
                            if (message.mysqlTables != null && message.hasOwnProperty("mysqlTables")) {
                                if (!Array.isArray(message.mysqlTables))
                                    return "mysqlTables: array expected";
                                for (var i = 0; i < message.mysqlTables.length; ++i) {
                                    var error = $root.google.cloud.datastream.v1alpha1.MysqlTable.verify(message.mysqlTables[i]);
                                    if (error)
                                        return "mysqlTables." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a MysqlDatabase message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.MysqlDatabase
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.MysqlDatabase} MysqlDatabase
                         */
                        MysqlDatabase.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.MysqlDatabase)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.MysqlDatabase();
                            if (object.databaseName != null)
                                message.databaseName = String(object.databaseName);
                            if (object.mysqlTables) {
                                if (!Array.isArray(object.mysqlTables))
                                    throw TypeError(".google.cloud.datastream.v1alpha1.MysqlDatabase.mysqlTables: array expected");
                                message.mysqlTables = [];
                                for (var i = 0; i < object.mysqlTables.length; ++i) {
                                    if (typeof object.mysqlTables[i] !== "object")
                                        throw TypeError(".google.cloud.datastream.v1alpha1.MysqlDatabase.mysqlTables: object expected");
                                    message.mysqlTables[i] = $root.google.cloud.datastream.v1alpha1.MysqlTable.fromObject(object.mysqlTables[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MysqlDatabase message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.MysqlDatabase
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.MysqlDatabase} message MysqlDatabase
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MysqlDatabase.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.mysqlTables = [];
                            if (options.defaults)
                                object.databaseName = "";
                            if (message.databaseName != null && message.hasOwnProperty("databaseName"))
                                object.databaseName = message.databaseName;
                            if (message.mysqlTables && message.mysqlTables.length) {
                                object.mysqlTables = [];
                                for (var j = 0; j < message.mysqlTables.length; ++j)
                                    object.mysqlTables[j] = $root.google.cloud.datastream.v1alpha1.MysqlTable.toObject(message.mysqlTables[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this MysqlDatabase to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.MysqlDatabase
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MysqlDatabase.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MysqlDatabase
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.MysqlDatabase
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MysqlDatabase.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.MysqlDatabase";
                        };
    
                        return MysqlDatabase;
                    })();
    
                    v1alpha1.MysqlRdbms = (function() {
    
                        /**
                         * Properties of a MysqlRdbms.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IMysqlRdbms
                         * @property {Array.<google.cloud.datastream.v1alpha1.IMysqlDatabase>|null} [mysqlDatabases] MysqlRdbms mysqlDatabases
                         */
    
                        /**
                         * Constructs a new MysqlRdbms.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a MysqlRdbms.
                         * @implements IMysqlRdbms
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IMysqlRdbms=} [properties] Properties to set
                         */
                        function MysqlRdbms(properties) {
                            this.mysqlDatabases = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MysqlRdbms mysqlDatabases.
                         * @member {Array.<google.cloud.datastream.v1alpha1.IMysqlDatabase>} mysqlDatabases
                         * @memberof google.cloud.datastream.v1alpha1.MysqlRdbms
                         * @instance
                         */
                        MysqlRdbms.prototype.mysqlDatabases = $util.emptyArray;
    
                        /**
                         * Creates a new MysqlRdbms instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.MysqlRdbms
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IMysqlRdbms=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.MysqlRdbms} MysqlRdbms instance
                         */
                        MysqlRdbms.create = function create(properties) {
                            return new MysqlRdbms(properties);
                        };
    
                        /**
                         * Encodes the specified MysqlRdbms message. Does not implicitly {@link google.cloud.datastream.v1alpha1.MysqlRdbms.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.MysqlRdbms
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IMysqlRdbms} message MysqlRdbms message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MysqlRdbms.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.mysqlDatabases != null && message.mysqlDatabases.length)
                                for (var i = 0; i < message.mysqlDatabases.length; ++i)
                                    $root.google.cloud.datastream.v1alpha1.MysqlDatabase.encode(message.mysqlDatabases[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MysqlRdbms message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.MysqlRdbms.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.MysqlRdbms
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IMysqlRdbms} message MysqlRdbms message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MysqlRdbms.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MysqlRdbms message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.MysqlRdbms
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.MysqlRdbms} MysqlRdbms
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MysqlRdbms.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.MysqlRdbms();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.mysqlDatabases && message.mysqlDatabases.length))
                                            message.mysqlDatabases = [];
                                        message.mysqlDatabases.push($root.google.cloud.datastream.v1alpha1.MysqlDatabase.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MysqlRdbms message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.MysqlRdbms
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.MysqlRdbms} MysqlRdbms
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MysqlRdbms.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MysqlRdbms message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.MysqlRdbms
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MysqlRdbms.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.mysqlDatabases != null && message.hasOwnProperty("mysqlDatabases")) {
                                if (!Array.isArray(message.mysqlDatabases))
                                    return "mysqlDatabases: array expected";
                                for (var i = 0; i < message.mysqlDatabases.length; ++i) {
                                    var error = $root.google.cloud.datastream.v1alpha1.MysqlDatabase.verify(message.mysqlDatabases[i]);
                                    if (error)
                                        return "mysqlDatabases." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a MysqlRdbms message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.MysqlRdbms
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.MysqlRdbms} MysqlRdbms
                         */
                        MysqlRdbms.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.MysqlRdbms)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.MysqlRdbms();
                            if (object.mysqlDatabases) {
                                if (!Array.isArray(object.mysqlDatabases))
                                    throw TypeError(".google.cloud.datastream.v1alpha1.MysqlRdbms.mysqlDatabases: array expected");
                                message.mysqlDatabases = [];
                                for (var i = 0; i < object.mysqlDatabases.length; ++i) {
                                    if (typeof object.mysqlDatabases[i] !== "object")
                                        throw TypeError(".google.cloud.datastream.v1alpha1.MysqlRdbms.mysqlDatabases: object expected");
                                    message.mysqlDatabases[i] = $root.google.cloud.datastream.v1alpha1.MysqlDatabase.fromObject(object.mysqlDatabases[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MysqlRdbms message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.MysqlRdbms
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.MysqlRdbms} message MysqlRdbms
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MysqlRdbms.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.mysqlDatabases = [];
                            if (message.mysqlDatabases && message.mysqlDatabases.length) {
                                object.mysqlDatabases = [];
                                for (var j = 0; j < message.mysqlDatabases.length; ++j)
                                    object.mysqlDatabases[j] = $root.google.cloud.datastream.v1alpha1.MysqlDatabase.toObject(message.mysqlDatabases[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this MysqlRdbms to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.MysqlRdbms
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MysqlRdbms.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MysqlRdbms
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.MysqlRdbms
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MysqlRdbms.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.MysqlRdbms";
                        };
    
                        return MysqlRdbms;
                    })();
    
                    v1alpha1.MysqlSourceConfig = (function() {
    
                        /**
                         * Properties of a MysqlSourceConfig.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IMysqlSourceConfig
                         * @property {google.cloud.datastream.v1alpha1.IMysqlRdbms|null} [allowlist] MysqlSourceConfig allowlist
                         * @property {google.cloud.datastream.v1alpha1.IMysqlRdbms|null} [rejectlist] MysqlSourceConfig rejectlist
                         */
    
                        /**
                         * Constructs a new MysqlSourceConfig.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a MysqlSourceConfig.
                         * @implements IMysqlSourceConfig
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IMysqlSourceConfig=} [properties] Properties to set
                         */
                        function MysqlSourceConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MysqlSourceConfig allowlist.
                         * @member {google.cloud.datastream.v1alpha1.IMysqlRdbms|null|undefined} allowlist
                         * @memberof google.cloud.datastream.v1alpha1.MysqlSourceConfig
                         * @instance
                         */
                        MysqlSourceConfig.prototype.allowlist = null;
    
                        /**
                         * MysqlSourceConfig rejectlist.
                         * @member {google.cloud.datastream.v1alpha1.IMysqlRdbms|null|undefined} rejectlist
                         * @memberof google.cloud.datastream.v1alpha1.MysqlSourceConfig
                         * @instance
                         */
                        MysqlSourceConfig.prototype.rejectlist = null;
    
                        /**
                         * Creates a new MysqlSourceConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.MysqlSourceConfig
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IMysqlSourceConfig=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.MysqlSourceConfig} MysqlSourceConfig instance
                         */
                        MysqlSourceConfig.create = function create(properties) {
                            return new MysqlSourceConfig(properties);
                        };
    
                        /**
                         * Encodes the specified MysqlSourceConfig message. Does not implicitly {@link google.cloud.datastream.v1alpha1.MysqlSourceConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.MysqlSourceConfig
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IMysqlSourceConfig} message MysqlSourceConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MysqlSourceConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.allowlist != null && Object.hasOwnProperty.call(message, "allowlist"))
                                $root.google.cloud.datastream.v1alpha1.MysqlRdbms.encode(message.allowlist, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.rejectlist != null && Object.hasOwnProperty.call(message, "rejectlist"))
                                $root.google.cloud.datastream.v1alpha1.MysqlRdbms.encode(message.rejectlist, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MysqlSourceConfig message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.MysqlSourceConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.MysqlSourceConfig
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IMysqlSourceConfig} message MysqlSourceConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MysqlSourceConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MysqlSourceConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.MysqlSourceConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.MysqlSourceConfig} MysqlSourceConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MysqlSourceConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.MysqlSourceConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.allowlist = $root.google.cloud.datastream.v1alpha1.MysqlRdbms.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.rejectlist = $root.google.cloud.datastream.v1alpha1.MysqlRdbms.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MysqlSourceConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.MysqlSourceConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.MysqlSourceConfig} MysqlSourceConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MysqlSourceConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MysqlSourceConfig message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.MysqlSourceConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MysqlSourceConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.allowlist != null && message.hasOwnProperty("allowlist")) {
                                var error = $root.google.cloud.datastream.v1alpha1.MysqlRdbms.verify(message.allowlist);
                                if (error)
                                    return "allowlist." + error;
                            }
                            if (message.rejectlist != null && message.hasOwnProperty("rejectlist")) {
                                var error = $root.google.cloud.datastream.v1alpha1.MysqlRdbms.verify(message.rejectlist);
                                if (error)
                                    return "rejectlist." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a MysqlSourceConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.MysqlSourceConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.MysqlSourceConfig} MysqlSourceConfig
                         */
                        MysqlSourceConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.MysqlSourceConfig)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.MysqlSourceConfig();
                            if (object.allowlist != null) {
                                if (typeof object.allowlist !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.MysqlSourceConfig.allowlist: object expected");
                                message.allowlist = $root.google.cloud.datastream.v1alpha1.MysqlRdbms.fromObject(object.allowlist);
                            }
                            if (object.rejectlist != null) {
                                if (typeof object.rejectlist !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.MysqlSourceConfig.rejectlist: object expected");
                                message.rejectlist = $root.google.cloud.datastream.v1alpha1.MysqlRdbms.fromObject(object.rejectlist);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MysqlSourceConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.MysqlSourceConfig
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.MysqlSourceConfig} message MysqlSourceConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MysqlSourceConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.allowlist = null;
                                object.rejectlist = null;
                            }
                            if (message.allowlist != null && message.hasOwnProperty("allowlist"))
                                object.allowlist = $root.google.cloud.datastream.v1alpha1.MysqlRdbms.toObject(message.allowlist, options);
                            if (message.rejectlist != null && message.hasOwnProperty("rejectlist"))
                                object.rejectlist = $root.google.cloud.datastream.v1alpha1.MysqlRdbms.toObject(message.rejectlist, options);
                            return object;
                        };
    
                        /**
                         * Converts this MysqlSourceConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.MysqlSourceConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MysqlSourceConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MysqlSourceConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.MysqlSourceConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MysqlSourceConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.MysqlSourceConfig";
                        };
    
                        return MysqlSourceConfig;
                    })();
    
                    v1alpha1.SourceConfig = (function() {
    
                        /**
                         * Properties of a SourceConfig.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface ISourceConfig
                         * @property {string|null} [sourceConnectionProfileName] SourceConfig sourceConnectionProfileName
                         * @property {google.cloud.datastream.v1alpha1.IOracleSourceConfig|null} [oracleSourceConfig] SourceConfig oracleSourceConfig
                         * @property {google.cloud.datastream.v1alpha1.IMysqlSourceConfig|null} [mysqlSourceConfig] SourceConfig mysqlSourceConfig
                         */
    
                        /**
                         * Constructs a new SourceConfig.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a SourceConfig.
                         * @implements ISourceConfig
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.ISourceConfig=} [properties] Properties to set
                         */
                        function SourceConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SourceConfig sourceConnectionProfileName.
                         * @member {string} sourceConnectionProfileName
                         * @memberof google.cloud.datastream.v1alpha1.SourceConfig
                         * @instance
                         */
                        SourceConfig.prototype.sourceConnectionProfileName = "";
    
                        /**
                         * SourceConfig oracleSourceConfig.
                         * @member {google.cloud.datastream.v1alpha1.IOracleSourceConfig|null|undefined} oracleSourceConfig
                         * @memberof google.cloud.datastream.v1alpha1.SourceConfig
                         * @instance
                         */
                        SourceConfig.prototype.oracleSourceConfig = null;
    
                        /**
                         * SourceConfig mysqlSourceConfig.
                         * @member {google.cloud.datastream.v1alpha1.IMysqlSourceConfig|null|undefined} mysqlSourceConfig
                         * @memberof google.cloud.datastream.v1alpha1.SourceConfig
                         * @instance
                         */
                        SourceConfig.prototype.mysqlSourceConfig = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * SourceConfig sourceStreamConfig.
                         * @member {"oracleSourceConfig"|"mysqlSourceConfig"|undefined} sourceStreamConfig
                         * @memberof google.cloud.datastream.v1alpha1.SourceConfig
                         * @instance
                         */
                        Object.defineProperty(SourceConfig.prototype, "sourceStreamConfig", {
                            get: $util.oneOfGetter($oneOfFields = ["oracleSourceConfig", "mysqlSourceConfig"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new SourceConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.SourceConfig
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.ISourceConfig=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.SourceConfig} SourceConfig instance
                         */
                        SourceConfig.create = function create(properties) {
                            return new SourceConfig(properties);
                        };
    
                        /**
                         * Encodes the specified SourceConfig message. Does not implicitly {@link google.cloud.datastream.v1alpha1.SourceConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.SourceConfig
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.ISourceConfig} message SourceConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SourceConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.sourceConnectionProfileName != null && Object.hasOwnProperty.call(message, "sourceConnectionProfileName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.sourceConnectionProfileName);
                            if (message.oracleSourceConfig != null && Object.hasOwnProperty.call(message, "oracleSourceConfig"))
                                $root.google.cloud.datastream.v1alpha1.OracleSourceConfig.encode(message.oracleSourceConfig, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            if (message.mysqlSourceConfig != null && Object.hasOwnProperty.call(message, "mysqlSourceConfig"))
                                $root.google.cloud.datastream.v1alpha1.MysqlSourceConfig.encode(message.mysqlSourceConfig, writer.uint32(/* id 101, wireType 2 =*/810).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SourceConfig message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.SourceConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.SourceConfig
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.ISourceConfig} message SourceConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SourceConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SourceConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.SourceConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.SourceConfig} SourceConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SourceConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.SourceConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.sourceConnectionProfileName = reader.string();
                                        break;
                                    }
                                case 100: {
                                        message.oracleSourceConfig = $root.google.cloud.datastream.v1alpha1.OracleSourceConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 101: {
                                        message.mysqlSourceConfig = $root.google.cloud.datastream.v1alpha1.MysqlSourceConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SourceConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.SourceConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.SourceConfig} SourceConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SourceConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SourceConfig message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.SourceConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SourceConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.sourceConnectionProfileName != null && message.hasOwnProperty("sourceConnectionProfileName"))
                                if (!$util.isString(message.sourceConnectionProfileName))
                                    return "sourceConnectionProfileName: string expected";
                            if (message.oracleSourceConfig != null && message.hasOwnProperty("oracleSourceConfig")) {
                                properties.sourceStreamConfig = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1alpha1.OracleSourceConfig.verify(message.oracleSourceConfig);
                                    if (error)
                                        return "oracleSourceConfig." + error;
                                }
                            }
                            if (message.mysqlSourceConfig != null && message.hasOwnProperty("mysqlSourceConfig")) {
                                if (properties.sourceStreamConfig === 1)
                                    return "sourceStreamConfig: multiple values";
                                properties.sourceStreamConfig = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1alpha1.MysqlSourceConfig.verify(message.mysqlSourceConfig);
                                    if (error)
                                        return "mysqlSourceConfig." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SourceConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.SourceConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.SourceConfig} SourceConfig
                         */
                        SourceConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.SourceConfig)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.SourceConfig();
                            if (object.sourceConnectionProfileName != null)
                                message.sourceConnectionProfileName = String(object.sourceConnectionProfileName);
                            if (object.oracleSourceConfig != null) {
                                if (typeof object.oracleSourceConfig !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.SourceConfig.oracleSourceConfig: object expected");
                                message.oracleSourceConfig = $root.google.cloud.datastream.v1alpha1.OracleSourceConfig.fromObject(object.oracleSourceConfig);
                            }
                            if (object.mysqlSourceConfig != null) {
                                if (typeof object.mysqlSourceConfig !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.SourceConfig.mysqlSourceConfig: object expected");
                                message.mysqlSourceConfig = $root.google.cloud.datastream.v1alpha1.MysqlSourceConfig.fromObject(object.mysqlSourceConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SourceConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.SourceConfig
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.SourceConfig} message SourceConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SourceConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.sourceConnectionProfileName = "";
                            if (message.sourceConnectionProfileName != null && message.hasOwnProperty("sourceConnectionProfileName"))
                                object.sourceConnectionProfileName = message.sourceConnectionProfileName;
                            if (message.oracleSourceConfig != null && message.hasOwnProperty("oracleSourceConfig")) {
                                object.oracleSourceConfig = $root.google.cloud.datastream.v1alpha1.OracleSourceConfig.toObject(message.oracleSourceConfig, options);
                                if (options.oneofs)
                                    object.sourceStreamConfig = "oracleSourceConfig";
                            }
                            if (message.mysqlSourceConfig != null && message.hasOwnProperty("mysqlSourceConfig")) {
                                object.mysqlSourceConfig = $root.google.cloud.datastream.v1alpha1.MysqlSourceConfig.toObject(message.mysqlSourceConfig, options);
                                if (options.oneofs)
                                    object.sourceStreamConfig = "mysqlSourceConfig";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this SourceConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.SourceConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SourceConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SourceConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.SourceConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SourceConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.SourceConfig";
                        };
    
                        return SourceConfig;
                    })();
    
                    v1alpha1.AvroFileFormat = (function() {
    
                        /**
                         * Properties of an AvroFileFormat.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IAvroFileFormat
                         */
    
                        /**
                         * Constructs a new AvroFileFormat.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents an AvroFileFormat.
                         * @implements IAvroFileFormat
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IAvroFileFormat=} [properties] Properties to set
                         */
                        function AvroFileFormat(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new AvroFileFormat instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.AvroFileFormat
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IAvroFileFormat=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.AvroFileFormat} AvroFileFormat instance
                         */
                        AvroFileFormat.create = function create(properties) {
                            return new AvroFileFormat(properties);
                        };
    
                        /**
                         * Encodes the specified AvroFileFormat message. Does not implicitly {@link google.cloud.datastream.v1alpha1.AvroFileFormat.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.AvroFileFormat
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IAvroFileFormat} message AvroFileFormat message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AvroFileFormat.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AvroFileFormat message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.AvroFileFormat.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.AvroFileFormat
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IAvroFileFormat} message AvroFileFormat message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AvroFileFormat.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AvroFileFormat message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.AvroFileFormat
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.AvroFileFormat} AvroFileFormat
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AvroFileFormat.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.AvroFileFormat();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AvroFileFormat message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.AvroFileFormat
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.AvroFileFormat} AvroFileFormat
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AvroFileFormat.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AvroFileFormat message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.AvroFileFormat
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AvroFileFormat.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates an AvroFileFormat message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.AvroFileFormat
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.AvroFileFormat} AvroFileFormat
                         */
                        AvroFileFormat.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.AvroFileFormat)
                                return object;
                            return new $root.google.cloud.datastream.v1alpha1.AvroFileFormat();
                        };
    
                        /**
                         * Creates a plain object from an AvroFileFormat message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.AvroFileFormat
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.AvroFileFormat} message AvroFileFormat
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AvroFileFormat.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this AvroFileFormat to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.AvroFileFormat
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AvroFileFormat.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AvroFileFormat
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.AvroFileFormat
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AvroFileFormat.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.AvroFileFormat";
                        };
    
                        return AvroFileFormat;
                    })();
    
                    /**
                     * GcsFileFormat enum.
                     * @name google.cloud.datastream.v1alpha1.GcsFileFormat
                     * @enum {number}
                     * @property {number} GCS_FILE_FORMAT_UNSPECIFIED=0 GCS_FILE_FORMAT_UNSPECIFIED value
                     * @property {number} AVRO=1 AVRO value
                     */
                    v1alpha1.GcsFileFormat = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "GCS_FILE_FORMAT_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "AVRO"] = 1;
                        return values;
                    })();
    
                    /**
                     * SchemaFileFormat enum.
                     * @name google.cloud.datastream.v1alpha1.SchemaFileFormat
                     * @enum {number}
                     * @property {number} SCHEMA_FILE_FORMAT_UNSPECIFIED=0 SCHEMA_FILE_FORMAT_UNSPECIFIED value
                     * @property {number} NO_SCHEMA_FILE=1 NO_SCHEMA_FILE value
                     * @property {number} AVRO_SCHEMA_FILE=2 AVRO_SCHEMA_FILE value
                     */
                    v1alpha1.SchemaFileFormat = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "SCHEMA_FILE_FORMAT_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "NO_SCHEMA_FILE"] = 1;
                        values[valuesById[2] = "AVRO_SCHEMA_FILE"] = 2;
                        return values;
                    })();
    
                    v1alpha1.JsonFileFormat = (function() {
    
                        /**
                         * Properties of a JsonFileFormat.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IJsonFileFormat
                         * @property {google.cloud.datastream.v1alpha1.SchemaFileFormat|null} [schemaFileFormat] JsonFileFormat schemaFileFormat
                         * @property {google.cloud.datastream.v1alpha1.JsonFileFormat.JsonCompression|null} [compression] JsonFileFormat compression
                         */
    
                        /**
                         * Constructs a new JsonFileFormat.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a JsonFileFormat.
                         * @implements IJsonFileFormat
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IJsonFileFormat=} [properties] Properties to set
                         */
                        function JsonFileFormat(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * JsonFileFormat schemaFileFormat.
                         * @member {google.cloud.datastream.v1alpha1.SchemaFileFormat} schemaFileFormat
                         * @memberof google.cloud.datastream.v1alpha1.JsonFileFormat
                         * @instance
                         */
                        JsonFileFormat.prototype.schemaFileFormat = 0;
    
                        /**
                         * JsonFileFormat compression.
                         * @member {google.cloud.datastream.v1alpha1.JsonFileFormat.JsonCompression} compression
                         * @memberof google.cloud.datastream.v1alpha1.JsonFileFormat
                         * @instance
                         */
                        JsonFileFormat.prototype.compression = 0;
    
                        /**
                         * Creates a new JsonFileFormat instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.JsonFileFormat
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IJsonFileFormat=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.JsonFileFormat} JsonFileFormat instance
                         */
                        JsonFileFormat.create = function create(properties) {
                            return new JsonFileFormat(properties);
                        };
    
                        /**
                         * Encodes the specified JsonFileFormat message. Does not implicitly {@link google.cloud.datastream.v1alpha1.JsonFileFormat.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.JsonFileFormat
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IJsonFileFormat} message JsonFileFormat message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        JsonFileFormat.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.schemaFileFormat != null && Object.hasOwnProperty.call(message, "schemaFileFormat"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.schemaFileFormat);
                            if (message.compression != null && Object.hasOwnProperty.call(message, "compression"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.compression);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified JsonFileFormat message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.JsonFileFormat.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.JsonFileFormat
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IJsonFileFormat} message JsonFileFormat message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        JsonFileFormat.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a JsonFileFormat message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.JsonFileFormat
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.JsonFileFormat} JsonFileFormat
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        JsonFileFormat.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.JsonFileFormat();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.schemaFileFormat = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.compression = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a JsonFileFormat message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.JsonFileFormat
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.JsonFileFormat} JsonFileFormat
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        JsonFileFormat.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a JsonFileFormat message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.JsonFileFormat
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        JsonFileFormat.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.schemaFileFormat != null && message.hasOwnProperty("schemaFileFormat"))
                                switch (message.schemaFileFormat) {
                                default:
                                    return "schemaFileFormat: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.compression != null && message.hasOwnProperty("compression"))
                                switch (message.compression) {
                                default:
                                    return "compression: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a JsonFileFormat message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.JsonFileFormat
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.JsonFileFormat} JsonFileFormat
                         */
                        JsonFileFormat.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.JsonFileFormat)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.JsonFileFormat();
                            switch (object.schemaFileFormat) {
                            default:
                                if (typeof object.schemaFileFormat === "number") {
                                    message.schemaFileFormat = object.schemaFileFormat;
                                    break;
                                }
                                break;
                            case "SCHEMA_FILE_FORMAT_UNSPECIFIED":
                            case 0:
                                message.schemaFileFormat = 0;
                                break;
                            case "NO_SCHEMA_FILE":
                            case 1:
                                message.schemaFileFormat = 1;
                                break;
                            case "AVRO_SCHEMA_FILE":
                            case 2:
                                message.schemaFileFormat = 2;
                                break;
                            }
                            switch (object.compression) {
                            default:
                                if (typeof object.compression === "number") {
                                    message.compression = object.compression;
                                    break;
                                }
                                break;
                            case "JSON_COMPRESSION_UNSPECIFIED":
                            case 0:
                                message.compression = 0;
                                break;
                            case "NO_COMPRESSION":
                            case 1:
                                message.compression = 1;
                                break;
                            case "GZIP":
                            case 2:
                                message.compression = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a JsonFileFormat message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.JsonFileFormat
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.JsonFileFormat} message JsonFileFormat
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        JsonFileFormat.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.schemaFileFormat = options.enums === String ? "SCHEMA_FILE_FORMAT_UNSPECIFIED" : 0;
                                object.compression = options.enums === String ? "JSON_COMPRESSION_UNSPECIFIED" : 0;
                            }
                            if (message.schemaFileFormat != null && message.hasOwnProperty("schemaFileFormat"))
                                object.schemaFileFormat = options.enums === String ? $root.google.cloud.datastream.v1alpha1.SchemaFileFormat[message.schemaFileFormat] === undefined ? message.schemaFileFormat : $root.google.cloud.datastream.v1alpha1.SchemaFileFormat[message.schemaFileFormat] : message.schemaFileFormat;
                            if (message.compression != null && message.hasOwnProperty("compression"))
                                object.compression = options.enums === String ? $root.google.cloud.datastream.v1alpha1.JsonFileFormat.JsonCompression[message.compression] === undefined ? message.compression : $root.google.cloud.datastream.v1alpha1.JsonFileFormat.JsonCompression[message.compression] : message.compression;
                            return object;
                        };
    
                        /**
                         * Converts this JsonFileFormat to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.JsonFileFormat
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        JsonFileFormat.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for JsonFileFormat
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.JsonFileFormat
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        JsonFileFormat.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.JsonFileFormat";
                        };
    
                        /**
                         * JsonCompression enum.
                         * @name google.cloud.datastream.v1alpha1.JsonFileFormat.JsonCompression
                         * @enum {number}
                         * @property {number} JSON_COMPRESSION_UNSPECIFIED=0 JSON_COMPRESSION_UNSPECIFIED value
                         * @property {number} NO_COMPRESSION=1 NO_COMPRESSION value
                         * @property {number} GZIP=2 GZIP value
                         */
                        JsonFileFormat.JsonCompression = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "JSON_COMPRESSION_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "NO_COMPRESSION"] = 1;
                            values[valuesById[2] = "GZIP"] = 2;
                            return values;
                        })();
    
                        return JsonFileFormat;
                    })();
    
                    v1alpha1.GcsDestinationConfig = (function() {
    
                        /**
                         * Properties of a GcsDestinationConfig.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IGcsDestinationConfig
                         * @property {string|null} [path] GcsDestinationConfig path
                         * @property {google.cloud.datastream.v1alpha1.GcsFileFormat|null} [gcsFileFormat] GcsDestinationConfig gcsFileFormat
                         * @property {number|null} [fileRotationMb] GcsDestinationConfig fileRotationMb
                         * @property {google.protobuf.IDuration|null} [fileRotationInterval] GcsDestinationConfig fileRotationInterval
                         * @property {google.cloud.datastream.v1alpha1.IAvroFileFormat|null} [avroFileFormat] GcsDestinationConfig avroFileFormat
                         * @property {google.cloud.datastream.v1alpha1.IJsonFileFormat|null} [jsonFileFormat] GcsDestinationConfig jsonFileFormat
                         */
    
                        /**
                         * Constructs a new GcsDestinationConfig.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a GcsDestinationConfig.
                         * @implements IGcsDestinationConfig
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IGcsDestinationConfig=} [properties] Properties to set
                         */
                        function GcsDestinationConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GcsDestinationConfig path.
                         * @member {string} path
                         * @memberof google.cloud.datastream.v1alpha1.GcsDestinationConfig
                         * @instance
                         */
                        GcsDestinationConfig.prototype.path = "";
    
                        /**
                         * GcsDestinationConfig gcsFileFormat.
                         * @member {google.cloud.datastream.v1alpha1.GcsFileFormat} gcsFileFormat
                         * @memberof google.cloud.datastream.v1alpha1.GcsDestinationConfig
                         * @instance
                         */
                        GcsDestinationConfig.prototype.gcsFileFormat = 0;
    
                        /**
                         * GcsDestinationConfig fileRotationMb.
                         * @member {number} fileRotationMb
                         * @memberof google.cloud.datastream.v1alpha1.GcsDestinationConfig
                         * @instance
                         */
                        GcsDestinationConfig.prototype.fileRotationMb = 0;
    
                        /**
                         * GcsDestinationConfig fileRotationInterval.
                         * @member {google.protobuf.IDuration|null|undefined} fileRotationInterval
                         * @memberof google.cloud.datastream.v1alpha1.GcsDestinationConfig
                         * @instance
                         */
                        GcsDestinationConfig.prototype.fileRotationInterval = null;
    
                        /**
                         * GcsDestinationConfig avroFileFormat.
                         * @member {google.cloud.datastream.v1alpha1.IAvroFileFormat|null|undefined} avroFileFormat
                         * @memberof google.cloud.datastream.v1alpha1.GcsDestinationConfig
                         * @instance
                         */
                        GcsDestinationConfig.prototype.avroFileFormat = null;
    
                        /**
                         * GcsDestinationConfig jsonFileFormat.
                         * @member {google.cloud.datastream.v1alpha1.IJsonFileFormat|null|undefined} jsonFileFormat
                         * @memberof google.cloud.datastream.v1alpha1.GcsDestinationConfig
                         * @instance
                         */
                        GcsDestinationConfig.prototype.jsonFileFormat = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * GcsDestinationConfig fileFormat.
                         * @member {"avroFileFormat"|"jsonFileFormat"|undefined} fileFormat
                         * @memberof google.cloud.datastream.v1alpha1.GcsDestinationConfig
                         * @instance
                         */
                        Object.defineProperty(GcsDestinationConfig.prototype, "fileFormat", {
                            get: $util.oneOfGetter($oneOfFields = ["avroFileFormat", "jsonFileFormat"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new GcsDestinationConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.GcsDestinationConfig
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IGcsDestinationConfig=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.GcsDestinationConfig} GcsDestinationConfig instance
                         */
                        GcsDestinationConfig.create = function create(properties) {
                            return new GcsDestinationConfig(properties);
                        };
    
                        /**
                         * Encodes the specified GcsDestinationConfig message. Does not implicitly {@link google.cloud.datastream.v1alpha1.GcsDestinationConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.GcsDestinationConfig
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IGcsDestinationConfig} message GcsDestinationConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GcsDestinationConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.path);
                            if (message.gcsFileFormat != null && Object.hasOwnProperty.call(message, "gcsFileFormat"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.gcsFileFormat);
                            if (message.fileRotationMb != null && Object.hasOwnProperty.call(message, "fileRotationMb"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.fileRotationMb);
                            if (message.fileRotationInterval != null && Object.hasOwnProperty.call(message, "fileRotationInterval"))
                                $root.google.protobuf.Duration.encode(message.fileRotationInterval, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.avroFileFormat != null && Object.hasOwnProperty.call(message, "avroFileFormat"))
                                $root.google.cloud.datastream.v1alpha1.AvroFileFormat.encode(message.avroFileFormat, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            if (message.jsonFileFormat != null && Object.hasOwnProperty.call(message, "jsonFileFormat"))
                                $root.google.cloud.datastream.v1alpha1.JsonFileFormat.encode(message.jsonFileFormat, writer.uint32(/* id 101, wireType 2 =*/810).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GcsDestinationConfig message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.GcsDestinationConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.GcsDestinationConfig
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IGcsDestinationConfig} message GcsDestinationConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GcsDestinationConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GcsDestinationConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.GcsDestinationConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.GcsDestinationConfig} GcsDestinationConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GcsDestinationConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.GcsDestinationConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.path = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.gcsFileFormat = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.fileRotationMb = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.fileRotationInterval = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 100: {
                                        message.avroFileFormat = $root.google.cloud.datastream.v1alpha1.AvroFileFormat.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 101: {
                                        message.jsonFileFormat = $root.google.cloud.datastream.v1alpha1.JsonFileFormat.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GcsDestinationConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.GcsDestinationConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.GcsDestinationConfig} GcsDestinationConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GcsDestinationConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GcsDestinationConfig message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.GcsDestinationConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GcsDestinationConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.path != null && message.hasOwnProperty("path"))
                                if (!$util.isString(message.path))
                                    return "path: string expected";
                            if (message.gcsFileFormat != null && message.hasOwnProperty("gcsFileFormat"))
                                switch (message.gcsFileFormat) {
                                default:
                                    return "gcsFileFormat: enum value expected";
                                case 0:
                                case 1:
                                    break;
                                }
                            if (message.fileRotationMb != null && message.hasOwnProperty("fileRotationMb"))
                                if (!$util.isInteger(message.fileRotationMb))
                                    return "fileRotationMb: integer expected";
                            if (message.fileRotationInterval != null && message.hasOwnProperty("fileRotationInterval")) {
                                var error = $root.google.protobuf.Duration.verify(message.fileRotationInterval);
                                if (error)
                                    return "fileRotationInterval." + error;
                            }
                            if (message.avroFileFormat != null && message.hasOwnProperty("avroFileFormat")) {
                                properties.fileFormat = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1alpha1.AvroFileFormat.verify(message.avroFileFormat);
                                    if (error)
                                        return "avroFileFormat." + error;
                                }
                            }
                            if (message.jsonFileFormat != null && message.hasOwnProperty("jsonFileFormat")) {
                                if (properties.fileFormat === 1)
                                    return "fileFormat: multiple values";
                                properties.fileFormat = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1alpha1.JsonFileFormat.verify(message.jsonFileFormat);
                                    if (error)
                                        return "jsonFileFormat." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GcsDestinationConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.GcsDestinationConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.GcsDestinationConfig} GcsDestinationConfig
                         */
                        GcsDestinationConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.GcsDestinationConfig)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.GcsDestinationConfig();
                            if (object.path != null)
                                message.path = String(object.path);
                            switch (object.gcsFileFormat) {
                            default:
                                if (typeof object.gcsFileFormat === "number") {
                                    message.gcsFileFormat = object.gcsFileFormat;
                                    break;
                                }
                                break;
                            case "GCS_FILE_FORMAT_UNSPECIFIED":
                            case 0:
                                message.gcsFileFormat = 0;
                                break;
                            case "AVRO":
                            case 1:
                                message.gcsFileFormat = 1;
                                break;
                            }
                            if (object.fileRotationMb != null)
                                message.fileRotationMb = object.fileRotationMb | 0;
                            if (object.fileRotationInterval != null) {
                                if (typeof object.fileRotationInterval !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.GcsDestinationConfig.fileRotationInterval: object expected");
                                message.fileRotationInterval = $root.google.protobuf.Duration.fromObject(object.fileRotationInterval);
                            }
                            if (object.avroFileFormat != null) {
                                if (typeof object.avroFileFormat !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.GcsDestinationConfig.avroFileFormat: object expected");
                                message.avroFileFormat = $root.google.cloud.datastream.v1alpha1.AvroFileFormat.fromObject(object.avroFileFormat);
                            }
                            if (object.jsonFileFormat != null) {
                                if (typeof object.jsonFileFormat !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.GcsDestinationConfig.jsonFileFormat: object expected");
                                message.jsonFileFormat = $root.google.cloud.datastream.v1alpha1.JsonFileFormat.fromObject(object.jsonFileFormat);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GcsDestinationConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.GcsDestinationConfig
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.GcsDestinationConfig} message GcsDestinationConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GcsDestinationConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.path = "";
                                object.gcsFileFormat = options.enums === String ? "GCS_FILE_FORMAT_UNSPECIFIED" : 0;
                                object.fileRotationMb = 0;
                                object.fileRotationInterval = null;
                            }
                            if (message.path != null && message.hasOwnProperty("path"))
                                object.path = message.path;
                            if (message.gcsFileFormat != null && message.hasOwnProperty("gcsFileFormat"))
                                object.gcsFileFormat = options.enums === String ? $root.google.cloud.datastream.v1alpha1.GcsFileFormat[message.gcsFileFormat] === undefined ? message.gcsFileFormat : $root.google.cloud.datastream.v1alpha1.GcsFileFormat[message.gcsFileFormat] : message.gcsFileFormat;
                            if (message.fileRotationMb != null && message.hasOwnProperty("fileRotationMb"))
                                object.fileRotationMb = message.fileRotationMb;
                            if (message.fileRotationInterval != null && message.hasOwnProperty("fileRotationInterval"))
                                object.fileRotationInterval = $root.google.protobuf.Duration.toObject(message.fileRotationInterval, options);
                            if (message.avroFileFormat != null && message.hasOwnProperty("avroFileFormat")) {
                                object.avroFileFormat = $root.google.cloud.datastream.v1alpha1.AvroFileFormat.toObject(message.avroFileFormat, options);
                                if (options.oneofs)
                                    object.fileFormat = "avroFileFormat";
                            }
                            if (message.jsonFileFormat != null && message.hasOwnProperty("jsonFileFormat")) {
                                object.jsonFileFormat = $root.google.cloud.datastream.v1alpha1.JsonFileFormat.toObject(message.jsonFileFormat, options);
                                if (options.oneofs)
                                    object.fileFormat = "jsonFileFormat";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this GcsDestinationConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.GcsDestinationConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GcsDestinationConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GcsDestinationConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.GcsDestinationConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GcsDestinationConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.GcsDestinationConfig";
                        };
    
                        return GcsDestinationConfig;
                    })();
    
                    v1alpha1.DestinationConfig = (function() {
    
                        /**
                         * Properties of a DestinationConfig.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IDestinationConfig
                         * @property {string|null} [destinationConnectionProfileName] DestinationConfig destinationConnectionProfileName
                         * @property {google.cloud.datastream.v1alpha1.IGcsDestinationConfig|null} [gcsDestinationConfig] DestinationConfig gcsDestinationConfig
                         */
    
                        /**
                         * Constructs a new DestinationConfig.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a DestinationConfig.
                         * @implements IDestinationConfig
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IDestinationConfig=} [properties] Properties to set
                         */
                        function DestinationConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DestinationConfig destinationConnectionProfileName.
                         * @member {string} destinationConnectionProfileName
                         * @memberof google.cloud.datastream.v1alpha1.DestinationConfig
                         * @instance
                         */
                        DestinationConfig.prototype.destinationConnectionProfileName = "";
    
                        /**
                         * DestinationConfig gcsDestinationConfig.
                         * @member {google.cloud.datastream.v1alpha1.IGcsDestinationConfig|null|undefined} gcsDestinationConfig
                         * @memberof google.cloud.datastream.v1alpha1.DestinationConfig
                         * @instance
                         */
                        DestinationConfig.prototype.gcsDestinationConfig = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * DestinationConfig destinationStreamConfig.
                         * @member {"gcsDestinationConfig"|undefined} destinationStreamConfig
                         * @memberof google.cloud.datastream.v1alpha1.DestinationConfig
                         * @instance
                         */
                        Object.defineProperty(DestinationConfig.prototype, "destinationStreamConfig", {
                            get: $util.oneOfGetter($oneOfFields = ["gcsDestinationConfig"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new DestinationConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.DestinationConfig
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IDestinationConfig=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.DestinationConfig} DestinationConfig instance
                         */
                        DestinationConfig.create = function create(properties) {
                            return new DestinationConfig(properties);
                        };
    
                        /**
                         * Encodes the specified DestinationConfig message. Does not implicitly {@link google.cloud.datastream.v1alpha1.DestinationConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.DestinationConfig
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IDestinationConfig} message DestinationConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DestinationConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.destinationConnectionProfileName != null && Object.hasOwnProperty.call(message, "destinationConnectionProfileName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.destinationConnectionProfileName);
                            if (message.gcsDestinationConfig != null && Object.hasOwnProperty.call(message, "gcsDestinationConfig"))
                                $root.google.cloud.datastream.v1alpha1.GcsDestinationConfig.encode(message.gcsDestinationConfig, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DestinationConfig message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.DestinationConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.DestinationConfig
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IDestinationConfig} message DestinationConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DestinationConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DestinationConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.DestinationConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.DestinationConfig} DestinationConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DestinationConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.DestinationConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.destinationConnectionProfileName = reader.string();
                                        break;
                                    }
                                case 100: {
                                        message.gcsDestinationConfig = $root.google.cloud.datastream.v1alpha1.GcsDestinationConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DestinationConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.DestinationConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.DestinationConfig} DestinationConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DestinationConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DestinationConfig message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.DestinationConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DestinationConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.destinationConnectionProfileName != null && message.hasOwnProperty("destinationConnectionProfileName"))
                                if (!$util.isString(message.destinationConnectionProfileName))
                                    return "destinationConnectionProfileName: string expected";
                            if (message.gcsDestinationConfig != null && message.hasOwnProperty("gcsDestinationConfig")) {
                                properties.destinationStreamConfig = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1alpha1.GcsDestinationConfig.verify(message.gcsDestinationConfig);
                                    if (error)
                                        return "gcsDestinationConfig." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DestinationConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.DestinationConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.DestinationConfig} DestinationConfig
                         */
                        DestinationConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.DestinationConfig)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.DestinationConfig();
                            if (object.destinationConnectionProfileName != null)
                                message.destinationConnectionProfileName = String(object.destinationConnectionProfileName);
                            if (object.gcsDestinationConfig != null) {
                                if (typeof object.gcsDestinationConfig !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.DestinationConfig.gcsDestinationConfig: object expected");
                                message.gcsDestinationConfig = $root.google.cloud.datastream.v1alpha1.GcsDestinationConfig.fromObject(object.gcsDestinationConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DestinationConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.DestinationConfig
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.DestinationConfig} message DestinationConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DestinationConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.destinationConnectionProfileName = "";
                            if (message.destinationConnectionProfileName != null && message.hasOwnProperty("destinationConnectionProfileName"))
                                object.destinationConnectionProfileName = message.destinationConnectionProfileName;
                            if (message.gcsDestinationConfig != null && message.hasOwnProperty("gcsDestinationConfig")) {
                                object.gcsDestinationConfig = $root.google.cloud.datastream.v1alpha1.GcsDestinationConfig.toObject(message.gcsDestinationConfig, options);
                                if (options.oneofs)
                                    object.destinationStreamConfig = "gcsDestinationConfig";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this DestinationConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.DestinationConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DestinationConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DestinationConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.DestinationConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DestinationConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.DestinationConfig";
                        };
    
                        return DestinationConfig;
                    })();
    
                    v1alpha1.Stream = (function() {
    
                        /**
                         * Properties of a Stream.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IStream
                         * @property {string|null} [name] Stream name
                         * @property {google.protobuf.ITimestamp|null} [createTime] Stream createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Stream updateTime
                         * @property {Object.<string,string>|null} [labels] Stream labels
                         * @property {string|null} [displayName] Stream displayName
                         * @property {google.cloud.datastream.v1alpha1.ISourceConfig|null} [sourceConfig] Stream sourceConfig
                         * @property {google.cloud.datastream.v1alpha1.IDestinationConfig|null} [destinationConfig] Stream destinationConfig
                         * @property {google.cloud.datastream.v1alpha1.Stream.State|null} [state] Stream state
                         * @property {google.cloud.datastream.v1alpha1.Stream.IBackfillAllStrategy|null} [backfillAll] Stream backfillAll
                         * @property {google.cloud.datastream.v1alpha1.Stream.IBackfillNoneStrategy|null} [backfillNone] Stream backfillNone
                         * @property {Array.<google.cloud.datastream.v1alpha1.IError>|null} [errors] Stream errors
                         */
    
                        /**
                         * Constructs a new Stream.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a Stream.
                         * @implements IStream
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IStream=} [properties] Properties to set
                         */
                        function Stream(properties) {
                            this.labels = {};
                            this.errors = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Stream name.
                         * @member {string} name
                         * @memberof google.cloud.datastream.v1alpha1.Stream
                         * @instance
                         */
                        Stream.prototype.name = "";
    
                        /**
                         * Stream createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.datastream.v1alpha1.Stream
                         * @instance
                         */
                        Stream.prototype.createTime = null;
    
                        /**
                         * Stream updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.datastream.v1alpha1.Stream
                         * @instance
                         */
                        Stream.prototype.updateTime = null;
    
                        /**
                         * Stream labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.datastream.v1alpha1.Stream
                         * @instance
                         */
                        Stream.prototype.labels = $util.emptyObject;
    
                        /**
                         * Stream displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.datastream.v1alpha1.Stream
                         * @instance
                         */
                        Stream.prototype.displayName = "";
    
                        /**
                         * Stream sourceConfig.
                         * @member {google.cloud.datastream.v1alpha1.ISourceConfig|null|undefined} sourceConfig
                         * @memberof google.cloud.datastream.v1alpha1.Stream
                         * @instance
                         */
                        Stream.prototype.sourceConfig = null;
    
                        /**
                         * Stream destinationConfig.
                         * @member {google.cloud.datastream.v1alpha1.IDestinationConfig|null|undefined} destinationConfig
                         * @memberof google.cloud.datastream.v1alpha1.Stream
                         * @instance
                         */
                        Stream.prototype.destinationConfig = null;
    
                        /**
                         * Stream state.
                         * @member {google.cloud.datastream.v1alpha1.Stream.State} state
                         * @memberof google.cloud.datastream.v1alpha1.Stream
                         * @instance
                         */
                        Stream.prototype.state = 0;
    
                        /**
                         * Stream backfillAll.
                         * @member {google.cloud.datastream.v1alpha1.Stream.IBackfillAllStrategy|null|undefined} backfillAll
                         * @memberof google.cloud.datastream.v1alpha1.Stream
                         * @instance
                         */
                        Stream.prototype.backfillAll = null;
    
                        /**
                         * Stream backfillNone.
                         * @member {google.cloud.datastream.v1alpha1.Stream.IBackfillNoneStrategy|null|undefined} backfillNone
                         * @memberof google.cloud.datastream.v1alpha1.Stream
                         * @instance
                         */
                        Stream.prototype.backfillNone = null;
    
                        /**
                         * Stream errors.
                         * @member {Array.<google.cloud.datastream.v1alpha1.IError>} errors
                         * @memberof google.cloud.datastream.v1alpha1.Stream
                         * @instance
                         */
                        Stream.prototype.errors = $util.emptyArray;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Stream backfillStrategy.
                         * @member {"backfillAll"|"backfillNone"|undefined} backfillStrategy
                         * @memberof google.cloud.datastream.v1alpha1.Stream
                         * @instance
                         */
                        Object.defineProperty(Stream.prototype, "backfillStrategy", {
                            get: $util.oneOfGetter($oneOfFields = ["backfillAll", "backfillNone"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Stream instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.Stream
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IStream=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.Stream} Stream instance
                         */
                        Stream.create = function create(properties) {
                            return new Stream(properties);
                        };
    
                        /**
                         * Encodes the specified Stream message. Does not implicitly {@link google.cloud.datastream.v1alpha1.Stream.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.Stream
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IStream} message Stream message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Stream.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.displayName);
                            if (message.sourceConfig != null && Object.hasOwnProperty.call(message, "sourceConfig"))
                                $root.google.cloud.datastream.v1alpha1.SourceConfig.encode(message.sourceConfig, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.destinationConfig != null && Object.hasOwnProperty.call(message, "destinationConfig"))
                                $root.google.cloud.datastream.v1alpha1.DestinationConfig.encode(message.destinationConfig, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 8, wireType 0 =*/64).int32(message.state);
                            if (message.errors != null && message.errors.length)
                                for (var i = 0; i < message.errors.length; ++i)
                                    $root.google.cloud.datastream.v1alpha1.Error.encode(message.errors[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.backfillAll != null && Object.hasOwnProperty.call(message, "backfillAll"))
                                $root.google.cloud.datastream.v1alpha1.Stream.BackfillAllStrategy.encode(message.backfillAll, writer.uint32(/* id 101, wireType 2 =*/810).fork()).ldelim();
                            if (message.backfillNone != null && Object.hasOwnProperty.call(message, "backfillNone"))
                                $root.google.cloud.datastream.v1alpha1.Stream.BackfillNoneStrategy.encode(message.backfillNone, writer.uint32(/* id 102, wireType 2 =*/818).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Stream message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.Stream.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.Stream
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IStream} message Stream message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Stream.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Stream message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.Stream
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.Stream} Stream
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Stream.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.Stream(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 5: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.sourceConfig = $root.google.cloud.datastream.v1alpha1.SourceConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.destinationConfig = $root.google.cloud.datastream.v1alpha1.DestinationConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 101: {
                                        message.backfillAll = $root.google.cloud.datastream.v1alpha1.Stream.BackfillAllStrategy.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 102: {
                                        message.backfillNone = $root.google.cloud.datastream.v1alpha1.Stream.BackfillNoneStrategy.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        if (!(message.errors && message.errors.length))
                                            message.errors = [];
                                        message.errors.push($root.google.cloud.datastream.v1alpha1.Error.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Stream message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.Stream
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.Stream} Stream
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Stream.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Stream message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.Stream
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Stream.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.sourceConfig != null && message.hasOwnProperty("sourceConfig")) {
                                var error = $root.google.cloud.datastream.v1alpha1.SourceConfig.verify(message.sourceConfig);
                                if (error)
                                    return "sourceConfig." + error;
                            }
                            if (message.destinationConfig != null && message.hasOwnProperty("destinationConfig")) {
                                var error = $root.google.cloud.datastream.v1alpha1.DestinationConfig.verify(message.destinationConfig);
                                if (error)
                                    return "destinationConfig." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 8:
                                    break;
                                }
                            if (message.backfillAll != null && message.hasOwnProperty("backfillAll")) {
                                properties.backfillStrategy = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1alpha1.Stream.BackfillAllStrategy.verify(message.backfillAll);
                                    if (error)
                                        return "backfillAll." + error;
                                }
                            }
                            if (message.backfillNone != null && message.hasOwnProperty("backfillNone")) {
                                if (properties.backfillStrategy === 1)
                                    return "backfillStrategy: multiple values";
                                properties.backfillStrategy = 1;
                                {
                                    var error = $root.google.cloud.datastream.v1alpha1.Stream.BackfillNoneStrategy.verify(message.backfillNone);
                                    if (error)
                                        return "backfillNone." + error;
                                }
                            }
                            if (message.errors != null && message.hasOwnProperty("errors")) {
                                if (!Array.isArray(message.errors))
                                    return "errors: array expected";
                                for (var i = 0; i < message.errors.length; ++i) {
                                    var error = $root.google.cloud.datastream.v1alpha1.Error.verify(message.errors[i]);
                                    if (error)
                                        return "errors." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Stream message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.Stream
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.Stream} Stream
                         */
                        Stream.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.Stream)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.Stream();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.Stream.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.Stream.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.Stream.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.sourceConfig != null) {
                                if (typeof object.sourceConfig !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.Stream.sourceConfig: object expected");
                                message.sourceConfig = $root.google.cloud.datastream.v1alpha1.SourceConfig.fromObject(object.sourceConfig);
                            }
                            if (object.destinationConfig != null) {
                                if (typeof object.destinationConfig !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.Stream.destinationConfig: object expected");
                                message.destinationConfig = $root.google.cloud.datastream.v1alpha1.DestinationConfig.fromObject(object.destinationConfig);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "CREATED":
                            case 1:
                                message.state = 1;
                                break;
                            case "RUNNING":
                            case 2:
                                message.state = 2;
                                break;
                            case "PAUSED":
                            case 3:
                                message.state = 3;
                                break;
                            case "MAINTENANCE":
                            case 4:
                                message.state = 4;
                                break;
                            case "FAILED":
                            case 5:
                                message.state = 5;
                                break;
                            case "FAILED_PERMANENTLY":
                            case 6:
                                message.state = 6;
                                break;
                            case "STARTING":
                            case 7:
                                message.state = 7;
                                break;
                            case "DRAINING":
                            case 8:
                                message.state = 8;
                                break;
                            }
                            if (object.backfillAll != null) {
                                if (typeof object.backfillAll !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.Stream.backfillAll: object expected");
                                message.backfillAll = $root.google.cloud.datastream.v1alpha1.Stream.BackfillAllStrategy.fromObject(object.backfillAll);
                            }
                            if (object.backfillNone != null) {
                                if (typeof object.backfillNone !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.Stream.backfillNone: object expected");
                                message.backfillNone = $root.google.cloud.datastream.v1alpha1.Stream.BackfillNoneStrategy.fromObject(object.backfillNone);
                            }
                            if (object.errors) {
                                if (!Array.isArray(object.errors))
                                    throw TypeError(".google.cloud.datastream.v1alpha1.Stream.errors: array expected");
                                message.errors = [];
                                for (var i = 0; i < object.errors.length; ++i) {
                                    if (typeof object.errors[i] !== "object")
                                        throw TypeError(".google.cloud.datastream.v1alpha1.Stream.errors: object expected");
                                    message.errors[i] = $root.google.cloud.datastream.v1alpha1.Error.fromObject(object.errors[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Stream message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.Stream
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.Stream} message Stream
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Stream.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.errors = [];
                            if (options.objects || options.defaults)
                                object.labels = {};
                            if (options.defaults) {
                                object.name = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.displayName = "";
                                object.sourceConfig = null;
                                object.destinationConfig = null;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.sourceConfig != null && message.hasOwnProperty("sourceConfig"))
                                object.sourceConfig = $root.google.cloud.datastream.v1alpha1.SourceConfig.toObject(message.sourceConfig, options);
                            if (message.destinationConfig != null && message.hasOwnProperty("destinationConfig"))
                                object.destinationConfig = $root.google.cloud.datastream.v1alpha1.DestinationConfig.toObject(message.destinationConfig, options);
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.datastream.v1alpha1.Stream.State[message.state] === undefined ? message.state : $root.google.cloud.datastream.v1alpha1.Stream.State[message.state] : message.state;
                            if (message.errors && message.errors.length) {
                                object.errors = [];
                                for (var j = 0; j < message.errors.length; ++j)
                                    object.errors[j] = $root.google.cloud.datastream.v1alpha1.Error.toObject(message.errors[j], options);
                            }
                            if (message.backfillAll != null && message.hasOwnProperty("backfillAll")) {
                                object.backfillAll = $root.google.cloud.datastream.v1alpha1.Stream.BackfillAllStrategy.toObject(message.backfillAll, options);
                                if (options.oneofs)
                                    object.backfillStrategy = "backfillAll";
                            }
                            if (message.backfillNone != null && message.hasOwnProperty("backfillNone")) {
                                object.backfillNone = $root.google.cloud.datastream.v1alpha1.Stream.BackfillNoneStrategy.toObject(message.backfillNone, options);
                                if (options.oneofs)
                                    object.backfillStrategy = "backfillNone";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Stream to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.Stream
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Stream.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Stream
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.Stream
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Stream.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.Stream";
                        };
    
                        Stream.BackfillAllStrategy = (function() {
    
                            /**
                             * Properties of a BackfillAllStrategy.
                             * @memberof google.cloud.datastream.v1alpha1.Stream
                             * @interface IBackfillAllStrategy
                             * @property {google.cloud.datastream.v1alpha1.IOracleRdbms|null} [oracleExcludedObjects] BackfillAllStrategy oracleExcludedObjects
                             * @property {google.cloud.datastream.v1alpha1.IMysqlRdbms|null} [mysqlExcludedObjects] BackfillAllStrategy mysqlExcludedObjects
                             */
    
                            /**
                             * Constructs a new BackfillAllStrategy.
                             * @memberof google.cloud.datastream.v1alpha1.Stream
                             * @classdesc Represents a BackfillAllStrategy.
                             * @implements IBackfillAllStrategy
                             * @constructor
                             * @param {google.cloud.datastream.v1alpha1.Stream.IBackfillAllStrategy=} [properties] Properties to set
                             */
                            function BackfillAllStrategy(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * BackfillAllStrategy oracleExcludedObjects.
                             * @member {google.cloud.datastream.v1alpha1.IOracleRdbms|null|undefined} oracleExcludedObjects
                             * @memberof google.cloud.datastream.v1alpha1.Stream.BackfillAllStrategy
                             * @instance
                             */
                            BackfillAllStrategy.prototype.oracleExcludedObjects = null;
    
                            /**
                             * BackfillAllStrategy mysqlExcludedObjects.
                             * @member {google.cloud.datastream.v1alpha1.IMysqlRdbms|null|undefined} mysqlExcludedObjects
                             * @memberof google.cloud.datastream.v1alpha1.Stream.BackfillAllStrategy
                             * @instance
                             */
                            BackfillAllStrategy.prototype.mysqlExcludedObjects = null;
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * BackfillAllStrategy excludedObjects.
                             * @member {"oracleExcludedObjects"|"mysqlExcludedObjects"|undefined} excludedObjects
                             * @memberof google.cloud.datastream.v1alpha1.Stream.BackfillAllStrategy
                             * @instance
                             */
                            Object.defineProperty(BackfillAllStrategy.prototype, "excludedObjects", {
                                get: $util.oneOfGetter($oneOfFields = ["oracleExcludedObjects", "mysqlExcludedObjects"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new BackfillAllStrategy instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.datastream.v1alpha1.Stream.BackfillAllStrategy
                             * @static
                             * @param {google.cloud.datastream.v1alpha1.Stream.IBackfillAllStrategy=} [properties] Properties to set
                             * @returns {google.cloud.datastream.v1alpha1.Stream.BackfillAllStrategy} BackfillAllStrategy instance
                             */
                            BackfillAllStrategy.create = function create(properties) {
                                return new BackfillAllStrategy(properties);
                            };
    
                            /**
                             * Encodes the specified BackfillAllStrategy message. Does not implicitly {@link google.cloud.datastream.v1alpha1.Stream.BackfillAllStrategy.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.datastream.v1alpha1.Stream.BackfillAllStrategy
                             * @static
                             * @param {google.cloud.datastream.v1alpha1.Stream.IBackfillAllStrategy} message BackfillAllStrategy message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BackfillAllStrategy.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.oracleExcludedObjects != null && Object.hasOwnProperty.call(message, "oracleExcludedObjects"))
                                    $root.google.cloud.datastream.v1alpha1.OracleRdbms.encode(message.oracleExcludedObjects, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.mysqlExcludedObjects != null && Object.hasOwnProperty.call(message, "mysqlExcludedObjects"))
                                    $root.google.cloud.datastream.v1alpha1.MysqlRdbms.encode(message.mysqlExcludedObjects, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified BackfillAllStrategy message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.Stream.BackfillAllStrategy.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.datastream.v1alpha1.Stream.BackfillAllStrategy
                             * @static
                             * @param {google.cloud.datastream.v1alpha1.Stream.IBackfillAllStrategy} message BackfillAllStrategy message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BackfillAllStrategy.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a BackfillAllStrategy message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.datastream.v1alpha1.Stream.BackfillAllStrategy
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.datastream.v1alpha1.Stream.BackfillAllStrategy} BackfillAllStrategy
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BackfillAllStrategy.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.Stream.BackfillAllStrategy();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.oracleExcludedObjects = $root.google.cloud.datastream.v1alpha1.OracleRdbms.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.mysqlExcludedObjects = $root.google.cloud.datastream.v1alpha1.MysqlRdbms.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a BackfillAllStrategy message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.datastream.v1alpha1.Stream.BackfillAllStrategy
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.datastream.v1alpha1.Stream.BackfillAllStrategy} BackfillAllStrategy
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BackfillAllStrategy.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a BackfillAllStrategy message.
                             * @function verify
                             * @memberof google.cloud.datastream.v1alpha1.Stream.BackfillAllStrategy
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            BackfillAllStrategy.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.oracleExcludedObjects != null && message.hasOwnProperty("oracleExcludedObjects")) {
                                    properties.excludedObjects = 1;
                                    {
                                        var error = $root.google.cloud.datastream.v1alpha1.OracleRdbms.verify(message.oracleExcludedObjects);
                                        if (error)
                                            return "oracleExcludedObjects." + error;
                                    }
                                }
                                if (message.mysqlExcludedObjects != null && message.hasOwnProperty("mysqlExcludedObjects")) {
                                    if (properties.excludedObjects === 1)
                                        return "excludedObjects: multiple values";
                                    properties.excludedObjects = 1;
                                    {
                                        var error = $root.google.cloud.datastream.v1alpha1.MysqlRdbms.verify(message.mysqlExcludedObjects);
                                        if (error)
                                            return "mysqlExcludedObjects." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a BackfillAllStrategy message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.datastream.v1alpha1.Stream.BackfillAllStrategy
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.datastream.v1alpha1.Stream.BackfillAllStrategy} BackfillAllStrategy
                             */
                            BackfillAllStrategy.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.datastream.v1alpha1.Stream.BackfillAllStrategy)
                                    return object;
                                var message = new $root.google.cloud.datastream.v1alpha1.Stream.BackfillAllStrategy();
                                if (object.oracleExcludedObjects != null) {
                                    if (typeof object.oracleExcludedObjects !== "object")
                                        throw TypeError(".google.cloud.datastream.v1alpha1.Stream.BackfillAllStrategy.oracleExcludedObjects: object expected");
                                    message.oracleExcludedObjects = $root.google.cloud.datastream.v1alpha1.OracleRdbms.fromObject(object.oracleExcludedObjects);
                                }
                                if (object.mysqlExcludedObjects != null) {
                                    if (typeof object.mysqlExcludedObjects !== "object")
                                        throw TypeError(".google.cloud.datastream.v1alpha1.Stream.BackfillAllStrategy.mysqlExcludedObjects: object expected");
                                    message.mysqlExcludedObjects = $root.google.cloud.datastream.v1alpha1.MysqlRdbms.fromObject(object.mysqlExcludedObjects);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a BackfillAllStrategy message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.datastream.v1alpha1.Stream.BackfillAllStrategy
                             * @static
                             * @param {google.cloud.datastream.v1alpha1.Stream.BackfillAllStrategy} message BackfillAllStrategy
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            BackfillAllStrategy.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (message.oracleExcludedObjects != null && message.hasOwnProperty("oracleExcludedObjects")) {
                                    object.oracleExcludedObjects = $root.google.cloud.datastream.v1alpha1.OracleRdbms.toObject(message.oracleExcludedObjects, options);
                                    if (options.oneofs)
                                        object.excludedObjects = "oracleExcludedObjects";
                                }
                                if (message.mysqlExcludedObjects != null && message.hasOwnProperty("mysqlExcludedObjects")) {
                                    object.mysqlExcludedObjects = $root.google.cloud.datastream.v1alpha1.MysqlRdbms.toObject(message.mysqlExcludedObjects, options);
                                    if (options.oneofs)
                                        object.excludedObjects = "mysqlExcludedObjects";
                                }
                                return object;
                            };
    
                            /**
                             * Converts this BackfillAllStrategy to JSON.
                             * @function toJSON
                             * @memberof google.cloud.datastream.v1alpha1.Stream.BackfillAllStrategy
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            BackfillAllStrategy.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for BackfillAllStrategy
                             * @function getTypeUrl
                             * @memberof google.cloud.datastream.v1alpha1.Stream.BackfillAllStrategy
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            BackfillAllStrategy.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.Stream.BackfillAllStrategy";
                            };
    
                            return BackfillAllStrategy;
                        })();
    
                        Stream.BackfillNoneStrategy = (function() {
    
                            /**
                             * Properties of a BackfillNoneStrategy.
                             * @memberof google.cloud.datastream.v1alpha1.Stream
                             * @interface IBackfillNoneStrategy
                             */
    
                            /**
                             * Constructs a new BackfillNoneStrategy.
                             * @memberof google.cloud.datastream.v1alpha1.Stream
                             * @classdesc Represents a BackfillNoneStrategy.
                             * @implements IBackfillNoneStrategy
                             * @constructor
                             * @param {google.cloud.datastream.v1alpha1.Stream.IBackfillNoneStrategy=} [properties] Properties to set
                             */
                            function BackfillNoneStrategy(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Creates a new BackfillNoneStrategy instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.datastream.v1alpha1.Stream.BackfillNoneStrategy
                             * @static
                             * @param {google.cloud.datastream.v1alpha1.Stream.IBackfillNoneStrategy=} [properties] Properties to set
                             * @returns {google.cloud.datastream.v1alpha1.Stream.BackfillNoneStrategy} BackfillNoneStrategy instance
                             */
                            BackfillNoneStrategy.create = function create(properties) {
                                return new BackfillNoneStrategy(properties);
                            };
    
                            /**
                             * Encodes the specified BackfillNoneStrategy message. Does not implicitly {@link google.cloud.datastream.v1alpha1.Stream.BackfillNoneStrategy.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.datastream.v1alpha1.Stream.BackfillNoneStrategy
                             * @static
                             * @param {google.cloud.datastream.v1alpha1.Stream.IBackfillNoneStrategy} message BackfillNoneStrategy message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BackfillNoneStrategy.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified BackfillNoneStrategy message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.Stream.BackfillNoneStrategy.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.datastream.v1alpha1.Stream.BackfillNoneStrategy
                             * @static
                             * @param {google.cloud.datastream.v1alpha1.Stream.IBackfillNoneStrategy} message BackfillNoneStrategy message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BackfillNoneStrategy.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a BackfillNoneStrategy message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.datastream.v1alpha1.Stream.BackfillNoneStrategy
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.datastream.v1alpha1.Stream.BackfillNoneStrategy} BackfillNoneStrategy
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BackfillNoneStrategy.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.Stream.BackfillNoneStrategy();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a BackfillNoneStrategy message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.datastream.v1alpha1.Stream.BackfillNoneStrategy
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.datastream.v1alpha1.Stream.BackfillNoneStrategy} BackfillNoneStrategy
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BackfillNoneStrategy.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a BackfillNoneStrategy message.
                             * @function verify
                             * @memberof google.cloud.datastream.v1alpha1.Stream.BackfillNoneStrategy
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            BackfillNoneStrategy.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                return null;
                            };
    
                            /**
                             * Creates a BackfillNoneStrategy message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.datastream.v1alpha1.Stream.BackfillNoneStrategy
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.datastream.v1alpha1.Stream.BackfillNoneStrategy} BackfillNoneStrategy
                             */
                            BackfillNoneStrategy.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.datastream.v1alpha1.Stream.BackfillNoneStrategy)
                                    return object;
                                return new $root.google.cloud.datastream.v1alpha1.Stream.BackfillNoneStrategy();
                            };
    
                            /**
                             * Creates a plain object from a BackfillNoneStrategy message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.datastream.v1alpha1.Stream.BackfillNoneStrategy
                             * @static
                             * @param {google.cloud.datastream.v1alpha1.Stream.BackfillNoneStrategy} message BackfillNoneStrategy
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            BackfillNoneStrategy.toObject = function toObject() {
                                return {};
                            };
    
                            /**
                             * Converts this BackfillNoneStrategy to JSON.
                             * @function toJSON
                             * @memberof google.cloud.datastream.v1alpha1.Stream.BackfillNoneStrategy
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            BackfillNoneStrategy.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for BackfillNoneStrategy
                             * @function getTypeUrl
                             * @memberof google.cloud.datastream.v1alpha1.Stream.BackfillNoneStrategy
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            BackfillNoneStrategy.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.Stream.BackfillNoneStrategy";
                            };
    
                            return BackfillNoneStrategy;
                        })();
    
                        /**
                         * State enum.
                         * @name google.cloud.datastream.v1alpha1.Stream.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} CREATED=1 CREATED value
                         * @property {number} RUNNING=2 RUNNING value
                         * @property {number} PAUSED=3 PAUSED value
                         * @property {number} MAINTENANCE=4 MAINTENANCE value
                         * @property {number} FAILED=5 FAILED value
                         * @property {number} FAILED_PERMANENTLY=6 FAILED_PERMANENTLY value
                         * @property {number} STARTING=7 STARTING value
                         * @property {number} DRAINING=8 DRAINING value
                         */
                        Stream.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CREATED"] = 1;
                            values[valuesById[2] = "RUNNING"] = 2;
                            values[valuesById[3] = "PAUSED"] = 3;
                            values[valuesById[4] = "MAINTENANCE"] = 4;
                            values[valuesById[5] = "FAILED"] = 5;
                            values[valuesById[6] = "FAILED_PERMANENTLY"] = 6;
                            values[valuesById[7] = "STARTING"] = 7;
                            values[valuesById[8] = "DRAINING"] = 8;
                            return values;
                        })();
    
                        return Stream;
                    })();
    
                    v1alpha1.Error = (function() {
    
                        /**
                         * Properties of an Error.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IError
                         * @property {string|null} [reason] Error reason
                         * @property {string|null} [errorUuid] Error errorUuid
                         * @property {string|null} [message] Error message
                         * @property {google.protobuf.ITimestamp|null} [errorTime] Error errorTime
                         * @property {Object.<string,string>|null} [details] Error details
                         */
    
                        /**
                         * Constructs a new Error.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents an Error.
                         * @implements IError
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IError=} [properties] Properties to set
                         */
                        function Error(properties) {
                            this.details = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Error reason.
                         * @member {string} reason
                         * @memberof google.cloud.datastream.v1alpha1.Error
                         * @instance
                         */
                        Error.prototype.reason = "";
    
                        /**
                         * Error errorUuid.
                         * @member {string} errorUuid
                         * @memberof google.cloud.datastream.v1alpha1.Error
                         * @instance
                         */
                        Error.prototype.errorUuid = "";
    
                        /**
                         * Error message.
                         * @member {string} message
                         * @memberof google.cloud.datastream.v1alpha1.Error
                         * @instance
                         */
                        Error.prototype.message = "";
    
                        /**
                         * Error errorTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} errorTime
                         * @memberof google.cloud.datastream.v1alpha1.Error
                         * @instance
                         */
                        Error.prototype.errorTime = null;
    
                        /**
                         * Error details.
                         * @member {Object.<string,string>} details
                         * @memberof google.cloud.datastream.v1alpha1.Error
                         * @instance
                         */
                        Error.prototype.details = $util.emptyObject;
    
                        /**
                         * Creates a new Error instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.Error
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IError=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.Error} Error instance
                         */
                        Error.create = function create(properties) {
                            return new Error(properties);
                        };
    
                        /**
                         * Encodes the specified Error message. Does not implicitly {@link google.cloud.datastream.v1alpha1.Error.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.Error
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IError} message Error message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Error.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.reason != null && Object.hasOwnProperty.call(message, "reason"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.reason);
                            if (message.errorUuid != null && Object.hasOwnProperty.call(message, "errorUuid"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.errorUuid);
                            if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.message);
                            if (message.errorTime != null && Object.hasOwnProperty.call(message, "errorTime"))
                                $root.google.protobuf.Timestamp.encode(message.errorTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.details != null && Object.hasOwnProperty.call(message, "details"))
                                for (var keys = Object.keys(message.details), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 5, wireType 2 =*/42).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.details[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Error message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.Error.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.Error
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IError} message Error message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Error.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Error message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.Error
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.Error} Error
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Error.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.Error(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.reason = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.errorUuid = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.message = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.errorTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        if (message.details === $util.emptyObject)
                                            message.details = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.details[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Error message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.Error
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.Error} Error
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Error.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Error message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.Error
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Error.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.reason != null && message.hasOwnProperty("reason"))
                                if (!$util.isString(message.reason))
                                    return "reason: string expected";
                            if (message.errorUuid != null && message.hasOwnProperty("errorUuid"))
                                if (!$util.isString(message.errorUuid))
                                    return "errorUuid: string expected";
                            if (message.message != null && message.hasOwnProperty("message"))
                                if (!$util.isString(message.message))
                                    return "message: string expected";
                            if (message.errorTime != null && message.hasOwnProperty("errorTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.errorTime);
                                if (error)
                                    return "errorTime." + error;
                            }
                            if (message.details != null && message.hasOwnProperty("details")) {
                                if (!$util.isObject(message.details))
                                    return "details: object expected";
                                var key = Object.keys(message.details);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.details[key[i]]))
                                        return "details: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates an Error message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.Error
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.Error} Error
                         */
                        Error.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.Error)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.Error();
                            if (object.reason != null)
                                message.reason = String(object.reason);
                            if (object.errorUuid != null)
                                message.errorUuid = String(object.errorUuid);
                            if (object.message != null)
                                message.message = String(object.message);
                            if (object.errorTime != null) {
                                if (typeof object.errorTime !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.Error.errorTime: object expected");
                                message.errorTime = $root.google.protobuf.Timestamp.fromObject(object.errorTime);
                            }
                            if (object.details) {
                                if (typeof object.details !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.Error.details: object expected");
                                message.details = {};
                                for (var keys = Object.keys(object.details), i = 0; i < keys.length; ++i)
                                    message.details[keys[i]] = String(object.details[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Error message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.Error
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.Error} message Error
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Error.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.details = {};
                            if (options.defaults) {
                                object.reason = "";
                                object.errorUuid = "";
                                object.message = "";
                                object.errorTime = null;
                            }
                            if (message.reason != null && message.hasOwnProperty("reason"))
                                object.reason = message.reason;
                            if (message.errorUuid != null && message.hasOwnProperty("errorUuid"))
                                object.errorUuid = message.errorUuid;
                            if (message.message != null && message.hasOwnProperty("message"))
                                object.message = message.message;
                            if (message.errorTime != null && message.hasOwnProperty("errorTime"))
                                object.errorTime = $root.google.protobuf.Timestamp.toObject(message.errorTime, options);
                            var keys2;
                            if (message.details && (keys2 = Object.keys(message.details)).length) {
                                object.details = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.details[keys2[j]] = message.details[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Error to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.Error
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Error.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Error
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.Error
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Error.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.Error";
                        };
    
                        return Error;
                    })();
    
                    v1alpha1.ValidationResult = (function() {
    
                        /**
                         * Properties of a ValidationResult.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IValidationResult
                         * @property {Array.<google.cloud.datastream.v1alpha1.IValidation>|null} [validations] ValidationResult validations
                         */
    
                        /**
                         * Constructs a new ValidationResult.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a ValidationResult.
                         * @implements IValidationResult
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IValidationResult=} [properties] Properties to set
                         */
                        function ValidationResult(properties) {
                            this.validations = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ValidationResult validations.
                         * @member {Array.<google.cloud.datastream.v1alpha1.IValidation>} validations
                         * @memberof google.cloud.datastream.v1alpha1.ValidationResult
                         * @instance
                         */
                        ValidationResult.prototype.validations = $util.emptyArray;
    
                        /**
                         * Creates a new ValidationResult instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.ValidationResult
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IValidationResult=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.ValidationResult} ValidationResult instance
                         */
                        ValidationResult.create = function create(properties) {
                            return new ValidationResult(properties);
                        };
    
                        /**
                         * Encodes the specified ValidationResult message. Does not implicitly {@link google.cloud.datastream.v1alpha1.ValidationResult.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.ValidationResult
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IValidationResult} message ValidationResult message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ValidationResult.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.validations != null && message.validations.length)
                                for (var i = 0; i < message.validations.length; ++i)
                                    $root.google.cloud.datastream.v1alpha1.Validation.encode(message.validations[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ValidationResult message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.ValidationResult.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.ValidationResult
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IValidationResult} message ValidationResult message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ValidationResult.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ValidationResult message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.ValidationResult
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.ValidationResult} ValidationResult
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ValidationResult.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.ValidationResult();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.validations && message.validations.length))
                                            message.validations = [];
                                        message.validations.push($root.google.cloud.datastream.v1alpha1.Validation.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ValidationResult message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.ValidationResult
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.ValidationResult} ValidationResult
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ValidationResult.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ValidationResult message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.ValidationResult
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ValidationResult.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.validations != null && message.hasOwnProperty("validations")) {
                                if (!Array.isArray(message.validations))
                                    return "validations: array expected";
                                for (var i = 0; i < message.validations.length; ++i) {
                                    var error = $root.google.cloud.datastream.v1alpha1.Validation.verify(message.validations[i]);
                                    if (error)
                                        return "validations." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ValidationResult message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.ValidationResult
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.ValidationResult} ValidationResult
                         */
                        ValidationResult.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.ValidationResult)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.ValidationResult();
                            if (object.validations) {
                                if (!Array.isArray(object.validations))
                                    throw TypeError(".google.cloud.datastream.v1alpha1.ValidationResult.validations: array expected");
                                message.validations = [];
                                for (var i = 0; i < object.validations.length; ++i) {
                                    if (typeof object.validations[i] !== "object")
                                        throw TypeError(".google.cloud.datastream.v1alpha1.ValidationResult.validations: object expected");
                                    message.validations[i] = $root.google.cloud.datastream.v1alpha1.Validation.fromObject(object.validations[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ValidationResult message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.ValidationResult
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.ValidationResult} message ValidationResult
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ValidationResult.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.validations = [];
                            if (message.validations && message.validations.length) {
                                object.validations = [];
                                for (var j = 0; j < message.validations.length; ++j)
                                    object.validations[j] = $root.google.cloud.datastream.v1alpha1.Validation.toObject(message.validations[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ValidationResult to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.ValidationResult
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ValidationResult.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ValidationResult
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.ValidationResult
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ValidationResult.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.ValidationResult";
                        };
    
                        return ValidationResult;
                    })();
    
                    v1alpha1.Validation = (function() {
    
                        /**
                         * Properties of a Validation.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IValidation
                         * @property {string|null} [description] Validation description
                         * @property {google.cloud.datastream.v1alpha1.Validation.Status|null} [status] Validation status
                         * @property {Array.<google.cloud.datastream.v1alpha1.IValidationMessage>|null} [message] Validation message
                         * @property {string|null} [code] Validation code
                         */
    
                        /**
                         * Constructs a new Validation.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a Validation.
                         * @implements IValidation
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IValidation=} [properties] Properties to set
                         */
                        function Validation(properties) {
                            this.message = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Validation description.
                         * @member {string} description
                         * @memberof google.cloud.datastream.v1alpha1.Validation
                         * @instance
                         */
                        Validation.prototype.description = "";
    
                        /**
                         * Validation status.
                         * @member {google.cloud.datastream.v1alpha1.Validation.Status} status
                         * @memberof google.cloud.datastream.v1alpha1.Validation
                         * @instance
                         */
                        Validation.prototype.status = 0;
    
                        /**
                         * Validation message.
                         * @member {Array.<google.cloud.datastream.v1alpha1.IValidationMessage>} message
                         * @memberof google.cloud.datastream.v1alpha1.Validation
                         * @instance
                         */
                        Validation.prototype.message = $util.emptyArray;
    
                        /**
                         * Validation code.
                         * @member {string} code
                         * @memberof google.cloud.datastream.v1alpha1.Validation
                         * @instance
                         */
                        Validation.prototype.code = "";
    
                        /**
                         * Creates a new Validation instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.Validation
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IValidation=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.Validation} Validation instance
                         */
                        Validation.create = function create(properties) {
                            return new Validation(properties);
                        };
    
                        /**
                         * Encodes the specified Validation message. Does not implicitly {@link google.cloud.datastream.v1alpha1.Validation.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.Validation
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IValidation} message Validation message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Validation.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.description);
                            if (message.status != null && Object.hasOwnProperty.call(message, "status"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.status);
                            if (message.message != null && message.message.length)
                                for (var i = 0; i < message.message.length; ++i)
                                    $root.google.cloud.datastream.v1alpha1.ValidationMessage.encode(message.message[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.code);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Validation message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.Validation.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.Validation
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IValidation} message Validation message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Validation.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Validation message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.Validation
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.Validation} Validation
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Validation.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.Validation();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.status = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.message && message.message.length))
                                            message.message = [];
                                        message.message.push($root.google.cloud.datastream.v1alpha1.ValidationMessage.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 4: {
                                        message.code = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Validation message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.Validation
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.Validation} Validation
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Validation.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Validation message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.Validation
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Validation.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.status != null && message.hasOwnProperty("status"))
                                switch (message.status) {
                                default:
                                    return "status: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.message != null && message.hasOwnProperty("message")) {
                                if (!Array.isArray(message.message))
                                    return "message: array expected";
                                for (var i = 0; i < message.message.length; ++i) {
                                    var error = $root.google.cloud.datastream.v1alpha1.ValidationMessage.verify(message.message[i]);
                                    if (error)
                                        return "message." + error;
                                }
                            }
                            if (message.code != null && message.hasOwnProperty("code"))
                                if (!$util.isString(message.code))
                                    return "code: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Validation message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.Validation
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.Validation} Validation
                         */
                        Validation.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.Validation)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.Validation();
                            if (object.description != null)
                                message.description = String(object.description);
                            switch (object.status) {
                            default:
                                if (typeof object.status === "number") {
                                    message.status = object.status;
                                    break;
                                }
                                break;
                            case "STATUS_UNSPECIFIED":
                            case 0:
                                message.status = 0;
                                break;
                            case "NOT_EXECUTED":
                            case 1:
                                message.status = 1;
                                break;
                            case "FAILED":
                            case 2:
                                message.status = 2;
                                break;
                            case "PASSED":
                            case 3:
                                message.status = 3;
                                break;
                            }
                            if (object.message) {
                                if (!Array.isArray(object.message))
                                    throw TypeError(".google.cloud.datastream.v1alpha1.Validation.message: array expected");
                                message.message = [];
                                for (var i = 0; i < object.message.length; ++i) {
                                    if (typeof object.message[i] !== "object")
                                        throw TypeError(".google.cloud.datastream.v1alpha1.Validation.message: object expected");
                                    message.message[i] = $root.google.cloud.datastream.v1alpha1.ValidationMessage.fromObject(object.message[i]);
                                }
                            }
                            if (object.code != null)
                                message.code = String(object.code);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Validation message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.Validation
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.Validation} message Validation
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Validation.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.message = [];
                            if (options.defaults) {
                                object.description = "";
                                object.status = options.enums === String ? "STATUS_UNSPECIFIED" : 0;
                                object.code = "";
                            }
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.status != null && message.hasOwnProperty("status"))
                                object.status = options.enums === String ? $root.google.cloud.datastream.v1alpha1.Validation.Status[message.status] === undefined ? message.status : $root.google.cloud.datastream.v1alpha1.Validation.Status[message.status] : message.status;
                            if (message.message && message.message.length) {
                                object.message = [];
                                for (var j = 0; j < message.message.length; ++j)
                                    object.message[j] = $root.google.cloud.datastream.v1alpha1.ValidationMessage.toObject(message.message[j], options);
                            }
                            if (message.code != null && message.hasOwnProperty("code"))
                                object.code = message.code;
                            return object;
                        };
    
                        /**
                         * Converts this Validation to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.Validation
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Validation.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Validation
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.Validation
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Validation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.Validation";
                        };
    
                        /**
                         * Status enum.
                         * @name google.cloud.datastream.v1alpha1.Validation.Status
                         * @enum {number}
                         * @property {number} STATUS_UNSPECIFIED=0 STATUS_UNSPECIFIED value
                         * @property {number} NOT_EXECUTED=1 NOT_EXECUTED value
                         * @property {number} FAILED=2 FAILED value
                         * @property {number} PASSED=3 PASSED value
                         */
                        Validation.Status = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATUS_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "NOT_EXECUTED"] = 1;
                            values[valuesById[2] = "FAILED"] = 2;
                            values[valuesById[3] = "PASSED"] = 3;
                            return values;
                        })();
    
                        return Validation;
                    })();
    
                    v1alpha1.ValidationMessage = (function() {
    
                        /**
                         * Properties of a ValidationMessage.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @interface IValidationMessage
                         * @property {string|null} [message] ValidationMessage message
                         * @property {google.cloud.datastream.v1alpha1.ValidationMessage.Level|null} [level] ValidationMessage level
                         * @property {Object.<string,string>|null} [metadata] ValidationMessage metadata
                         * @property {string|null} [code] ValidationMessage code
                         */
    
                        /**
                         * Constructs a new ValidationMessage.
                         * @memberof google.cloud.datastream.v1alpha1
                         * @classdesc Represents a ValidationMessage.
                         * @implements IValidationMessage
                         * @constructor
                         * @param {google.cloud.datastream.v1alpha1.IValidationMessage=} [properties] Properties to set
                         */
                        function ValidationMessage(properties) {
                            this.metadata = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ValidationMessage message.
                         * @member {string} message
                         * @memberof google.cloud.datastream.v1alpha1.ValidationMessage
                         * @instance
                         */
                        ValidationMessage.prototype.message = "";
    
                        /**
                         * ValidationMessage level.
                         * @member {google.cloud.datastream.v1alpha1.ValidationMessage.Level} level
                         * @memberof google.cloud.datastream.v1alpha1.ValidationMessage
                         * @instance
                         */
                        ValidationMessage.prototype.level = 0;
    
                        /**
                         * ValidationMessage metadata.
                         * @member {Object.<string,string>} metadata
                         * @memberof google.cloud.datastream.v1alpha1.ValidationMessage
                         * @instance
                         */
                        ValidationMessage.prototype.metadata = $util.emptyObject;
    
                        /**
                         * ValidationMessage code.
                         * @member {string} code
                         * @memberof google.cloud.datastream.v1alpha1.ValidationMessage
                         * @instance
                         */
                        ValidationMessage.prototype.code = "";
    
                        /**
                         * Creates a new ValidationMessage instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.datastream.v1alpha1.ValidationMessage
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IValidationMessage=} [properties] Properties to set
                         * @returns {google.cloud.datastream.v1alpha1.ValidationMessage} ValidationMessage instance
                         */
                        ValidationMessage.create = function create(properties) {
                            return new ValidationMessage(properties);
                        };
    
                        /**
                         * Encodes the specified ValidationMessage message. Does not implicitly {@link google.cloud.datastream.v1alpha1.ValidationMessage.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.datastream.v1alpha1.ValidationMessage
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IValidationMessage} message ValidationMessage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ValidationMessage.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.message);
                            if (message.level != null && Object.hasOwnProperty.call(message, "level"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.level);
                            if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                                for (var keys = Object.keys(message.metadata), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.metadata[keys[i]]).ldelim();
                            if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.code);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ValidationMessage message, length delimited. Does not implicitly {@link google.cloud.datastream.v1alpha1.ValidationMessage.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.ValidationMessage
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.IValidationMessage} message ValidationMessage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ValidationMessage.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ValidationMessage message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.datastream.v1alpha1.ValidationMessage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.datastream.v1alpha1.ValidationMessage} ValidationMessage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ValidationMessage.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.datastream.v1alpha1.ValidationMessage(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.message = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.level = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        if (message.metadata === $util.emptyObject)
                                            message.metadata = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.metadata[key] = value;
                                        break;
                                    }
                                case 4: {
                                        message.code = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ValidationMessage message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.datastream.v1alpha1.ValidationMessage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.datastream.v1alpha1.ValidationMessage} ValidationMessage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ValidationMessage.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ValidationMessage message.
                         * @function verify
                         * @memberof google.cloud.datastream.v1alpha1.ValidationMessage
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ValidationMessage.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.message != null && message.hasOwnProperty("message"))
                                if (!$util.isString(message.message))
                                    return "message: string expected";
                            if (message.level != null && message.hasOwnProperty("level"))
                                switch (message.level) {
                                default:
                                    return "level: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.metadata != null && message.hasOwnProperty("metadata")) {
                                if (!$util.isObject(message.metadata))
                                    return "metadata: object expected";
                                var key = Object.keys(message.metadata);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.metadata[key[i]]))
                                        return "metadata: string{k:string} expected";
                            }
                            if (message.code != null && message.hasOwnProperty("code"))
                                if (!$util.isString(message.code))
                                    return "code: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ValidationMessage message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.datastream.v1alpha1.ValidationMessage
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.datastream.v1alpha1.ValidationMessage} ValidationMessage
                         */
                        ValidationMessage.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.datastream.v1alpha1.ValidationMessage)
                                return object;
                            var message = new $root.google.cloud.datastream.v1alpha1.ValidationMessage();
                            if (object.message != null)
                                message.message = String(object.message);
                            switch (object.level) {
                            default:
                                if (typeof object.level === "number") {
                                    message.level = object.level;
                                    break;
                                }
                                break;
                            case "LEVEL_UNSPECIFIED":
                            case 0:
                                message.level = 0;
                                break;
                            case "WARNING":
                            case 1:
                                message.level = 1;
                                break;
                            case "ERROR":
                            case 2:
                                message.level = 2;
                                break;
                            }
                            if (object.metadata) {
                                if (typeof object.metadata !== "object")
                                    throw TypeError(".google.cloud.datastream.v1alpha1.ValidationMessage.metadata: object expected");
                                message.metadata = {};
                                for (var keys = Object.keys(object.metadata), i = 0; i < keys.length; ++i)
                                    message.metadata[keys[i]] = String(object.metadata[keys[i]]);
                            }
                            if (object.code != null)
                                message.code = String(object.code);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ValidationMessage message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.datastream.v1alpha1.ValidationMessage
                         * @static
                         * @param {google.cloud.datastream.v1alpha1.ValidationMessage} message ValidationMessage
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ValidationMessage.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.metadata = {};
                            if (options.defaults) {
                                object.message = "";
                                object.level = options.enums === String ? "LEVEL_UNSPECIFIED" : 0;
                                object.code = "";
                            }
                            if (message.message != null && message.hasOwnProperty("message"))
                                object.message = message.message;
                            if (message.level != null && message.hasOwnProperty("level"))
                                object.level = options.enums === String ? $root.google.cloud.datastream.v1alpha1.ValidationMessage.Level[message.level] === undefined ? message.level : $root.google.cloud.datastream.v1alpha1.ValidationMessage.Level[message.level] : message.level;
                            var keys2;
                            if (message.metadata && (keys2 = Object.keys(message.metadata)).length) {
                                object.metadata = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.metadata[keys2[j]] = message.metadata[keys2[j]];
                            }
                            if (message.code != null && message.hasOwnProperty("code"))
                                object.code = message.code;
                            return object;
                        };
    
                        /**
                         * Converts this ValidationMessage to JSON.
                         * @function toJSON
                         * @memberof google.cloud.datastream.v1alpha1.ValidationMessage
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ValidationMessage.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ValidationMessage
                         * @function getTypeUrl
                         * @memberof google.cloud.datastream.v1alpha1.ValidationMessage
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ValidationMessage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.datastream.v1alpha1.ValidationMessage";
                        };
    
                        /**
                         * Level enum.
                         * @name google.cloud.datastream.v1alpha1.ValidationMessage.Level
                         * @enum {number}
                         * @property {number} LEVEL_UNSPECIFIED=0 LEVEL_UNSPECIFIED value
                         * @property {number} WARNING=1 WARNING value
                         * @property {number} ERROR=2 ERROR value
                         */
                        ValidationMessage.Level = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "LEVEL_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "WARNING"] = 1;
                            values[valuesById[2] = "ERROR"] = 2;
                            return values;
                        })();
    
                        return ValidationMessage;
                    })();
    
                    return v1alpha1;
                })();
    
                return datastream;
            })();
    
            return cloud;
        })();
    
        google.api = (function() {
    
            /**
             * Namespace api.
             * @memberof google
             * @namespace
             */
            var api = {};
    
            api.Http = (function() {
    
                /**
                 * Properties of a Http.
                 * @memberof google.api
                 * @interface IHttp
                 * @property {Array.<google.api.IHttpRule>|null} [rules] Http rules
                 * @property {boolean|null} [fullyDecodeReservedExpansion] Http fullyDecodeReservedExpansion
                 */
    
                /**
                 * Constructs a new Http.
                 * @memberof google.api
                 * @classdesc Represents a Http.
                 * @implements IHttp
                 * @constructor
                 * @param {google.api.IHttp=} [properties] Properties to set
                 */
                function Http(properties) {
                    this.rules = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Http rules.
                 * @member {Array.<google.api.IHttpRule>} rules
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.rules = $util.emptyArray;
    
                /**
                 * Http fullyDecodeReservedExpansion.
                 * @member {boolean} fullyDecodeReservedExpansion
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.fullyDecodeReservedExpansion = false;
    
                /**
                 * Creates a new Http instance using the specified properties.
                 * @function create
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp=} [properties] Properties to set
                 * @returns {google.api.Http} Http instance
                 */
                Http.create = function create(properties) {
                    return new Http(properties);
                };
    
                /**
                 * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.rules != null && message.rules.length)
                        for (var i = 0; i < message.rules.length; ++i)
                            $root.google.api.HttpRule.encode(message.rules[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.fullyDecodeReservedExpansion != null && Object.hasOwnProperty.call(message, "fullyDecodeReservedExpansion"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.fullyDecodeReservedExpansion);
                    return writer;
                };
    
                /**
                 * Encodes the specified Http message, length delimited. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Http();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.rules && message.rules.length))
                                    message.rules = [];
                                message.rules.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                message.fullyDecodeReservedExpansion = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Http message.
                 * @function verify
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Http.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.rules != null && message.hasOwnProperty("rules")) {
                        if (!Array.isArray(message.rules))
                            return "rules: array expected";
                        for (var i = 0; i < message.rules.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.rules[i]);
                            if (error)
                                return "rules." + error;
                        }
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        if (typeof message.fullyDecodeReservedExpansion !== "boolean")
                            return "fullyDecodeReservedExpansion: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a Http message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Http} Http
                 */
                Http.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Http)
                        return object;
                    var message = new $root.google.api.Http();
                    if (object.rules) {
                        if (!Array.isArray(object.rules))
                            throw TypeError(".google.api.Http.rules: array expected");
                        message.rules = [];
                        for (var i = 0; i < object.rules.length; ++i) {
                            if (typeof object.rules[i] !== "object")
                                throw TypeError(".google.api.Http.rules: object expected");
                            message.rules[i] = $root.google.api.HttpRule.fromObject(object.rules[i]);
                        }
                    }
                    if (object.fullyDecodeReservedExpansion != null)
                        message.fullyDecodeReservedExpansion = Boolean(object.fullyDecodeReservedExpansion);
                    return message;
                };
    
                /**
                 * Creates a plain object from a Http message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.Http} message Http
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Http.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.rules = [];
                    if (options.defaults)
                        object.fullyDecodeReservedExpansion = false;
                    if (message.rules && message.rules.length) {
                        object.rules = [];
                        for (var j = 0; j < message.rules.length; ++j)
                            object.rules[j] = $root.google.api.HttpRule.toObject(message.rules[j], options);
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        object.fullyDecodeReservedExpansion = message.fullyDecodeReservedExpansion;
                    return object;
                };
    
                /**
                 * Converts this Http to JSON.
                 * @function toJSON
                 * @memberof google.api.Http
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Http.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Http
                 * @function getTypeUrl
                 * @memberof google.api.Http
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Http.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.Http";
                };
    
                return Http;
            })();
    
            api.HttpRule = (function() {
    
                /**
                 * Properties of a HttpRule.
                 * @memberof google.api
                 * @interface IHttpRule
                 * @property {string|null} [selector] HttpRule selector
                 * @property {string|null} [get] HttpRule get
                 * @property {string|null} [put] HttpRule put
                 * @property {string|null} [post] HttpRule post
                 * @property {string|null} ["delete"] HttpRule delete
                 * @property {string|null} [patch] HttpRule patch
                 * @property {google.api.ICustomHttpPattern|null} [custom] HttpRule custom
                 * @property {string|null} [body] HttpRule body
                 * @property {string|null} [responseBody] HttpRule responseBody
                 * @property {Array.<google.api.IHttpRule>|null} [additionalBindings] HttpRule additionalBindings
                 */
    
                /**
                 * Constructs a new HttpRule.
                 * @memberof google.api
                 * @classdesc Represents a HttpRule.
                 * @implements IHttpRule
                 * @constructor
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 */
                function HttpRule(properties) {
                    this.additionalBindings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * HttpRule selector.
                 * @member {string} selector
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.selector = "";
    
                /**
                 * HttpRule get.
                 * @member {string|null|undefined} get
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.get = null;
    
                /**
                 * HttpRule put.
                 * @member {string|null|undefined} put
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.put = null;
    
                /**
                 * HttpRule post.
                 * @member {string|null|undefined} post
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.post = null;
    
                /**
                 * HttpRule delete.
                 * @member {string|null|undefined} delete
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype["delete"] = null;
    
                /**
                 * HttpRule patch.
                 * @member {string|null|undefined} patch
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.patch = null;
    
                /**
                 * HttpRule custom.
                 * @member {google.api.ICustomHttpPattern|null|undefined} custom
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.custom = null;
    
                /**
                 * HttpRule body.
                 * @member {string} body
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.body = "";
    
                /**
                 * HttpRule responseBody.
                 * @member {string} responseBody
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.responseBody = "";
    
                /**
                 * HttpRule additionalBindings.
                 * @member {Array.<google.api.IHttpRule>} additionalBindings
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.additionalBindings = $util.emptyArray;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * HttpRule pattern.
                 * @member {"get"|"put"|"post"|"delete"|"patch"|"custom"|undefined} pattern
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                Object.defineProperty(HttpRule.prototype, "pattern", {
                    get: $util.oneOfGetter($oneOfFields = ["get", "put", "post", "delete", "patch", "custom"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new HttpRule instance using the specified properties.
                 * @function create
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 * @returns {google.api.HttpRule} HttpRule instance
                 */
                HttpRule.create = function create(properties) {
                    return new HttpRule(properties);
                };
    
                /**
                 * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.get != null && Object.hasOwnProperty.call(message, "get"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.get);
                    if (message.put != null && Object.hasOwnProperty.call(message, "put"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.put);
                    if (message.post != null && Object.hasOwnProperty.call(message, "post"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.post);
                    if (message["delete"] != null && Object.hasOwnProperty.call(message, "delete"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message["delete"]);
                    if (message.patch != null && Object.hasOwnProperty.call(message, "patch"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.patch);
                    if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.body);
                    if (message.custom != null && Object.hasOwnProperty.call(message, "custom"))
                        $root.google.api.CustomHttpPattern.encode(message.custom, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.additionalBindings != null && message.additionalBindings.length)
                        for (var i = 0; i < message.additionalBindings.length; ++i)
                            $root.google.api.HttpRule.encode(message.additionalBindings[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                    if (message.responseBody != null && Object.hasOwnProperty.call(message, "responseBody"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.responseBody);
                    return writer;
                };
    
                /**
                 * Encodes the specified HttpRule message, length delimited. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.HttpRule();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.selector = reader.string();
                                break;
                            }
                        case 2: {
                                message.get = reader.string();
                                break;
                            }
                        case 3: {
                                message.put = reader.string();
                                break;
                            }
                        case 4: {
                                message.post = reader.string();
                                break;
                            }
                        case 5: {
                                message["delete"] = reader.string();
                                break;
                            }
                        case 6: {
                                message.patch = reader.string();
                                break;
                            }
                        case 8: {
                                message.custom = $root.google.api.CustomHttpPattern.decode(reader, reader.uint32());
                                break;
                            }
                        case 7: {
                                message.body = reader.string();
                                break;
                            }
                        case 12: {
                                message.responseBody = reader.string();
                                break;
                            }
                        case 11: {
                                if (!(message.additionalBindings && message.additionalBindings.length))
                                    message.additionalBindings = [];
                                message.additionalBindings.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a HttpRule message.
                 * @function verify
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                HttpRule.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.get != null && message.hasOwnProperty("get")) {
                        properties.pattern = 1;
                        if (!$util.isString(message.get))
                            return "get: string expected";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.put))
                            return "put: string expected";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.post))
                            return "post: string expected";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message["delete"]))
                            return "delete: string expected";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.patch))
                            return "patch: string expected";
                    }
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        {
                            var error = $root.google.api.CustomHttpPattern.verify(message.custom);
                            if (error)
                                return "custom." + error;
                        }
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        if (!$util.isString(message.body))
                            return "body: string expected";
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        if (!$util.isString(message.responseBody))
                            return "responseBody: string expected";
                    if (message.additionalBindings != null && message.hasOwnProperty("additionalBindings")) {
                        if (!Array.isArray(message.additionalBindings))
                            return "additionalBindings: array expected";
                        for (var i = 0; i < message.additionalBindings.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.additionalBindings[i]);
                            if (error)
                                return "additionalBindings." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.HttpRule} HttpRule
                 */
                HttpRule.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.HttpRule)
                        return object;
                    var message = new $root.google.api.HttpRule();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.get != null)
                        message.get = String(object.get);
                    if (object.put != null)
                        message.put = String(object.put);
                    if (object.post != null)
                        message.post = String(object.post);
                    if (object["delete"] != null)
                        message["delete"] = String(object["delete"]);
                    if (object.patch != null)
                        message.patch = String(object.patch);
                    if (object.custom != null) {
                        if (typeof object.custom !== "object")
                            throw TypeError(".google.api.HttpRule.custom: object expected");
                        message.custom = $root.google.api.CustomHttpPattern.fromObject(object.custom);
                    }
                    if (object.body != null)
                        message.body = String(object.body);
                    if (object.responseBody != null)
                        message.responseBody = String(object.responseBody);
                    if (object.additionalBindings) {
                        if (!Array.isArray(object.additionalBindings))
                            throw TypeError(".google.api.HttpRule.additionalBindings: array expected");
                        message.additionalBindings = [];
                        for (var i = 0; i < object.additionalBindings.length; ++i) {
                            if (typeof object.additionalBindings[i] !== "object")
                                throw TypeError(".google.api.HttpRule.additionalBindings: object expected");
                            message.additionalBindings[i] = $root.google.api.HttpRule.fromObject(object.additionalBindings[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a HttpRule message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.HttpRule} message HttpRule
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                HttpRule.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.additionalBindings = [];
                    if (options.defaults) {
                        object.selector = "";
                        object.body = "";
                        object.responseBody = "";
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.get != null && message.hasOwnProperty("get")) {
                        object.get = message.get;
                        if (options.oneofs)
                            object.pattern = "get";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        object.put = message.put;
                        if (options.oneofs)
                            object.pattern = "put";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        object.post = message.post;
                        if (options.oneofs)
                            object.pattern = "post";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        object["delete"] = message["delete"];
                        if (options.oneofs)
                            object.pattern = "delete";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        object.patch = message.patch;
                        if (options.oneofs)
                            object.pattern = "patch";
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        object.body = message.body;
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        object.custom = $root.google.api.CustomHttpPattern.toObject(message.custom, options);
                        if (options.oneofs)
                            object.pattern = "custom";
                    }
                    if (message.additionalBindings && message.additionalBindings.length) {
                        object.additionalBindings = [];
                        for (var j = 0; j < message.additionalBindings.length; ++j)
                            object.additionalBindings[j] = $root.google.api.HttpRule.toObject(message.additionalBindings[j], options);
                    }
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        object.responseBody = message.responseBody;
                    return object;
                };
    
                /**
                 * Converts this HttpRule to JSON.
                 * @function toJSON
                 * @memberof google.api.HttpRule
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                HttpRule.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for HttpRule
                 * @function getTypeUrl
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                HttpRule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.HttpRule";
                };
    
                return HttpRule;
            })();
    
            api.CustomHttpPattern = (function() {
    
                /**
                 * Properties of a CustomHttpPattern.
                 * @memberof google.api
                 * @interface ICustomHttpPattern
                 * @property {string|null} [kind] CustomHttpPattern kind
                 * @property {string|null} [path] CustomHttpPattern path
                 */
    
                /**
                 * Constructs a new CustomHttpPattern.
                 * @memberof google.api
                 * @classdesc Represents a CustomHttpPattern.
                 * @implements ICustomHttpPattern
                 * @constructor
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 */
                function CustomHttpPattern(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CustomHttpPattern kind.
                 * @member {string} kind
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.kind = "";
    
                /**
                 * CustomHttpPattern path.
                 * @member {string} path
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.path = "";
    
                /**
                 * Creates a new CustomHttpPattern instance using the specified properties.
                 * @function create
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern instance
                 */
                CustomHttpPattern.create = function create(properties) {
                    return new CustomHttpPattern(properties);
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                    if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);
                    return writer;
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message, length delimited. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CustomHttpPattern();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.kind = reader.string();
                                break;
                            }
                        case 2: {
                                message.path = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CustomHttpPattern message.
                 * @function verify
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CustomHttpPattern.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        if (!$util.isString(message.kind))
                            return "kind: string expected";
                    if (message.path != null && message.hasOwnProperty("path"))
                        if (!$util.isString(message.path))
                            return "path: string expected";
                    return null;
                };
    
                /**
                 * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 */
                CustomHttpPattern.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CustomHttpPattern)
                        return object;
                    var message = new $root.google.api.CustomHttpPattern();
                    if (object.kind != null)
                        message.kind = String(object.kind);
                    if (object.path != null)
                        message.path = String(object.path);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.CustomHttpPattern} message CustomHttpPattern
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CustomHttpPattern.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.kind = "";
                        object.path = "";
                    }
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        object.kind = message.kind;
                    if (message.path != null && message.hasOwnProperty("path"))
                        object.path = message.path;
                    return object;
                };
    
                /**
                 * Converts this CustomHttpPattern to JSON.
                 * @function toJSON
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CustomHttpPattern.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CustomHttpPattern
                 * @function getTypeUrl
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CustomHttpPattern.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CustomHttpPattern";
                };
    
                return CustomHttpPattern;
            })();
    
            /**
             * FieldBehavior enum.
             * @name google.api.FieldBehavior
             * @enum {number}
             * @property {number} FIELD_BEHAVIOR_UNSPECIFIED=0 FIELD_BEHAVIOR_UNSPECIFIED value
             * @property {number} OPTIONAL=1 OPTIONAL value
             * @property {number} REQUIRED=2 REQUIRED value
             * @property {number} OUTPUT_ONLY=3 OUTPUT_ONLY value
             * @property {number} INPUT_ONLY=4 INPUT_ONLY value
             * @property {number} IMMUTABLE=5 IMMUTABLE value
             * @property {number} UNORDERED_LIST=6 UNORDERED_LIST value
             * @property {number} NON_EMPTY_DEFAULT=7 NON_EMPTY_DEFAULT value
             */
            api.FieldBehavior = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "FIELD_BEHAVIOR_UNSPECIFIED"] = 0;
                values[valuesById[1] = "OPTIONAL"] = 1;
                values[valuesById[2] = "REQUIRED"] = 2;
                values[valuesById[3] = "OUTPUT_ONLY"] = 3;
                values[valuesById[4] = "INPUT_ONLY"] = 4;
                values[valuesById[5] = "IMMUTABLE"] = 5;
                values[valuesById[6] = "UNORDERED_LIST"] = 6;
                values[valuesById[7] = "NON_EMPTY_DEFAULT"] = 7;
                return values;
            })();
    
            api.ResourceDescriptor = (function() {
    
                /**
                 * Properties of a ResourceDescriptor.
                 * @memberof google.api
                 * @interface IResourceDescriptor
                 * @property {string|null} [type] ResourceDescriptor type
                 * @property {Array.<string>|null} [pattern] ResourceDescriptor pattern
                 * @property {string|null} [nameField] ResourceDescriptor nameField
                 * @property {google.api.ResourceDescriptor.History|null} [history] ResourceDescriptor history
                 * @property {string|null} [plural] ResourceDescriptor plural
                 * @property {string|null} [singular] ResourceDescriptor singular
                 * @property {Array.<google.api.ResourceDescriptor.Style>|null} [style] ResourceDescriptor style
                 */
    
                /**
                 * Constructs a new ResourceDescriptor.
                 * @memberof google.api
                 * @classdesc Represents a ResourceDescriptor.
                 * @implements IResourceDescriptor
                 * @constructor
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 */
                function ResourceDescriptor(properties) {
                    this.pattern = [];
                    this.style = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceDescriptor type.
                 * @member {string} type
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.type = "";
    
                /**
                 * ResourceDescriptor pattern.
                 * @member {Array.<string>} pattern
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.pattern = $util.emptyArray;
    
                /**
                 * ResourceDescriptor nameField.
                 * @member {string} nameField
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.nameField = "";
    
                /**
                 * ResourceDescriptor history.
                 * @member {google.api.ResourceDescriptor.History} history
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.history = 0;
    
                /**
                 * ResourceDescriptor plural.
                 * @member {string} plural
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.plural = "";
    
                /**
                 * ResourceDescriptor singular.
                 * @member {string} singular
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.singular = "";
    
                /**
                 * ResourceDescriptor style.
                 * @member {Array.<google.api.ResourceDescriptor.Style>} style
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.style = $util.emptyArray;
    
                /**
                 * Creates a new ResourceDescriptor instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor instance
                 */
                ResourceDescriptor.create = function create(properties) {
                    return new ResourceDescriptor(properties);
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.pattern != null && message.pattern.length)
                        for (var i = 0; i < message.pattern.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.pattern[i]);
                    if (message.nameField != null && Object.hasOwnProperty.call(message, "nameField"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.nameField);
                    if (message.history != null && Object.hasOwnProperty.call(message, "history"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.history);
                    if (message.plural != null && Object.hasOwnProperty.call(message, "plural"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.plural);
                    if (message.singular != null && Object.hasOwnProperty.call(message, "singular"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.singular);
                    if (message.style != null && message.style.length) {
                        writer.uint32(/* id 10, wireType 2 =*/82).fork();
                        for (var i = 0; i < message.style.length; ++i)
                            writer.int32(message.style[i]);
                        writer.ldelim();
                    }
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message, length delimited. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceDescriptor();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.pattern && message.pattern.length))
                                    message.pattern = [];
                                message.pattern.push(reader.string());
                                break;
                            }
                        case 3: {
                                message.nameField = reader.string();
                                break;
                            }
                        case 4: {
                                message.history = reader.int32();
                                break;
                            }
                        case 5: {
                                message.plural = reader.string();
                                break;
                            }
                        case 6: {
                                message.singular = reader.string();
                                break;
                            }
                        case 10: {
                                if (!(message.style && message.style.length))
                                    message.style = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.style.push(reader.int32());
                                } else
                                    message.style.push(reader.int32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceDescriptor message.
                 * @function verify
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceDescriptor.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.pattern != null && message.hasOwnProperty("pattern")) {
                        if (!Array.isArray(message.pattern))
                            return "pattern: array expected";
                        for (var i = 0; i < message.pattern.length; ++i)
                            if (!$util.isString(message.pattern[i]))
                                return "pattern: string[] expected";
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        if (!$util.isString(message.nameField))
                            return "nameField: string expected";
                    if (message.history != null && message.hasOwnProperty("history"))
                        switch (message.history) {
                        default:
                            return "history: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        if (!$util.isString(message.plural))
                            return "plural: string expected";
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        if (!$util.isString(message.singular))
                            return "singular: string expected";
                    if (message.style != null && message.hasOwnProperty("style")) {
                        if (!Array.isArray(message.style))
                            return "style: array expected";
                        for (var i = 0; i < message.style.length; ++i)
                            switch (message.style[i]) {
                            default:
                                return "style: enum value[] expected";
                            case 0:
                            case 1:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a ResourceDescriptor message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 */
                ResourceDescriptor.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceDescriptor)
                        return object;
                    var message = new $root.google.api.ResourceDescriptor();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.pattern) {
                        if (!Array.isArray(object.pattern))
                            throw TypeError(".google.api.ResourceDescriptor.pattern: array expected");
                        message.pattern = [];
                        for (var i = 0; i < object.pattern.length; ++i)
                            message.pattern[i] = String(object.pattern[i]);
                    }
                    if (object.nameField != null)
                        message.nameField = String(object.nameField);
                    switch (object.history) {
                    default:
                        if (typeof object.history === "number") {
                            message.history = object.history;
                            break;
                        }
                        break;
                    case "HISTORY_UNSPECIFIED":
                    case 0:
                        message.history = 0;
                        break;
                    case "ORIGINALLY_SINGLE_PATTERN":
                    case 1:
                        message.history = 1;
                        break;
                    case "FUTURE_MULTI_PATTERN":
                    case 2:
                        message.history = 2;
                        break;
                    }
                    if (object.plural != null)
                        message.plural = String(object.plural);
                    if (object.singular != null)
                        message.singular = String(object.singular);
                    if (object.style) {
                        if (!Array.isArray(object.style))
                            throw TypeError(".google.api.ResourceDescriptor.style: array expected");
                        message.style = [];
                        for (var i = 0; i < object.style.length; ++i)
                            switch (object.style[i]) {
                            default:
                                if (typeof object.style[i] === "number") {
                                    message.style[i] = object.style[i];
                                    break;
                                }
                            case "STYLE_UNSPECIFIED":
                            case 0:
                                message.style[i] = 0;
                                break;
                            case "DECLARATIVE_FRIENDLY":
                            case 1:
                                message.style[i] = 1;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceDescriptor message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.ResourceDescriptor} message ResourceDescriptor
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceDescriptor.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.pattern = [];
                        object.style = [];
                    }
                    if (options.defaults) {
                        object.type = "";
                        object.nameField = "";
                        object.history = options.enums === String ? "HISTORY_UNSPECIFIED" : 0;
                        object.plural = "";
                        object.singular = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.pattern && message.pattern.length) {
                        object.pattern = [];
                        for (var j = 0; j < message.pattern.length; ++j)
                            object.pattern[j] = message.pattern[j];
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        object.nameField = message.nameField;
                    if (message.history != null && message.hasOwnProperty("history"))
                        object.history = options.enums === String ? $root.google.api.ResourceDescriptor.History[message.history] === undefined ? message.history : $root.google.api.ResourceDescriptor.History[message.history] : message.history;
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        object.plural = message.plural;
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        object.singular = message.singular;
                    if (message.style && message.style.length) {
                        object.style = [];
                        for (var j = 0; j < message.style.length; ++j)
                            object.style[j] = options.enums === String ? $root.google.api.ResourceDescriptor.Style[message.style[j]] === undefined ? message.style[j] : $root.google.api.ResourceDescriptor.Style[message.style[j]] : message.style[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this ResourceDescriptor to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceDescriptor.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceDescriptor
                 * @function getTypeUrl
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceDescriptor.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceDescriptor";
                };
    
                /**
                 * History enum.
                 * @name google.api.ResourceDescriptor.History
                 * @enum {number}
                 * @property {number} HISTORY_UNSPECIFIED=0 HISTORY_UNSPECIFIED value
                 * @property {number} ORIGINALLY_SINGLE_PATTERN=1 ORIGINALLY_SINGLE_PATTERN value
                 * @property {number} FUTURE_MULTI_PATTERN=2 FUTURE_MULTI_PATTERN value
                 */
                ResourceDescriptor.History = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "HISTORY_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "ORIGINALLY_SINGLE_PATTERN"] = 1;
                    values[valuesById[2] = "FUTURE_MULTI_PATTERN"] = 2;
                    return values;
                })();
    
                /**
                 * Style enum.
                 * @name google.api.ResourceDescriptor.Style
                 * @enum {number}
                 * @property {number} STYLE_UNSPECIFIED=0 STYLE_UNSPECIFIED value
                 * @property {number} DECLARATIVE_FRIENDLY=1 DECLARATIVE_FRIENDLY value
                 */
                ResourceDescriptor.Style = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STYLE_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "DECLARATIVE_FRIENDLY"] = 1;
                    return values;
                })();
    
                return ResourceDescriptor;
            })();
    
            api.ResourceReference = (function() {
    
                /**
                 * Properties of a ResourceReference.
                 * @memberof google.api
                 * @interface IResourceReference
                 * @property {string|null} [type] ResourceReference type
                 * @property {string|null} [childType] ResourceReference childType
                 */
    
                /**
                 * Constructs a new ResourceReference.
                 * @memberof google.api
                 * @classdesc Represents a ResourceReference.
                 * @implements IResourceReference
                 * @constructor
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 */
                function ResourceReference(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceReference type.
                 * @member {string} type
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.type = "";
    
                /**
                 * ResourceReference childType.
                 * @member {string} childType
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.childType = "";
    
                /**
                 * Creates a new ResourceReference instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 * @returns {google.api.ResourceReference} ResourceReference instance
                 */
                ResourceReference.create = function create(properties) {
                    return new ResourceReference(properties);
                };
    
                /**
                 * Encodes the specified ResourceReference message. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.childType != null && Object.hasOwnProperty.call(message, "childType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.childType);
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceReference message, length delimited. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceReference();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                message.childType = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceReference message.
                 * @function verify
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceReference.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        if (!$util.isString(message.childType))
                            return "childType: string expected";
                    return null;
                };
    
                /**
                 * Creates a ResourceReference message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceReference} ResourceReference
                 */
                ResourceReference.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceReference)
                        return object;
                    var message = new $root.google.api.ResourceReference();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.childType != null)
                        message.childType = String(object.childType);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceReference message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.ResourceReference} message ResourceReference
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceReference.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type = "";
                        object.childType = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        object.childType = message.childType;
                    return object;
                };
    
                /**
                 * Converts this ResourceReference to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceReference
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceReference.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceReference
                 * @function getTypeUrl
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceReference.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceReference";
                };
    
                return ResourceReference;
            })();
    
            return api;
        })();
    
        google.protobuf = (function() {
    
            /**
             * Namespace protobuf.
             * @memberof google
             * @namespace
             */
            var protobuf = {};
    
            protobuf.FileDescriptorSet = (function() {
    
                /**
                 * Properties of a FileDescriptorSet.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorSet
                 * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file
                 */
    
                /**
                 * Constructs a new FileDescriptorSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorSet.
                 * @implements IFileDescriptorSet
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 */
                function FileDescriptorSet(properties) {
                    this.file = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorSet file.
                 * @member {Array.<google.protobuf.IFileDescriptorProto>} file
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 */
                FileDescriptorSet.prototype.file = $util.emptyArray;
    
                /**
                 * Creates a new FileDescriptorSet instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet instance
                 */
                FileDescriptorSet.create = function create(properties) {
                    return new FileDescriptorSet(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.file != null && message.file.length)
                        for (var i = 0; i < message.file.length; ++i)
                            $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.file && message.file.length))
                                    message.file = [];
                                message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorSet message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.file != null && message.hasOwnProperty("file")) {
                        if (!Array.isArray(message.file))
                            return "file: array expected";
                        for (var i = 0; i < message.file.length; ++i) {
                            var error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);
                            if (error)
                                return "file." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 */
                FileDescriptorSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorSet)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorSet();
                    if (object.file) {
                        if (!Array.isArray(object.file))
                            throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
                        message.file = [];
                        for (var i = 0; i < object.file.length; ++i) {
                            if (typeof object.file[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                            message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.file = [];
                    if (message.file && message.file.length) {
                        object.file = [];
                        for (var j = 0; j < message.file.length; ++j)
                            object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorSet
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorSet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorSet";
                };
    
                return FileDescriptorSet;
            })();
    
            protobuf.FileDescriptorProto = (function() {
    
                /**
                 * Properties of a FileDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorProto
                 * @property {string|null} [name] FileDescriptorProto name
                 * @property {string|null} ["package"] FileDescriptorProto package
                 * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency
                 * @property {Array.<number>|null} [publicDependency] FileDescriptorProto publicDependency
                 * @property {Array.<number>|null} [weakDependency] FileDescriptorProto weakDependency
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [messageType] FileDescriptorProto messageType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] FileDescriptorProto enumType
                 * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension
                 * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options
                 * @property {google.protobuf.ISourceCodeInfo|null} [sourceCodeInfo] FileDescriptorProto sourceCodeInfo
                 * @property {string|null} [syntax] FileDescriptorProto syntax
                 * @property {string|null} [edition] FileDescriptorProto edition
                 */
    
                /**
                 * Constructs a new FileDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorProto.
                 * @implements IFileDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 */
                function FileDescriptorProto(properties) {
                    this.dependency = [];
                    this.publicDependency = [];
                    this.weakDependency = [];
                    this.messageType = [];
                    this.enumType = [];
                    this.service = [];
                    this.extension = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.name = "";
    
                /**
                 * FileDescriptorProto package.
                 * @member {string} package
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype["package"] = "";
    
                /**
                 * FileDescriptorProto dependency.
                 * @member {Array.<string>} dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto publicDependency.
                 * @member {Array.<number>} publicDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.publicDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto weakDependency.
                 * @member {Array.<number>} weakDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.weakDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto messageType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} messageType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.messageType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto service.
                 * @member {Array.<google.protobuf.IServiceDescriptorProto>} service
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.service = $util.emptyArray;
    
                /**
                 * FileDescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * FileDescriptorProto options.
                 * @member {google.protobuf.IFileOptions|null|undefined} options
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.options = null;
    
                /**
                 * FileDescriptorProto sourceCodeInfo.
                 * @member {google.protobuf.ISourceCodeInfo|null|undefined} sourceCodeInfo
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.sourceCodeInfo = null;
    
                /**
                 * FileDescriptorProto syntax.
                 * @member {string} syntax
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.syntax = "";
    
                /**
                 * FileDescriptorProto edition.
                 * @member {string} edition
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.edition = "";
    
                /**
                 * Creates a new FileDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto instance
                 */
                FileDescriptorProto.create = function create(properties) {
                    return new FileDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message["package"] != null && Object.hasOwnProperty.call(message, "package"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message["package"]);
                    if (message.dependency != null && message.dependency.length)
                        for (var i = 0; i < message.dependency.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);
                    if (message.messageType != null && message.messageType.length)
                        for (var i = 0; i < message.messageType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.messageType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.service != null && message.service.length)
                        for (var i = 0; i < message.service.length; ++i)
                            $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.sourceCodeInfo != null && Object.hasOwnProperty.call(message, "sourceCodeInfo"))
                        $root.google.protobuf.SourceCodeInfo.encode(message.sourceCodeInfo, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.publicDependency != null && message.publicDependency.length)
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.publicDependency[i]);
                    if (message.weakDependency != null && message.weakDependency.length)
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.weakDependency[i]);
                    if (message.syntax != null && Object.hasOwnProperty.call(message, "syntax"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.syntax);
                    if (message.edition != null && Object.hasOwnProperty.call(message, "edition"))
                        writer.uint32(/* id 13, wireType 2 =*/106).string(message.edition);
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message["package"] = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.dependency && message.dependency.length))
                                    message.dependency = [];
                                message.dependency.push(reader.string());
                                break;
                            }
                        case 10: {
                                if (!(message.publicDependency && message.publicDependency.length))
                                    message.publicDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.publicDependency.push(reader.int32());
                                } else
                                    message.publicDependency.push(reader.int32());
                                break;
                            }
                        case 11: {
                                if (!(message.weakDependency && message.weakDependency.length))
                                    message.weakDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.weakDependency.push(reader.int32());
                                } else
                                    message.weakDependency.push(reader.int32());
                                break;
                            }
                        case 4: {
                                if (!(message.messageType && message.messageType.length))
                                    message.messageType = [];
                                message.messageType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.service && message.service.length))
                                    message.service = [];
                                message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());
                                break;
                            }
                        case 12: {
                                message.syntax = reader.string();
                                break;
                            }
                        case 13: {
                                message.edition = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        if (!$util.isString(message["package"]))
                            return "package: string expected";
                    if (message.dependency != null && message.hasOwnProperty("dependency")) {
                        if (!Array.isArray(message.dependency))
                            return "dependency: array expected";
                        for (var i = 0; i < message.dependency.length; ++i)
                            if (!$util.isString(message.dependency[i]))
                                return "dependency: string[] expected";
                    }
                    if (message.publicDependency != null && message.hasOwnProperty("publicDependency")) {
                        if (!Array.isArray(message.publicDependency))
                            return "publicDependency: array expected";
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            if (!$util.isInteger(message.publicDependency[i]))
                                return "publicDependency: integer[] expected";
                    }
                    if (message.weakDependency != null && message.hasOwnProperty("weakDependency")) {
                        if (!Array.isArray(message.weakDependency))
                            return "weakDependency: array expected";
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            if (!$util.isInteger(message.weakDependency[i]))
                                return "weakDependency: integer[] expected";
                    }
                    if (message.messageType != null && message.hasOwnProperty("messageType")) {
                        if (!Array.isArray(message.messageType))
                            return "messageType: array expected";
                        for (var i = 0; i < message.messageType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.messageType[i]);
                            if (error)
                                return "messageType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.service != null && message.hasOwnProperty("service")) {
                        if (!Array.isArray(message.service))
                            return "service: array expected";
                        for (var i = 0; i < message.service.length; ++i) {
                            var error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);
                            if (error)
                                return "service." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FileOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo")) {
                        var error = $root.google.protobuf.SourceCodeInfo.verify(message.sourceCodeInfo);
                        if (error)
                            return "sourceCodeInfo." + error;
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        if (!$util.isString(message.syntax))
                            return "syntax: string expected";
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        if (!$util.isString(message.edition))
                            return "edition: string expected";
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 */
                FileDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object["package"] != null)
                        message["package"] = String(object["package"]);
                    if (object.dependency) {
                        if (!Array.isArray(object.dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
                        message.dependency = [];
                        for (var i = 0; i < object.dependency.length; ++i)
                            message.dependency[i] = String(object.dependency[i]);
                    }
                    if (object.publicDependency) {
                        if (!Array.isArray(object.publicDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.publicDependency: array expected");
                        message.publicDependency = [];
                        for (var i = 0; i < object.publicDependency.length; ++i)
                            message.publicDependency[i] = object.publicDependency[i] | 0;
                    }
                    if (object.weakDependency) {
                        if (!Array.isArray(object.weakDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.weakDependency: array expected");
                        message.weakDependency = [];
                        for (var i = 0; i < object.weakDependency.length; ++i)
                            message.weakDependency[i] = object.weakDependency[i] | 0;
                    }
                    if (object.messageType) {
                        if (!Array.isArray(object.messageType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.messageType: array expected");
                        message.messageType = [];
                        for (var i = 0; i < object.messageType.length; ++i) {
                            if (typeof object.messageType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.messageType: object expected");
                            message.messageType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.messageType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.service) {
                        if (!Array.isArray(object.service))
                            throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
                        message.service = [];
                        for (var i = 0; i < object.service.length; ++i) {
                            if (typeof object.service[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                            message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FileOptions.fromObject(object.options);
                    }
                    if (object.sourceCodeInfo != null) {
                        if (typeof object.sourceCodeInfo !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.sourceCodeInfo: object expected");
                        message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.fromObject(object.sourceCodeInfo);
                    }
                    if (object.syntax != null)
                        message.syntax = String(object.syntax);
                    if (object.edition != null)
                        message.edition = String(object.edition);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.dependency = [];
                        object.messageType = [];
                        object.enumType = [];
                        object.service = [];
                        object.extension = [];
                        object.publicDependency = [];
                        object.weakDependency = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object["package"] = "";
                        object.options = null;
                        object.sourceCodeInfo = null;
                        object.syntax = "";
                        object.edition = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        object["package"] = message["package"];
                    if (message.dependency && message.dependency.length) {
                        object.dependency = [];
                        for (var j = 0; j < message.dependency.length; ++j)
                            object.dependency[j] = message.dependency[j];
                    }
                    if (message.messageType && message.messageType.length) {
                        object.messageType = [];
                        for (var j = 0; j < message.messageType.length; ++j)
                            object.messageType[j] = $root.google.protobuf.DescriptorProto.toObject(message.messageType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.service && message.service.length) {
                        object.service = [];
                        for (var j = 0; j < message.service.length; ++j)
                            object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo"))
                        object.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.toObject(message.sourceCodeInfo, options);
                    if (message.publicDependency && message.publicDependency.length) {
                        object.publicDependency = [];
                        for (var j = 0; j < message.publicDependency.length; ++j)
                            object.publicDependency[j] = message.publicDependency[j];
                    }
                    if (message.weakDependency && message.weakDependency.length) {
                        object.weakDependency = [];
                        for (var j = 0; j < message.weakDependency.length; ++j)
                            object.weakDependency[j] = message.weakDependency[j];
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        object.syntax = message.syntax;
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        object.edition = message.edition;
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorProto";
                };
    
                return FileDescriptorProto;
            })();
    
            protobuf.DescriptorProto = (function() {
    
                /**
                 * Properties of a DescriptorProto.
                 * @memberof google.protobuf
                 * @interface IDescriptorProto
                 * @property {string|null} [name] DescriptorProto name
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [nestedType] DescriptorProto nestedType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] DescriptorProto enumType
                 * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extensionRange] DescriptorProto extensionRange
                 * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneofDecl] DescriptorProto oneofDecl
                 * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options
                 * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reservedRange] DescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] DescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new DescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a DescriptorProto.
                 * @implements IDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 */
                function DescriptorProto(properties) {
                    this.field = [];
                    this.extension = [];
                    this.nestedType = [];
                    this.enumType = [];
                    this.extensionRange = [];
                    this.oneofDecl = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.name = "";
    
                /**
                 * DescriptorProto field.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} field
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.field = $util.emptyArray;
    
                /**
                 * DescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * DescriptorProto nestedType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} nestedType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.nestedType = $util.emptyArray;
    
                /**
                 * DescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * DescriptorProto extensionRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extensionRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extensionRange = $util.emptyArray;
    
                /**
                 * DescriptorProto oneofDecl.
                 * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneofDecl
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.oneofDecl = $util.emptyArray;
    
                /**
                 * DescriptorProto options.
                 * @member {google.protobuf.IMessageOptions|null|undefined} options
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.options = null;
    
                /**
                 * DescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reservedRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * DescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new DescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto instance
                 */
                DescriptorProto.create = function create(properties) {
                    return new DescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.field != null && message.field.length)
                        for (var i = 0; i < message.field.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.nestedType != null && message.nestedType.length)
                        for (var i = 0; i < message.nestedType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.nestedType[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.extensionRange != null && message.extensionRange.length)
                        for (var i = 0; i < message.extensionRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extensionRange[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.oneofDecl != null && message.oneofDecl.length)
                        for (var i = 0; i < message.oneofDecl.length; ++i)
                            $root.google.protobuf.OneofDescriptorProto.encode(message.oneofDecl[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.field && message.field.length))
                                    message.field = [];
                                message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                if (!(message.nestedType && message.nestedType.length))
                                    message.nestedType = [];
                                message.nestedType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 4: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.extensionRange && message.extensionRange.length))
                                    message.extensionRange = [];
                                message.extensionRange.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                if (!(message.oneofDecl && message.oneofDecl.length))
                                    message.oneofDecl = [];
                                message.oneofDecl.push($root.google.protobuf.OneofDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.DescriptorProto.ReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 10: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.field != null && message.hasOwnProperty("field")) {
                        if (!Array.isArray(message.field))
                            return "field: array expected";
                        for (var i = 0; i < message.field.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);
                            if (error)
                                return "field." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.nestedType != null && message.hasOwnProperty("nestedType")) {
                        if (!Array.isArray(message.nestedType))
                            return "nestedType: array expected";
                        for (var i = 0; i < message.nestedType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.nestedType[i]);
                            if (error)
                                return "nestedType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.extensionRange != null && message.hasOwnProperty("extensionRange")) {
                        if (!Array.isArray(message.extensionRange))
                            return "extensionRange: array expected";
                        for (var i = 0; i < message.extensionRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extensionRange[i]);
                            if (error)
                                return "extensionRange." + error;
                        }
                    }
                    if (message.oneofDecl != null && message.hasOwnProperty("oneofDecl")) {
                        if (!Array.isArray(message.oneofDecl))
                            return "oneofDecl: array expected";
                        for (var i = 0; i < message.oneofDecl.length; ++i) {
                            var error = $root.google.protobuf.OneofDescriptorProto.verify(message.oneofDecl[i]);
                            if (error)
                                return "oneofDecl." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MessageOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 */
                DescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.DescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.field) {
                        if (!Array.isArray(object.field))
                            throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
                        message.field = [];
                        for (var i = 0; i < object.field.length; ++i) {
                            if (typeof object.field[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                            message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.nestedType) {
                        if (!Array.isArray(object.nestedType))
                            throw TypeError(".google.protobuf.DescriptorProto.nestedType: array expected");
                        message.nestedType = [];
                        for (var i = 0; i < object.nestedType.length; ++i) {
                            if (typeof object.nestedType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.nestedType: object expected");
                            message.nestedType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nestedType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.DescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.extensionRange) {
                        if (!Array.isArray(object.extensionRange))
                            throw TypeError(".google.protobuf.DescriptorProto.extensionRange: array expected");
                        message.extensionRange = [];
                        for (var i = 0; i < object.extensionRange.length; ++i) {
                            if (typeof object.extensionRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extensionRange: object expected");
                            message.extensionRange[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extensionRange[i]);
                        }
                    }
                    if (object.oneofDecl) {
                        if (!Array.isArray(object.oneofDecl))
                            throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: array expected");
                        message.oneofDecl = [];
                        for (var i = 0; i < object.oneofDecl.length; ++i) {
                            if (typeof object.oneofDecl[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: object expected");
                            message.oneofDecl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneofDecl[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.DescriptorProto} message DescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.field = [];
                        object.nestedType = [];
                        object.enumType = [];
                        object.extensionRange = [];
                        object.extension = [];
                        object.oneofDecl = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.field && message.field.length) {
                        object.field = [];
                        for (var j = 0; j < message.field.length; ++j)
                            object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);
                    }
                    if (message.nestedType && message.nestedType.length) {
                        object.nestedType = [];
                        for (var j = 0; j < message.nestedType.length; ++j)
                            object.nestedType[j] = $root.google.protobuf.DescriptorProto.toObject(message.nestedType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.extensionRange && message.extensionRange.length) {
                        object.extensionRange = [];
                        for (var j = 0; j < message.extensionRange.length; ++j)
                            object.extensionRange[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extensionRange[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);
                    if (message.oneofDecl && message.oneofDecl.length) {
                        object.oneofDecl = [];
                        for (var j = 0; j < message.oneofDecl.length; ++j)
                            object.oneofDecl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneofDecl[j], options);
                    }
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this DescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.DescriptorProto";
                };
    
                DescriptorProto.ExtensionRange = (function() {
    
                    /**
                     * Properties of an ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IExtensionRange
                     * @property {number|null} [start] ExtensionRange start
                     * @property {number|null} [end] ExtensionRange end
                     * @property {google.protobuf.IExtensionRangeOptions|null} [options] ExtensionRange options
                     */
    
                    /**
                     * Constructs a new ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents an ExtensionRange.
                     * @implements IExtensionRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     */
                    function ExtensionRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ExtensionRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.start = 0;
    
                    /**
                     * ExtensionRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.end = 0;
    
                    /**
                     * ExtensionRange options.
                     * @member {google.protobuf.IExtensionRangeOptions|null|undefined} options
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.options = null;
    
                    /**
                     * Creates a new ExtensionRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange instance
                     */
                    ExtensionRange.create = function create(properties) {
                        return new ExtensionRange(properties);
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                            $root.google.protobuf.ExtensionRangeOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 3: {
                                    message.options = $root.google.protobuf.ExtensionRangeOptions.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an ExtensionRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ExtensionRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.options != null && message.hasOwnProperty("options")) {
                            var error = $root.google.protobuf.ExtensionRangeOptions.verify(message.options);
                            if (error)
                                return "options." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     */
                    ExtensionRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        if (object.options != null) {
                            if (typeof object.options !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.ExtensionRange.options: object expected");
                            message.options = $root.google.protobuf.ExtensionRangeOptions.fromObject(object.options);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ExtensionRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                            object.options = null;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.options != null && message.hasOwnProperty("options"))
                            object.options = $root.google.protobuf.ExtensionRangeOptions.toObject(message.options, options);
                        return object;
                    };
    
                    /**
                     * Converts this ExtensionRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ExtensionRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ExtensionRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ExtensionRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ExtensionRange";
                    };
    
                    return ExtensionRange;
                })();
    
                DescriptorProto.ReservedRange = (function() {
    
                    /**
                     * Properties of a ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IReservedRange
                     * @property {number|null} [start] ReservedRange start
                     * @property {number|null} [end] ReservedRange end
                     */
    
                    /**
                     * Constructs a new ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents a ReservedRange.
                     * @implements IReservedRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     */
                    function ReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.start = 0;
    
                    /**
                     * ReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new ReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange instance
                     */
                    ReservedRange.create = function create(properties) {
                        return new ReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     */
                    ReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ReservedRange";
                    };
    
                    return ReservedRange;
                })();
    
                return DescriptorProto;
            })();
    
            protobuf.ExtensionRangeOptions = (function() {
    
                /**
                 * Properties of an ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @interface IExtensionRangeOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ExtensionRangeOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an ExtensionRangeOptions.
                 * @implements IExtensionRangeOptions
                 * @constructor
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 */
                function ExtensionRangeOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ExtensionRangeOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 */
                ExtensionRangeOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new ExtensionRangeOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions instance
                 */
                ExtensionRangeOptions.create = function create(properties) {
                    return new ExtensionRangeOptions(properties);
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message, length delimited. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ExtensionRangeOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an ExtensionRangeOptions message.
                 * @function verify
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ExtensionRangeOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an ExtensionRangeOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 */
                ExtensionRangeOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ExtensionRangeOptions)
                        return object;
                    var message = new $root.google.protobuf.ExtensionRangeOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an ExtensionRangeOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.ExtensionRangeOptions} message ExtensionRangeOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ExtensionRangeOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ExtensionRangeOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ExtensionRangeOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ExtensionRangeOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ExtensionRangeOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ExtensionRangeOptions";
                };
    
                return ExtensionRangeOptions;
            })();
    
            protobuf.FieldDescriptorProto = (function() {
    
                /**
                 * Properties of a FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFieldDescriptorProto
                 * @property {string|null} [name] FieldDescriptorProto name
                 * @property {number|null} [number] FieldDescriptorProto number
                 * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label
                 * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type
                 * @property {string|null} [typeName] FieldDescriptorProto typeName
                 * @property {string|null} [extendee] FieldDescriptorProto extendee
                 * @property {string|null} [defaultValue] FieldDescriptorProto defaultValue
                 * @property {number|null} [oneofIndex] FieldDescriptorProto oneofIndex
                 * @property {string|null} [jsonName] FieldDescriptorProto jsonName
                 * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options
                 * @property {boolean|null} [proto3Optional] FieldDescriptorProto proto3Optional
                 */
    
                /**
                 * Constructs a new FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldDescriptorProto.
                 * @implements IFieldDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 */
                function FieldDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.name = "";
    
                /**
                 * FieldDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.number = 0;
    
                /**
                 * FieldDescriptorProto label.
                 * @member {google.protobuf.FieldDescriptorProto.Label} label
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.label = 1;
    
                /**
                 * FieldDescriptorProto type.
                 * @member {google.protobuf.FieldDescriptorProto.Type} type
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type = 1;
    
                /**
                 * FieldDescriptorProto typeName.
                 * @member {string} typeName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.typeName = "";
    
                /**
                 * FieldDescriptorProto extendee.
                 * @member {string} extendee
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.extendee = "";
    
                /**
                 * FieldDescriptorProto defaultValue.
                 * @member {string} defaultValue
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.defaultValue = "";
    
                /**
                 * FieldDescriptorProto oneofIndex.
                 * @member {number} oneofIndex
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.oneofIndex = 0;
    
                /**
                 * FieldDescriptorProto jsonName.
                 * @member {string} jsonName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.jsonName = "";
    
                /**
                 * FieldDescriptorProto options.
                 * @member {google.protobuf.IFieldOptions|null|undefined} options
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.options = null;
    
                /**
                 * FieldDescriptorProto proto3Optional.
                 * @member {boolean} proto3Optional
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.proto3Optional = false;
    
                /**
                 * Creates a new FieldDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto instance
                 */
                FieldDescriptorProto.create = function create(properties) {
                    return new FieldDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.extendee != null && Object.hasOwnProperty.call(message, "extendee"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);
                    if (message.label != null && Object.hasOwnProperty.call(message, "label"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                    if (message.typeName != null && Object.hasOwnProperty.call(message, "typeName"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.typeName);
                    if (message.defaultValue != null && Object.hasOwnProperty.call(message, "defaultValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.defaultValue);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.oneofIndex != null && Object.hasOwnProperty.call(message, "oneofIndex"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.oneofIndex);
                    if (message.jsonName != null && Object.hasOwnProperty.call(message, "jsonName"))
                        writer.uint32(/* id 10, wireType 2 =*/82).string(message.jsonName);
                    if (message.proto3Optional != null && Object.hasOwnProperty.call(message, "proto3Optional"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.proto3Optional);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 3: {
                                message.number = reader.int32();
                                break;
                            }
                        case 4: {
                                message.label = reader.int32();
                                break;
                            }
                        case 5: {
                                message.type = reader.int32();
                                break;
                            }
                        case 6: {
                                message.typeName = reader.string();
                                break;
                            }
                        case 2: {
                                message.extendee = reader.string();
                                break;
                            }
                        case 7: {
                                message.defaultValue = reader.string();
                                break;
                            }
                        case 9: {
                                message.oneofIndex = reader.int32();
                                break;
                            }
                        case 10: {
                                message.jsonName = reader.string();
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 17: {
                                message.proto3Optional = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.label != null && message.hasOwnProperty("label"))
                        switch (message.label) {
                        default:
                            return "label: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                            break;
                        }
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        if (!$util.isString(message.typeName))
                            return "typeName: string expected";
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        if (!$util.isString(message.extendee))
                            return "extendee: string expected";
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        if (!$util.isString(message.defaultValue))
                            return "defaultValue: string expected";
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        if (!$util.isInteger(message.oneofIndex))
                            return "oneofIndex: integer expected";
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        if (!$util.isString(message.jsonName))
                            return "jsonName: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FieldOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        if (typeof message.proto3Optional !== "boolean")
                            return "proto3Optional: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 */
                FieldDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FieldDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    switch (object.label) {
                    default:
                        if (typeof object.label === "number") {
                            message.label = object.label;
                            break;
                        }
                        break;
                    case "LABEL_OPTIONAL":
                    case 1:
                        message.label = 1;
                        break;
                    case "LABEL_REQUIRED":
                    case 2:
                        message.label = 2;
                        break;
                    case "LABEL_REPEATED":
                    case 3:
                        message.label = 3;
                        break;
                    }
                    switch (object.type) {
                    default:
                        if (typeof object.type === "number") {
                            message.type = object.type;
                            break;
                        }
                        break;
                    case "TYPE_DOUBLE":
                    case 1:
                        message.type = 1;
                        break;
                    case "TYPE_FLOAT":
                    case 2:
                        message.type = 2;
                        break;
                    case "TYPE_INT64":
                    case 3:
                        message.type = 3;
                        break;
                    case "TYPE_UINT64":
                    case 4:
                        message.type = 4;
                        break;
                    case "TYPE_INT32":
                    case 5:
                        message.type = 5;
                        break;
                    case "TYPE_FIXED64":
                    case 6:
                        message.type = 6;
                        break;
                    case "TYPE_FIXED32":
                    case 7:
                        message.type = 7;
                        break;
                    case "TYPE_BOOL":
                    case 8:
                        message.type = 8;
                        break;
                    case "TYPE_STRING":
                    case 9:
                        message.type = 9;
                        break;
                    case "TYPE_GROUP":
                    case 10:
                        message.type = 10;
                        break;
                    case "TYPE_MESSAGE":
                    case 11:
                        message.type = 11;
                        break;
                    case "TYPE_BYTES":
                    case 12:
                        message.type = 12;
                        break;
                    case "TYPE_UINT32":
                    case 13:
                        message.type = 13;
                        break;
                    case "TYPE_ENUM":
                    case 14:
                        message.type = 14;
                        break;
                    case "TYPE_SFIXED32":
                    case 15:
                        message.type = 15;
                        break;
                    case "TYPE_SFIXED64":
                    case 16:
                        message.type = 16;
                        break;
                    case "TYPE_SINT32":
                    case 17:
                        message.type = 17;
                        break;
                    case "TYPE_SINT64":
                    case 18:
                        message.type = 18;
                        break;
                    }
                    if (object.typeName != null)
                        message.typeName = String(object.typeName);
                    if (object.extendee != null)
                        message.extendee = String(object.extendee);
                    if (object.defaultValue != null)
                        message.defaultValue = String(object.defaultValue);
                    if (object.oneofIndex != null)
                        message.oneofIndex = object.oneofIndex | 0;
                    if (object.jsonName != null)
                        message.jsonName = String(object.jsonName);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);
                    }
                    if (object.proto3Optional != null)
                        message.proto3Optional = Boolean(object.proto3Optional);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.extendee = "";
                        object.number = 0;
                        object.label = options.enums === String ? "LABEL_OPTIONAL" : 1;
                        object.type = options.enums === String ? "TYPE_DOUBLE" : 1;
                        object.typeName = "";
                        object.defaultValue = "";
                        object.options = null;
                        object.oneofIndex = 0;
                        object.jsonName = "";
                        object.proto3Optional = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        object.extendee = message.extendee;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] === undefined ? message.label : $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] === undefined ? message.type : $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        object.typeName = message.typeName;
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        object.defaultValue = message.defaultValue;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        object.oneofIndex = message.oneofIndex;
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        object.jsonName = message.jsonName;
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        object.proto3Optional = message.proto3Optional;
                    return object;
                };
    
                /**
                 * Converts this FieldDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldDescriptorProto";
                };
    
                /**
                 * Type enum.
                 * @name google.protobuf.FieldDescriptorProto.Type
                 * @enum {number}
                 * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value
                 * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
                 * @property {number} TYPE_INT64=3 TYPE_INT64 value
                 * @property {number} TYPE_UINT64=4 TYPE_UINT64 value
                 * @property {number} TYPE_INT32=5 TYPE_INT32 value
                 * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value
                 * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value
                 * @property {number} TYPE_BOOL=8 TYPE_BOOL value
                 * @property {number} TYPE_STRING=9 TYPE_STRING value
                 * @property {number} TYPE_GROUP=10 TYPE_GROUP value
                 * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value
                 * @property {number} TYPE_BYTES=12 TYPE_BYTES value
                 * @property {number} TYPE_UINT32=13 TYPE_UINT32 value
                 * @property {number} TYPE_ENUM=14 TYPE_ENUM value
                 * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value
                 * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value
                 * @property {number} TYPE_SINT32=17 TYPE_SINT32 value
                 * @property {number} TYPE_SINT64=18 TYPE_SINT64 value
                 */
                FieldDescriptorProto.Type = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "TYPE_DOUBLE"] = 1;
                    values[valuesById[2] = "TYPE_FLOAT"] = 2;
                    values[valuesById[3] = "TYPE_INT64"] = 3;
                    values[valuesById[4] = "TYPE_UINT64"] = 4;
                    values[valuesById[5] = "TYPE_INT32"] = 5;
                    values[valuesById[6] = "TYPE_FIXED64"] = 6;
                    values[valuesById[7] = "TYPE_FIXED32"] = 7;
                    values[valuesById[8] = "TYPE_BOOL"] = 8;
                    values[valuesById[9] = "TYPE_STRING"] = 9;
                    values[valuesById[10] = "TYPE_GROUP"] = 10;
                    values[valuesById[11] = "TYPE_MESSAGE"] = 11;
                    values[valuesById[12] = "TYPE_BYTES"] = 12;
                    values[valuesById[13] = "TYPE_UINT32"] = 13;
                    values[valuesById[14] = "TYPE_ENUM"] = 14;
                    values[valuesById[15] = "TYPE_SFIXED32"] = 15;
                    values[valuesById[16] = "TYPE_SFIXED64"] = 16;
                    values[valuesById[17] = "TYPE_SINT32"] = 17;
                    values[valuesById[18] = "TYPE_SINT64"] = 18;
                    return values;
                })();
    
                /**
                 * Label enum.
                 * @name google.protobuf.FieldDescriptorProto.Label
                 * @enum {number}
                 * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value
                 * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value
                 * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value
                 */
                FieldDescriptorProto.Label = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "LABEL_OPTIONAL"] = 1;
                    values[valuesById[2] = "LABEL_REQUIRED"] = 2;
                    values[valuesById[3] = "LABEL_REPEATED"] = 3;
                    return values;
                })();
    
                return FieldDescriptorProto;
            })();
    
            protobuf.OneofDescriptorProto = (function() {
    
                /**
                 * Properties of an OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IOneofDescriptorProto
                 * @property {string|null} [name] OneofDescriptorProto name
                 * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options
                 */
    
                /**
                 * Constructs a new OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofDescriptorProto.
                 * @implements IOneofDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 */
                function OneofDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.name = "";
    
                /**
                 * OneofDescriptorProto options.
                 * @member {google.protobuf.IOneofOptions|null|undefined} options
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new OneofDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto instance
                 */
                OneofDescriptorProto.create = function create(properties) {
                    return new OneofDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.OneofOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.options = $root.google.protobuf.OneofOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.OneofOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 */
                OneofDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.OneofDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.OneofDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this OneofDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofDescriptorProto";
                };
    
                return OneofDescriptorProto;
            })();
    
            protobuf.EnumDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumDescriptorProto
                 * @property {string|null} [name] EnumDescriptorProto name
                 * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value
                 * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options
                 * @property {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>|null} [reservedRange] EnumDescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] EnumDescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumDescriptorProto.
                 * @implements IEnumDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 */
                function EnumDescriptorProto(properties) {
                    this.value = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.name = "";
    
                /**
                 * EnumDescriptorProto value.
                 * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.value = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto options.
                 * @member {google.protobuf.IEnumOptions|null|undefined} options
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.options = null;
    
                /**
                 * EnumDescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>} reservedRange
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new EnumDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto instance
                 */
                EnumDescriptorProto.create = function create(properties) {
                    return new EnumDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.value != null && message.value.length)
                        for (var i = 0; i < message.value.length; ++i)
                            $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.value && message.value.length))
                                    message.value = [];
                                message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 4: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.EnumDescriptorProto.EnumReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.value != null && message.hasOwnProperty("value")) {
                        if (!Array.isArray(message.value))
                            return "value: array expected";
                        for (var i = 0; i < message.value.length; ++i) {
                            var error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);
                            if (error)
                                return "value." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 */
                EnumDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.value) {
                        if (!Array.isArray(object.value))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
                        message.value = [];
                        for (var i = 0; i < object.value.length; ++i) {
                            if (typeof object.value[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                            message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.value = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.value && message.value.length) {
                        object.value = [];
                        for (var j = 0; j < message.value.length; ++j)
                            object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto";
                };
    
                EnumDescriptorProto.EnumReservedRange = (function() {
    
                    /**
                     * Properties of an EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @interface IEnumReservedRange
                     * @property {number|null} [start] EnumReservedRange start
                     * @property {number|null} [end] EnumReservedRange end
                     */
    
                    /**
                     * Constructs a new EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @classdesc Represents an EnumReservedRange.
                     * @implements IEnumReservedRange
                     * @constructor
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     */
                    function EnumReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * EnumReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.start = 0;
    
                    /**
                     * EnumReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new EnumReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange instance
                     */
                    EnumReservedRange.create = function create(properties) {
                        return new EnumReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an EnumReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    EnumReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an EnumReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     */
                    EnumReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.EnumDescriptorProto.EnumReservedRange)
                            return object;
                        var message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an EnumReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.EnumReservedRange} message EnumReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    EnumReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this EnumReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    EnumReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for EnumReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    EnumReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto.EnumReservedRange";
                    };
    
                    return EnumReservedRange;
                })();
    
                return EnumDescriptorProto;
            })();
    
            protobuf.EnumValueDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumValueDescriptorProto
                 * @property {string|null} [name] EnumValueDescriptorProto name
                 * @property {number|null} [number] EnumValueDescriptorProto number
                 * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueDescriptorProto.
                 * @implements IEnumValueDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 */
                function EnumValueDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.name = "";
    
                /**
                 * EnumValueDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.number = 0;
    
                /**
                 * EnumValueDescriptorProto options.
                 * @member {google.protobuf.IEnumValueOptions|null|undefined} options
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumValueDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto instance
                 */
                EnumValueDescriptorProto.create = function create(properties) {
                    return new EnumValueDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.number = reader.int32();
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumValueOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 */
                EnumValueDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumValueDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.number = 0;
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumValueDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueDescriptorProto";
                };
    
                return EnumValueDescriptorProto;
            })();
    
            protobuf.ServiceDescriptorProto = (function() {
    
                /**
                 * Properties of a ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IServiceDescriptorProto
                 * @property {string|null} [name] ServiceDescriptorProto name
                 * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method
                 * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options
                 */
    
                /**
                 * Constructs a new ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceDescriptorProto.
                 * @implements IServiceDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 */
                function ServiceDescriptorProto(properties) {
                    this.method = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.name = "";
    
                /**
                 * ServiceDescriptorProto method.
                 * @member {Array.<google.protobuf.IMethodDescriptorProto>} method
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.method = $util.emptyArray;
    
                /**
                 * ServiceDescriptorProto options.
                 * @member {google.protobuf.IServiceOptions|null|undefined} options
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new ServiceDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto instance
                 */
                ServiceDescriptorProto.create = function create(properties) {
                    return new ServiceDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.method != null && message.method.length)
                        for (var i = 0; i < message.method.length; ++i)
                            $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.method && message.method.length))
                                    message.method = [];
                                message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.method != null && message.hasOwnProperty("method")) {
                        if (!Array.isArray(message.method))
                            return "method: array expected";
                        for (var i = 0; i < message.method.length; ++i) {
                            var error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);
                            if (error)
                                return "method." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.ServiceOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 */
                ServiceDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.ServiceDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.method) {
                        if (!Array.isArray(object.method))
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
                        message.method = [];
                        for (var i = 0; i < object.method.length; ++i) {
                            if (typeof object.method[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                            message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.method = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.method && message.method.length) {
                        object.method = [];
                        for (var j = 0; j < message.method.length; ++j)
                            object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this ServiceDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceDescriptorProto";
                };
    
                return ServiceDescriptorProto;
            })();
    
            protobuf.MethodDescriptorProto = (function() {
    
                /**
                 * Properties of a MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IMethodDescriptorProto
                 * @property {string|null} [name] MethodDescriptorProto name
                 * @property {string|null} [inputType] MethodDescriptorProto inputType
                 * @property {string|null} [outputType] MethodDescriptorProto outputType
                 * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options
                 * @property {boolean|null} [clientStreaming] MethodDescriptorProto clientStreaming
                 * @property {boolean|null} [serverStreaming] MethodDescriptorProto serverStreaming
                 */
    
                /**
                 * Constructs a new MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodDescriptorProto.
                 * @implements IMethodDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 */
                function MethodDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.name = "";
    
                /**
                 * MethodDescriptorProto inputType.
                 * @member {string} inputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.inputType = "";
    
                /**
                 * MethodDescriptorProto outputType.
                 * @member {string} outputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.outputType = "";
    
                /**
                 * MethodDescriptorProto options.
                 * @member {google.protobuf.IMethodOptions|null|undefined} options
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.options = null;
    
                /**
                 * MethodDescriptorProto clientStreaming.
                 * @member {boolean} clientStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.clientStreaming = false;
    
                /**
                 * MethodDescriptorProto serverStreaming.
                 * @member {boolean} serverStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.serverStreaming = false;
    
                /**
                 * Creates a new MethodDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto instance
                 */
                MethodDescriptorProto.create = function create(properties) {
                    return new MethodDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.inputType != null && Object.hasOwnProperty.call(message, "inputType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.inputType);
                    if (message.outputType != null && Object.hasOwnProperty.call(message, "outputType"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.outputType);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.clientStreaming != null && Object.hasOwnProperty.call(message, "clientStreaming"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.clientStreaming);
                    if (message.serverStreaming != null && Object.hasOwnProperty.call(message, "serverStreaming"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.serverStreaming);
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.inputType = reader.string();
                                break;
                            }
                        case 3: {
                                message.outputType = reader.string();
                                break;
                            }
                        case 4: {
                                message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.clientStreaming = reader.bool();
                                break;
                            }
                        case 6: {
                                message.serverStreaming = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        if (!$util.isString(message.inputType))
                            return "inputType: string expected";
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        if (!$util.isString(message.outputType))
                            return "outputType: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MethodOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        if (typeof message.clientStreaming !== "boolean")
                            return "clientStreaming: boolean expected";
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        if (typeof message.serverStreaming !== "boolean")
                            return "serverStreaming: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 */
                MethodDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.MethodDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.inputType != null)
                        message.inputType = String(object.inputType);
                    if (object.outputType != null)
                        message.outputType = String(object.outputType);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);
                    }
                    if (object.clientStreaming != null)
                        message.clientStreaming = Boolean(object.clientStreaming);
                    if (object.serverStreaming != null)
                        message.serverStreaming = Boolean(object.serverStreaming);
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.inputType = "";
                        object.outputType = "";
                        object.options = null;
                        object.clientStreaming = false;
                        object.serverStreaming = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        object.inputType = message.inputType;
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        object.outputType = message.outputType;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        object.clientStreaming = message.clientStreaming;
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        object.serverStreaming = message.serverStreaming;
                    return object;
                };
    
                /**
                 * Converts this MethodDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodDescriptorProto";
                };
    
                return MethodDescriptorProto;
            })();
    
            protobuf.FileOptions = (function() {
    
                /**
                 * Properties of a FileOptions.
                 * @memberof google.protobuf
                 * @interface IFileOptions
                 * @property {string|null} [javaPackage] FileOptions javaPackage
                 * @property {string|null} [javaOuterClassname] FileOptions javaOuterClassname
                 * @property {boolean|null} [javaMultipleFiles] FileOptions javaMultipleFiles
                 * @property {boolean|null} [javaGenerateEqualsAndHash] FileOptions javaGenerateEqualsAndHash
                 * @property {boolean|null} [javaStringCheckUtf8] FileOptions javaStringCheckUtf8
                 * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimizeFor] FileOptions optimizeFor
                 * @property {string|null} [goPackage] FileOptions goPackage
                 * @property {boolean|null} [ccGenericServices] FileOptions ccGenericServices
                 * @property {boolean|null} [javaGenericServices] FileOptions javaGenericServices
                 * @property {boolean|null} [pyGenericServices] FileOptions pyGenericServices
                 * @property {boolean|null} [phpGenericServices] FileOptions phpGenericServices
                 * @property {boolean|null} [deprecated] FileOptions deprecated
                 * @property {boolean|null} [ccEnableArenas] FileOptions ccEnableArenas
                 * @property {string|null} [objcClassPrefix] FileOptions objcClassPrefix
                 * @property {string|null} [csharpNamespace] FileOptions csharpNamespace
                 * @property {string|null} [swiftPrefix] FileOptions swiftPrefix
                 * @property {string|null} [phpClassPrefix] FileOptions phpClassPrefix
                 * @property {string|null} [phpNamespace] FileOptions phpNamespace
                 * @property {string|null} [phpMetadataNamespace] FileOptions phpMetadataNamespace
                 * @property {string|null} [rubyPackage] FileOptions rubyPackage
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FileOptions uninterpretedOption
                 * @property {Array.<google.api.IResourceDescriptor>|null} [".google.api.resourceDefinition"] FileOptions .google.api.resourceDefinition
                 */
    
                /**
                 * Constructs a new FileOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileOptions.
                 * @implements IFileOptions
                 * @constructor
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 */
                function FileOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.resourceDefinition"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileOptions javaPackage.
                 * @member {string} javaPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaPackage = "";
    
                /**
                 * FileOptions javaOuterClassname.
                 * @member {string} javaOuterClassname
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaOuterClassname = "";
    
                /**
                 * FileOptions javaMultipleFiles.
                 * @member {boolean} javaMultipleFiles
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaMultipleFiles = false;
    
                /**
                 * FileOptions javaGenerateEqualsAndHash.
                 * @member {boolean} javaGenerateEqualsAndHash
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenerateEqualsAndHash = false;
    
                /**
                 * FileOptions javaStringCheckUtf8.
                 * @member {boolean} javaStringCheckUtf8
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaStringCheckUtf8 = false;
    
                /**
                 * FileOptions optimizeFor.
                 * @member {google.protobuf.FileOptions.OptimizeMode} optimizeFor
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.optimizeFor = 1;
    
                /**
                 * FileOptions goPackage.
                 * @member {string} goPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.goPackage = "";
    
                /**
                 * FileOptions ccGenericServices.
                 * @member {boolean} ccGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccGenericServices = false;
    
                /**
                 * FileOptions javaGenericServices.
                 * @member {boolean} javaGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenericServices = false;
    
                /**
                 * FileOptions pyGenericServices.
                 * @member {boolean} pyGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.pyGenericServices = false;
    
                /**
                 * FileOptions phpGenericServices.
                 * @member {boolean} phpGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpGenericServices = false;
    
                /**
                 * FileOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.deprecated = false;
    
                /**
                 * FileOptions ccEnableArenas.
                 * @member {boolean} ccEnableArenas
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccEnableArenas = true;
    
                /**
                 * FileOptions objcClassPrefix.
                 * @member {string} objcClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.objcClassPrefix = "";
    
                /**
                 * FileOptions csharpNamespace.
                 * @member {string} csharpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.csharpNamespace = "";
    
                /**
                 * FileOptions swiftPrefix.
                 * @member {string} swiftPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.swiftPrefix = "";
    
                /**
                 * FileOptions phpClassPrefix.
                 * @member {string} phpClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpClassPrefix = "";
    
                /**
                 * FileOptions phpNamespace.
                 * @member {string} phpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpNamespace = "";
    
                /**
                 * FileOptions phpMetadataNamespace.
                 * @member {string} phpMetadataNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpMetadataNamespace = "";
    
                /**
                 * FileOptions rubyPackage.
                 * @member {string} rubyPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.rubyPackage = "";
    
                /**
                 * FileOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FileOptions .google.api.resourceDefinition.
                 * @member {Array.<google.api.IResourceDescriptor>} .google.api.resourceDefinition
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".google.api.resourceDefinition"] = $util.emptyArray;
    
                /**
                 * Creates a new FileOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FileOptions} FileOptions instance
                 */
                FileOptions.create = function create(properties) {
                    return new FileOptions(properties);
                };
    
                /**
                 * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.javaPackage != null && Object.hasOwnProperty.call(message, "javaPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.javaPackage);
                    if (message.javaOuterClassname != null && Object.hasOwnProperty.call(message, "javaOuterClassname"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.javaOuterClassname);
                    if (message.optimizeFor != null && Object.hasOwnProperty.call(message, "optimizeFor"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimizeFor);
                    if (message.javaMultipleFiles != null && Object.hasOwnProperty.call(message, "javaMultipleFiles"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.javaMultipleFiles);
                    if (message.goPackage != null && Object.hasOwnProperty.call(message, "goPackage"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.goPackage);
                    if (message.ccGenericServices != null && Object.hasOwnProperty.call(message, "ccGenericServices"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.ccGenericServices);
                    if (message.javaGenericServices != null && Object.hasOwnProperty.call(message, "javaGenericServices"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.javaGenericServices);
                    if (message.pyGenericServices != null && Object.hasOwnProperty.call(message, "pyGenericServices"))
                        writer.uint32(/* id 18, wireType 0 =*/144).bool(message.pyGenericServices);
                    if (message.javaGenerateEqualsAndHash != null && Object.hasOwnProperty.call(message, "javaGenerateEqualsAndHash"))
                        writer.uint32(/* id 20, wireType 0 =*/160).bool(message.javaGenerateEqualsAndHash);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 23, wireType 0 =*/184).bool(message.deprecated);
                    if (message.javaStringCheckUtf8 != null && Object.hasOwnProperty.call(message, "javaStringCheckUtf8"))
                        writer.uint32(/* id 27, wireType 0 =*/216).bool(message.javaStringCheckUtf8);
                    if (message.ccEnableArenas != null && Object.hasOwnProperty.call(message, "ccEnableArenas"))
                        writer.uint32(/* id 31, wireType 0 =*/248).bool(message.ccEnableArenas);
                    if (message.objcClassPrefix != null && Object.hasOwnProperty.call(message, "objcClassPrefix"))
                        writer.uint32(/* id 36, wireType 2 =*/290).string(message.objcClassPrefix);
                    if (message.csharpNamespace != null && Object.hasOwnProperty.call(message, "csharpNamespace"))
                        writer.uint32(/* id 37, wireType 2 =*/298).string(message.csharpNamespace);
                    if (message.swiftPrefix != null && Object.hasOwnProperty.call(message, "swiftPrefix"))
                        writer.uint32(/* id 39, wireType 2 =*/314).string(message.swiftPrefix);
                    if (message.phpClassPrefix != null && Object.hasOwnProperty.call(message, "phpClassPrefix"))
                        writer.uint32(/* id 40, wireType 2 =*/322).string(message.phpClassPrefix);
                    if (message.phpNamespace != null && Object.hasOwnProperty.call(message, "phpNamespace"))
                        writer.uint32(/* id 41, wireType 2 =*/330).string(message.phpNamespace);
                    if (message.phpGenericServices != null && Object.hasOwnProperty.call(message, "phpGenericServices"))
                        writer.uint32(/* id 42, wireType 0 =*/336).bool(message.phpGenericServices);
                    if (message.phpMetadataNamespace != null && Object.hasOwnProperty.call(message, "phpMetadataNamespace"))
                        writer.uint32(/* id 44, wireType 2 =*/354).string(message.phpMetadataNamespace);
                    if (message.rubyPackage != null && Object.hasOwnProperty.call(message, "rubyPackage"))
                        writer.uint32(/* id 45, wireType 2 =*/362).string(message.rubyPackage);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resourceDefinition"] != null && message[".google.api.resourceDefinition"].length)
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i)
                            $root.google.api.ResourceDescriptor.encode(message[".google.api.resourceDefinition"][i], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.javaPackage = reader.string();
                                break;
                            }
                        case 8: {
                                message.javaOuterClassname = reader.string();
                                break;
                            }
                        case 10: {
                                message.javaMultipleFiles = reader.bool();
                                break;
                            }
                        case 20: {
                                message.javaGenerateEqualsAndHash = reader.bool();
                                break;
                            }
                        case 27: {
                                message.javaStringCheckUtf8 = reader.bool();
                                break;
                            }
                        case 9: {
                                message.optimizeFor = reader.int32();
                                break;
                            }
                        case 11: {
                                message.goPackage = reader.string();
                                break;
                            }
                        case 16: {
                                message.ccGenericServices = reader.bool();
                                break;
                            }
                        case 17: {
                                message.javaGenericServices = reader.bool();
                                break;
                            }
                        case 18: {
                                message.pyGenericServices = reader.bool();
                                break;
                            }
                        case 42: {
                                message.phpGenericServices = reader.bool();
                                break;
                            }
                        case 23: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 31: {
                                message.ccEnableArenas = reader.bool();
                                break;
                            }
                        case 36: {
                                message.objcClassPrefix = reader.string();
                                break;
                            }
                        case 37: {
                                message.csharpNamespace = reader.string();
                                break;
                            }
                        case 39: {
                                message.swiftPrefix = reader.string();
                                break;
                            }
                        case 40: {
                                message.phpClassPrefix = reader.string();
                                break;
                            }
                        case 41: {
                                message.phpNamespace = reader.string();
                                break;
                            }
                        case 44: {
                                message.phpMetadataNamespace = reader.string();
                                break;
                            }
                        case 45: {
                                message.rubyPackage = reader.string();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                if (!(message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length))
                                    message[".google.api.resourceDefinition"] = [];
                                message[".google.api.resourceDefinition"].push($root.google.api.ResourceDescriptor.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileOptions message.
                 * @function verify
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        if (!$util.isString(message.javaPackage))
                            return "javaPackage: string expected";
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        if (!$util.isString(message.javaOuterClassname))
                            return "javaOuterClassname: string expected";
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        if (typeof message.javaMultipleFiles !== "boolean")
                            return "javaMultipleFiles: boolean expected";
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        if (typeof message.javaGenerateEqualsAndHash !== "boolean")
                            return "javaGenerateEqualsAndHash: boolean expected";
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        if (typeof message.javaStringCheckUtf8 !== "boolean")
                            return "javaStringCheckUtf8: boolean expected";
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        switch (message.optimizeFor) {
                        default:
                            return "optimizeFor: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        if (!$util.isString(message.goPackage))
                            return "goPackage: string expected";
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        if (typeof message.ccGenericServices !== "boolean")
                            return "ccGenericServices: boolean expected";
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        if (typeof message.javaGenericServices !== "boolean")
                            return "javaGenericServices: boolean expected";
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        if (typeof message.pyGenericServices !== "boolean")
                            return "pyGenericServices: boolean expected";
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        if (typeof message.phpGenericServices !== "boolean")
                            return "phpGenericServices: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        if (typeof message.ccEnableArenas !== "boolean")
                            return "ccEnableArenas: boolean expected";
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        if (!$util.isString(message.objcClassPrefix))
                            return "objcClassPrefix: string expected";
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        if (!$util.isString(message.csharpNamespace))
                            return "csharpNamespace: string expected";
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        if (!$util.isString(message.swiftPrefix))
                            return "swiftPrefix: string expected";
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        if (!$util.isString(message.phpClassPrefix))
                            return "phpClassPrefix: string expected";
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        if (!$util.isString(message.phpNamespace))
                            return "phpNamespace: string expected";
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        if (!$util.isString(message.phpMetadataNamespace))
                            return "phpMetadataNamespace: string expected";
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        if (!$util.isString(message.rubyPackage))
                            return "rubyPackage: string expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resourceDefinition"] != null && message.hasOwnProperty(".google.api.resourceDefinition")) {
                        if (!Array.isArray(message[".google.api.resourceDefinition"]))
                            return ".google.api.resourceDefinition: array expected";
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i) {
                            var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resourceDefinition"][i]);
                            if (error)
                                return ".google.api.resourceDefinition." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileOptions} FileOptions
                 */
                FileOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileOptions)
                        return object;
                    var message = new $root.google.protobuf.FileOptions();
                    if (object.javaPackage != null)
                        message.javaPackage = String(object.javaPackage);
                    if (object.javaOuterClassname != null)
                        message.javaOuterClassname = String(object.javaOuterClassname);
                    if (object.javaMultipleFiles != null)
                        message.javaMultipleFiles = Boolean(object.javaMultipleFiles);
                    if (object.javaGenerateEqualsAndHash != null)
                        message.javaGenerateEqualsAndHash = Boolean(object.javaGenerateEqualsAndHash);
                    if (object.javaStringCheckUtf8 != null)
                        message.javaStringCheckUtf8 = Boolean(object.javaStringCheckUtf8);
                    switch (object.optimizeFor) {
                    default:
                        if (typeof object.optimizeFor === "number") {
                            message.optimizeFor = object.optimizeFor;
                            break;
                        }
                        break;
                    case "SPEED":
                    case 1:
                        message.optimizeFor = 1;
                        break;
                    case "CODE_SIZE":
                    case 2:
                        message.optimizeFor = 2;
                        break;
                    case "LITE_RUNTIME":
                    case 3:
                        message.optimizeFor = 3;
                        break;
                    }
                    if (object.goPackage != null)
                        message.goPackage = String(object.goPackage);
                    if (object.ccGenericServices != null)
                        message.ccGenericServices = Boolean(object.ccGenericServices);
                    if (object.javaGenericServices != null)
                        message.javaGenericServices = Boolean(object.javaGenericServices);
                    if (object.pyGenericServices != null)
                        message.pyGenericServices = Boolean(object.pyGenericServices);
                    if (object.phpGenericServices != null)
                        message.phpGenericServices = Boolean(object.phpGenericServices);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.ccEnableArenas != null)
                        message.ccEnableArenas = Boolean(object.ccEnableArenas);
                    if (object.objcClassPrefix != null)
                        message.objcClassPrefix = String(object.objcClassPrefix);
                    if (object.csharpNamespace != null)
                        message.csharpNamespace = String(object.csharpNamespace);
                    if (object.swiftPrefix != null)
                        message.swiftPrefix = String(object.swiftPrefix);
                    if (object.phpClassPrefix != null)
                        message.phpClassPrefix = String(object.phpClassPrefix);
                    if (object.phpNamespace != null)
                        message.phpNamespace = String(object.phpNamespace);
                    if (object.phpMetadataNamespace != null)
                        message.phpMetadataNamespace = String(object.phpMetadataNamespace);
                    if (object.rubyPackage != null)
                        message.rubyPackage = String(object.rubyPackage);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resourceDefinition"]) {
                        if (!Array.isArray(object[".google.api.resourceDefinition"]))
                            throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: array expected");
                        message[".google.api.resourceDefinition"] = [];
                        for (var i = 0; i < object[".google.api.resourceDefinition"].length; ++i) {
                            if (typeof object[".google.api.resourceDefinition"][i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: object expected");
                            message[".google.api.resourceDefinition"][i] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resourceDefinition"][i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.FileOptions} message FileOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.resourceDefinition"] = [];
                    }
                    if (options.defaults) {
                        object.javaPackage = "";
                        object.javaOuterClassname = "";
                        object.optimizeFor = options.enums === String ? "SPEED" : 1;
                        object.javaMultipleFiles = false;
                        object.goPackage = "";
                        object.ccGenericServices = false;
                        object.javaGenericServices = false;
                        object.pyGenericServices = false;
                        object.javaGenerateEqualsAndHash = false;
                        object.deprecated = false;
                        object.javaStringCheckUtf8 = false;
                        object.ccEnableArenas = true;
                        object.objcClassPrefix = "";
                        object.csharpNamespace = "";
                        object.swiftPrefix = "";
                        object.phpClassPrefix = "";
                        object.phpNamespace = "";
                        object.phpGenericServices = false;
                        object.phpMetadataNamespace = "";
                        object.rubyPackage = "";
                    }
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        object.javaPackage = message.javaPackage;
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        object.javaOuterClassname = message.javaOuterClassname;
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        object.optimizeFor = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] === undefined ? message.optimizeFor : $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] : message.optimizeFor;
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        object.javaMultipleFiles = message.javaMultipleFiles;
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        object.goPackage = message.goPackage;
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        object.ccGenericServices = message.ccGenericServices;
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        object.javaGenericServices = message.javaGenericServices;
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        object.pyGenericServices = message.pyGenericServices;
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        object.javaGenerateEqualsAndHash = message.javaGenerateEqualsAndHash;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        object.javaStringCheckUtf8 = message.javaStringCheckUtf8;
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        object.ccEnableArenas = message.ccEnableArenas;
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        object.objcClassPrefix = message.objcClassPrefix;
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        object.csharpNamespace = message.csharpNamespace;
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        object.swiftPrefix = message.swiftPrefix;
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        object.phpClassPrefix = message.phpClassPrefix;
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        object.phpNamespace = message.phpNamespace;
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        object.phpGenericServices = message.phpGenericServices;
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        object.phpMetadataNamespace = message.phpMetadataNamespace;
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        object.rubyPackage = message.rubyPackage;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length) {
                        object[".google.api.resourceDefinition"] = [];
                        for (var j = 0; j < message[".google.api.resourceDefinition"].length; ++j)
                            object[".google.api.resourceDefinition"][j] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resourceDefinition"][j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileOptions";
                };
    
                /**
                 * OptimizeMode enum.
                 * @name google.protobuf.FileOptions.OptimizeMode
                 * @enum {number}
                 * @property {number} SPEED=1 SPEED value
                 * @property {number} CODE_SIZE=2 CODE_SIZE value
                 * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value
                 */
                FileOptions.OptimizeMode = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "SPEED"] = 1;
                    values[valuesById[2] = "CODE_SIZE"] = 2;
                    values[valuesById[3] = "LITE_RUNTIME"] = 3;
                    return values;
                })();
    
                return FileOptions;
            })();
    
            protobuf.MessageOptions = (function() {
    
                /**
                 * Properties of a MessageOptions.
                 * @memberof google.protobuf
                 * @interface IMessageOptions
                 * @property {boolean|null} [messageSetWireFormat] MessageOptions messageSetWireFormat
                 * @property {boolean|null} [noStandardDescriptorAccessor] MessageOptions noStandardDescriptorAccessor
                 * @property {boolean|null} [deprecated] MessageOptions deprecated
                 * @property {boolean|null} [mapEntry] MessageOptions mapEntry
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MessageOptions uninterpretedOption
                 * @property {google.api.IResourceDescriptor|null} [".google.api.resource"] MessageOptions .google.api.resource
                 */
    
                /**
                 * Constructs a new MessageOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MessageOptions.
                 * @implements IMessageOptions
                 * @constructor
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 */
                function MessageOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MessageOptions messageSetWireFormat.
                 * @member {boolean} messageSetWireFormat
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.messageSetWireFormat = false;
    
                /**
                 * MessageOptions noStandardDescriptorAccessor.
                 * @member {boolean} noStandardDescriptorAccessor
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.noStandardDescriptorAccessor = false;
    
                /**
                 * MessageOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecated = false;
    
                /**
                 * MessageOptions mapEntry.
                 * @member {boolean} mapEntry
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.mapEntry = false;
    
                /**
                 * MessageOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MessageOptions .google.api.resource.
                 * @member {google.api.IResourceDescriptor|null|undefined} .google.api.resource
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".google.api.resource"] = null;
    
                /**
                 * Creates a new MessageOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MessageOptions} MessageOptions instance
                 */
                MessageOptions.create = function create(properties) {
                    return new MessageOptions(properties);
                };
    
                /**
                 * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.messageSetWireFormat != null && Object.hasOwnProperty.call(message, "messageSetWireFormat"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.messageSetWireFormat);
                    if (message.noStandardDescriptorAccessor != null && Object.hasOwnProperty.call(message, "noStandardDescriptorAccessor"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.noStandardDescriptorAccessor);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.mapEntry != null && Object.hasOwnProperty.call(message, "mapEntry"))
                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.mapEntry);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resource"] != null && Object.hasOwnProperty.call(message, ".google.api.resource"))
                        $root.google.api.ResourceDescriptor.encode(message[".google.api.resource"], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.messageSetWireFormat = reader.bool();
                                break;
                            }
                        case 2: {
                                message.noStandardDescriptorAccessor = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 7: {
                                message.mapEntry = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                message[".google.api.resource"] = $root.google.api.ResourceDescriptor.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MessageOptions message.
                 * @function verify
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MessageOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        if (typeof message.messageSetWireFormat !== "boolean")
                            return "messageSetWireFormat: boolean expected";
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        if (typeof message.noStandardDescriptorAccessor !== "boolean")
                            return "noStandardDescriptorAccessor: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        if (typeof message.mapEntry !== "boolean")
                            return "mapEntry: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource")) {
                        var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resource"]);
                        if (error)
                            return ".google.api.resource." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 */
                MessageOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MessageOptions)
                        return object;
                    var message = new $root.google.protobuf.MessageOptions();
                    if (object.messageSetWireFormat != null)
                        message.messageSetWireFormat = Boolean(object.messageSetWireFormat);
                    if (object.noStandardDescriptorAccessor != null)
                        message.noStandardDescriptorAccessor = Boolean(object.noStandardDescriptorAccessor);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.mapEntry != null)
                        message.mapEntry = Boolean(object.mapEntry);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resource"] != null) {
                        if (typeof object[".google.api.resource"] !== "object")
                            throw TypeError(".google.protobuf.MessageOptions..google.api.resource: object expected");
                        message[".google.api.resource"] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resource"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.MessageOptions} message MessageOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MessageOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.messageSetWireFormat = false;
                        object.noStandardDescriptorAccessor = false;
                        object.deprecated = false;
                        object.mapEntry = false;
                        object[".google.api.resource"] = null;
                    }
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        object.messageSetWireFormat = message.messageSetWireFormat;
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        object.noStandardDescriptorAccessor = message.noStandardDescriptorAccessor;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        object.mapEntry = message.mapEntry;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource"))
                        object[".google.api.resource"] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resource"], options);
                    return object;
                };
    
                /**
                 * Converts this MessageOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MessageOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MessageOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MessageOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MessageOptions";
                };
    
                return MessageOptions;
            })();
    
            protobuf.FieldOptions = (function() {
    
                /**
                 * Properties of a FieldOptions.
                 * @memberof google.protobuf
                 * @interface IFieldOptions
                 * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype
                 * @property {boolean|null} [packed] FieldOptions packed
                 * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype
                 * @property {boolean|null} [lazy] FieldOptions lazy
                 * @property {boolean|null} [unverifiedLazy] FieldOptions unverifiedLazy
                 * @property {boolean|null} [deprecated] FieldOptions deprecated
                 * @property {boolean|null} [weak] FieldOptions weak
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FieldOptions uninterpretedOption
                 * @property {Array.<google.api.FieldBehavior>|null} [".google.api.fieldBehavior"] FieldOptions .google.api.fieldBehavior
                 * @property {google.api.IResourceReference|null} [".google.api.resourceReference"] FieldOptions .google.api.resourceReference
                 */
    
                /**
                 * Constructs a new FieldOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldOptions.
                 * @implements IFieldOptions
                 * @constructor
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 */
                function FieldOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.fieldBehavior"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldOptions ctype.
                 * @member {google.protobuf.FieldOptions.CType} ctype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.ctype = 0;
    
                /**
                 * FieldOptions packed.
                 * @member {boolean} packed
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.packed = false;
    
                /**
                 * FieldOptions jstype.
                 * @member {google.protobuf.FieldOptions.JSType} jstype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.jstype = 0;
    
                /**
                 * FieldOptions lazy.
                 * @member {boolean} lazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.lazy = false;
    
                /**
                 * FieldOptions unverifiedLazy.
                 * @member {boolean} unverifiedLazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.unverifiedLazy = false;
    
                /**
                 * FieldOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.deprecated = false;
    
                /**
                 * FieldOptions weak.
                 * @member {boolean} weak
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.weak = false;
    
                /**
                 * FieldOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.fieldBehavior.
                 * @member {Array.<google.api.FieldBehavior>} .google.api.fieldBehavior
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.fieldBehavior"] = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.resourceReference.
                 * @member {google.api.IResourceReference|null|undefined} .google.api.resourceReference
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.resourceReference"] = null;
    
                /**
                 * Creates a new FieldOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FieldOptions} FieldOptions instance
                 */
                FieldOptions.create = function create(properties) {
                    return new FieldOptions(properties);
                };
    
                /**
                 * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.ctype != null && Object.hasOwnProperty.call(message, "ctype"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);
                    if (message.packed != null && Object.hasOwnProperty.call(message, "packed"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.lazy != null && Object.hasOwnProperty.call(message, "lazy"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.lazy);
                    if (message.jstype != null && Object.hasOwnProperty.call(message, "jstype"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jstype);
                    if (message.weak != null && Object.hasOwnProperty.call(message, "weak"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.weak);
                    if (message.unverifiedLazy != null && Object.hasOwnProperty.call(message, "unverifiedLazy"))
                        writer.uint32(/* id 15, wireType 0 =*/120).bool(message.unverifiedLazy);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.fieldBehavior"] != null && message[".google.api.fieldBehavior"].length) {
                        writer.uint32(/* id 1052, wireType 2 =*/8418).fork();
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            writer.int32(message[".google.api.fieldBehavior"][i]);
                        writer.ldelim();
                    }
                    if (message[".google.api.resourceReference"] != null && Object.hasOwnProperty.call(message, ".google.api.resourceReference"))
                        $root.google.api.ResourceReference.encode(message[".google.api.resourceReference"], writer.uint32(/* id 1055, wireType 2 =*/8442).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.ctype = reader.int32();
                                break;
                            }
                        case 2: {
                                message.packed = reader.bool();
                                break;
                            }
                        case 6: {
                                message.jstype = reader.int32();
                                break;
                            }
                        case 5: {
                                message.lazy = reader.bool();
                                break;
                            }
                        case 15: {
                                message.unverifiedLazy = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 10: {
                                message.weak = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1052: {
                                if (!(message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length))
                                    message[".google.api.fieldBehavior"] = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message[".google.api.fieldBehavior"].push(reader.int32());
                                } else
                                    message[".google.api.fieldBehavior"].push(reader.int32());
                                break;
                            }
                        case 1055: {
                                message[".google.api.resourceReference"] = $root.google.api.ResourceReference.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldOptions message.
                 * @function verify
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        switch (message.ctype) {
                        default:
                            return "ctype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        if (typeof message.packed !== "boolean")
                            return "packed: boolean expected";
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        switch (message.jstype) {
                        default:
                            return "jstype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        if (typeof message.lazy !== "boolean")
                            return "lazy: boolean expected";
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        if (typeof message.unverifiedLazy !== "boolean")
                            return "unverifiedLazy: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        if (typeof message.weak !== "boolean")
                            return "weak: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.fieldBehavior"] != null && message.hasOwnProperty(".google.api.fieldBehavior")) {
                        if (!Array.isArray(message[".google.api.fieldBehavior"]))
                            return ".google.api.fieldBehavior: array expected";
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            switch (message[".google.api.fieldBehavior"][i]) {
                            default:
                                return ".google.api.fieldBehavior: enum value[] expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                                break;
                            }
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference")) {
                        var error = $root.google.api.ResourceReference.verify(message[".google.api.resourceReference"]);
                        if (error)
                            return ".google.api.resourceReference." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 */
                FieldOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldOptions)
                        return object;
                    var message = new $root.google.protobuf.FieldOptions();
                    switch (object.ctype) {
                    default:
                        if (typeof object.ctype === "number") {
                            message.ctype = object.ctype;
                            break;
                        }
                        break;
                    case "STRING":
                    case 0:
                        message.ctype = 0;
                        break;
                    case "CORD":
                    case 1:
                        message.ctype = 1;
                        break;
                    case "STRING_PIECE":
                    case 2:
                        message.ctype = 2;
                        break;
                    }
                    if (object.packed != null)
                        message.packed = Boolean(object.packed);
                    switch (object.jstype) {
                    default:
                        if (typeof object.jstype === "number") {
                            message.jstype = object.jstype;
                            break;
                        }
                        break;
                    case "JS_NORMAL":
                    case 0:
                        message.jstype = 0;
                        break;
                    case "JS_STRING":
                    case 1:
                        message.jstype = 1;
                        break;
                    case "JS_NUMBER":
                    case 2:
                        message.jstype = 2;
                        break;
                    }
                    if (object.lazy != null)
                        message.lazy = Boolean(object.lazy);
                    if (object.unverifiedLazy != null)
                        message.unverifiedLazy = Boolean(object.unverifiedLazy);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.weak != null)
                        message.weak = Boolean(object.weak);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.fieldBehavior"]) {
                        if (!Array.isArray(object[".google.api.fieldBehavior"]))
                            throw TypeError(".google.protobuf.FieldOptions..google.api.fieldBehavior: array expected");
                        message[".google.api.fieldBehavior"] = [];
                        for (var i = 0; i < object[".google.api.fieldBehavior"].length; ++i)
                            switch (object[".google.api.fieldBehavior"][i]) {
                            default:
                                if (typeof object[".google.api.fieldBehavior"][i] === "number") {
                                    message[".google.api.fieldBehavior"][i] = object[".google.api.fieldBehavior"][i];
                                    break;
                                }
                            case "FIELD_BEHAVIOR_UNSPECIFIED":
                            case 0:
                                message[".google.api.fieldBehavior"][i] = 0;
                                break;
                            case "OPTIONAL":
                            case 1:
                                message[".google.api.fieldBehavior"][i] = 1;
                                break;
                            case "REQUIRED":
                            case 2:
                                message[".google.api.fieldBehavior"][i] = 2;
                                break;
                            case "OUTPUT_ONLY":
                            case 3:
                                message[".google.api.fieldBehavior"][i] = 3;
                                break;
                            case "INPUT_ONLY":
                            case 4:
                                message[".google.api.fieldBehavior"][i] = 4;
                                break;
                            case "IMMUTABLE":
                            case 5:
                                message[".google.api.fieldBehavior"][i] = 5;
                                break;
                            case "UNORDERED_LIST":
                            case 6:
                                message[".google.api.fieldBehavior"][i] = 6;
                                break;
                            case "NON_EMPTY_DEFAULT":
                            case 7:
                                message[".google.api.fieldBehavior"][i] = 7;
                                break;
                            }
                    }
                    if (object[".google.api.resourceReference"] != null) {
                        if (typeof object[".google.api.resourceReference"] !== "object")
                            throw TypeError(".google.protobuf.FieldOptions..google.api.resourceReference: object expected");
                        message[".google.api.resourceReference"] = $root.google.api.ResourceReference.fromObject(object[".google.api.resourceReference"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.FieldOptions} message FieldOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.fieldBehavior"] = [];
                    }
                    if (options.defaults) {
                        object.ctype = options.enums === String ? "STRING" : 0;
                        object.packed = false;
                        object.deprecated = false;
                        object.lazy = false;
                        object.jstype = options.enums === String ? "JS_NORMAL" : 0;
                        object.weak = false;
                        object.unverifiedLazy = false;
                        object[".google.api.resourceReference"] = null;
                    }
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] === undefined ? message.ctype : $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        object.packed = message.packed;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        object.lazy = message.lazy;
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] === undefined ? message.jstype : $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        object.weak = message.weak;
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        object.unverifiedLazy = message.unverifiedLazy;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length) {
                        object[".google.api.fieldBehavior"] = [];
                        for (var j = 0; j < message[".google.api.fieldBehavior"].length; ++j)
                            object[".google.api.fieldBehavior"][j] = options.enums === String ? $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] === undefined ? message[".google.api.fieldBehavior"][j] : $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] : message[".google.api.fieldBehavior"][j];
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference"))
                        object[".google.api.resourceReference"] = $root.google.api.ResourceReference.toObject(message[".google.api.resourceReference"], options);
                    return object;
                };
    
                /**
                 * Converts this FieldOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldOptions";
                };
    
                /**
                 * CType enum.
                 * @name google.protobuf.FieldOptions.CType
                 * @enum {number}
                 * @property {number} STRING=0 STRING value
                 * @property {number} CORD=1 CORD value
                 * @property {number} STRING_PIECE=2 STRING_PIECE value
                 */
                FieldOptions.CType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STRING"] = 0;
                    values[valuesById[1] = "CORD"] = 1;
                    values[valuesById[2] = "STRING_PIECE"] = 2;
                    return values;
                })();
    
                /**
                 * JSType enum.
                 * @name google.protobuf.FieldOptions.JSType
                 * @enum {number}
                 * @property {number} JS_NORMAL=0 JS_NORMAL value
                 * @property {number} JS_STRING=1 JS_STRING value
                 * @property {number} JS_NUMBER=2 JS_NUMBER value
                 */
                FieldOptions.JSType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "JS_NORMAL"] = 0;
                    values[valuesById[1] = "JS_STRING"] = 1;
                    values[valuesById[2] = "JS_NUMBER"] = 2;
                    return values;
                })();
    
                return FieldOptions;
            })();
    
            protobuf.OneofOptions = (function() {
    
                /**
                 * Properties of an OneofOptions.
                 * @memberof google.protobuf
                 * @interface IOneofOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] OneofOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new OneofOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofOptions.
                 * @implements IOneofOptions
                 * @constructor
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 */
                function OneofOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 */
                OneofOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new OneofOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 * @returns {google.protobuf.OneofOptions} OneofOptions instance
                 */
                OneofOptions.create = function create(properties) {
                    return new OneofOptions(properties);
                };
    
                /**
                 * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofOptions message.
                 * @function verify
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 */
                OneofOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofOptions)
                        return object;
                    var message = new $root.google.protobuf.OneofOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.OneofOptions} message OneofOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this OneofOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofOptions";
                };
    
                return OneofOptions;
            })();
    
            protobuf.EnumOptions = (function() {
    
                /**
                 * Properties of an EnumOptions.
                 * @memberof google.protobuf
                 * @interface IEnumOptions
                 * @property {boolean|null} [allowAlias] EnumOptions allowAlias
                 * @property {boolean|null} [deprecated] EnumOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumOptions.
                 * @implements IEnumOptions
                 * @constructor
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 */
                function EnumOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumOptions allowAlias.
                 * @member {boolean} allowAlias
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.allowAlias = false;
    
                /**
                 * EnumOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecated = false;
    
                /**
                 * EnumOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumOptions} EnumOptions instance
                 */
                EnumOptions.create = function create(properties) {
                    return new EnumOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.allowAlias != null && Object.hasOwnProperty.call(message, "allowAlias"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allowAlias);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                message.allowAlias = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        if (typeof message.allowAlias !== "boolean")
                            return "allowAlias: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 */
                EnumOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumOptions();
                    if (object.allowAlias != null)
                        message.allowAlias = Boolean(object.allowAlias);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.EnumOptions} message EnumOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.allowAlias = false;
                        object.deprecated = false;
                    }
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        object.allowAlias = message.allowAlias;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumOptions";
                };
    
                return EnumOptions;
            })();
    
            protobuf.EnumValueOptions = (function() {
    
                /**
                 * Properties of an EnumValueOptions.
                 * @memberof google.protobuf
                 * @interface IEnumValueOptions
                 * @property {boolean|null} [deprecated] EnumValueOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumValueOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumValueOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueOptions.
                 * @implements IEnumValueOptions
                 * @constructor
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 */
                function EnumValueOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.deprecated = false;
    
                /**
                 * EnumValueOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumValueOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions instance
                 */
                EnumValueOptions.create = function create(properties) {
                    return new EnumValueOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 */
                EnumValueOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumValueOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.EnumValueOptions} message EnumValueOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults)
                        object.deprecated = false;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumValueOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueOptions";
                };
    
                return EnumValueOptions;
            })();
    
            protobuf.ServiceOptions = (function() {
    
                /**
                 * Properties of a ServiceOptions.
                 * @memberof google.protobuf
                 * @interface IServiceOptions
                 * @property {boolean|null} [deprecated] ServiceOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ServiceOptions uninterpretedOption
                 * @property {string|null} [".google.api.defaultHost"] ServiceOptions .google.api.defaultHost
                 * @property {string|null} [".google.api.oauthScopes"] ServiceOptions .google.api.oauthScopes
                 */
    
                /**
                 * Constructs a new ServiceOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceOptions.
                 * @implements IServiceOptions
                 * @constructor
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 */
                function ServiceOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.deprecated = false;
    
                /**
                 * ServiceOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * ServiceOptions .google.api.defaultHost.
                 * @member {string} .google.api.defaultHost
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.defaultHost"] = "";
    
                /**
                 * ServiceOptions .google.api.oauthScopes.
                 * @member {string} .google.api.oauthScopes
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.oauthScopes"] = "";
    
                /**
                 * Creates a new ServiceOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions instance
                 */
                ServiceOptions.create = function create(properties) {
                    return new ServiceOptions(properties);
                };
    
                /**
                 * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.defaultHost"] != null && Object.hasOwnProperty.call(message, ".google.api.defaultHost"))
                        writer.uint32(/* id 1049, wireType 2 =*/8394).string(message[".google.api.defaultHost"]);
                    if (message[".google.api.oauthScopes"] != null && Object.hasOwnProperty.call(message, ".google.api.oauthScopes"))
                        writer.uint32(/* id 1050, wireType 2 =*/8402).string(message[".google.api.oauthScopes"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1049: {
                                message[".google.api.defaultHost"] = reader.string();
                                break;
                            }
                        case 1050: {
                                message[".google.api.oauthScopes"] = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceOptions message.
                 * @function verify
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        if (!$util.isString(message[".google.api.defaultHost"]))
                            return ".google.api.defaultHost: string expected";
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        if (!$util.isString(message[".google.api.oauthScopes"]))
                            return ".google.api.oauthScopes: string expected";
                    return null;
                };
    
                /**
                 * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 */
                ServiceOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceOptions)
                        return object;
                    var message = new $root.google.protobuf.ServiceOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.defaultHost"] != null)
                        message[".google.api.defaultHost"] = String(object[".google.api.defaultHost"]);
                    if (object[".google.api.oauthScopes"] != null)
                        message[".google.api.oauthScopes"] = String(object[".google.api.oauthScopes"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.ServiceOptions} message ServiceOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.deprecated = false;
                        object[".google.api.defaultHost"] = "";
                        object[".google.api.oauthScopes"] = "";
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        object[".google.api.defaultHost"] = message[".google.api.defaultHost"];
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        object[".google.api.oauthScopes"] = message[".google.api.oauthScopes"];
                    return object;
                };
    
                /**
                 * Converts this ServiceOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceOptions";
                };
    
                return ServiceOptions;
            })();
    
            protobuf.MethodOptions = (function() {
    
                /**
                 * Properties of a MethodOptions.
                 * @memberof google.protobuf
                 * @interface IMethodOptions
                 * @property {boolean|null} [deprecated] MethodOptions deprecated
                 * @property {google.protobuf.MethodOptions.IdempotencyLevel|null} [idempotencyLevel] MethodOptions idempotencyLevel
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MethodOptions uninterpretedOption
                 * @property {google.api.IHttpRule|null} [".google.api.http"] MethodOptions .google.api.http
                 * @property {Array.<string>|null} [".google.api.methodSignature"] MethodOptions .google.api.methodSignature
                 * @property {google.longrunning.IOperationInfo|null} [".google.longrunning.operationInfo"] MethodOptions .google.longrunning.operationInfo
                 */
    
                /**
                 * Constructs a new MethodOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodOptions.
                 * @implements IMethodOptions
                 * @constructor
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 */
                function MethodOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.methodSignature"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.deprecated = false;
    
                /**
                 * MethodOptions idempotencyLevel.
                 * @member {google.protobuf.MethodOptions.IdempotencyLevel} idempotencyLevel
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.idempotencyLevel = 0;
    
                /**
                 * MethodOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MethodOptions .google.api.http.
                 * @member {google.api.IHttpRule|null|undefined} .google.api.http
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.http"] = null;
    
                /**
                 * MethodOptions .google.api.methodSignature.
                 * @member {Array.<string>} .google.api.methodSignature
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.methodSignature"] = $util.emptyArray;
    
                /**
                 * MethodOptions .google.longrunning.operationInfo.
                 * @member {google.longrunning.IOperationInfo|null|undefined} .google.longrunning.operationInfo
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.longrunning.operationInfo"] = null;
    
                /**
                 * Creates a new MethodOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MethodOptions} MethodOptions instance
                 */
                MethodOptions.create = function create(properties) {
                    return new MethodOptions(properties);
                };
    
                /**
                 * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.idempotencyLevel != null && Object.hasOwnProperty.call(message, "idempotencyLevel"))
                        writer.uint32(/* id 34, wireType 0 =*/272).int32(message.idempotencyLevel);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.longrunning.operationInfo"] != null && Object.hasOwnProperty.call(message, ".google.longrunning.operationInfo"))
                        $root.google.longrunning.OperationInfo.encode(message[".google.longrunning.operationInfo"], writer.uint32(/* id 1049, wireType 2 =*/8394).fork()).ldelim();
                    if (message[".google.api.methodSignature"] != null && message[".google.api.methodSignature"].length)
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            writer.uint32(/* id 1051, wireType 2 =*/8410).string(message[".google.api.methodSignature"][i]);
                    if (message[".google.api.http"] != null && Object.hasOwnProperty.call(message, ".google.api.http"))
                        $root.google.api.HttpRule.encode(message[".google.api.http"], writer.uint32(/* id 72295728, wireType 2 =*/578365826).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 34: {
                                message.idempotencyLevel = reader.int32();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 72295728: {
                                message[".google.api.http"] = $root.google.api.HttpRule.decode(reader, reader.uint32());
                                break;
                            }
                        case 1051: {
                                if (!(message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length))
                                    message[".google.api.methodSignature"] = [];
                                message[".google.api.methodSignature"].push(reader.string());
                                break;
                            }
                        case 1049: {
                                message[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodOptions message.
                 * @function verify
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        switch (message.idempotencyLevel) {
                        default:
                            return "idempotencyLevel: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http")) {
                        var error = $root.google.api.HttpRule.verify(message[".google.api.http"]);
                        if (error)
                            return ".google.api.http." + error;
                    }
                    if (message[".google.api.methodSignature"] != null && message.hasOwnProperty(".google.api.methodSignature")) {
                        if (!Array.isArray(message[".google.api.methodSignature"]))
                            return ".google.api.methodSignature: array expected";
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            if (!$util.isString(message[".google.api.methodSignature"][i]))
                                return ".google.api.methodSignature: string[] expected";
                    }
                    if (message[".google.longrunning.operationInfo"] != null && message.hasOwnProperty(".google.longrunning.operationInfo")) {
                        var error = $root.google.longrunning.OperationInfo.verify(message[".google.longrunning.operationInfo"]);
                        if (error)
                            return ".google.longrunning.operationInfo." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 */
                MethodOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodOptions)
                        return object;
                    var message = new $root.google.protobuf.MethodOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    switch (object.idempotencyLevel) {
                    default:
                        if (typeof object.idempotencyLevel === "number") {
                            message.idempotencyLevel = object.idempotencyLevel;
                            break;
                        }
                        break;
                    case "IDEMPOTENCY_UNKNOWN":
                    case 0:
                        message.idempotencyLevel = 0;
                        break;
                    case "NO_SIDE_EFFECTS":
                    case 1:
                        message.idempotencyLevel = 1;
                        break;
                    case "IDEMPOTENT":
                    case 2:
                        message.idempotencyLevel = 2;
                        break;
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.http"] != null) {
                        if (typeof object[".google.api.http"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.api.http: object expected");
                        message[".google.api.http"] = $root.google.api.HttpRule.fromObject(object[".google.api.http"]);
                    }
                    if (object[".google.api.methodSignature"]) {
                        if (!Array.isArray(object[".google.api.methodSignature"]))
                            throw TypeError(".google.protobuf.MethodOptions..google.api.methodSignature: array expected");
                        message[".google.api.methodSignature"] = [];
                        for (var i = 0; i < object[".google.api.methodSignature"].length; ++i)
                            message[".google.api.methodSignature"][i] = String(object[".google.api.methodSignature"][i]);
                    }
                    if (object[".google.longrunning.operationInfo"] != null) {
                        if (typeof object[".google.longrunning.operationInfo"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.longrunning.operationInfo: object expected");
                        message[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.fromObject(object[".google.longrunning.operationInfo"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.MethodOptions} message MethodOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.methodSignature"] = [];
                    }
                    if (options.defaults) {
                        object.deprecated = false;
                        object.idempotencyLevel = options.enums === String ? "IDEMPOTENCY_UNKNOWN" : 0;
                        object[".google.longrunning.operationInfo"] = null;
                        object[".google.api.http"] = null;
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        object.idempotencyLevel = options.enums === String ? $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] === undefined ? message.idempotencyLevel : $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] : message.idempotencyLevel;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.longrunning.operationInfo"] != null && message.hasOwnProperty(".google.longrunning.operationInfo"))
                        object[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.toObject(message[".google.longrunning.operationInfo"], options);
                    if (message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length) {
                        object[".google.api.methodSignature"] = [];
                        for (var j = 0; j < message[".google.api.methodSignature"].length; ++j)
                            object[".google.api.methodSignature"][j] = message[".google.api.methodSignature"][j];
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http"))
                        object[".google.api.http"] = $root.google.api.HttpRule.toObject(message[".google.api.http"], options);
                    return object;
                };
    
                /**
                 * Converts this MethodOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodOptions";
                };
    
                /**
                 * IdempotencyLevel enum.
                 * @name google.protobuf.MethodOptions.IdempotencyLevel
                 * @enum {number}
                 * @property {number} IDEMPOTENCY_UNKNOWN=0 IDEMPOTENCY_UNKNOWN value
                 * @property {number} NO_SIDE_EFFECTS=1 NO_SIDE_EFFECTS value
                 * @property {number} IDEMPOTENT=2 IDEMPOTENT value
                 */
                MethodOptions.IdempotencyLevel = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "IDEMPOTENCY_UNKNOWN"] = 0;
                    values[valuesById[1] = "NO_SIDE_EFFECTS"] = 1;
                    values[valuesById[2] = "IDEMPOTENT"] = 2;
                    return values;
                })();
    
                return MethodOptions;
            })();
    
            protobuf.UninterpretedOption = (function() {
    
                /**
                 * Properties of an UninterpretedOption.
                 * @memberof google.protobuf
                 * @interface IUninterpretedOption
                 * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name
                 * @property {string|null} [identifierValue] UninterpretedOption identifierValue
                 * @property {number|Long|null} [positiveIntValue] UninterpretedOption positiveIntValue
                 * @property {number|Long|null} [negativeIntValue] UninterpretedOption negativeIntValue
                 * @property {number|null} [doubleValue] UninterpretedOption doubleValue
                 * @property {Uint8Array|null} [stringValue] UninterpretedOption stringValue
                 * @property {string|null} [aggregateValue] UninterpretedOption aggregateValue
                 */
    
                /**
                 * Constructs a new UninterpretedOption.
                 * @memberof google.protobuf
                 * @classdesc Represents an UninterpretedOption.
                 * @implements IUninterpretedOption
                 * @constructor
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 */
                function UninterpretedOption(properties) {
                    this.name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UninterpretedOption name.
                 * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.name = $util.emptyArray;
    
                /**
                 * UninterpretedOption identifierValue.
                 * @member {string} identifierValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.identifierValue = "";
    
                /**
                 * UninterpretedOption positiveIntValue.
                 * @member {number|Long} positiveIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.positiveIntValue = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * UninterpretedOption negativeIntValue.
                 * @member {number|Long} negativeIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.negativeIntValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * UninterpretedOption doubleValue.
                 * @member {number} doubleValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.doubleValue = 0;
    
                /**
                 * UninterpretedOption stringValue.
                 * @member {Uint8Array} stringValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.stringValue = $util.newBuffer([]);
    
                /**
                 * UninterpretedOption aggregateValue.
                 * @member {string} aggregateValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.aggregateValue = "";
    
                /**
                 * Creates a new UninterpretedOption instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption instance
                 */
                UninterpretedOption.create = function create(properties) {
                    return new UninterpretedOption(properties);
                };
    
                /**
                 * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.name.length)
                        for (var i = 0; i < message.name.length; ++i)
                            $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.identifierValue != null && Object.hasOwnProperty.call(message, "identifierValue"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifierValue);
                    if (message.positiveIntValue != null && Object.hasOwnProperty.call(message, "positiveIntValue"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positiveIntValue);
                    if (message.negativeIntValue != null && Object.hasOwnProperty.call(message, "negativeIntValue"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negativeIntValue);
                    if (message.doubleValue != null && Object.hasOwnProperty.call(message, "doubleValue"))
                        writer.uint32(/* id 6, wireType 1 =*/49).double(message.doubleValue);
                    if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.stringValue);
                    if (message.aggregateValue != null && Object.hasOwnProperty.call(message, "aggregateValue"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregateValue);
                    return writer;
                };
    
                /**
                 * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.name && message.name.length))
                                    message.name = [];
                                message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.identifierValue = reader.string();
                                break;
                            }
                        case 4: {
                                message.positiveIntValue = reader.uint64();
                                break;
                            }
                        case 5: {
                                message.negativeIntValue = reader.int64();
                                break;
                            }
                        case 6: {
                                message.doubleValue = reader.double();
                                break;
                            }
                        case 7: {
                                message.stringValue = reader.bytes();
                                break;
                            }
                        case 8: {
                                message.aggregateValue = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an UninterpretedOption message.
                 * @function verify
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UninterpretedOption.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name")) {
                        if (!Array.isArray(message.name))
                            return "name: array expected";
                        for (var i = 0; i < message.name.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);
                            if (error)
                                return "name." + error;
                        }
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        if (!$util.isString(message.identifierValue))
                            return "identifierValue: string expected";
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (!$util.isInteger(message.positiveIntValue) && !(message.positiveIntValue && $util.isInteger(message.positiveIntValue.low) && $util.isInteger(message.positiveIntValue.high)))
                            return "positiveIntValue: integer|Long expected";
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (!$util.isInteger(message.negativeIntValue) && !(message.negativeIntValue && $util.isInteger(message.negativeIntValue.low) && $util.isInteger(message.negativeIntValue.high)))
                            return "negativeIntValue: integer|Long expected";
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        if (typeof message.doubleValue !== "number")
                            return "doubleValue: number expected";
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        if (!(message.stringValue && typeof message.stringValue.length === "number" || $util.isString(message.stringValue)))
                            return "stringValue: buffer expected";
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        if (!$util.isString(message.aggregateValue))
                            return "aggregateValue: string expected";
                    return null;
                };
    
                /**
                 * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 */
                UninterpretedOption.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UninterpretedOption)
                        return object;
                    var message = new $root.google.protobuf.UninterpretedOption();
                    if (object.name) {
                        if (!Array.isArray(object.name))
                            throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
                        message.name = [];
                        for (var i = 0; i < object.name.length; ++i) {
                            if (typeof object.name[i] !== "object")
                                throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                            message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);
                        }
                    }
                    if (object.identifierValue != null)
                        message.identifierValue = String(object.identifierValue);
                    if (object.positiveIntValue != null)
                        if ($util.Long)
                            (message.positiveIntValue = $util.Long.fromValue(object.positiveIntValue)).unsigned = true;
                        else if (typeof object.positiveIntValue === "string")
                            message.positiveIntValue = parseInt(object.positiveIntValue, 10);
                        else if (typeof object.positiveIntValue === "number")
                            message.positiveIntValue = object.positiveIntValue;
                        else if (typeof object.positiveIntValue === "object")
                            message.positiveIntValue = new $util.LongBits(object.positiveIntValue.low >>> 0, object.positiveIntValue.high >>> 0).toNumber(true);
                    if (object.negativeIntValue != null)
                        if ($util.Long)
                            (message.negativeIntValue = $util.Long.fromValue(object.negativeIntValue)).unsigned = false;
                        else if (typeof object.negativeIntValue === "string")
                            message.negativeIntValue = parseInt(object.negativeIntValue, 10);
                        else if (typeof object.negativeIntValue === "number")
                            message.negativeIntValue = object.negativeIntValue;
                        else if (typeof object.negativeIntValue === "object")
                            message.negativeIntValue = new $util.LongBits(object.negativeIntValue.low >>> 0, object.negativeIntValue.high >>> 0).toNumber();
                    if (object.doubleValue != null)
                        message.doubleValue = Number(object.doubleValue);
                    if (object.stringValue != null)
                        if (typeof object.stringValue === "string")
                            $util.base64.decode(object.stringValue, message.stringValue = $util.newBuffer($util.base64.length(object.stringValue)), 0);
                        else if (object.stringValue.length >= 0)
                            message.stringValue = object.stringValue;
                    if (object.aggregateValue != null)
                        message.aggregateValue = String(object.aggregateValue);
                    return message;
                };
    
                /**
                 * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.UninterpretedOption} message UninterpretedOption
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UninterpretedOption.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.name = [];
                    if (options.defaults) {
                        object.identifierValue = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.positiveIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.positiveIntValue = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.negativeIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.negativeIntValue = options.longs === String ? "0" : 0;
                        object.doubleValue = 0;
                        if (options.bytes === String)
                            object.stringValue = "";
                        else {
                            object.stringValue = [];
                            if (options.bytes !== Array)
                                object.stringValue = $util.newBuffer(object.stringValue);
                        }
                        object.aggregateValue = "";
                    }
                    if (message.name && message.name.length) {
                        object.name = [];
                        for (var j = 0; j < message.name.length; ++j)
                            object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        object.identifierValue = message.identifierValue;
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (typeof message.positiveIntValue === "number")
                            object.positiveIntValue = options.longs === String ? String(message.positiveIntValue) : message.positiveIntValue;
                        else
                            object.positiveIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.positiveIntValue) : options.longs === Number ? new $util.LongBits(message.positiveIntValue.low >>> 0, message.positiveIntValue.high >>> 0).toNumber(true) : message.positiveIntValue;
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (typeof message.negativeIntValue === "number")
                            object.negativeIntValue = options.longs === String ? String(message.negativeIntValue) : message.negativeIntValue;
                        else
                            object.negativeIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.negativeIntValue) : options.longs === Number ? new $util.LongBits(message.negativeIntValue.low >>> 0, message.negativeIntValue.high >>> 0).toNumber() : message.negativeIntValue;
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        object.stringValue = options.bytes === String ? $util.base64.encode(message.stringValue, 0, message.stringValue.length) : options.bytes === Array ? Array.prototype.slice.call(message.stringValue) : message.stringValue;
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        object.aggregateValue = message.aggregateValue;
                    return object;
                };
    
                /**
                 * Converts this UninterpretedOption to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UninterpretedOption.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UninterpretedOption
                 * @function getTypeUrl
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UninterpretedOption.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UninterpretedOption";
                };
    
                UninterpretedOption.NamePart = (function() {
    
                    /**
                     * Properties of a NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @interface INamePart
                     * @property {string} namePart NamePart namePart
                     * @property {boolean} isExtension NamePart isExtension
                     */
    
                    /**
                     * Constructs a new NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @classdesc Represents a NamePart.
                     * @implements INamePart
                     * @constructor
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     */
                    function NamePart(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NamePart namePart.
                     * @member {string} namePart
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.namePart = "";
    
                    /**
                     * NamePart isExtension.
                     * @member {boolean} isExtension
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.isExtension = false;
    
                    /**
                     * Creates a new NamePart instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart instance
                     */
                    NamePart.create = function create(properties) {
                        return new NamePart(properties);
                    };
    
                    /**
                     * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.namePart);
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isExtension);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.namePart = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.isExtension = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        if (!message.hasOwnProperty("namePart"))
                            throw $util.ProtocolError("missing required 'namePart'", { instance: message });
                        if (!message.hasOwnProperty("isExtension"))
                            throw $util.ProtocolError("missing required 'isExtension'", { instance: message });
                        return message;
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NamePart message.
                     * @function verify
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NamePart.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (!$util.isString(message.namePart))
                            return "namePart: string expected";
                        if (typeof message.isExtension !== "boolean")
                            return "isExtension: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     */
                    NamePart.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)
                            return object;
                        var message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        if (object.namePart != null)
                            message.namePart = String(object.namePart);
                        if (object.isExtension != null)
                            message.isExtension = Boolean(object.isExtension);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NamePart.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.namePart = "";
                            object.isExtension = false;
                        }
                        if (message.namePart != null && message.hasOwnProperty("namePart"))
                            object.namePart = message.namePart;
                        if (message.isExtension != null && message.hasOwnProperty("isExtension"))
                            object.isExtension = message.isExtension;
                        return object;
                    };
    
                    /**
                     * Converts this NamePart to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NamePart.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NamePart
                     * @function getTypeUrl
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NamePart.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.UninterpretedOption.NamePart";
                    };
    
                    return NamePart;
                })();
    
                return UninterpretedOption;
            })();
    
            protobuf.SourceCodeInfo = (function() {
    
                /**
                 * Properties of a SourceCodeInfo.
                 * @memberof google.protobuf
                 * @interface ISourceCodeInfo
                 * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location
                 */
    
                /**
                 * Constructs a new SourceCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a SourceCodeInfo.
                 * @implements ISourceCodeInfo
                 * @constructor
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 */
                function SourceCodeInfo(properties) {
                    this.location = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * SourceCodeInfo location.
                 * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 */
                SourceCodeInfo.prototype.location = $util.emptyArray;
    
                /**
                 * Creates a new SourceCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo instance
                 */
                SourceCodeInfo.create = function create(properties) {
                    return new SourceCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.location != null && message.location.length)
                        for (var i = 0; i < message.location.length; ++i)
                            $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.location && message.location.length))
                                    message.location = [];
                                message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a SourceCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SourceCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.location != null && message.hasOwnProperty("location")) {
                        if (!Array.isArray(message.location))
                            return "location: array expected";
                        for (var i = 0; i < message.location.length; ++i) {
                            var error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);
                            if (error)
                                return "location." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 */
                SourceCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.SourceCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.SourceCodeInfo();
                    if (object.location) {
                        if (!Array.isArray(object.location))
                            throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
                        message.location = [];
                        for (var i = 0; i < object.location.length; ++i) {
                            if (typeof object.location[i] !== "object")
                                throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                            message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SourceCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.location = [];
                    if (message.location && message.location.length) {
                        object.location = [];
                        for (var j = 0; j < message.location.length; ++j)
                            object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this SourceCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SourceCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for SourceCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                SourceCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.SourceCodeInfo";
                };
    
                SourceCodeInfo.Location = (function() {
    
                    /**
                     * Properties of a Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @interface ILocation
                     * @property {Array.<number>|null} [path] Location path
                     * @property {Array.<number>|null} [span] Location span
                     * @property {string|null} [leadingComments] Location leadingComments
                     * @property {string|null} [trailingComments] Location trailingComments
                     * @property {Array.<string>|null} [leadingDetachedComments] Location leadingDetachedComments
                     */
    
                    /**
                     * Constructs a new Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @classdesc Represents a Location.
                     * @implements ILocation
                     * @constructor
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     */
                    function Location(properties) {
                        this.path = [];
                        this.span = [];
                        this.leadingDetachedComments = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Location path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.path = $util.emptyArray;
    
                    /**
                     * Location span.
                     * @member {Array.<number>} span
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.span = $util.emptyArray;
    
                    /**
                     * Location leadingComments.
                     * @member {string} leadingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingComments = "";
    
                    /**
                     * Location trailingComments.
                     * @member {string} trailingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.trailingComments = "";
    
                    /**
                     * Location leadingDetachedComments.
                     * @member {Array.<string>} leadingDetachedComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingDetachedComments = $util.emptyArray;
    
                    /**
                     * Creates a new Location instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location instance
                     */
                    Location.create = function create(properties) {
                        return new Location(properties);
                    };
    
                    /**
                     * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.span != null && message.span.length) {
                            writer.uint32(/* id 2, wireType 2 =*/18).fork();
                            for (var i = 0; i < message.span.length; ++i)
                                writer.int32(message.span[i]);
                            writer.ldelim();
                        }
                        if (message.leadingComments != null && Object.hasOwnProperty.call(message, "leadingComments"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.leadingComments);
                        if (message.trailingComments != null && Object.hasOwnProperty.call(message, "trailingComments"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trailingComments);
                        if (message.leadingDetachedComments != null && message.leadingDetachedComments.length)
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.leadingDetachedComments[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    if (!(message.span && message.span.length))
                                        message.span = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.span.push(reader.int32());
                                    } else
                                        message.span.push(reader.int32());
                                    break;
                                }
                            case 3: {
                                    message.leadingComments = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.trailingComments = reader.string();
                                    break;
                                }
                            case 6: {
                                    if (!(message.leadingDetachedComments && message.leadingDetachedComments.length))
                                        message.leadingDetachedComments = [];
                                    message.leadingDetachedComments.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Location message.
                     * @function verify
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Location.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.span != null && message.hasOwnProperty("span")) {
                            if (!Array.isArray(message.span))
                                return "span: array expected";
                            for (var i = 0; i < message.span.length; ++i)
                                if (!$util.isInteger(message.span[i]))
                                    return "span: integer[] expected";
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            if (!$util.isString(message.leadingComments))
                                return "leadingComments: string expected";
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            if (!$util.isString(message.trailingComments))
                                return "trailingComments: string expected";
                        if (message.leadingDetachedComments != null && message.hasOwnProperty("leadingDetachedComments")) {
                            if (!Array.isArray(message.leadingDetachedComments))
                                return "leadingDetachedComments: array expected";
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                if (!$util.isString(message.leadingDetachedComments[i]))
                                    return "leadingDetachedComments: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Location message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     */
                    Location.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)
                            return object;
                        var message = new $root.google.protobuf.SourceCodeInfo.Location();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.span) {
                            if (!Array.isArray(object.span))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
                            message.span = [];
                            for (var i = 0; i < object.span.length; ++i)
                                message.span[i] = object.span[i] | 0;
                        }
                        if (object.leadingComments != null)
                            message.leadingComments = String(object.leadingComments);
                        if (object.trailingComments != null)
                            message.trailingComments = String(object.trailingComments);
                        if (object.leadingDetachedComments) {
                            if (!Array.isArray(object.leadingDetachedComments))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.leadingDetachedComments: array expected");
                            message.leadingDetachedComments = [];
                            for (var i = 0; i < object.leadingDetachedComments.length; ++i)
                                message.leadingDetachedComments[i] = String(object.leadingDetachedComments[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Location message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.Location} message Location
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Location.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.path = [];
                            object.span = [];
                            object.leadingDetachedComments = [];
                        }
                        if (options.defaults) {
                            object.leadingComments = "";
                            object.trailingComments = "";
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.span && message.span.length) {
                            object.span = [];
                            for (var j = 0; j < message.span.length; ++j)
                                object.span[j] = message.span[j];
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            object.leadingComments = message.leadingComments;
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            object.trailingComments = message.trailingComments;
                        if (message.leadingDetachedComments && message.leadingDetachedComments.length) {
                            object.leadingDetachedComments = [];
                            for (var j = 0; j < message.leadingDetachedComments.length; ++j)
                                object.leadingDetachedComments[j] = message.leadingDetachedComments[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Location to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Location.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Location
                     * @function getTypeUrl
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Location.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.SourceCodeInfo.Location";
                    };
    
                    return Location;
                })();
    
                return SourceCodeInfo;
            })();
    
            protobuf.GeneratedCodeInfo = (function() {
    
                /**
                 * Properties of a GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @interface IGeneratedCodeInfo
                 * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation
                 */
    
                /**
                 * Constructs a new GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a GeneratedCodeInfo.
                 * @implements IGeneratedCodeInfo
                 * @constructor
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 */
                function GeneratedCodeInfo(properties) {
                    this.annotation = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GeneratedCodeInfo annotation.
                 * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 */
                GeneratedCodeInfo.prototype.annotation = $util.emptyArray;
    
                /**
                 * Creates a new GeneratedCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo instance
                 */
                GeneratedCodeInfo.create = function create(properties) {
                    return new GeneratedCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.annotation != null && message.annotation.length)
                        for (var i = 0; i < message.annotation.length; ++i)
                            $root.google.protobuf.GeneratedCodeInfo.Annotation.encode(message.annotation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.annotation && message.annotation.length))
                                    message.annotation = [];
                                message.annotation.push($root.google.protobuf.GeneratedCodeInfo.Annotation.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GeneratedCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GeneratedCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.annotation != null && message.hasOwnProperty("annotation")) {
                        if (!Array.isArray(message.annotation))
                            return "annotation: array expected";
                        for (var i = 0; i < message.annotation.length; ++i) {
                            var error = $root.google.protobuf.GeneratedCodeInfo.Annotation.verify(message.annotation[i]);
                            if (error)
                                return "annotation." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 */
                GeneratedCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.GeneratedCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.GeneratedCodeInfo();
                    if (object.annotation) {
                        if (!Array.isArray(object.annotation))
                            throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: array expected");
                        message.annotation = [];
                        for (var i = 0; i < object.annotation.length; ++i) {
                            if (typeof object.annotation[i] !== "object")
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: object expected");
                            message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GeneratedCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.annotation = [];
                    if (message.annotation && message.annotation.length) {
                        object.annotation = [];
                        for (var j = 0; j < message.annotation.length; ++j)
                            object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this GeneratedCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GeneratedCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GeneratedCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GeneratedCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo";
                };
    
                GeneratedCodeInfo.Annotation = (function() {
    
                    /**
                     * Properties of an Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @interface IAnnotation
                     * @property {Array.<number>|null} [path] Annotation path
                     * @property {string|null} [sourceFile] Annotation sourceFile
                     * @property {number|null} [begin] Annotation begin
                     * @property {number|null} [end] Annotation end
                     * @property {google.protobuf.GeneratedCodeInfo.Annotation.Semantic|null} [semantic] Annotation semantic
                     */
    
                    /**
                     * Constructs a new Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @classdesc Represents an Annotation.
                     * @implements IAnnotation
                     * @constructor
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     */
                    function Annotation(properties) {
                        this.path = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Annotation path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.path = $util.emptyArray;
    
                    /**
                     * Annotation sourceFile.
                     * @member {string} sourceFile
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.sourceFile = "";
    
                    /**
                     * Annotation begin.
                     * @member {number} begin
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.begin = 0;
    
                    /**
                     * Annotation end.
                     * @member {number} end
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.end = 0;
    
                    /**
                     * Annotation semantic.
                     * @member {google.protobuf.GeneratedCodeInfo.Annotation.Semantic} semantic
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.semantic = 0;
    
                    /**
                     * Creates a new Annotation instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation instance
                     */
                    Annotation.create = function create(properties) {
                        return new Annotation(properties);
                    };
    
                    /**
                     * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.sourceFile != null && Object.hasOwnProperty.call(message, "sourceFile"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.sourceFile);
                        if (message.begin != null && Object.hasOwnProperty.call(message, "begin"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.begin);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);
                        if (message.semantic != null && Object.hasOwnProperty.call(message, "semantic"))
                            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.semantic);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    message.sourceFile = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.begin = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 5: {
                                    message.semantic = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an Annotation message.
                     * @function verify
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Annotation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            if (!$util.isString(message.sourceFile))
                                return "sourceFile: string expected";
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            if (!$util.isInteger(message.begin))
                                return "begin: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            switch (message.semantic) {
                            default:
                                return "semantic: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     */
                    Annotation.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation)
                            return object;
                        var message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.sourceFile != null)
                            message.sourceFile = String(object.sourceFile);
                        if (object.begin != null)
                            message.begin = object.begin | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        switch (object.semantic) {
                        default:
                            if (typeof object.semantic === "number") {
                                message.semantic = object.semantic;
                                break;
                            }
                            break;
                        case "NONE":
                        case 0:
                            message.semantic = 0;
                            break;
                        case "SET":
                        case 1:
                            message.semantic = 1;
                            break;
                        case "ALIAS":
                        case 2:
                            message.semantic = 2;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Annotation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.path = [];
                        if (options.defaults) {
                            object.sourceFile = "";
                            object.begin = 0;
                            object.end = 0;
                            object.semantic = options.enums === String ? "NONE" : 0;
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            object.sourceFile = message.sourceFile;
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            object.begin = message.begin;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            object.semantic = options.enums === String ? $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] === undefined ? message.semantic : $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] : message.semantic;
                        return object;
                    };
    
                    /**
                     * Converts this Annotation to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Annotation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Annotation
                     * @function getTypeUrl
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Annotation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo.Annotation";
                    };
    
                    /**
                     * Semantic enum.
                     * @name google.protobuf.GeneratedCodeInfo.Annotation.Semantic
                     * @enum {number}
                     * @property {number} NONE=0 NONE value
                     * @property {number} SET=1 SET value
                     * @property {number} ALIAS=2 ALIAS value
                     */
                    Annotation.Semantic = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "NONE"] = 0;
                        values[valuesById[1] = "SET"] = 1;
                        values[valuesById[2] = "ALIAS"] = 2;
                        return values;
                    })();
    
                    return Annotation;
                })();
    
                return GeneratedCodeInfo;
            })();
    
            protobuf.Duration = (function() {
    
                /**
                 * Properties of a Duration.
                 * @memberof google.protobuf
                 * @interface IDuration
                 * @property {number|Long|null} [seconds] Duration seconds
                 * @property {number|null} [nanos] Duration nanos
                 */
    
                /**
                 * Constructs a new Duration.
                 * @memberof google.protobuf
                 * @classdesc Represents a Duration.
                 * @implements IDuration
                 * @constructor
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 */
                function Duration(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Duration seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Duration nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.nanos = 0;
    
                /**
                 * Creates a new Duration instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 * @returns {google.protobuf.Duration} Duration instance
                 */
                Duration.create = function create(properties) {
                    return new Duration(properties);
                };
    
                /**
                 * Encodes the specified Duration message. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Duration message, length delimited. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Duration();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Duration message.
                 * @function verify
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Duration.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Duration message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Duration} Duration
                 */
                Duration.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Duration)
                        return object;
                    var message = new $root.google.protobuf.Duration();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Duration message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.Duration} message Duration
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Duration.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Duration to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Duration
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Duration.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Duration
                 * @function getTypeUrl
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Duration.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Duration";
                };
    
                return Duration;
            })();
    
            protobuf.Timestamp = (function() {
    
                /**
                 * Properties of a Timestamp.
                 * @memberof google.protobuf
                 * @interface ITimestamp
                 * @property {number|Long|null} [seconds] Timestamp seconds
                 * @property {number|null} [nanos] Timestamp nanos
                 */
    
                /**
                 * Constructs a new Timestamp.
                 * @memberof google.protobuf
                 * @classdesc Represents a Timestamp.
                 * @implements ITimestamp
                 * @constructor
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 */
                function Timestamp(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Timestamp seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Timestamp nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.nanos = 0;
    
                /**
                 * Creates a new Timestamp instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 * @returns {google.protobuf.Timestamp} Timestamp instance
                 */
                Timestamp.create = function create(properties) {
                    return new Timestamp(properties);
                };
    
                /**
                 * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Timestamp();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Timestamp message.
                 * @function verify
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Timestamp.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Timestamp} Timestamp
                 */
                Timestamp.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Timestamp)
                        return object;
                    var message = new $root.google.protobuf.Timestamp();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.Timestamp} message Timestamp
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Timestamp.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Timestamp to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Timestamp.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Timestamp
                 * @function getTypeUrl
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Timestamp.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Timestamp";
                };
    
                return Timestamp;
            })();
    
            protobuf.Any = (function() {
    
                /**
                 * Properties of an Any.
                 * @memberof google.protobuf
                 * @interface IAny
                 * @property {string|null} [type_url] Any type_url
                 * @property {Uint8Array|null} [value] Any value
                 */
    
                /**
                 * Constructs a new Any.
                 * @memberof google.protobuf
                 * @classdesc Represents an Any.
                 * @implements IAny
                 * @constructor
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 */
                function Any(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Any type_url.
                 * @member {string} type_url
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.type_url = "";
    
                /**
                 * Any value.
                 * @member {Uint8Array} value
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.value = $util.newBuffer([]);
    
                /**
                 * Creates a new Any instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 * @returns {google.protobuf.Any} Any instance
                 */
                Any.create = function create(properties) {
                    return new Any(properties);
                };
    
                /**
                 * Encodes the specified Any message. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type_url != null && Object.hasOwnProperty.call(message, "type_url"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type_url);
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Any message, length delimited. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Any();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type_url = reader.string();
                                break;
                            }
                        case 2: {
                                message.value = reader.bytes();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Any message.
                 * @function verify
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Any.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        if (!$util.isString(message.type_url))
                            return "type_url: string expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                            return "value: buffer expected";
                    return null;
                };
    
                /**
                 * Creates an Any message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Any} Any
                 */
                Any.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Any)
                        return object;
                    var message = new $root.google.protobuf.Any();
                    if (object.type_url != null)
                        message.type_url = String(object.type_url);
                    if (object.value != null)
                        if (typeof object.value === "string")
                            $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                        else if (object.value.length >= 0)
                            message.value = object.value;
                    return message;
                };
    
                /**
                 * Creates a plain object from an Any message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.Any} message Any
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Any.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type_url = "";
                        if (options.bytes === String)
                            object.value = "";
                        else {
                            object.value = [];
                            if (options.bytes !== Array)
                                object.value = $util.newBuffer(object.value);
                        }
                    }
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        object.type_url = message.type_url;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this Any to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Any
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Any.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Any
                 * @function getTypeUrl
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Any.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Any";
                };
    
                return Any;
            })();
    
            protobuf.Empty = (function() {
    
                /**
                 * Properties of an Empty.
                 * @memberof google.protobuf
                 * @interface IEmpty
                 */
    
                /**
                 * Constructs a new Empty.
                 * @memberof google.protobuf
                 * @classdesc Represents an Empty.
                 * @implements IEmpty
                 * @constructor
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 */
                function Empty(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Creates a new Empty instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 * @returns {google.protobuf.Empty} Empty instance
                 */
                Empty.create = function create(properties) {
                    return new Empty(properties);
                };
    
                /**
                 * Encodes the specified Empty message. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    return writer;
                };
    
                /**
                 * Encodes the specified Empty message, length delimited. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Empty();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Empty message.
                 * @function verify
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Empty.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    return null;
                };
    
                /**
                 * Creates an Empty message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Empty} Empty
                 */
                Empty.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Empty)
                        return object;
                    return new $root.google.protobuf.Empty();
                };
    
                /**
                 * Creates a plain object from an Empty message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.Empty} message Empty
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Empty.toObject = function toObject() {
                    return {};
                };
    
                /**
                 * Converts this Empty to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Empty
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Empty.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Empty
                 * @function getTypeUrl
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Empty.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Empty";
                };
    
                return Empty;
            })();
    
            protobuf.FieldMask = (function() {
    
                /**
                 * Properties of a FieldMask.
                 * @memberof google.protobuf
                 * @interface IFieldMask
                 * @property {Array.<string>|null} [paths] FieldMask paths
                 */
    
                /**
                 * Constructs a new FieldMask.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldMask.
                 * @implements IFieldMask
                 * @constructor
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 */
                function FieldMask(properties) {
                    this.paths = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldMask paths.
                 * @member {Array.<string>} paths
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 */
                FieldMask.prototype.paths = $util.emptyArray;
    
                /**
                 * Creates a new FieldMask instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 * @returns {google.protobuf.FieldMask} FieldMask instance
                 */
                FieldMask.create = function create(properties) {
                    return new FieldMask(properties);
                };
    
                /**
                 * Encodes the specified FieldMask message. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.paths != null && message.paths.length)
                        for (var i = 0; i < message.paths.length; ++i)
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.paths[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldMask message, length delimited. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldMask();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.paths && message.paths.length))
                                    message.paths = [];
                                message.paths.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldMask message.
                 * @function verify
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldMask.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.paths != null && message.hasOwnProperty("paths")) {
                        if (!Array.isArray(message.paths))
                            return "paths: array expected";
                        for (var i = 0; i < message.paths.length; ++i)
                            if (!$util.isString(message.paths[i]))
                                return "paths: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldMask message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldMask} FieldMask
                 */
                FieldMask.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldMask)
                        return object;
                    var message = new $root.google.protobuf.FieldMask();
                    if (object.paths) {
                        if (!Array.isArray(object.paths))
                            throw TypeError(".google.protobuf.FieldMask.paths: array expected");
                        message.paths = [];
                        for (var i = 0; i < object.paths.length; ++i)
                            message.paths[i] = String(object.paths[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldMask message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.FieldMask} message FieldMask
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldMask.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.paths = [];
                    if (message.paths && message.paths.length) {
                        object.paths = [];
                        for (var j = 0; j < message.paths.length; ++j)
                            object.paths[j] = message.paths[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this FieldMask to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldMask.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldMask
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldMask.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldMask";
                };
    
                return FieldMask;
            })();
    
            return protobuf;
        })();
    
        google.longrunning = (function() {
    
            /**
             * Namespace longrunning.
             * @memberof google
             * @namespace
             */
            var longrunning = {};
    
            longrunning.Operations = (function() {
    
                /**
                 * Constructs a new Operations service.
                 * @memberof google.longrunning
                 * @classdesc Represents an Operations
                 * @extends $protobuf.rpc.Service
                 * @constructor
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 */
                function Operations(rpcImpl, requestDelimited, responseDelimited) {
                    $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                }
    
                (Operations.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Operations;
    
                /**
                 * Creates new Operations service using the specified rpc implementation.
                 * @function create
                 * @memberof google.longrunning.Operations
                 * @static
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 * @returns {Operations} RPC service. Useful where requests and/or responses are streamed.
                 */
                Operations.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                    return new this(rpcImpl, requestDelimited, responseDelimited);
                };
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|listOperations}.
                 * @memberof google.longrunning.Operations
                 * @typedef ListOperationsCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.ListOperationsResponse} [response] ListOperationsResponse
                 */
    
                /**
                 * Calls ListOperations.
                 * @function listOperations
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IListOperationsRequest} request ListOperationsRequest message or plain object
                 * @param {google.longrunning.Operations.ListOperationsCallback} callback Node-style callback called with the error, if any, and ListOperationsResponse
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.listOperations = function listOperations(request, callback) {
                    return this.rpcCall(listOperations, $root.google.longrunning.ListOperationsRequest, $root.google.longrunning.ListOperationsResponse, request, callback);
                }, "name", { value: "ListOperations" });
    
                /**
                 * Calls ListOperations.
                 * @function listOperations
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IListOperationsRequest} request ListOperationsRequest message or plain object
                 * @returns {Promise<google.longrunning.ListOperationsResponse>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|getOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef GetOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.Operation} [response] Operation
                 */
    
                /**
                 * Calls GetOperation.
                 * @function getOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IGetOperationRequest} request GetOperationRequest message or plain object
                 * @param {google.longrunning.Operations.GetOperationCallback} callback Node-style callback called with the error, if any, and Operation
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.getOperation = function getOperation(request, callback) {
                    return this.rpcCall(getOperation, $root.google.longrunning.GetOperationRequest, $root.google.longrunning.Operation, request, callback);
                }, "name", { value: "GetOperation" });
    
                /**
                 * Calls GetOperation.
                 * @function getOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IGetOperationRequest} request GetOperationRequest message or plain object
                 * @returns {Promise<google.longrunning.Operation>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|deleteOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef DeleteOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.protobuf.Empty} [response] Empty
                 */
    
                /**
                 * Calls DeleteOperation.
                 * @function deleteOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IDeleteOperationRequest} request DeleteOperationRequest message or plain object
                 * @param {google.longrunning.Operations.DeleteOperationCallback} callback Node-style callback called with the error, if any, and Empty
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.deleteOperation = function deleteOperation(request, callback) {
                    return this.rpcCall(deleteOperation, $root.google.longrunning.DeleteOperationRequest, $root.google.protobuf.Empty, request, callback);
                }, "name", { value: "DeleteOperation" });
    
                /**
                 * Calls DeleteOperation.
                 * @function deleteOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IDeleteOperationRequest} request DeleteOperationRequest message or plain object
                 * @returns {Promise<google.protobuf.Empty>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|cancelOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef CancelOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.protobuf.Empty} [response] Empty
                 */
    
                /**
                 * Calls CancelOperation.
                 * @function cancelOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.ICancelOperationRequest} request CancelOperationRequest message or plain object
                 * @param {google.longrunning.Operations.CancelOperationCallback} callback Node-style callback called with the error, if any, and Empty
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.cancelOperation = function cancelOperation(request, callback) {
                    return this.rpcCall(cancelOperation, $root.google.longrunning.CancelOperationRequest, $root.google.protobuf.Empty, request, callback);
                }, "name", { value: "CancelOperation" });
    
                /**
                 * Calls CancelOperation.
                 * @function cancelOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.ICancelOperationRequest} request CancelOperationRequest message or plain object
                 * @returns {Promise<google.protobuf.Empty>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|waitOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef WaitOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.Operation} [response] Operation
                 */
    
                /**
                 * Calls WaitOperation.
                 * @function waitOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IWaitOperationRequest} request WaitOperationRequest message or plain object
                 * @param {google.longrunning.Operations.WaitOperationCallback} callback Node-style callback called with the error, if any, and Operation
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.waitOperation = function waitOperation(request, callback) {
                    return this.rpcCall(waitOperation, $root.google.longrunning.WaitOperationRequest, $root.google.longrunning.Operation, request, callback);
                }, "name", { value: "WaitOperation" });
    
                /**
                 * Calls WaitOperation.
                 * @function waitOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IWaitOperationRequest} request WaitOperationRequest message or plain object
                 * @returns {Promise<google.longrunning.Operation>} Promise
                 * @variation 2
                 */
    
                return Operations;
            })();
    
            longrunning.Operation = (function() {
    
                /**
                 * Properties of an Operation.
                 * @memberof google.longrunning
                 * @interface IOperation
                 * @property {string|null} [name] Operation name
                 * @property {google.protobuf.IAny|null} [metadata] Operation metadata
                 * @property {boolean|null} [done] Operation done
                 * @property {google.rpc.IStatus|null} [error] Operation error
                 * @property {google.protobuf.IAny|null} [response] Operation response
                 */
    
                /**
                 * Constructs a new Operation.
                 * @memberof google.longrunning
                 * @classdesc Represents an Operation.
                 * @implements IOperation
                 * @constructor
                 * @param {google.longrunning.IOperation=} [properties] Properties to set
                 */
                function Operation(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Operation name.
                 * @member {string} name
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.name = "";
    
                /**
                 * Operation metadata.
                 * @member {google.protobuf.IAny|null|undefined} metadata
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.metadata = null;
    
                /**
                 * Operation done.
                 * @member {boolean} done
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.done = false;
    
                /**
                 * Operation error.
                 * @member {google.rpc.IStatus|null|undefined} error
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.error = null;
    
                /**
                 * Operation response.
                 * @member {google.protobuf.IAny|null|undefined} response
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.response = null;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * Operation result.
                 * @member {"error"|"response"|undefined} result
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Object.defineProperty(Operation.prototype, "result", {
                    get: $util.oneOfGetter($oneOfFields = ["error", "response"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new Operation instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation=} [properties] Properties to set
                 * @returns {google.longrunning.Operation} Operation instance
                 */
                Operation.create = function create(properties) {
                    return new Operation(properties);
                };
    
                /**
                 * Encodes the specified Operation message. Does not implicitly {@link google.longrunning.Operation.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation} message Operation message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Operation.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                        $root.google.protobuf.Any.encode(message.metadata, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.done != null && Object.hasOwnProperty.call(message, "done"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.done);
                    if (message.error != null && Object.hasOwnProperty.call(message, "error"))
                        $root.google.rpc.Status.encode(message.error, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.response != null && Object.hasOwnProperty.call(message, "response"))
                        $root.google.protobuf.Any.encode(message.response, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Operation message, length delimited. Does not implicitly {@link google.longrunning.Operation.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation} message Operation message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Operation.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Operation message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.Operation} Operation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Operation.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.Operation();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.metadata = $root.google.protobuf.Any.decode(reader, reader.uint32());
                                break;
                            }
                        case 3: {
                                message.done = reader.bool();
                                break;
                            }
                        case 4: {
                                message.error = $root.google.rpc.Status.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.response = $root.google.protobuf.Any.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Operation message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.Operation} Operation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Operation.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Operation message.
                 * @function verify
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Operation.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.metadata != null && message.hasOwnProperty("metadata")) {
                        var error = $root.google.protobuf.Any.verify(message.metadata);
                        if (error)
                            return "metadata." + error;
                    }
                    if (message.done != null && message.hasOwnProperty("done"))
                        if (typeof message.done !== "boolean")
                            return "done: boolean expected";
                    if (message.error != null && message.hasOwnProperty("error")) {
                        properties.result = 1;
                        {
                            var error = $root.google.rpc.Status.verify(message.error);
                            if (error)
                                return "error." + error;
                        }
                    }
                    if (message.response != null && message.hasOwnProperty("response")) {
                        if (properties.result === 1)
                            return "result: multiple values";
                        properties.result = 1;
                        {
                            var error = $root.google.protobuf.Any.verify(message.response);
                            if (error)
                                return "response." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an Operation message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.Operation} Operation
                 */
                Operation.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.Operation)
                        return object;
                    var message = new $root.google.longrunning.Operation();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.metadata != null) {
                        if (typeof object.metadata !== "object")
                            throw TypeError(".google.longrunning.Operation.metadata: object expected");
                        message.metadata = $root.google.protobuf.Any.fromObject(object.metadata);
                    }
                    if (object.done != null)
                        message.done = Boolean(object.done);
                    if (object.error != null) {
                        if (typeof object.error !== "object")
                            throw TypeError(".google.longrunning.Operation.error: object expected");
                        message.error = $root.google.rpc.Status.fromObject(object.error);
                    }
                    if (object.response != null) {
                        if (typeof object.response !== "object")
                            throw TypeError(".google.longrunning.Operation.response: object expected");
                        message.response = $root.google.protobuf.Any.fromObject(object.response);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an Operation message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.Operation} message Operation
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Operation.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.metadata = null;
                        object.done = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.metadata != null && message.hasOwnProperty("metadata"))
                        object.metadata = $root.google.protobuf.Any.toObject(message.metadata, options);
                    if (message.done != null && message.hasOwnProperty("done"))
                        object.done = message.done;
                    if (message.error != null && message.hasOwnProperty("error")) {
                        object.error = $root.google.rpc.Status.toObject(message.error, options);
                        if (options.oneofs)
                            object.result = "error";
                    }
                    if (message.response != null && message.hasOwnProperty("response")) {
                        object.response = $root.google.protobuf.Any.toObject(message.response, options);
                        if (options.oneofs)
                            object.result = "response";
                    }
                    return object;
                };
    
                /**
                 * Converts this Operation to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.Operation
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Operation.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Operation
                 * @function getTypeUrl
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Operation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.Operation";
                };
    
                return Operation;
            })();
    
            longrunning.GetOperationRequest = (function() {
    
                /**
                 * Properties of a GetOperationRequest.
                 * @memberof google.longrunning
                 * @interface IGetOperationRequest
                 * @property {string|null} [name] GetOperationRequest name
                 */
    
                /**
                 * Constructs a new GetOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a GetOperationRequest.
                 * @implements IGetOperationRequest
                 * @constructor
                 * @param {google.longrunning.IGetOperationRequest=} [properties] Properties to set
                 */
                function GetOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GetOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.GetOperationRequest
                 * @instance
                 */
                GetOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new GetOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest instance
                 */
                GetOperationRequest.create = function create(properties) {
                    return new GetOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified GetOperationRequest message. Does not implicitly {@link google.longrunning.GetOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest} message GetOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified GetOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.GetOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest} message GetOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GetOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.GetOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GetOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GetOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GetOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a GetOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 */
                GetOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.GetOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.GetOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a GetOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.GetOperationRequest} message GetOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GetOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this GetOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.GetOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GetOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GetOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GetOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.GetOperationRequest";
                };
    
                return GetOperationRequest;
            })();
    
            longrunning.ListOperationsRequest = (function() {
    
                /**
                 * Properties of a ListOperationsRequest.
                 * @memberof google.longrunning
                 * @interface IListOperationsRequest
                 * @property {string|null} [name] ListOperationsRequest name
                 * @property {string|null} [filter] ListOperationsRequest filter
                 * @property {number|null} [pageSize] ListOperationsRequest pageSize
                 * @property {string|null} [pageToken] ListOperationsRequest pageToken
                 */
    
                /**
                 * Constructs a new ListOperationsRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a ListOperationsRequest.
                 * @implements IListOperationsRequest
                 * @constructor
                 * @param {google.longrunning.IListOperationsRequest=} [properties] Properties to set
                 */
                function ListOperationsRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ListOperationsRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.name = "";
    
                /**
                 * ListOperationsRequest filter.
                 * @member {string} filter
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.filter = "";
    
                /**
                 * ListOperationsRequest pageSize.
                 * @member {number} pageSize
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.pageSize = 0;
    
                /**
                 * ListOperationsRequest pageToken.
                 * @member {string} pageToken
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.pageToken = "";
    
                /**
                 * Creates a new ListOperationsRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest=} [properties] Properties to set
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest instance
                 */
                ListOperationsRequest.create = function create(properties) {
                    return new ListOperationsRequest(properties);
                };
    
                /**
                 * Encodes the specified ListOperationsRequest message. Does not implicitly {@link google.longrunning.ListOperationsRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest} message ListOperationsRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.filter);
                    if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                    if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified ListOperationsRequest message, length delimited. Does not implicitly {@link google.longrunning.ListOperationsRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest} message ListOperationsRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ListOperationsRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.ListOperationsRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 4: {
                                message.name = reader.string();
                                break;
                            }
                        case 1: {
                                message.filter = reader.string();
                                break;
                            }
                        case 2: {
                                message.pageSize = reader.int32();
                                break;
                            }
                        case 3: {
                                message.pageToken = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ListOperationsRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ListOperationsRequest message.
                 * @function verify
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListOperationsRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.filter != null && message.hasOwnProperty("filter"))
                        if (!$util.isString(message.filter))
                            return "filter: string expected";
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        if (!$util.isInteger(message.pageSize))
                            return "pageSize: integer expected";
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        if (!$util.isString(message.pageToken))
                            return "pageToken: string expected";
                    return null;
                };
    
                /**
                 * Creates a ListOperationsRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 */
                ListOperationsRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.ListOperationsRequest)
                        return object;
                    var message = new $root.google.longrunning.ListOperationsRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.filter != null)
                        message.filter = String(object.filter);
                    if (object.pageSize != null)
                        message.pageSize = object.pageSize | 0;
                    if (object.pageToken != null)
                        message.pageToken = String(object.pageToken);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ListOperationsRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.ListOperationsRequest} message ListOperationsRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListOperationsRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.filter = "";
                        object.pageSize = 0;
                        object.pageToken = "";
                        object.name = "";
                    }
                    if (message.filter != null && message.hasOwnProperty("filter"))
                        object.filter = message.filter;
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        object.pageSize = message.pageSize;
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        object.pageToken = message.pageToken;
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this ListOperationsRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListOperationsRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ListOperationsRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ListOperationsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.ListOperationsRequest";
                };
    
                return ListOperationsRequest;
            })();
    
            longrunning.ListOperationsResponse = (function() {
    
                /**
                 * Properties of a ListOperationsResponse.
                 * @memberof google.longrunning
                 * @interface IListOperationsResponse
                 * @property {Array.<google.longrunning.IOperation>|null} [operations] ListOperationsResponse operations
                 * @property {string|null} [nextPageToken] ListOperationsResponse nextPageToken
                 */
    
                /**
                 * Constructs a new ListOperationsResponse.
                 * @memberof google.longrunning
                 * @classdesc Represents a ListOperationsResponse.
                 * @implements IListOperationsResponse
                 * @constructor
                 * @param {google.longrunning.IListOperationsResponse=} [properties] Properties to set
                 */
                function ListOperationsResponse(properties) {
                    this.operations = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ListOperationsResponse operations.
                 * @member {Array.<google.longrunning.IOperation>} operations
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 */
                ListOperationsResponse.prototype.operations = $util.emptyArray;
    
                /**
                 * ListOperationsResponse nextPageToken.
                 * @member {string} nextPageToken
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 */
                ListOperationsResponse.prototype.nextPageToken = "";
    
                /**
                 * Creates a new ListOperationsResponse instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse=} [properties] Properties to set
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse instance
                 */
                ListOperationsResponse.create = function create(properties) {
                    return new ListOperationsResponse(properties);
                };
    
                /**
                 * Encodes the specified ListOperationsResponse message. Does not implicitly {@link google.longrunning.ListOperationsResponse.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse} message ListOperationsResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsResponse.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.operations != null && message.operations.length)
                        for (var i = 0; i < message.operations.length; ++i)
                            $root.google.longrunning.Operation.encode(message.operations[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                    return writer;
                };
    
                /**
                 * Encodes the specified ListOperationsResponse message, length delimited. Does not implicitly {@link google.longrunning.ListOperationsResponse.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse} message ListOperationsResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ListOperationsResponse message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsResponse.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.ListOperationsResponse();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.operations && message.operations.length))
                                    message.operations = [];
                                message.operations.push($root.google.longrunning.Operation.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                message.nextPageToken = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ListOperationsResponse message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsResponse.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ListOperationsResponse message.
                 * @function verify
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListOperationsResponse.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.operations != null && message.hasOwnProperty("operations")) {
                        if (!Array.isArray(message.operations))
                            return "operations: array expected";
                        for (var i = 0; i < message.operations.length; ++i) {
                            var error = $root.google.longrunning.Operation.verify(message.operations[i]);
                            if (error)
                                return "operations." + error;
                        }
                    }
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        if (!$util.isString(message.nextPageToken))
                            return "nextPageToken: string expected";
                    return null;
                };
    
                /**
                 * Creates a ListOperationsResponse message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 */
                ListOperationsResponse.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.ListOperationsResponse)
                        return object;
                    var message = new $root.google.longrunning.ListOperationsResponse();
                    if (object.operations) {
                        if (!Array.isArray(object.operations))
                            throw TypeError(".google.longrunning.ListOperationsResponse.operations: array expected");
                        message.operations = [];
                        for (var i = 0; i < object.operations.length; ++i) {
                            if (typeof object.operations[i] !== "object")
                                throw TypeError(".google.longrunning.ListOperationsResponse.operations: object expected");
                            message.operations[i] = $root.google.longrunning.Operation.fromObject(object.operations[i]);
                        }
                    }
                    if (object.nextPageToken != null)
                        message.nextPageToken = String(object.nextPageToken);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ListOperationsResponse message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.ListOperationsResponse} message ListOperationsResponse
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListOperationsResponse.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.operations = [];
                    if (options.defaults)
                        object.nextPageToken = "";
                    if (message.operations && message.operations.length) {
                        object.operations = [];
                        for (var j = 0; j < message.operations.length; ++j)
                            object.operations[j] = $root.google.longrunning.Operation.toObject(message.operations[j], options);
                    }
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        object.nextPageToken = message.nextPageToken;
                    return object;
                };
    
                /**
                 * Converts this ListOperationsResponse to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListOperationsResponse.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ListOperationsResponse
                 * @function getTypeUrl
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ListOperationsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.ListOperationsResponse";
                };
    
                return ListOperationsResponse;
            })();
    
            longrunning.CancelOperationRequest = (function() {
    
                /**
                 * Properties of a CancelOperationRequest.
                 * @memberof google.longrunning
                 * @interface ICancelOperationRequest
                 * @property {string|null} [name] CancelOperationRequest name
                 */
    
                /**
                 * Constructs a new CancelOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a CancelOperationRequest.
                 * @implements ICancelOperationRequest
                 * @constructor
                 * @param {google.longrunning.ICancelOperationRequest=} [properties] Properties to set
                 */
                function CancelOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CancelOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.CancelOperationRequest
                 * @instance
                 */
                CancelOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new CancelOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest instance
                 */
                CancelOperationRequest.create = function create(properties) {
                    return new CancelOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified CancelOperationRequest message. Does not implicitly {@link google.longrunning.CancelOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest} message CancelOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CancelOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified CancelOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.CancelOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest} message CancelOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CancelOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CancelOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CancelOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.CancelOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CancelOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CancelOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CancelOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CancelOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a CancelOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 */
                CancelOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.CancelOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.CancelOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CancelOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.CancelOperationRequest} message CancelOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CancelOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this CancelOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.CancelOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CancelOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CancelOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CancelOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.CancelOperationRequest";
                };
    
                return CancelOperationRequest;
            })();
    
            longrunning.DeleteOperationRequest = (function() {
    
                /**
                 * Properties of a DeleteOperationRequest.
                 * @memberof google.longrunning
                 * @interface IDeleteOperationRequest
                 * @property {string|null} [name] DeleteOperationRequest name
                 */
    
                /**
                 * Constructs a new DeleteOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a DeleteOperationRequest.
                 * @implements IDeleteOperationRequest
                 * @constructor
                 * @param {google.longrunning.IDeleteOperationRequest=} [properties] Properties to set
                 */
                function DeleteOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DeleteOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @instance
                 */
                DeleteOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new DeleteOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest instance
                 */
                DeleteOperationRequest.create = function create(properties) {
                    return new DeleteOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified DeleteOperationRequest message. Does not implicitly {@link google.longrunning.DeleteOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest} message DeleteOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeleteOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified DeleteOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.DeleteOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest} message DeleteOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeleteOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DeleteOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeleteOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.DeleteOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DeleteOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeleteOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DeleteOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DeleteOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a DeleteOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 */
                DeleteOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.DeleteOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.DeleteOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a DeleteOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.DeleteOperationRequest} message DeleteOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DeleteOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this DeleteOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DeleteOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DeleteOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DeleteOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.DeleteOperationRequest";
                };
    
                return DeleteOperationRequest;
            })();
    
            longrunning.WaitOperationRequest = (function() {
    
                /**
                 * Properties of a WaitOperationRequest.
                 * @memberof google.longrunning
                 * @interface IWaitOperationRequest
                 * @property {string|null} [name] WaitOperationRequest name
                 * @property {google.protobuf.IDuration|null} [timeout] WaitOperationRequest timeout
                 */
    
                /**
                 * Constructs a new WaitOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a WaitOperationRequest.
                 * @implements IWaitOperationRequest
                 * @constructor
                 * @param {google.longrunning.IWaitOperationRequest=} [properties] Properties to set
                 */
                function WaitOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * WaitOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 */
                WaitOperationRequest.prototype.name = "";
    
                /**
                 * WaitOperationRequest timeout.
                 * @member {google.protobuf.IDuration|null|undefined} timeout
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 */
                WaitOperationRequest.prototype.timeout = null;
    
                /**
                 * Creates a new WaitOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest instance
                 */
                WaitOperationRequest.create = function create(properties) {
                    return new WaitOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified WaitOperationRequest message. Does not implicitly {@link google.longrunning.WaitOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest} message WaitOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                WaitOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.timeout != null && Object.hasOwnProperty.call(message, "timeout"))
                        $root.google.protobuf.Duration.encode(message.timeout, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified WaitOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.WaitOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest} message WaitOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                WaitOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a WaitOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                WaitOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.WaitOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.timeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a WaitOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                WaitOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a WaitOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                WaitOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.timeout != null && message.hasOwnProperty("timeout")) {
                        var error = $root.google.protobuf.Duration.verify(message.timeout);
                        if (error)
                            return "timeout." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a WaitOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 */
                WaitOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.WaitOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.WaitOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.timeout != null) {
                        if (typeof object.timeout !== "object")
                            throw TypeError(".google.longrunning.WaitOperationRequest.timeout: object expected");
                        message.timeout = $root.google.protobuf.Duration.fromObject(object.timeout);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a WaitOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.WaitOperationRequest} message WaitOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                WaitOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.timeout = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.timeout != null && message.hasOwnProperty("timeout"))
                        object.timeout = $root.google.protobuf.Duration.toObject(message.timeout, options);
                    return object;
                };
    
                /**
                 * Converts this WaitOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                WaitOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for WaitOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                WaitOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.WaitOperationRequest";
                };
    
                return WaitOperationRequest;
            })();
    
            longrunning.OperationInfo = (function() {
    
                /**
                 * Properties of an OperationInfo.
                 * @memberof google.longrunning
                 * @interface IOperationInfo
                 * @property {string|null} [responseType] OperationInfo responseType
                 * @property {string|null} [metadataType] OperationInfo metadataType
                 */
    
                /**
                 * Constructs a new OperationInfo.
                 * @memberof google.longrunning
                 * @classdesc Represents an OperationInfo.
                 * @implements IOperationInfo
                 * @constructor
                 * @param {google.longrunning.IOperationInfo=} [properties] Properties to set
                 */
                function OperationInfo(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OperationInfo responseType.
                 * @member {string} responseType
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 */
                OperationInfo.prototype.responseType = "";
    
                /**
                 * OperationInfo metadataType.
                 * @member {string} metadataType
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 */
                OperationInfo.prototype.metadataType = "";
    
                /**
                 * Creates a new OperationInfo instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo=} [properties] Properties to set
                 * @returns {google.longrunning.OperationInfo} OperationInfo instance
                 */
                OperationInfo.create = function create(properties) {
                    return new OperationInfo(properties);
                };
    
                /**
                 * Encodes the specified OperationInfo message. Does not implicitly {@link google.longrunning.OperationInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo} message OperationInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OperationInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.responseType != null && Object.hasOwnProperty.call(message, "responseType"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.responseType);
                    if (message.metadataType != null && Object.hasOwnProperty.call(message, "metadataType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.metadataType);
                    return writer;
                };
    
                /**
                 * Encodes the specified OperationInfo message, length delimited. Does not implicitly {@link google.longrunning.OperationInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo} message OperationInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OperationInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OperationInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OperationInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.OperationInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.responseType = reader.string();
                                break;
                            }
                        case 2: {
                                message.metadataType = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OperationInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OperationInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OperationInfo message.
                 * @function verify
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OperationInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.responseType != null && message.hasOwnProperty("responseType"))
                        if (!$util.isString(message.responseType))
                            return "responseType: string expected";
                    if (message.metadataType != null && message.hasOwnProperty("metadataType"))
                        if (!$util.isString(message.metadataType))
                            return "metadataType: string expected";
                    return null;
                };
    
                /**
                 * Creates an OperationInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 */
                OperationInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.OperationInfo)
                        return object;
                    var message = new $root.google.longrunning.OperationInfo();
                    if (object.responseType != null)
                        message.responseType = String(object.responseType);
                    if (object.metadataType != null)
                        message.metadataType = String(object.metadataType);
                    return message;
                };
    
                /**
                 * Creates a plain object from an OperationInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.OperationInfo} message OperationInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OperationInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.responseType = "";
                        object.metadataType = "";
                    }
                    if (message.responseType != null && message.hasOwnProperty("responseType"))
                        object.responseType = message.responseType;
                    if (message.metadataType != null && message.hasOwnProperty("metadataType"))
                        object.metadataType = message.metadataType;
                    return object;
                };
    
                /**
                 * Converts this OperationInfo to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OperationInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OperationInfo
                 * @function getTypeUrl
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OperationInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.OperationInfo";
                };
    
                return OperationInfo;
            })();
    
            return longrunning;
        })();
    
        google.rpc = (function() {
    
            /**
             * Namespace rpc.
             * @memberof google
             * @namespace
             */
            var rpc = {};
    
            rpc.Status = (function() {
    
                /**
                 * Properties of a Status.
                 * @memberof google.rpc
                 * @interface IStatus
                 * @property {number|null} [code] Status code
                 * @property {string|null} [message] Status message
                 * @property {Array.<google.protobuf.IAny>|null} [details] Status details
                 */
    
                /**
                 * Constructs a new Status.
                 * @memberof google.rpc
                 * @classdesc Represents a Status.
                 * @implements IStatus
                 * @constructor
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 */
                function Status(properties) {
                    this.details = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Status code.
                 * @member {number} code
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.code = 0;
    
                /**
                 * Status message.
                 * @member {string} message
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.message = "";
    
                /**
                 * Status details.
                 * @member {Array.<google.protobuf.IAny>} details
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.details = $util.emptyArray;
    
                /**
                 * Creates a new Status instance using the specified properties.
                 * @function create
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 * @returns {google.rpc.Status} Status instance
                 */
                Status.create = function create(properties) {
                    return new Status(properties);
                };
    
                /**
                 * Encodes the specified Status message. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.code);
                    if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.message);
                    if (message.details != null && message.details.length)
                        for (var i = 0; i < message.details.length; ++i)
                            $root.google.protobuf.Any.encode(message.details[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Status message, length delimited. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.rpc.Status();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.code = reader.int32();
                                break;
                            }
                        case 2: {
                                message.message = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.details && message.details.length))
                                    message.details = [];
                                message.details.push($root.google.protobuf.Any.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Status message.
                 * @function verify
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Status.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.code != null && message.hasOwnProperty("code"))
                        if (!$util.isInteger(message.code))
                            return "code: integer expected";
                    if (message.message != null && message.hasOwnProperty("message"))
                        if (!$util.isString(message.message))
                            return "message: string expected";
                    if (message.details != null && message.hasOwnProperty("details")) {
                        if (!Array.isArray(message.details))
                            return "details: array expected";
                        for (var i = 0; i < message.details.length; ++i) {
                            var error = $root.google.protobuf.Any.verify(message.details[i]);
                            if (error)
                                return "details." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Status message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.rpc.Status} Status
                 */
                Status.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.rpc.Status)
                        return object;
                    var message = new $root.google.rpc.Status();
                    if (object.code != null)
                        message.code = object.code | 0;
                    if (object.message != null)
                        message.message = String(object.message);
                    if (object.details) {
                        if (!Array.isArray(object.details))
                            throw TypeError(".google.rpc.Status.details: array expected");
                        message.details = [];
                        for (var i = 0; i < object.details.length; ++i) {
                            if (typeof object.details[i] !== "object")
                                throw TypeError(".google.rpc.Status.details: object expected");
                            message.details[i] = $root.google.protobuf.Any.fromObject(object.details[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Status message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.Status} message Status
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Status.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.details = [];
                    if (options.defaults) {
                        object.code = 0;
                        object.message = "";
                    }
                    if (message.code != null && message.hasOwnProperty("code"))
                        object.code = message.code;
                    if (message.message != null && message.hasOwnProperty("message"))
                        object.message = message.message;
                    if (message.details && message.details.length) {
                        object.details = [];
                        for (var j = 0; j < message.details.length; ++j)
                            object.details[j] = $root.google.protobuf.Any.toObject(message.details[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this Status to JSON.
                 * @function toJSON
                 * @memberof google.rpc.Status
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Status.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Status
                 * @function getTypeUrl
                 * @memberof google.rpc.Status
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Status.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.rpc.Status";
                };
    
                return Status;
            })();
    
            return rpc;
        })();
    
        return google;
    })();

    return $root;
});
