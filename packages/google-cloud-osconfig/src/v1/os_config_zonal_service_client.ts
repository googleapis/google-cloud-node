// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

/* global window */
import type * as gax from 'google-gax';
import type {
  Callback,
  CallOptions,
  Descriptors,
  ClientOptions,
  GrpcClientOptions,
  LROperation,
  PaginationCallback,
  GaxCall,
} from 'google-gax';
import {Transform} from 'stream';
import * as protos from '../../protos/protos';
import jsonProtos = require('../../protos/protos.json');
/**
 * Client JSON configuration object, loaded from
 * `src/v1/os_config_zonal_service_client_config.json`.
 * This file defines retry strategy and timeouts for all API methods in this library.
 */
import * as gapicConfig from './os_config_zonal_service_client_config.json';
const version = require('../../../package.json').version;

/**
 *  Zonal OS Config API
 *
 *  The OS Config service is the server-side component that allows users to
 *  manage package installations and patch jobs for Compute Engine VM instances.
 * @class
 * @memberof v1
 */
export class OsConfigZonalServiceClient {
  private _terminated = false;
  private _opts: ClientOptions;
  private _providedCustomServicePath: boolean;
  private _gaxModule: typeof gax | typeof gax.fallback;
  private _gaxGrpc: gax.GrpcClient | gax.fallback.GrpcClient;
  private _protos: {};
  private _defaults: {[method: string]: gax.CallSettings};
  auth: gax.GoogleAuth;
  descriptors: Descriptors = {
    page: {},
    stream: {},
    longrunning: {},
    batching: {},
  };
  warn: (code: string, message: string, warnType?: string) => void;
  innerApiCalls: {[name: string]: Function};
  pathTemplates: {[name: string]: gax.PathTemplate};
  operationsClient: gax.OperationsClient;
  osConfigZonalServiceStub?: Promise<{[name: string]: Function}>;

  /**
   * Construct an instance of OsConfigZonalServiceClient.
   *
   * @param {object} [options] - The configuration object.
   * The options accepted by the constructor are described in detail
   * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
   * The common options are:
   * @param {object} [options.credentials] - Credentials object.
   * @param {string} [options.credentials.client_email]
   * @param {string} [options.credentials.private_key]
   * @param {string} [options.email] - Account email address. Required when
   *     using a .pem or .p12 keyFilename.
   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
   *     .p12 key downloaded from the Google Developers Console. If you provide
   *     a path to a JSON file, the projectId option below is not necessary.
   *     NOTE: .pem and .p12 require you to specify options.email as well.
   * @param {number} [options.port] - The port on which to connect to
   *     the remote host.
   * @param {string} [options.projectId] - The project ID from the Google
   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
   *     the environment variable GCLOUD_PROJECT for your project ID. If your
   *     app is running in an environment which supports
   *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
   *     your project ID will be detected automatically.
   * @param {string} [options.apiEndpoint] - The domain name of the
   *     API remote host.
   * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
   *     Follows the structure of {@link gapicConfig}.
   * @param {boolean | "rest"} [options.fallback] - Use HTTP fallback mode.
   *     Pass "rest" to use HTTP/1.1 REST API instead of gRPC.
   *     For more information, please check the
   *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
   * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
   *     need to avoid loading the default gRPC version and want to use the fallback
   *     HTTP implementation. Load only fallback version and pass it to the constructor:
   *     ```
   *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
   *     const client = new OsConfigZonalServiceClient({fallback: 'rest'}, gax);
   *     ```
   */
  constructor(
    opts?: ClientOptions,
    gaxInstance?: typeof gax | typeof gax.fallback
  ) {
    // Ensure that options include all the required fields.
    const staticMembers = this.constructor as typeof OsConfigZonalServiceClient;
    const servicePath =
      opts?.servicePath || opts?.apiEndpoint || staticMembers.servicePath;
    this._providedCustomServicePath = !!(
      opts?.servicePath || opts?.apiEndpoint
    );
    const port = opts?.port || staticMembers.port;
    const clientConfig = opts?.clientConfig ?? {};
    const fallback =
      opts?.fallback ??
      (typeof window !== 'undefined' && typeof window?.fetch === 'function');
    opts = Object.assign({servicePath, port, clientConfig, fallback}, opts);

    // Request numeric enum values if REST transport is used.
    opts.numericEnums = true;

    // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.
    if (servicePath !== staticMembers.servicePath && !('scopes' in opts)) {
      opts['scopes'] = staticMembers.scopes;
    }

    // Load google-gax module synchronously if needed
    if (!gaxInstance) {
      gaxInstance = require('google-gax') as typeof gax;
    }

    // Choose either gRPC or proto-over-HTTP implementation of google-gax.
    this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;

    // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.
    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);

    // Save options to use in initialize() method.
    this._opts = opts;

    // Save the auth object to the client, for use by other methods.
    this.auth = this._gaxGrpc.auth as gax.GoogleAuth;

    // Set useJWTAccessWithScope on the auth object.
    this.auth.useJWTAccessWithScope = true;

    // Set defaultServicePath on the auth object.
    this.auth.defaultServicePath = staticMembers.servicePath;

    // Set the default scopes in auth client if needed.
    if (servicePath === staticMembers.servicePath) {
      this.auth.defaultScopes = staticMembers.scopes;
    }

    // Determine the client header string.
    const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];
    if (typeof process !== 'undefined' && 'versions' in process) {
      clientHeader.push(`gl-node/${process.versions.node}`);
    } else {
      clientHeader.push(`gl-web/${this._gaxModule.version}`);
    }
    if (!opts.fallback) {
      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);
    } else if (opts.fallback === 'rest') {
      clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);
    }
    if (opts.libName && opts.libVersion) {
      clientHeader.push(`${opts.libName}/${opts.libVersion}`);
    }
    // Load the applicable protos.
    this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);

    // This API contains "path templates"; forward-slash-separated
    // identifiers to uniquely identify resources within the API.
    // Create useful helper objects for these.
    this.pathTemplates = {
      inventoryPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/instances/{instance}/inventory'
      ),
      oSPolicyAssignmentPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/osPolicyAssignments/{os_policy_assignment}'
      ),
      oSPolicyAssignmentReportPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/instances/{instance}/osPolicyAssignments/{assignment}/report'
      ),
      patchDeploymentPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/patchDeployments/{patch_deployment}'
      ),
      patchJobPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/patchJobs/{patch_job}'
      ),
      vulnerabilityReportPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/instances/{instance}/vulnerabilityReport'
      ),
    };

    // Some of the methods on this service return "paged" results,
    // (e.g. 50 results at a time, with tokens to get subsequent
    // pages). Denote the keys used for pagination and results.
    this.descriptors.page = {
      listOSPolicyAssignments: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'osPolicyAssignments'
      ),
      listOSPolicyAssignmentRevisions: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'osPolicyAssignments'
      ),
      listOSPolicyAssignmentReports: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'osPolicyAssignmentReports'
      ),
      listInventories: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'inventories'
      ),
      listVulnerabilityReports: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'vulnerabilityReports'
      ),
    };

    const protoFilesRoot = this._gaxModule.protobuf.Root.fromJSON(jsonProtos);
    // This API contains "long-running operations", which return a
    // an Operation object that allows for tracking of the operation,
    // rather than holding a request open.
    const lroOptions: GrpcClientOptions = {
      auth: this.auth,
      grpc: 'grpc' in this._gaxGrpc ? this._gaxGrpc.grpc : undefined,
    };
    if (opts.fallback === 'rest') {
      lroOptions.protoJson = protoFilesRoot;
      lroOptions.httpRules = [
        {
          selector: 'google.longrunning.Operations.CancelOperation',
          post: '/v1/{name=projects/*/locations/*/osPolicyAssignments/*/operations/*}:cancel',
          body: '*',
        },
        {
          selector: 'google.longrunning.Operations.GetOperation',
          get: '/v1/{name=projects/*/locations/*/osPolicyAssignments/*/operations/*}',
        },
      ];
    }
    this.operationsClient = this._gaxModule
      .lro(lroOptions)
      .operationsClient(opts);
    const createOSPolicyAssignmentResponse = protoFilesRoot.lookup(
      '.google.cloud.osconfig.v1.OSPolicyAssignment'
    ) as gax.protobuf.Type;
    const createOSPolicyAssignmentMetadata = protoFilesRoot.lookup(
      '.google.cloud.osconfig.v1.OSPolicyAssignmentOperationMetadata'
    ) as gax.protobuf.Type;
    const updateOSPolicyAssignmentResponse = protoFilesRoot.lookup(
      '.google.cloud.osconfig.v1.OSPolicyAssignment'
    ) as gax.protobuf.Type;
    const updateOSPolicyAssignmentMetadata = protoFilesRoot.lookup(
      '.google.cloud.osconfig.v1.OSPolicyAssignmentOperationMetadata'
    ) as gax.protobuf.Type;
    const deleteOSPolicyAssignmentResponse = protoFilesRoot.lookup(
      '.google.protobuf.Empty'
    ) as gax.protobuf.Type;
    const deleteOSPolicyAssignmentMetadata = protoFilesRoot.lookup(
      '.google.cloud.osconfig.v1.OSPolicyAssignmentOperationMetadata'
    ) as gax.protobuf.Type;

    this.descriptors.longrunning = {
      createOSPolicyAssignment: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        createOSPolicyAssignmentResponse.decode.bind(
          createOSPolicyAssignmentResponse
        ),
        createOSPolicyAssignmentMetadata.decode.bind(
          createOSPolicyAssignmentMetadata
        )
      ),
      updateOSPolicyAssignment: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        updateOSPolicyAssignmentResponse.decode.bind(
          updateOSPolicyAssignmentResponse
        ),
        updateOSPolicyAssignmentMetadata.decode.bind(
          updateOSPolicyAssignmentMetadata
        )
      ),
      deleteOSPolicyAssignment: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        deleteOSPolicyAssignmentResponse.decode.bind(
          deleteOSPolicyAssignmentResponse
        ),
        deleteOSPolicyAssignmentMetadata.decode.bind(
          deleteOSPolicyAssignmentMetadata
        )
      ),
    };

    // Put together the default options sent with requests.
    this._defaults = this._gaxGrpc.constructSettings(
      'google.cloud.osconfig.v1.OsConfigZonalService',
      gapicConfig as gax.ClientConfig,
      opts.clientConfig || {},
      {'x-goog-api-client': clientHeader.join(' ')}
    );

    // Set up a dictionary of "inner API calls"; the core implementation
    // of calling the API is handled in `google-gax`, with this code
    // merely providing the destination and request information.
    this.innerApiCalls = {};

    // Add a warn function to the client constructor so it can be easily tested.
    this.warn = this._gaxModule.warn;
  }

  /**
   * Initialize the client.
   * Performs asynchronous operations (such as authentication) and prepares the client.
   * This function will be called automatically when any class method is called for the
   * first time, but if you need to initialize it before calling an actual method,
   * feel free to call initialize() directly.
   *
   * You can await on this method if you want to make sure the client is initialized.
   *
   * @returns {Promise} A promise that resolves to an authenticated service stub.
   */
  initialize() {
    // If the client stub promise is already initialized, return immediately.
    if (this.osConfigZonalServiceStub) {
      return this.osConfigZonalServiceStub;
    }

    // Put together the "service stub" for
    // google.cloud.osconfig.v1.OsConfigZonalService.
    this.osConfigZonalServiceStub = this._gaxGrpc.createStub(
      this._opts.fallback
        ? (this._protos as protobuf.Root).lookupService(
            'google.cloud.osconfig.v1.OsConfigZonalService'
          )
        : // eslint-disable-next-line @typescript-eslint/no-explicit-any
          (this._protos as any).google.cloud.osconfig.v1.OsConfigZonalService,
      this._opts,
      this._providedCustomServicePath
    ) as Promise<{[method: string]: Function}>;

    // Iterate over each of the methods that the service provides
    // and create an API call method for each.
    const osConfigZonalServiceStubMethods = [
      'createOsPolicyAssignment',
      'updateOsPolicyAssignment',
      'getOsPolicyAssignment',
      'listOsPolicyAssignments',
      'listOsPolicyAssignmentRevisions',
      'deleteOsPolicyAssignment',
      'getOsPolicyAssignmentReport',
      'listOsPolicyAssignmentReports',
      'getInventory',
      'listInventories',
      'getVulnerabilityReport',
      'listVulnerabilityReports',
    ];
    for (const methodName of osConfigZonalServiceStubMethods) {
      const callPromise = this.osConfigZonalServiceStub.then(
        stub =>
          (...args: Array<{}>) => {
            if (this._terminated) {
              return Promise.reject('The client has already been closed.');
            }
            const func = stub[methodName];
            return func.apply(stub, args);
          },
        (err: Error | null | undefined) => () => {
          throw err;
        }
      );

      const descriptor =
        this.descriptors.page[methodName] ||
        this.descriptors.longrunning[methodName] ||
        undefined;
      const apiCall = this._gaxModule.createApiCall(
        callPromise,
        this._defaults[methodName],
        descriptor,
        this._opts.fallback
      );

      this.innerApiCalls[methodName] = apiCall;
    }

    return this.osConfigZonalServiceStub;
  }

  /**
   * The DNS address for this API service.
   * @returns {string} The DNS address for this service.
   */
  static get servicePath() {
    return 'osconfig.googleapis.com';
  }

  /**
   * The DNS address for this API service - same as servicePath(),
   * exists for compatibility reasons.
   * @returns {string} The DNS address for this service.
   */
  static get apiEndpoint() {
    return 'osconfig.googleapis.com';
  }

  /**
   * The port for this API service.
   * @returns {number} The default port for this service.
   */
  static get port() {
    return 443;
  }

  /**
   * The scopes needed to make gRPC calls for every method defined
   * in this service.
   * @returns {string[]} List of default scopes.
   */
  static get scopes() {
    return ['https://www.googleapis.com/auth/cloud-platform'];
  }

  getProjectId(): Promise<string>;
  getProjectId(callback: Callback<string, undefined, undefined>): void;
  /**
   * Return the project ID used by this class.
   * @returns {Promise} A promise that resolves to string containing the project ID.
   */
  getProjectId(
    callback?: Callback<string, undefined, undefined>
  ): Promise<string> | void {
    if (callback) {
      this.auth.getProjectId(callback);
      return;
    }
    return this.auth.getProjectId();
  }

  // -------------------
  // -- Service calls --
  // -------------------
  /**
   * Retrieve an existing OS policy assignment.
   *
   * This method always returns the latest revision. In order to retrieve a
   * previous revision of the assignment, also provide the revision ID in the
   * `name` parameter.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of OS policy assignment.
   *
   *   Format:
   *   `projects/{project}/locations/{location}/osPolicyAssignments/{os_policy_assignment}@{revisionId}`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [OSPolicyAssignment]{@link google.cloud.osconfig.v1.OSPolicyAssignment}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/os_config_zonal_service.get_o_s_policy_assignment.js</caption>
   * region_tag:osconfig_v1_generated_OsConfigZonalService_GetOSPolicyAssignment_async
   */
  getOSPolicyAssignment(
    request?: protos.google.cloud.osconfig.v1.IGetOSPolicyAssignmentRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.osconfig.v1.IOSPolicyAssignment,
      protos.google.cloud.osconfig.v1.IGetOSPolicyAssignmentRequest | undefined,
      {} | undefined
    ]
  >;
  getOSPolicyAssignment(
    request: protos.google.cloud.osconfig.v1.IGetOSPolicyAssignmentRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.osconfig.v1.IOSPolicyAssignment,
      | protos.google.cloud.osconfig.v1.IGetOSPolicyAssignmentRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getOSPolicyAssignment(
    request: protos.google.cloud.osconfig.v1.IGetOSPolicyAssignmentRequest,
    callback: Callback<
      protos.google.cloud.osconfig.v1.IOSPolicyAssignment,
      | protos.google.cloud.osconfig.v1.IGetOSPolicyAssignmentRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getOSPolicyAssignment(
    request?: protos.google.cloud.osconfig.v1.IGetOSPolicyAssignmentRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.osconfig.v1.IOSPolicyAssignment,
          | protos.google.cloud.osconfig.v1.IGetOSPolicyAssignmentRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.osconfig.v1.IOSPolicyAssignment,
      | protos.google.cloud.osconfig.v1.IGetOSPolicyAssignmentRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.osconfig.v1.IOSPolicyAssignment,
      protos.google.cloud.osconfig.v1.IGetOSPolicyAssignmentRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getOsPolicyAssignment(request, options, callback);
  }
  /**
   * Get the OS policy asssignment report for the specified Compute Engine VM
   * instance.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. API resource name for OS policy assignment report.
   *
   *   Format:
   *   `/projects/{project}/locations/{location}/instances/{instance}/osPolicyAssignments/{assignment}/report`
   *
   *   For `{project}`, either `project-number` or `project-id` can be provided.
   *   For `{instance_id}`, either Compute Engine `instance-id` or `instance-name`
   *   can be provided.
   *   For `{assignment_id}`, the OSPolicyAssignment id must be provided.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [OSPolicyAssignmentReport]{@link google.cloud.osconfig.v1.OSPolicyAssignmentReport}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/os_config_zonal_service.get_o_s_policy_assignment_report.js</caption>
   * region_tag:osconfig_v1_generated_OsConfigZonalService_GetOSPolicyAssignmentReport_async
   */
  getOSPolicyAssignmentReport(
    request?: protos.google.cloud.osconfig.v1.IGetOSPolicyAssignmentReportRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.osconfig.v1.IOSPolicyAssignmentReport,
      (
        | protos.google.cloud.osconfig.v1.IGetOSPolicyAssignmentReportRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  getOSPolicyAssignmentReport(
    request: protos.google.cloud.osconfig.v1.IGetOSPolicyAssignmentReportRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.osconfig.v1.IOSPolicyAssignmentReport,
      | protos.google.cloud.osconfig.v1.IGetOSPolicyAssignmentReportRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getOSPolicyAssignmentReport(
    request: protos.google.cloud.osconfig.v1.IGetOSPolicyAssignmentReportRequest,
    callback: Callback<
      protos.google.cloud.osconfig.v1.IOSPolicyAssignmentReport,
      | protos.google.cloud.osconfig.v1.IGetOSPolicyAssignmentReportRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getOSPolicyAssignmentReport(
    request?: protos.google.cloud.osconfig.v1.IGetOSPolicyAssignmentReportRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.osconfig.v1.IOSPolicyAssignmentReport,
          | protos.google.cloud.osconfig.v1.IGetOSPolicyAssignmentReportRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.osconfig.v1.IOSPolicyAssignmentReport,
      | protos.google.cloud.osconfig.v1.IGetOSPolicyAssignmentReportRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.osconfig.v1.IOSPolicyAssignmentReport,
      (
        | protos.google.cloud.osconfig.v1.IGetOSPolicyAssignmentReportRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getOsPolicyAssignmentReport(
      request,
      options,
      callback
    );
  }
  /**
   * Get inventory data for the specified VM instance. If the VM has no
   * associated inventory, the message `NOT_FOUND` is returned.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. API resource name for inventory resource.
   *
   *   Format:
   *   `projects/{project}/locations/{location}/instances/{instance}/inventory`
   *
   *   For `{project}`, either `project-number` or `project-id` can be provided.
   *   For `{instance}`, either Compute Engine  `instance-id` or `instance-name`
   *   can be provided.
   * @param {google.cloud.osconfig.v1.InventoryView} request.view
   *   Inventory view indicating what information should be included in the
   *   inventory resource. If unspecified, the default view is BASIC.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Inventory]{@link google.cloud.osconfig.v1.Inventory}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/os_config_zonal_service.get_inventory.js</caption>
   * region_tag:osconfig_v1_generated_OsConfigZonalService_GetInventory_async
   */
  getInventory(
    request?: protos.google.cloud.osconfig.v1.IGetInventoryRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.osconfig.v1.IInventory,
      protos.google.cloud.osconfig.v1.IGetInventoryRequest | undefined,
      {} | undefined
    ]
  >;
  getInventory(
    request: protos.google.cloud.osconfig.v1.IGetInventoryRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.osconfig.v1.IInventory,
      protos.google.cloud.osconfig.v1.IGetInventoryRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getInventory(
    request: protos.google.cloud.osconfig.v1.IGetInventoryRequest,
    callback: Callback<
      protos.google.cloud.osconfig.v1.IInventory,
      protos.google.cloud.osconfig.v1.IGetInventoryRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getInventory(
    request?: protos.google.cloud.osconfig.v1.IGetInventoryRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.osconfig.v1.IInventory,
          | protos.google.cloud.osconfig.v1.IGetInventoryRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.osconfig.v1.IInventory,
      protos.google.cloud.osconfig.v1.IGetInventoryRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.osconfig.v1.IInventory,
      protos.google.cloud.osconfig.v1.IGetInventoryRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getInventory(request, options, callback);
  }
  /**
   * Gets the vulnerability report for the specified VM instance. Only VMs with
   * inventory data have vulnerability reports associated with them.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. API resource name for vulnerability resource.
   *
   *   Format:
   *   `projects/{project}/locations/{location}/instances/{instance}/vulnerabilityReport`
   *
   *   For `{project}`, either `project-number` or `project-id` can be provided.
   *   For `{instance}`, either Compute Engine `instance-id` or `instance-name`
   *   can be provided.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [VulnerabilityReport]{@link google.cloud.osconfig.v1.VulnerabilityReport}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/os_config_zonal_service.get_vulnerability_report.js</caption>
   * region_tag:osconfig_v1_generated_OsConfigZonalService_GetVulnerabilityReport_async
   */
  getVulnerabilityReport(
    request?: protos.google.cloud.osconfig.v1.IGetVulnerabilityReportRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.osconfig.v1.IVulnerabilityReport,
      (
        | protos.google.cloud.osconfig.v1.IGetVulnerabilityReportRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  getVulnerabilityReport(
    request: protos.google.cloud.osconfig.v1.IGetVulnerabilityReportRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.osconfig.v1.IVulnerabilityReport,
      | protos.google.cloud.osconfig.v1.IGetVulnerabilityReportRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getVulnerabilityReport(
    request: protos.google.cloud.osconfig.v1.IGetVulnerabilityReportRequest,
    callback: Callback<
      protos.google.cloud.osconfig.v1.IVulnerabilityReport,
      | protos.google.cloud.osconfig.v1.IGetVulnerabilityReportRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getVulnerabilityReport(
    request?: protos.google.cloud.osconfig.v1.IGetVulnerabilityReportRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.osconfig.v1.IVulnerabilityReport,
          | protos.google.cloud.osconfig.v1.IGetVulnerabilityReportRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.osconfig.v1.IVulnerabilityReport,
      | protos.google.cloud.osconfig.v1.IGetVulnerabilityReportRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.osconfig.v1.IVulnerabilityReport,
      (
        | protos.google.cloud.osconfig.v1.IGetVulnerabilityReportRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getVulnerabilityReport(
      request,
      options,
      callback
    );
  }

  /**
   * Create an OS policy assignment.
   *
   * This method also creates the first revision of the OS policy assignment.
   *
   * This method returns a long running operation (LRO) that contains the
   * rollout details. The rollout can be cancelled by cancelling the LRO.
   *
   * For more information, see [Method:
   * projects.locations.osPolicyAssignments.operations.cancel](https://cloud.google.com/compute/docs/osconfig/rest/v1/projects.locations.osPolicyAssignments.operations/cancel).
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent resource name in the form:
   *   projects/{project}/locations/{location}
   * @param {google.cloud.osconfig.v1.OSPolicyAssignment} request.osPolicyAssignment
   *   Required. The OS policy assignment to be created.
   * @param {string} request.osPolicyAssignmentId
   *   Required. The logical name of the OS policy assignment in the project
   *   with the following restrictions:
   *
   *   * Must contain only lowercase letters, numbers, and hyphens.
   *   * Must start with a letter.
   *   * Must be between 1-63 characters.
   *   * Must end with a number or a letter.
   *   * Must be unique within the project.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/os_config_zonal_service.create_o_s_policy_assignment.js</caption>
   * region_tag:osconfig_v1_generated_OsConfigZonalService_CreateOSPolicyAssignment_async
   */
  createOSPolicyAssignment(
    request?: protos.google.cloud.osconfig.v1.ICreateOSPolicyAssignmentRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.osconfig.v1.IOSPolicyAssignment,
        protos.google.cloud.osconfig.v1.IOSPolicyAssignmentOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  >;
  createOSPolicyAssignment(
    request: protos.google.cloud.osconfig.v1.ICreateOSPolicyAssignmentRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.osconfig.v1.IOSPolicyAssignment,
        protos.google.cloud.osconfig.v1.IOSPolicyAssignmentOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createOSPolicyAssignment(
    request: protos.google.cloud.osconfig.v1.ICreateOSPolicyAssignmentRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.osconfig.v1.IOSPolicyAssignment,
        protos.google.cloud.osconfig.v1.IOSPolicyAssignmentOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createOSPolicyAssignment(
    request?: protos.google.cloud.osconfig.v1.ICreateOSPolicyAssignmentRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.osconfig.v1.IOSPolicyAssignment,
            protos.google.cloud.osconfig.v1.IOSPolicyAssignmentOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.osconfig.v1.IOSPolicyAssignment,
        protos.google.cloud.osconfig.v1.IOSPolicyAssignmentOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.osconfig.v1.IOSPolicyAssignment,
        protos.google.cloud.osconfig.v1.IOSPolicyAssignmentOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createOsPolicyAssignment(
      request,
      options,
      callback
    );
  }
  /**
   * Check the status of the long running operation returned by `createOSPolicyAssignment()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/os_config_zonal_service.create_o_s_policy_assignment.js</caption>
   * region_tag:osconfig_v1_generated_OsConfigZonalService_CreateOSPolicyAssignment_async
   */
  async checkCreateOSPolicyAssignmentProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.osconfig.v1.OSPolicyAssignment,
      protos.google.cloud.osconfig.v1.OSPolicyAssignmentOperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.createOSPolicyAssignment,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.osconfig.v1.OSPolicyAssignment,
      protos.google.cloud.osconfig.v1.OSPolicyAssignmentOperationMetadata
    >;
  }
  /**
   * Update an existing OS policy assignment.
   *
   * This method creates a new revision of the OS policy assignment.
   *
   * This method returns a long running operation (LRO) that contains the
   * rollout details. The rollout can be cancelled by cancelling the LRO.
   *
   * For more information, see [Method:
   * projects.locations.osPolicyAssignments.operations.cancel](https://cloud.google.com/compute/docs/osconfig/rest/v1/projects.locations.osPolicyAssignments.operations/cancel).
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.osconfig.v1.OSPolicyAssignment} request.osPolicyAssignment
   *   Required. The updated OS policy assignment.
   * @param {google.protobuf.FieldMask} [request.updateMask]
   *   Optional. Field mask that controls which fields of the assignment should be
   *   updated.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/os_config_zonal_service.update_o_s_policy_assignment.js</caption>
   * region_tag:osconfig_v1_generated_OsConfigZonalService_UpdateOSPolicyAssignment_async
   */
  updateOSPolicyAssignment(
    request?: protos.google.cloud.osconfig.v1.IUpdateOSPolicyAssignmentRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.osconfig.v1.IOSPolicyAssignment,
        protos.google.cloud.osconfig.v1.IOSPolicyAssignmentOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  >;
  updateOSPolicyAssignment(
    request: protos.google.cloud.osconfig.v1.IUpdateOSPolicyAssignmentRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.osconfig.v1.IOSPolicyAssignment,
        protos.google.cloud.osconfig.v1.IOSPolicyAssignmentOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateOSPolicyAssignment(
    request: protos.google.cloud.osconfig.v1.IUpdateOSPolicyAssignmentRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.osconfig.v1.IOSPolicyAssignment,
        protos.google.cloud.osconfig.v1.IOSPolicyAssignmentOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateOSPolicyAssignment(
    request?: protos.google.cloud.osconfig.v1.IUpdateOSPolicyAssignmentRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.osconfig.v1.IOSPolicyAssignment,
            protos.google.cloud.osconfig.v1.IOSPolicyAssignmentOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.osconfig.v1.IOSPolicyAssignment,
        protos.google.cloud.osconfig.v1.IOSPolicyAssignmentOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.osconfig.v1.IOSPolicyAssignment,
        protos.google.cloud.osconfig.v1.IOSPolicyAssignmentOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'os_policy_assignment.name': request.osPolicyAssignment!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateOsPolicyAssignment(
      request,
      options,
      callback
    );
  }
  /**
   * Check the status of the long running operation returned by `updateOSPolicyAssignment()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/os_config_zonal_service.update_o_s_policy_assignment.js</caption>
   * region_tag:osconfig_v1_generated_OsConfigZonalService_UpdateOSPolicyAssignment_async
   */
  async checkUpdateOSPolicyAssignmentProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.osconfig.v1.OSPolicyAssignment,
      protos.google.cloud.osconfig.v1.OSPolicyAssignmentOperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.updateOSPolicyAssignment,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.osconfig.v1.OSPolicyAssignment,
      protos.google.cloud.osconfig.v1.OSPolicyAssignmentOperationMetadata
    >;
  }
  /**
   * Delete the OS policy assignment.
   *
   * This method creates a new revision of the OS policy assignment.
   *
   * This method returns a long running operation (LRO) that contains the
   * rollout details. The rollout can be cancelled by cancelling the LRO.
   *
   * If the LRO completes and is not cancelled, all revisions associated with
   * the OS policy assignment are deleted.
   *
   * For more information, see [Method:
   * projects.locations.osPolicyAssignments.operations.cancel](https://cloud.google.com/compute/docs/osconfig/rest/v1/projects.locations.osPolicyAssignments.operations/cancel).
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the OS policy assignment to be deleted
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/os_config_zonal_service.delete_o_s_policy_assignment.js</caption>
   * region_tag:osconfig_v1_generated_OsConfigZonalService_DeleteOSPolicyAssignment_async
   */
  deleteOSPolicyAssignment(
    request?: protos.google.cloud.osconfig.v1.IDeleteOSPolicyAssignmentRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.osconfig.v1.IOSPolicyAssignmentOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  >;
  deleteOSPolicyAssignment(
    request: protos.google.cloud.osconfig.v1.IDeleteOSPolicyAssignmentRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.osconfig.v1.IOSPolicyAssignmentOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteOSPolicyAssignment(
    request: protos.google.cloud.osconfig.v1.IDeleteOSPolicyAssignmentRequest,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.osconfig.v1.IOSPolicyAssignmentOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteOSPolicyAssignment(
    request?: protos.google.cloud.osconfig.v1.IDeleteOSPolicyAssignmentRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.protobuf.IEmpty,
            protos.google.cloud.osconfig.v1.IOSPolicyAssignmentOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.osconfig.v1.IOSPolicyAssignmentOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.osconfig.v1.IOSPolicyAssignmentOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deleteOsPolicyAssignment(
      request,
      options,
      callback
    );
  }
  /**
   * Check the status of the long running operation returned by `deleteOSPolicyAssignment()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/os_config_zonal_service.delete_o_s_policy_assignment.js</caption>
   * region_tag:osconfig_v1_generated_OsConfigZonalService_DeleteOSPolicyAssignment_async
   */
  async checkDeleteOSPolicyAssignmentProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.osconfig.v1.OSPolicyAssignmentOperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.deleteOSPolicyAssignment,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.osconfig.v1.OSPolicyAssignmentOperationMetadata
    >;
  }
  /**
   * List the OS policy assignments under the parent resource.
   *
   * For each OS policy assignment, the latest revision is returned.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent resource name.
   * @param {number} request.pageSize
   *   The maximum number of assignments to return.
   * @param {string} request.pageToken
   *   A pagination token returned from a previous call to
   *   `ListOSPolicyAssignments` that indicates where this listing should continue
   *   from.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [OSPolicyAssignment]{@link google.cloud.osconfig.v1.OSPolicyAssignment}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listOSPolicyAssignmentsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listOSPolicyAssignments(
    request?: protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.osconfig.v1.IOSPolicyAssignment[],
      protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentsRequest | null,
      protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentsResponse
    ]
  >;
  listOSPolicyAssignments(
    request: protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentsRequest,
      | protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentsResponse
      | null
      | undefined,
      protos.google.cloud.osconfig.v1.IOSPolicyAssignment
    >
  ): void;
  listOSPolicyAssignments(
    request: protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentsRequest,
    callback: PaginationCallback<
      protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentsRequest,
      | protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentsResponse
      | null
      | undefined,
      protos.google.cloud.osconfig.v1.IOSPolicyAssignment
    >
  ): void;
  listOSPolicyAssignments(
    request?: protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentsRequest,
          | protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentsResponse
          | null
          | undefined,
          protos.google.cloud.osconfig.v1.IOSPolicyAssignment
        >,
    callback?: PaginationCallback<
      protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentsRequest,
      | protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentsResponse
      | null
      | undefined,
      protos.google.cloud.osconfig.v1.IOSPolicyAssignment
    >
  ): Promise<
    [
      protos.google.cloud.osconfig.v1.IOSPolicyAssignment[],
      protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentsRequest | null,
      protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentsResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listOsPolicyAssignments(
      request,
      options,
      callback
    );
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent resource name.
   * @param {number} request.pageSize
   *   The maximum number of assignments to return.
   * @param {string} request.pageToken
   *   A pagination token returned from a previous call to
   *   `ListOSPolicyAssignments` that indicates where this listing should continue
   *   from.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [OSPolicyAssignment]{@link google.cloud.osconfig.v1.OSPolicyAssignment} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listOSPolicyAssignmentsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listOSPolicyAssignmentsStream(
    request?: protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listOsPolicyAssignments'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listOSPolicyAssignments.createStream(
      this.innerApiCalls.listOsPolicyAssignments as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listOSPolicyAssignments`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent resource name.
   * @param {number} request.pageSize
   *   The maximum number of assignments to return.
   * @param {string} request.pageToken
   *   A pagination token returned from a previous call to
   *   `ListOSPolicyAssignments` that indicates where this listing should continue
   *   from.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [OSPolicyAssignment]{@link google.cloud.osconfig.v1.OSPolicyAssignment}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/os_config_zonal_service.list_o_s_policy_assignments.js</caption>
   * region_tag:osconfig_v1_generated_OsConfigZonalService_ListOSPolicyAssignments_async
   */
  listOSPolicyAssignmentsAsync(
    request?: protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.osconfig.v1.IOSPolicyAssignment> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listOsPolicyAssignments'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listOSPolicyAssignments.asyncIterate(
      this.innerApiCalls['listOsPolicyAssignments'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.osconfig.v1.IOSPolicyAssignment>;
  }
  /**
   * List the OS policy assignment revisions for a given OS policy assignment.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the OS policy assignment to list revisions for.
   * @param {number} request.pageSize
   *   The maximum number of revisions to return.
   * @param {string} request.pageToken
   *   A pagination token returned from a previous call to
   *   `ListOSPolicyAssignmentRevisions` that indicates where this listing should
   *   continue from.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [OSPolicyAssignment]{@link google.cloud.osconfig.v1.OSPolicyAssignment}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listOSPolicyAssignmentRevisionsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listOSPolicyAssignmentRevisions(
    request?: protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentRevisionsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.osconfig.v1.IOSPolicyAssignment[],
      protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentRevisionsRequest | null,
      protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentRevisionsResponse
    ]
  >;
  listOSPolicyAssignmentRevisions(
    request: protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentRevisionsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentRevisionsRequest,
      | protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentRevisionsResponse
      | null
      | undefined,
      protos.google.cloud.osconfig.v1.IOSPolicyAssignment
    >
  ): void;
  listOSPolicyAssignmentRevisions(
    request: protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentRevisionsRequest,
    callback: PaginationCallback<
      protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentRevisionsRequest,
      | protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentRevisionsResponse
      | null
      | undefined,
      protos.google.cloud.osconfig.v1.IOSPolicyAssignment
    >
  ): void;
  listOSPolicyAssignmentRevisions(
    request?: protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentRevisionsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentRevisionsRequest,
          | protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentRevisionsResponse
          | null
          | undefined,
          protos.google.cloud.osconfig.v1.IOSPolicyAssignment
        >,
    callback?: PaginationCallback<
      protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentRevisionsRequest,
      | protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentRevisionsResponse
      | null
      | undefined,
      protos.google.cloud.osconfig.v1.IOSPolicyAssignment
    >
  ): Promise<
    [
      protos.google.cloud.osconfig.v1.IOSPolicyAssignment[],
      protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentRevisionsRequest | null,
      protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentRevisionsResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listOsPolicyAssignmentRevisions(
      request,
      options,
      callback
    );
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the OS policy assignment to list revisions for.
   * @param {number} request.pageSize
   *   The maximum number of revisions to return.
   * @param {string} request.pageToken
   *   A pagination token returned from a previous call to
   *   `ListOSPolicyAssignmentRevisions` that indicates where this listing should
   *   continue from.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [OSPolicyAssignment]{@link google.cloud.osconfig.v1.OSPolicyAssignment} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listOSPolicyAssignmentRevisionsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listOSPolicyAssignmentRevisionsStream(
    request?: protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentRevisionsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    const defaultCallSettings =
      this._defaults['listOsPolicyAssignmentRevisions'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listOSPolicyAssignmentRevisions.createStream(
      this.innerApiCalls.listOsPolicyAssignmentRevisions as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listOSPolicyAssignmentRevisions`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the OS policy assignment to list revisions for.
   * @param {number} request.pageSize
   *   The maximum number of revisions to return.
   * @param {string} request.pageToken
   *   A pagination token returned from a previous call to
   *   `ListOSPolicyAssignmentRevisions` that indicates where this listing should
   *   continue from.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [OSPolicyAssignment]{@link google.cloud.osconfig.v1.OSPolicyAssignment}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/os_config_zonal_service.list_o_s_policy_assignment_revisions.js</caption>
   * region_tag:osconfig_v1_generated_OsConfigZonalService_ListOSPolicyAssignmentRevisions_async
   */
  listOSPolicyAssignmentRevisionsAsync(
    request?: protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentRevisionsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.osconfig.v1.IOSPolicyAssignment> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    const defaultCallSettings =
      this._defaults['listOsPolicyAssignmentRevisions'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listOSPolicyAssignmentRevisions.asyncIterate(
      this.innerApiCalls['listOsPolicyAssignmentRevisions'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.osconfig.v1.IOSPolicyAssignment>;
  }
  /**
   * List OS policy asssignment reports for all Compute Engine VM instances in
   * the specified zone.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent resource name.
   *
   *   Format:
   *   `projects/{project}/locations/{location}/instances/{instance}/osPolicyAssignments/{assignment}/reports`
   *
   *   For `{project}`, either `project-number` or `project-id` can be provided.
   *   For `{instance}`, either `instance-name`, `instance-id`, or `-` can be
   *   provided. If '-' is provided, the response will include
   *   OSPolicyAssignmentReports for all instances in the project/location.
   *   For `{assignment}`, either `assignment-id` or `-` can be provided. If '-'
   *   is provided, the response will include OSPolicyAssignmentReports for all
   *   OSPolicyAssignments in the project/location.
   *   Either {instance} or {assignment} must be `-`.
   *
   *   For example:
   *   `projects/{project}/locations/{location}/instances/{instance}/osPolicyAssignments/-/reports`
   *    returns all reports for the instance
   *   `projects/{project}/locations/{location}/instances/-/osPolicyAssignments/{assignment-id}/reports`
   *    returns all the reports for the given assignment across all instances.
   *   `projects/{project}/locations/{location}/instances/-/osPolicyAssignments/-/reports`
   *    returns all the reports for all assignments across all instances.
   * @param {number} request.pageSize
   *   The maximum number of results to return.
   * @param {string} request.filter
   *   If provided, this field specifies the criteria that must be met by the
   *   `OSPolicyAssignmentReport` API resource that is included in the response.
   * @param {string} request.pageToken
   *   A pagination token returned from a previous call to the
   *   `ListOSPolicyAssignmentReports` method that indicates where this listing
   *   should continue from.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [OSPolicyAssignmentReport]{@link google.cloud.osconfig.v1.OSPolicyAssignmentReport}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listOSPolicyAssignmentReportsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listOSPolicyAssignmentReports(
    request?: protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentReportsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.osconfig.v1.IOSPolicyAssignmentReport[],
      protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentReportsRequest | null,
      protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentReportsResponse
    ]
  >;
  listOSPolicyAssignmentReports(
    request: protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentReportsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentReportsRequest,
      | protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentReportsResponse
      | null
      | undefined,
      protos.google.cloud.osconfig.v1.IOSPolicyAssignmentReport
    >
  ): void;
  listOSPolicyAssignmentReports(
    request: protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentReportsRequest,
    callback: PaginationCallback<
      protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentReportsRequest,
      | protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentReportsResponse
      | null
      | undefined,
      protos.google.cloud.osconfig.v1.IOSPolicyAssignmentReport
    >
  ): void;
  listOSPolicyAssignmentReports(
    request?: protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentReportsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentReportsRequest,
          | protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentReportsResponse
          | null
          | undefined,
          protos.google.cloud.osconfig.v1.IOSPolicyAssignmentReport
        >,
    callback?: PaginationCallback<
      protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentReportsRequest,
      | protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentReportsResponse
      | null
      | undefined,
      protos.google.cloud.osconfig.v1.IOSPolicyAssignmentReport
    >
  ): Promise<
    [
      protos.google.cloud.osconfig.v1.IOSPolicyAssignmentReport[],
      protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentReportsRequest | null,
      protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentReportsResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listOsPolicyAssignmentReports(
      request,
      options,
      callback
    );
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent resource name.
   *
   *   Format:
   *   `projects/{project}/locations/{location}/instances/{instance}/osPolicyAssignments/{assignment}/reports`
   *
   *   For `{project}`, either `project-number` or `project-id` can be provided.
   *   For `{instance}`, either `instance-name`, `instance-id`, or `-` can be
   *   provided. If '-' is provided, the response will include
   *   OSPolicyAssignmentReports for all instances in the project/location.
   *   For `{assignment}`, either `assignment-id` or `-` can be provided. If '-'
   *   is provided, the response will include OSPolicyAssignmentReports for all
   *   OSPolicyAssignments in the project/location.
   *   Either {instance} or {assignment} must be `-`.
   *
   *   For example:
   *   `projects/{project}/locations/{location}/instances/{instance}/osPolicyAssignments/-/reports`
   *    returns all reports for the instance
   *   `projects/{project}/locations/{location}/instances/-/osPolicyAssignments/{assignment-id}/reports`
   *    returns all the reports for the given assignment across all instances.
   *   `projects/{project}/locations/{location}/instances/-/osPolicyAssignments/-/reports`
   *    returns all the reports for all assignments across all instances.
   * @param {number} request.pageSize
   *   The maximum number of results to return.
   * @param {string} request.filter
   *   If provided, this field specifies the criteria that must be met by the
   *   `OSPolicyAssignmentReport` API resource that is included in the response.
   * @param {string} request.pageToken
   *   A pagination token returned from a previous call to the
   *   `ListOSPolicyAssignmentReports` method that indicates where this listing
   *   should continue from.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [OSPolicyAssignmentReport]{@link google.cloud.osconfig.v1.OSPolicyAssignmentReport} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listOSPolicyAssignmentReportsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listOSPolicyAssignmentReportsStream(
    request?: protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentReportsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listOsPolicyAssignmentReports'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listOSPolicyAssignmentReports.createStream(
      this.innerApiCalls.listOsPolicyAssignmentReports as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listOSPolicyAssignmentReports`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent resource name.
   *
   *   Format:
   *   `projects/{project}/locations/{location}/instances/{instance}/osPolicyAssignments/{assignment}/reports`
   *
   *   For `{project}`, either `project-number` or `project-id` can be provided.
   *   For `{instance}`, either `instance-name`, `instance-id`, or `-` can be
   *   provided. If '-' is provided, the response will include
   *   OSPolicyAssignmentReports for all instances in the project/location.
   *   For `{assignment}`, either `assignment-id` or `-` can be provided. If '-'
   *   is provided, the response will include OSPolicyAssignmentReports for all
   *   OSPolicyAssignments in the project/location.
   *   Either {instance} or {assignment} must be `-`.
   *
   *   For example:
   *   `projects/{project}/locations/{location}/instances/{instance}/osPolicyAssignments/-/reports`
   *    returns all reports for the instance
   *   `projects/{project}/locations/{location}/instances/-/osPolicyAssignments/{assignment-id}/reports`
   *    returns all the reports for the given assignment across all instances.
   *   `projects/{project}/locations/{location}/instances/-/osPolicyAssignments/-/reports`
   *    returns all the reports for all assignments across all instances.
   * @param {number} request.pageSize
   *   The maximum number of results to return.
   * @param {string} request.filter
   *   If provided, this field specifies the criteria that must be met by the
   *   `OSPolicyAssignmentReport` API resource that is included in the response.
   * @param {string} request.pageToken
   *   A pagination token returned from a previous call to the
   *   `ListOSPolicyAssignmentReports` method that indicates where this listing
   *   should continue from.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [OSPolicyAssignmentReport]{@link google.cloud.osconfig.v1.OSPolicyAssignmentReport}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/os_config_zonal_service.list_o_s_policy_assignment_reports.js</caption>
   * region_tag:osconfig_v1_generated_OsConfigZonalService_ListOSPolicyAssignmentReports_async
   */
  listOSPolicyAssignmentReportsAsync(
    request?: protos.google.cloud.osconfig.v1.IListOSPolicyAssignmentReportsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.osconfig.v1.IOSPolicyAssignmentReport> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listOsPolicyAssignmentReports'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listOSPolicyAssignmentReports.asyncIterate(
      this.innerApiCalls['listOsPolicyAssignmentReports'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.osconfig.v1.IOSPolicyAssignmentReport>;
  }
  /**
   * List inventory data for all VM instances in the specified zone.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent resource name.
   *
   *   Format: `projects/{project}/locations/{location}/instances/-`
   *
   *   For `{project}`, either `project-number` or `project-id` can be provided.
   * @param {google.cloud.osconfig.v1.InventoryView} request.view
   *   Inventory view indicating what information should be included in the
   *   inventory resource. If unspecified, the default view is BASIC.
   * @param {number} request.pageSize
   *   The maximum number of results to return.
   * @param {string} request.pageToken
   *   A pagination token returned from a previous call to
   *   `ListInventories` that indicates where this listing
   *   should continue from.
   * @param {string} request.filter
   *   If provided, this field specifies the criteria that must be met by a
   *   `Inventory` API resource to be included in the response.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [Inventory]{@link google.cloud.osconfig.v1.Inventory}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listInventoriesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listInventories(
    request?: protos.google.cloud.osconfig.v1.IListInventoriesRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.osconfig.v1.IInventory[],
      protos.google.cloud.osconfig.v1.IListInventoriesRequest | null,
      protos.google.cloud.osconfig.v1.IListInventoriesResponse
    ]
  >;
  listInventories(
    request: protos.google.cloud.osconfig.v1.IListInventoriesRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.osconfig.v1.IListInventoriesRequest,
      | protos.google.cloud.osconfig.v1.IListInventoriesResponse
      | null
      | undefined,
      protos.google.cloud.osconfig.v1.IInventory
    >
  ): void;
  listInventories(
    request: protos.google.cloud.osconfig.v1.IListInventoriesRequest,
    callback: PaginationCallback<
      protos.google.cloud.osconfig.v1.IListInventoriesRequest,
      | protos.google.cloud.osconfig.v1.IListInventoriesResponse
      | null
      | undefined,
      protos.google.cloud.osconfig.v1.IInventory
    >
  ): void;
  listInventories(
    request?: protos.google.cloud.osconfig.v1.IListInventoriesRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.osconfig.v1.IListInventoriesRequest,
          | protos.google.cloud.osconfig.v1.IListInventoriesResponse
          | null
          | undefined,
          protos.google.cloud.osconfig.v1.IInventory
        >,
    callback?: PaginationCallback<
      protos.google.cloud.osconfig.v1.IListInventoriesRequest,
      | protos.google.cloud.osconfig.v1.IListInventoriesResponse
      | null
      | undefined,
      protos.google.cloud.osconfig.v1.IInventory
    >
  ): Promise<
    [
      protos.google.cloud.osconfig.v1.IInventory[],
      protos.google.cloud.osconfig.v1.IListInventoriesRequest | null,
      protos.google.cloud.osconfig.v1.IListInventoriesResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listInventories(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent resource name.
   *
   *   Format: `projects/{project}/locations/{location}/instances/-`
   *
   *   For `{project}`, either `project-number` or `project-id` can be provided.
   * @param {google.cloud.osconfig.v1.InventoryView} request.view
   *   Inventory view indicating what information should be included in the
   *   inventory resource. If unspecified, the default view is BASIC.
   * @param {number} request.pageSize
   *   The maximum number of results to return.
   * @param {string} request.pageToken
   *   A pagination token returned from a previous call to
   *   `ListInventories` that indicates where this listing
   *   should continue from.
   * @param {string} request.filter
   *   If provided, this field specifies the criteria that must be met by a
   *   `Inventory` API resource to be included in the response.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [Inventory]{@link google.cloud.osconfig.v1.Inventory} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listInventoriesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listInventoriesStream(
    request?: protos.google.cloud.osconfig.v1.IListInventoriesRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listInventories'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listInventories.createStream(
      this.innerApiCalls.listInventories as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listInventories`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent resource name.
   *
   *   Format: `projects/{project}/locations/{location}/instances/-`
   *
   *   For `{project}`, either `project-number` or `project-id` can be provided.
   * @param {google.cloud.osconfig.v1.InventoryView} request.view
   *   Inventory view indicating what information should be included in the
   *   inventory resource. If unspecified, the default view is BASIC.
   * @param {number} request.pageSize
   *   The maximum number of results to return.
   * @param {string} request.pageToken
   *   A pagination token returned from a previous call to
   *   `ListInventories` that indicates where this listing
   *   should continue from.
   * @param {string} request.filter
   *   If provided, this field specifies the criteria that must be met by a
   *   `Inventory` API resource to be included in the response.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [Inventory]{@link google.cloud.osconfig.v1.Inventory}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/os_config_zonal_service.list_inventories.js</caption>
   * region_tag:osconfig_v1_generated_OsConfigZonalService_ListInventories_async
   */
  listInventoriesAsync(
    request?: protos.google.cloud.osconfig.v1.IListInventoriesRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.osconfig.v1.IInventory> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listInventories'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listInventories.asyncIterate(
      this.innerApiCalls['listInventories'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.osconfig.v1.IInventory>;
  }
  /**
   * List vulnerability reports for all VM instances in the specified zone.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent resource name.
   *
   *   Format: `projects/{project}/locations/{location}/instances/-`
   *
   *   For `{project}`, either `project-number` or `project-id` can be provided.
   * @param {number} request.pageSize
   *   The maximum number of results to return.
   * @param {string} request.pageToken
   *   A pagination token returned from a previous call to
   *   `ListVulnerabilityReports` that indicates where this listing
   *   should continue from.
   * @param {string} request.filter
   *   If provided, this field specifies the criteria that must be met by a
   *   `vulnerabilityReport` API resource to be included in the response.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [VulnerabilityReport]{@link google.cloud.osconfig.v1.VulnerabilityReport}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listVulnerabilityReportsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listVulnerabilityReports(
    request?: protos.google.cloud.osconfig.v1.IListVulnerabilityReportsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.osconfig.v1.IVulnerabilityReport[],
      protos.google.cloud.osconfig.v1.IListVulnerabilityReportsRequest | null,
      protos.google.cloud.osconfig.v1.IListVulnerabilityReportsResponse
    ]
  >;
  listVulnerabilityReports(
    request: protos.google.cloud.osconfig.v1.IListVulnerabilityReportsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.osconfig.v1.IListVulnerabilityReportsRequest,
      | protos.google.cloud.osconfig.v1.IListVulnerabilityReportsResponse
      | null
      | undefined,
      protos.google.cloud.osconfig.v1.IVulnerabilityReport
    >
  ): void;
  listVulnerabilityReports(
    request: protos.google.cloud.osconfig.v1.IListVulnerabilityReportsRequest,
    callback: PaginationCallback<
      protos.google.cloud.osconfig.v1.IListVulnerabilityReportsRequest,
      | protos.google.cloud.osconfig.v1.IListVulnerabilityReportsResponse
      | null
      | undefined,
      protos.google.cloud.osconfig.v1.IVulnerabilityReport
    >
  ): void;
  listVulnerabilityReports(
    request?: protos.google.cloud.osconfig.v1.IListVulnerabilityReportsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.osconfig.v1.IListVulnerabilityReportsRequest,
          | protos.google.cloud.osconfig.v1.IListVulnerabilityReportsResponse
          | null
          | undefined,
          protos.google.cloud.osconfig.v1.IVulnerabilityReport
        >,
    callback?: PaginationCallback<
      protos.google.cloud.osconfig.v1.IListVulnerabilityReportsRequest,
      | protos.google.cloud.osconfig.v1.IListVulnerabilityReportsResponse
      | null
      | undefined,
      protos.google.cloud.osconfig.v1.IVulnerabilityReport
    >
  ): Promise<
    [
      protos.google.cloud.osconfig.v1.IVulnerabilityReport[],
      protos.google.cloud.osconfig.v1.IListVulnerabilityReportsRequest | null,
      protos.google.cloud.osconfig.v1.IListVulnerabilityReportsResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listVulnerabilityReports(
      request,
      options,
      callback
    );
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent resource name.
   *
   *   Format: `projects/{project}/locations/{location}/instances/-`
   *
   *   For `{project}`, either `project-number` or `project-id` can be provided.
   * @param {number} request.pageSize
   *   The maximum number of results to return.
   * @param {string} request.pageToken
   *   A pagination token returned from a previous call to
   *   `ListVulnerabilityReports` that indicates where this listing
   *   should continue from.
   * @param {string} request.filter
   *   If provided, this field specifies the criteria that must be met by a
   *   `vulnerabilityReport` API resource to be included in the response.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [VulnerabilityReport]{@link google.cloud.osconfig.v1.VulnerabilityReport} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listVulnerabilityReportsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listVulnerabilityReportsStream(
    request?: protos.google.cloud.osconfig.v1.IListVulnerabilityReportsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listVulnerabilityReports'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listVulnerabilityReports.createStream(
      this.innerApiCalls.listVulnerabilityReports as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listVulnerabilityReports`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent resource name.
   *
   *   Format: `projects/{project}/locations/{location}/instances/-`
   *
   *   For `{project}`, either `project-number` or `project-id` can be provided.
   * @param {number} request.pageSize
   *   The maximum number of results to return.
   * @param {string} request.pageToken
   *   A pagination token returned from a previous call to
   *   `ListVulnerabilityReports` that indicates where this listing
   *   should continue from.
   * @param {string} request.filter
   *   If provided, this field specifies the criteria that must be met by a
   *   `vulnerabilityReport` API resource to be included in the response.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [VulnerabilityReport]{@link google.cloud.osconfig.v1.VulnerabilityReport}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/os_config_zonal_service.list_vulnerability_reports.js</caption>
   * region_tag:osconfig_v1_generated_OsConfigZonalService_ListVulnerabilityReports_async
   */
  listVulnerabilityReportsAsync(
    request?: protos.google.cloud.osconfig.v1.IListVulnerabilityReportsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.osconfig.v1.IVulnerabilityReport> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listVulnerabilityReports'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listVulnerabilityReports.asyncIterate(
      this.innerApiCalls['listVulnerabilityReports'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.osconfig.v1.IVulnerabilityReport>;
  }
  // --------------------
  // -- Path templates --
  // --------------------

  /**
   * Return a fully-qualified inventory resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} instance
   * @returns {string} Resource name string.
   */
  inventoryPath(project: string, location: string, instance: string) {
    return this.pathTemplates.inventoryPathTemplate.render({
      project: project,
      location: location,
      instance: instance,
    });
  }

  /**
   * Parse the project from Inventory resource.
   *
   * @param {string} inventoryName
   *   A fully-qualified path representing Inventory resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromInventoryName(inventoryName: string) {
    return this.pathTemplates.inventoryPathTemplate.match(inventoryName)
      .project;
  }

  /**
   * Parse the location from Inventory resource.
   *
   * @param {string} inventoryName
   *   A fully-qualified path representing Inventory resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromInventoryName(inventoryName: string) {
    return this.pathTemplates.inventoryPathTemplate.match(inventoryName)
      .location;
  }

  /**
   * Parse the instance from Inventory resource.
   *
   * @param {string} inventoryName
   *   A fully-qualified path representing Inventory resource.
   * @returns {string} A string representing the instance.
   */
  matchInstanceFromInventoryName(inventoryName: string) {
    return this.pathTemplates.inventoryPathTemplate.match(inventoryName)
      .instance;
  }

  /**
   * Return a fully-qualified oSPolicyAssignment resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} os_policy_assignment
   * @returns {string} Resource name string.
   */
  oSPolicyAssignmentPath(
    project: string,
    location: string,
    osPolicyAssignment: string
  ) {
    return this.pathTemplates.oSPolicyAssignmentPathTemplate.render({
      project: project,
      location: location,
      os_policy_assignment: osPolicyAssignment,
    });
  }

  /**
   * Parse the project from OSPolicyAssignment resource.
   *
   * @param {string} oSPolicyAssignmentName
   *   A fully-qualified path representing OSPolicyAssignment resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromOSPolicyAssignmentName(oSPolicyAssignmentName: string) {
    return this.pathTemplates.oSPolicyAssignmentPathTemplate.match(
      oSPolicyAssignmentName
    ).project;
  }

  /**
   * Parse the location from OSPolicyAssignment resource.
   *
   * @param {string} oSPolicyAssignmentName
   *   A fully-qualified path representing OSPolicyAssignment resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromOSPolicyAssignmentName(oSPolicyAssignmentName: string) {
    return this.pathTemplates.oSPolicyAssignmentPathTemplate.match(
      oSPolicyAssignmentName
    ).location;
  }

  /**
   * Parse the os_policy_assignment from OSPolicyAssignment resource.
   *
   * @param {string} oSPolicyAssignmentName
   *   A fully-qualified path representing OSPolicyAssignment resource.
   * @returns {string} A string representing the os_policy_assignment.
   */
  matchOsPolicyAssignmentFromOSPolicyAssignmentName(
    oSPolicyAssignmentName: string
  ) {
    return this.pathTemplates.oSPolicyAssignmentPathTemplate.match(
      oSPolicyAssignmentName
    ).os_policy_assignment;
  }

  /**
   * Return a fully-qualified oSPolicyAssignmentReport resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} instance
   * @param {string} assignment
   * @returns {string} Resource name string.
   */
  oSPolicyAssignmentReportPath(
    project: string,
    location: string,
    instance: string,
    assignment: string
  ) {
    return this.pathTemplates.oSPolicyAssignmentReportPathTemplate.render({
      project: project,
      location: location,
      instance: instance,
      assignment: assignment,
    });
  }

  /**
   * Parse the project from OSPolicyAssignmentReport resource.
   *
   * @param {string} oSPolicyAssignmentReportName
   *   A fully-qualified path representing OSPolicyAssignmentReport resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromOSPolicyAssignmentReportName(
    oSPolicyAssignmentReportName: string
  ) {
    return this.pathTemplates.oSPolicyAssignmentReportPathTemplate.match(
      oSPolicyAssignmentReportName
    ).project;
  }

  /**
   * Parse the location from OSPolicyAssignmentReport resource.
   *
   * @param {string} oSPolicyAssignmentReportName
   *   A fully-qualified path representing OSPolicyAssignmentReport resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromOSPolicyAssignmentReportName(
    oSPolicyAssignmentReportName: string
  ) {
    return this.pathTemplates.oSPolicyAssignmentReportPathTemplate.match(
      oSPolicyAssignmentReportName
    ).location;
  }

  /**
   * Parse the instance from OSPolicyAssignmentReport resource.
   *
   * @param {string} oSPolicyAssignmentReportName
   *   A fully-qualified path representing OSPolicyAssignmentReport resource.
   * @returns {string} A string representing the instance.
   */
  matchInstanceFromOSPolicyAssignmentReportName(
    oSPolicyAssignmentReportName: string
  ) {
    return this.pathTemplates.oSPolicyAssignmentReportPathTemplate.match(
      oSPolicyAssignmentReportName
    ).instance;
  }

  /**
   * Parse the assignment from OSPolicyAssignmentReport resource.
   *
   * @param {string} oSPolicyAssignmentReportName
   *   A fully-qualified path representing OSPolicyAssignmentReport resource.
   * @returns {string} A string representing the assignment.
   */
  matchAssignmentFromOSPolicyAssignmentReportName(
    oSPolicyAssignmentReportName: string
  ) {
    return this.pathTemplates.oSPolicyAssignmentReportPathTemplate.match(
      oSPolicyAssignmentReportName
    ).assignment;
  }

  /**
   * Return a fully-qualified patchDeployment resource name string.
   *
   * @param {string} project
   * @param {string} patch_deployment
   * @returns {string} Resource name string.
   */
  patchDeploymentPath(project: string, patchDeployment: string) {
    return this.pathTemplates.patchDeploymentPathTemplate.render({
      project: project,
      patch_deployment: patchDeployment,
    });
  }

  /**
   * Parse the project from PatchDeployment resource.
   *
   * @param {string} patchDeploymentName
   *   A fully-qualified path representing PatchDeployment resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromPatchDeploymentName(patchDeploymentName: string) {
    return this.pathTemplates.patchDeploymentPathTemplate.match(
      patchDeploymentName
    ).project;
  }

  /**
   * Parse the patch_deployment from PatchDeployment resource.
   *
   * @param {string} patchDeploymentName
   *   A fully-qualified path representing PatchDeployment resource.
   * @returns {string} A string representing the patch_deployment.
   */
  matchPatchDeploymentFromPatchDeploymentName(patchDeploymentName: string) {
    return this.pathTemplates.patchDeploymentPathTemplate.match(
      patchDeploymentName
    ).patch_deployment;
  }

  /**
   * Return a fully-qualified patchJob resource name string.
   *
   * @param {string} project
   * @param {string} patch_job
   * @returns {string} Resource name string.
   */
  patchJobPath(project: string, patchJob: string) {
    return this.pathTemplates.patchJobPathTemplate.render({
      project: project,
      patch_job: patchJob,
    });
  }

  /**
   * Parse the project from PatchJob resource.
   *
   * @param {string} patchJobName
   *   A fully-qualified path representing PatchJob resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromPatchJobName(patchJobName: string) {
    return this.pathTemplates.patchJobPathTemplate.match(patchJobName).project;
  }

  /**
   * Parse the patch_job from PatchJob resource.
   *
   * @param {string} patchJobName
   *   A fully-qualified path representing PatchJob resource.
   * @returns {string} A string representing the patch_job.
   */
  matchPatchJobFromPatchJobName(patchJobName: string) {
    return this.pathTemplates.patchJobPathTemplate.match(patchJobName)
      .patch_job;
  }

  /**
   * Return a fully-qualified vulnerabilityReport resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} instance
   * @returns {string} Resource name string.
   */
  vulnerabilityReportPath(project: string, location: string, instance: string) {
    return this.pathTemplates.vulnerabilityReportPathTemplate.render({
      project: project,
      location: location,
      instance: instance,
    });
  }

  /**
   * Parse the project from VulnerabilityReport resource.
   *
   * @param {string} vulnerabilityReportName
   *   A fully-qualified path representing VulnerabilityReport resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromVulnerabilityReportName(vulnerabilityReportName: string) {
    return this.pathTemplates.vulnerabilityReportPathTemplate.match(
      vulnerabilityReportName
    ).project;
  }

  /**
   * Parse the location from VulnerabilityReport resource.
   *
   * @param {string} vulnerabilityReportName
   *   A fully-qualified path representing VulnerabilityReport resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromVulnerabilityReportName(vulnerabilityReportName: string) {
    return this.pathTemplates.vulnerabilityReportPathTemplate.match(
      vulnerabilityReportName
    ).location;
  }

  /**
   * Parse the instance from VulnerabilityReport resource.
   *
   * @param {string} vulnerabilityReportName
   *   A fully-qualified path representing VulnerabilityReport resource.
   * @returns {string} A string representing the instance.
   */
  matchInstanceFromVulnerabilityReportName(vulnerabilityReportName: string) {
    return this.pathTemplates.vulnerabilityReportPathTemplate.match(
      vulnerabilityReportName
    ).instance;
  }

  /**
   * Terminate the gRPC channel and close the client.
   *
   * The client will no longer be usable and all future behavior is undefined.
   * @returns {Promise} A promise that resolves when the client is closed.
   */
  close(): Promise<void> {
    if (this.osConfigZonalServiceStub && !this._terminated) {
      return this.osConfigZonalServiceStub.then(stub => {
        this._terminated = true;
        stub.close();
        this.operationsClient.close();
      });
    }
    return Promise.resolve();
  }
}
