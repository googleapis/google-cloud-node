// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

/* global window */
import type * as gax from 'google-gax';
import type {
  Callback,
  CallOptions,
  Descriptors,
  ClientOptions,
  PaginationCallback,
  GaxCall,
  IamClient,
  IamProtos,
  LocationsClient,
  LocationProtos,
} from 'google-gax';
import {Transform} from 'stream';
import * as protos from '../../protos/protos';
import jsonProtos = require('../../protos/protos.json');
/**
 * Client JSON configuration object, loaded from
 * `src/v1alpha2/dataform_client_config.json`.
 * This file defines retry strategy and timeouts for all API methods in this library.
 */
import * as gapicConfig from './dataform_client_config.json';
const version = require('../../../package.json').version;

/**
 *  Dataform is a service to develop, create, document, test, and update curated
 *  tables in BigQuery.
 * @class
 * @memberof v1alpha2
 */
export class DataformClient {
  private _terminated = false;
  private _opts: ClientOptions;
  private _providedCustomServicePath: boolean;
  private _gaxModule: typeof gax | typeof gax.fallback;
  private _gaxGrpc: gax.GrpcClient | gax.fallback.GrpcClient;
  private _protos: {};
  private _defaults: {[method: string]: gax.CallSettings};
  auth: gax.GoogleAuth;
  descriptors: Descriptors = {
    page: {},
    stream: {},
    longrunning: {},
    batching: {},
  };
  warn: (code: string, message: string, warnType?: string) => void;
  innerApiCalls: {[name: string]: Function};
  iamClient: IamClient;
  locationsClient: LocationsClient;
  pathTemplates: {[name: string]: gax.PathTemplate};
  dataformStub?: Promise<{[name: string]: Function}>;

  /**
   * Construct an instance of DataformClient.
   *
   * @param {object} [options] - The configuration object.
   * The options accepted by the constructor are described in detail
   * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
   * The common options are:
   * @param {object} [options.credentials] - Credentials object.
   * @param {string} [options.credentials.client_email]
   * @param {string} [options.credentials.private_key]
   * @param {string} [options.email] - Account email address. Required when
   *     using a .pem or .p12 keyFilename.
   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
   *     .p12 key downloaded from the Google Developers Console. If you provide
   *     a path to a JSON file, the projectId option below is not necessary.
   *     NOTE: .pem and .p12 require you to specify options.email as well.
   * @param {number} [options.port] - The port on which to connect to
   *     the remote host.
   * @param {string} [options.projectId] - The project ID from the Google
   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
   *     the environment variable GCLOUD_PROJECT for your project ID. If your
   *     app is running in an environment which supports
   *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
   *     your project ID will be detected automatically.
   * @param {string} [options.apiEndpoint] - The domain name of the
   *     API remote host.
   * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
   *     Follows the structure of {@link gapicConfig}.
   * @param {boolean | "rest"} [options.fallback] - Use HTTP fallback mode.
   *     Pass "rest" to use HTTP/1.1 REST API instead of gRPC.
   *     For more information, please check the
   *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
   * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
   *     need to avoid loading the default gRPC version and want to use the fallback
   *     HTTP implementation. Load only fallback version and pass it to the constructor:
   *     ```
   *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
   *     const client = new DataformClient({fallback: 'rest'}, gax);
   *     ```
   */
  constructor(
    opts?: ClientOptions,
    gaxInstance?: typeof gax | typeof gax.fallback
  ) {
    // Ensure that options include all the required fields.
    const staticMembers = this.constructor as typeof DataformClient;
    const servicePath =
      opts?.servicePath || opts?.apiEndpoint || staticMembers.servicePath;
    this._providedCustomServicePath = !!(
      opts?.servicePath || opts?.apiEndpoint
    );
    const port = opts?.port || staticMembers.port;
    const clientConfig = opts?.clientConfig ?? {};
    const fallback =
      opts?.fallback ??
      (typeof window !== 'undefined' && typeof window?.fetch === 'function');
    opts = Object.assign({servicePath, port, clientConfig, fallback}, opts);

    // Request numeric enum values if REST transport is used.
    opts.numericEnums = true;

    // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.
    if (servicePath !== staticMembers.servicePath && !('scopes' in opts)) {
      opts['scopes'] = staticMembers.scopes;
    }

    // Load google-gax module synchronously if needed
    if (!gaxInstance) {
      gaxInstance = require('google-gax') as typeof gax;
    }

    // Choose either gRPC or proto-over-HTTP implementation of google-gax.
    this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;

    // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.
    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);

    // Save options to use in initialize() method.
    this._opts = opts;

    // Save the auth object to the client, for use by other methods.
    this.auth = this._gaxGrpc.auth as gax.GoogleAuth;

    // Set useJWTAccessWithScope on the auth object.
    this.auth.useJWTAccessWithScope = true;

    // Set defaultServicePath on the auth object.
    this.auth.defaultServicePath = staticMembers.servicePath;

    // Set the default scopes in auth client if needed.
    if (servicePath === staticMembers.servicePath) {
      this.auth.defaultScopes = staticMembers.scopes;
    }
    this.iamClient = new this._gaxModule.IamClient(this._gaxGrpc, opts);

    this.locationsClient = new this._gaxModule.LocationsClient(
      this._gaxGrpc,
      opts
    );

    // Determine the client header string.
    const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];
    if (typeof process !== 'undefined' && 'versions' in process) {
      clientHeader.push(`gl-node/${process.versions.node}`);
    } else {
      clientHeader.push(`gl-web/${this._gaxModule.version}`);
    }
    if (!opts.fallback) {
      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);
    } else if (opts.fallback === 'rest') {
      clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);
    }
    if (opts.libName && opts.libVersion) {
      clientHeader.push(`${opts.libName}/${opts.libVersion}`);
    }
    // Load the applicable protos.
    this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);

    // This API contains "path templates"; forward-slash-separated
    // identifiers to uniquely identify resources within the API.
    // Create useful helper objects for these.
    this.pathTemplates = {
      compilationResultPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/repositories/{repository}/compilationResults/{compilation_result}'
      ),
      locationPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}'
      ),
      repositoryPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/repositories/{repository}'
      ),
      workflowInvocationPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/repositories/{repository}/workflowInvocations/{workflow_invocation}'
      ),
      workspacePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/repositories/{repository}/workspaces/{workspace}'
      ),
    };

    // Some of the methods on this service return "paged" results,
    // (e.g. 50 results at a time, with tokens to get subsequent
    // pages). Denote the keys used for pagination and results.
    this.descriptors.page = {
      listRepositories: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'repositories'
      ),
      listWorkspaces: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'workspaces'
      ),
      queryDirectoryContents: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'directoryEntries'
      ),
      listCompilationResults: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'compilationResults'
      ),
      queryCompilationResultActions: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'compilationResultActions'
      ),
      listWorkflowInvocations: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'workflowInvocations'
      ),
      queryWorkflowInvocationActions: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'workflowInvocationActions'
      ),
    };

    // Put together the default options sent with requests.
    this._defaults = this._gaxGrpc.constructSettings(
      'google.cloud.dataform.v1alpha2.Dataform',
      gapicConfig as gax.ClientConfig,
      opts.clientConfig || {},
      {'x-goog-api-client': clientHeader.join(' ')}
    );

    // Set up a dictionary of "inner API calls"; the core implementation
    // of calling the API is handled in `google-gax`, with this code
    // merely providing the destination and request information.
    this.innerApiCalls = {};

    // Add a warn function to the client constructor so it can be easily tested.
    this.warn = this._gaxModule.warn;
  }

  /**
   * Initialize the client.
   * Performs asynchronous operations (such as authentication) and prepares the client.
   * This function will be called automatically when any class method is called for the
   * first time, but if you need to initialize it before calling an actual method,
   * feel free to call initialize() directly.
   *
   * You can await on this method if you want to make sure the client is initialized.
   *
   * @returns {Promise} A promise that resolves to an authenticated service stub.
   */
  initialize() {
    // If the client stub promise is already initialized, return immediately.
    if (this.dataformStub) {
      return this.dataformStub;
    }

    // Put together the "service stub" for
    // google.cloud.dataform.v1alpha2.Dataform.
    this.dataformStub = this._gaxGrpc.createStub(
      this._opts.fallback
        ? (this._protos as protobuf.Root).lookupService(
            'google.cloud.dataform.v1alpha2.Dataform'
          )
        : // eslint-disable-next-line @typescript-eslint/no-explicit-any
          (this._protos as any).google.cloud.dataform.v1alpha2.Dataform,
      this._opts,
      this._providedCustomServicePath
    ) as Promise<{[method: string]: Function}>;

    // Iterate over each of the methods that the service provides
    // and create an API call method for each.
    const dataformStubMethods = [
      'listRepositories',
      'getRepository',
      'createRepository',
      'updateRepository',
      'deleteRepository',
      'fetchRemoteBranches',
      'listWorkspaces',
      'getWorkspace',
      'createWorkspace',
      'deleteWorkspace',
      'installNpmPackages',
      'pullGitCommits',
      'pushGitCommits',
      'fetchFileGitStatuses',
      'fetchGitAheadBehind',
      'commitWorkspaceChanges',
      'resetWorkspaceChanges',
      'fetchFileDiff',
      'queryDirectoryContents',
      'makeDirectory',
      'removeDirectory',
      'moveDirectory',
      'readFile',
      'removeFile',
      'moveFile',
      'writeFile',
      'listCompilationResults',
      'getCompilationResult',
      'createCompilationResult',
      'queryCompilationResultActions',
      'listWorkflowInvocations',
      'getWorkflowInvocation',
      'createWorkflowInvocation',
      'deleteWorkflowInvocation',
      'cancelWorkflowInvocation',
      'queryWorkflowInvocationActions',
    ];
    for (const methodName of dataformStubMethods) {
      const callPromise = this.dataformStub.then(
        stub =>
          (...args: Array<{}>) => {
            if (this._terminated) {
              return Promise.reject('The client has already been closed.');
            }
            const func = stub[methodName];
            return func.apply(stub, args);
          },
        (err: Error | null | undefined) => () => {
          throw err;
        }
      );

      const descriptor = this.descriptors.page[methodName] || undefined;
      const apiCall = this._gaxModule.createApiCall(
        callPromise,
        this._defaults[methodName],
        descriptor,
        this._opts.fallback
      );

      this.innerApiCalls[methodName] = apiCall;
    }

    return this.dataformStub;
  }

  /**
   * The DNS address for this API service.
   * @returns {string} The DNS address for this service.
   */
  static get servicePath() {
    return 'dataform.googleapis.com';
  }

  /**
   * The DNS address for this API service - same as servicePath(),
   * exists for compatibility reasons.
   * @returns {string} The DNS address for this service.
   */
  static get apiEndpoint() {
    return 'dataform.googleapis.com';
  }

  /**
   * The port for this API service.
   * @returns {number} The default port for this service.
   */
  static get port() {
    return 443;
  }

  /**
   * The scopes needed to make gRPC calls for every method defined
   * in this service.
   * @returns {string[]} List of default scopes.
   */
  static get scopes() {
    return ['https://www.googleapis.com/auth/cloud-platform'];
  }

  getProjectId(): Promise<string>;
  getProjectId(callback: Callback<string, undefined, undefined>): void;
  /**
   * Return the project ID used by this class.
   * @returns {Promise} A promise that resolves to string containing the project ID.
   */
  getProjectId(
    callback?: Callback<string, undefined, undefined>
  ): Promise<string> | void {
    if (callback) {
      this.auth.getProjectId(callback);
      return;
    }
    return this.auth.getProjectId();
  }

  // -------------------
  // -- Service calls --
  // -------------------
  /**
   * Fetches a single Repository.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The repository's name.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.cloud.dataform.v1alpha2.Repository | Repository}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1alpha2/dataform.get_repository.js</caption>
   * region_tag:dataform_v1alpha2_generated_Dataform_GetRepository_async
   */
  getRepository(
    request?: protos.google.cloud.dataform.v1alpha2.IGetRepositoryRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IRepository,
      protos.google.cloud.dataform.v1alpha2.IGetRepositoryRequest | undefined,
      {} | undefined
    ]
  >;
  getRepository(
    request: protos.google.cloud.dataform.v1alpha2.IGetRepositoryRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.IRepository,
      | protos.google.cloud.dataform.v1alpha2.IGetRepositoryRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getRepository(
    request: protos.google.cloud.dataform.v1alpha2.IGetRepositoryRequest,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.IRepository,
      | protos.google.cloud.dataform.v1alpha2.IGetRepositoryRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getRepository(
    request?: protos.google.cloud.dataform.v1alpha2.IGetRepositoryRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.dataform.v1alpha2.IRepository,
          | protos.google.cloud.dataform.v1alpha2.IGetRepositoryRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.dataform.v1alpha2.IRepository,
      | protos.google.cloud.dataform.v1alpha2.IGetRepositoryRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IRepository,
      protos.google.cloud.dataform.v1alpha2.IGetRepositoryRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getRepository(request, options, callback);
  }
  /**
   * Creates a new Repository in a given project and location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The location in which to create the repository. Must be in the format
   *   `projects/* /locations/*`.
   * @param {google.cloud.dataform.v1alpha2.Repository} request.repository
   *   Required. The repository to create.
   * @param {string} request.repositoryId
   *   Required. The ID to use for the repository, which will become the final component of
   *   the repository's resource name.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.cloud.dataform.v1alpha2.Repository | Repository}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1alpha2/dataform.create_repository.js</caption>
   * region_tag:dataform_v1alpha2_generated_Dataform_CreateRepository_async
   */
  createRepository(
    request?: protos.google.cloud.dataform.v1alpha2.ICreateRepositoryRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IRepository,
      (
        | protos.google.cloud.dataform.v1alpha2.ICreateRepositoryRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  createRepository(
    request: protos.google.cloud.dataform.v1alpha2.ICreateRepositoryRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.IRepository,
      | protos.google.cloud.dataform.v1alpha2.ICreateRepositoryRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createRepository(
    request: protos.google.cloud.dataform.v1alpha2.ICreateRepositoryRequest,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.IRepository,
      | protos.google.cloud.dataform.v1alpha2.ICreateRepositoryRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createRepository(
    request?: protos.google.cloud.dataform.v1alpha2.ICreateRepositoryRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.dataform.v1alpha2.IRepository,
          | protos.google.cloud.dataform.v1alpha2.ICreateRepositoryRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.dataform.v1alpha2.IRepository,
      | protos.google.cloud.dataform.v1alpha2.ICreateRepositoryRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IRepository,
      (
        | protos.google.cloud.dataform.v1alpha2.ICreateRepositoryRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createRepository(request, options, callback);
  }
  /**
   * Updates a single Repository.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.protobuf.FieldMask} [request.updateMask]
   *   Optional. Specifies the fields to be updated in the repository. If left unset,
   *   all fields will be updated.
   * @param {google.cloud.dataform.v1alpha2.Repository} request.repository
   *   Required. The repository to update.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.cloud.dataform.v1alpha2.Repository | Repository}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1alpha2/dataform.update_repository.js</caption>
   * region_tag:dataform_v1alpha2_generated_Dataform_UpdateRepository_async
   */
  updateRepository(
    request?: protos.google.cloud.dataform.v1alpha2.IUpdateRepositoryRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IRepository,
      (
        | protos.google.cloud.dataform.v1alpha2.IUpdateRepositoryRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  updateRepository(
    request: protos.google.cloud.dataform.v1alpha2.IUpdateRepositoryRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.IRepository,
      | protos.google.cloud.dataform.v1alpha2.IUpdateRepositoryRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateRepository(
    request: protos.google.cloud.dataform.v1alpha2.IUpdateRepositoryRequest,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.IRepository,
      | protos.google.cloud.dataform.v1alpha2.IUpdateRepositoryRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateRepository(
    request?: protos.google.cloud.dataform.v1alpha2.IUpdateRepositoryRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.dataform.v1alpha2.IRepository,
          | protos.google.cloud.dataform.v1alpha2.IUpdateRepositoryRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.dataform.v1alpha2.IRepository,
      | protos.google.cloud.dataform.v1alpha2.IUpdateRepositoryRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IRepository,
      (
        | protos.google.cloud.dataform.v1alpha2.IUpdateRepositoryRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'repository.name': request.repository!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateRepository(request, options, callback);
  }
  /**
   * Deletes a single Repository.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The repository's name.
   * @param {boolean} request.force
   *   If set to true, any child resources of this repository will also be
   *   deleted. (Otherwise, the request will only succeed if the repository has no
   *   child resources.)
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.protobuf.Empty | Empty}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1alpha2/dataform.delete_repository.js</caption>
   * region_tag:dataform_v1alpha2_generated_Dataform_DeleteRepository_async
   */
  deleteRepository(
    request?: protos.google.cloud.dataform.v1alpha2.IDeleteRepositoryRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.dataform.v1alpha2.IDeleteRepositoryRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  deleteRepository(
    request: protos.google.cloud.dataform.v1alpha2.IDeleteRepositoryRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.dataform.v1alpha2.IDeleteRepositoryRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteRepository(
    request: protos.google.cloud.dataform.v1alpha2.IDeleteRepositoryRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.dataform.v1alpha2.IDeleteRepositoryRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteRepository(
    request?: protos.google.cloud.dataform.v1alpha2.IDeleteRepositoryRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.cloud.dataform.v1alpha2.IDeleteRepositoryRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.dataform.v1alpha2.IDeleteRepositoryRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.dataform.v1alpha2.IDeleteRepositoryRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deleteRepository(request, options, callback);
  }
  /**
   * Fetches a Repository's remote branches.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The repository's name.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.cloud.dataform.v1alpha2.FetchRemoteBranchesResponse | FetchRemoteBranchesResponse}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1alpha2/dataform.fetch_remote_branches.js</caption>
   * region_tag:dataform_v1alpha2_generated_Dataform_FetchRemoteBranches_async
   */
  fetchRemoteBranches(
    request?: protos.google.cloud.dataform.v1alpha2.IFetchRemoteBranchesRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IFetchRemoteBranchesResponse,
      (
        | protos.google.cloud.dataform.v1alpha2.IFetchRemoteBranchesRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  fetchRemoteBranches(
    request: protos.google.cloud.dataform.v1alpha2.IFetchRemoteBranchesRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.IFetchRemoteBranchesResponse,
      | protos.google.cloud.dataform.v1alpha2.IFetchRemoteBranchesRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  fetchRemoteBranches(
    request: protos.google.cloud.dataform.v1alpha2.IFetchRemoteBranchesRequest,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.IFetchRemoteBranchesResponse,
      | protos.google.cloud.dataform.v1alpha2.IFetchRemoteBranchesRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  fetchRemoteBranches(
    request?: protos.google.cloud.dataform.v1alpha2.IFetchRemoteBranchesRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.dataform.v1alpha2.IFetchRemoteBranchesResponse,
          | protos.google.cloud.dataform.v1alpha2.IFetchRemoteBranchesRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.dataform.v1alpha2.IFetchRemoteBranchesResponse,
      | protos.google.cloud.dataform.v1alpha2.IFetchRemoteBranchesRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IFetchRemoteBranchesResponse,
      (
        | protos.google.cloud.dataform.v1alpha2.IFetchRemoteBranchesRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.fetchRemoteBranches(request, options, callback);
  }
  /**
   * Fetches a single Workspace.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The workspace's name.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.cloud.dataform.v1alpha2.Workspace | Workspace}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1alpha2/dataform.get_workspace.js</caption>
   * region_tag:dataform_v1alpha2_generated_Dataform_GetWorkspace_async
   */
  getWorkspace(
    request?: protos.google.cloud.dataform.v1alpha2.IGetWorkspaceRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IWorkspace,
      protos.google.cloud.dataform.v1alpha2.IGetWorkspaceRequest | undefined,
      {} | undefined
    ]
  >;
  getWorkspace(
    request: protos.google.cloud.dataform.v1alpha2.IGetWorkspaceRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.IWorkspace,
      | protos.google.cloud.dataform.v1alpha2.IGetWorkspaceRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getWorkspace(
    request: protos.google.cloud.dataform.v1alpha2.IGetWorkspaceRequest,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.IWorkspace,
      | protos.google.cloud.dataform.v1alpha2.IGetWorkspaceRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getWorkspace(
    request?: protos.google.cloud.dataform.v1alpha2.IGetWorkspaceRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.dataform.v1alpha2.IWorkspace,
          | protos.google.cloud.dataform.v1alpha2.IGetWorkspaceRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.dataform.v1alpha2.IWorkspace,
      | protos.google.cloud.dataform.v1alpha2.IGetWorkspaceRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IWorkspace,
      protos.google.cloud.dataform.v1alpha2.IGetWorkspaceRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getWorkspace(request, options, callback);
  }
  /**
   * Creates a new Workspace in a given Repository.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The repository in which to create the workspace. Must be in the format
   *   `projects/* /locations/* /repositories/*`.
   * @param {google.cloud.dataform.v1alpha2.Workspace} request.workspace
   *   Required. The workspace to create.
   * @param {string} request.workspaceId
   *   Required. The ID to use for the workspace, which will become the final component of
   *   the workspace's resource name.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.cloud.dataform.v1alpha2.Workspace | Workspace}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1alpha2/dataform.create_workspace.js</caption>
   * region_tag:dataform_v1alpha2_generated_Dataform_CreateWorkspace_async
   */
  createWorkspace(
    request?: protos.google.cloud.dataform.v1alpha2.ICreateWorkspaceRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IWorkspace,
      protos.google.cloud.dataform.v1alpha2.ICreateWorkspaceRequest | undefined,
      {} | undefined
    ]
  >;
  createWorkspace(
    request: protos.google.cloud.dataform.v1alpha2.ICreateWorkspaceRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.IWorkspace,
      | protos.google.cloud.dataform.v1alpha2.ICreateWorkspaceRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createWorkspace(
    request: protos.google.cloud.dataform.v1alpha2.ICreateWorkspaceRequest,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.IWorkspace,
      | protos.google.cloud.dataform.v1alpha2.ICreateWorkspaceRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createWorkspace(
    request?: protos.google.cloud.dataform.v1alpha2.ICreateWorkspaceRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.dataform.v1alpha2.IWorkspace,
          | protos.google.cloud.dataform.v1alpha2.ICreateWorkspaceRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.dataform.v1alpha2.IWorkspace,
      | protos.google.cloud.dataform.v1alpha2.ICreateWorkspaceRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IWorkspace,
      protos.google.cloud.dataform.v1alpha2.ICreateWorkspaceRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createWorkspace(request, options, callback);
  }
  /**
   * Deletes a single Workspace.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The workspace resource's name.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.protobuf.Empty | Empty}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1alpha2/dataform.delete_workspace.js</caption>
   * region_tag:dataform_v1alpha2_generated_Dataform_DeleteWorkspace_async
   */
  deleteWorkspace(
    request?: protos.google.cloud.dataform.v1alpha2.IDeleteWorkspaceRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      protos.google.cloud.dataform.v1alpha2.IDeleteWorkspaceRequest | undefined,
      {} | undefined
    ]
  >;
  deleteWorkspace(
    request: protos.google.cloud.dataform.v1alpha2.IDeleteWorkspaceRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.dataform.v1alpha2.IDeleteWorkspaceRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteWorkspace(
    request: protos.google.cloud.dataform.v1alpha2.IDeleteWorkspaceRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.dataform.v1alpha2.IDeleteWorkspaceRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteWorkspace(
    request?: protos.google.cloud.dataform.v1alpha2.IDeleteWorkspaceRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.cloud.dataform.v1alpha2.IDeleteWorkspaceRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.dataform.v1alpha2.IDeleteWorkspaceRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      protos.google.cloud.dataform.v1alpha2.IDeleteWorkspaceRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deleteWorkspace(request, options, callback);
  }
  /**
   * Installs dependency NPM packages (inside a Workspace).
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.workspace
   *   Required. The workspace's name.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.cloud.dataform.v1alpha2.InstallNpmPackagesResponse | InstallNpmPackagesResponse}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1alpha2/dataform.install_npm_packages.js</caption>
   * region_tag:dataform_v1alpha2_generated_Dataform_InstallNpmPackages_async
   */
  installNpmPackages(
    request?: protos.google.cloud.dataform.v1alpha2.IInstallNpmPackagesRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IInstallNpmPackagesResponse,
      (
        | protos.google.cloud.dataform.v1alpha2.IInstallNpmPackagesRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  installNpmPackages(
    request: protos.google.cloud.dataform.v1alpha2.IInstallNpmPackagesRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.IInstallNpmPackagesResponse,
      | protos.google.cloud.dataform.v1alpha2.IInstallNpmPackagesRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  installNpmPackages(
    request: protos.google.cloud.dataform.v1alpha2.IInstallNpmPackagesRequest,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.IInstallNpmPackagesResponse,
      | protos.google.cloud.dataform.v1alpha2.IInstallNpmPackagesRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  installNpmPackages(
    request?: protos.google.cloud.dataform.v1alpha2.IInstallNpmPackagesRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.dataform.v1alpha2.IInstallNpmPackagesResponse,
          | protos.google.cloud.dataform.v1alpha2.IInstallNpmPackagesRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.dataform.v1alpha2.IInstallNpmPackagesResponse,
      | protos.google.cloud.dataform.v1alpha2.IInstallNpmPackagesRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IInstallNpmPackagesResponse,
      (
        | protos.google.cloud.dataform.v1alpha2.IInstallNpmPackagesRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        workspace: request.workspace ?? '',
      });
    this.initialize();
    return this.innerApiCalls.installNpmPackages(request, options, callback);
  }
  /**
   * Pulls Git commits from the Repository's remote into a Workspace.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The workspace's name.
   * @param {string} [request.remoteBranch]
   *   Optional. The name of the branch in the Git remote from which to pull commits.
   *   If left unset, the repository's default branch name will be used.
   * @param {google.cloud.dataform.v1alpha2.CommitAuthor} request.author
   *   Required. The author of any merge commit which may be created as a result of merging
   *   fetched Git commits into this workspace.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.protobuf.Empty | Empty}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1alpha2/dataform.pull_git_commits.js</caption>
   * region_tag:dataform_v1alpha2_generated_Dataform_PullGitCommits_async
   */
  pullGitCommits(
    request?: protos.google.cloud.dataform.v1alpha2.IPullGitCommitsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      protos.google.cloud.dataform.v1alpha2.IPullGitCommitsRequest | undefined,
      {} | undefined
    ]
  >;
  pullGitCommits(
    request: protos.google.cloud.dataform.v1alpha2.IPullGitCommitsRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.dataform.v1alpha2.IPullGitCommitsRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  pullGitCommits(
    request: protos.google.cloud.dataform.v1alpha2.IPullGitCommitsRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.dataform.v1alpha2.IPullGitCommitsRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  pullGitCommits(
    request?: protos.google.cloud.dataform.v1alpha2.IPullGitCommitsRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.cloud.dataform.v1alpha2.IPullGitCommitsRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.dataform.v1alpha2.IPullGitCommitsRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      protos.google.cloud.dataform.v1alpha2.IPullGitCommitsRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.pullGitCommits(request, options, callback);
  }
  /**
   * Pushes Git commits from a Workspace to the Repository's remote.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The workspace's name.
   * @param {string} [request.remoteBranch]
   *   Optional. The name of the branch in the Git remote to which commits should be pushed.
   *   If left unset, the repository's default branch name will be used.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.protobuf.Empty | Empty}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1alpha2/dataform.push_git_commits.js</caption>
   * region_tag:dataform_v1alpha2_generated_Dataform_PushGitCommits_async
   */
  pushGitCommits(
    request?: protos.google.cloud.dataform.v1alpha2.IPushGitCommitsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      protos.google.cloud.dataform.v1alpha2.IPushGitCommitsRequest | undefined,
      {} | undefined
    ]
  >;
  pushGitCommits(
    request: protos.google.cloud.dataform.v1alpha2.IPushGitCommitsRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.dataform.v1alpha2.IPushGitCommitsRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  pushGitCommits(
    request: protos.google.cloud.dataform.v1alpha2.IPushGitCommitsRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.dataform.v1alpha2.IPushGitCommitsRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  pushGitCommits(
    request?: protos.google.cloud.dataform.v1alpha2.IPushGitCommitsRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.cloud.dataform.v1alpha2.IPushGitCommitsRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.dataform.v1alpha2.IPushGitCommitsRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      protos.google.cloud.dataform.v1alpha2.IPushGitCommitsRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.pushGitCommits(request, options, callback);
  }
  /**
   * Fetches Git statuses for the files in a Workspace.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The workspace's name.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.cloud.dataform.v1alpha2.FetchFileGitStatusesResponse | FetchFileGitStatusesResponse}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1alpha2/dataform.fetch_file_git_statuses.js</caption>
   * region_tag:dataform_v1alpha2_generated_Dataform_FetchFileGitStatuses_async
   */
  fetchFileGitStatuses(
    request?: protos.google.cloud.dataform.v1alpha2.IFetchFileGitStatusesRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IFetchFileGitStatusesResponse,
      (
        | protos.google.cloud.dataform.v1alpha2.IFetchFileGitStatusesRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  fetchFileGitStatuses(
    request: protos.google.cloud.dataform.v1alpha2.IFetchFileGitStatusesRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.IFetchFileGitStatusesResponse,
      | protos.google.cloud.dataform.v1alpha2.IFetchFileGitStatusesRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  fetchFileGitStatuses(
    request: protos.google.cloud.dataform.v1alpha2.IFetchFileGitStatusesRequest,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.IFetchFileGitStatusesResponse,
      | protos.google.cloud.dataform.v1alpha2.IFetchFileGitStatusesRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  fetchFileGitStatuses(
    request?: protos.google.cloud.dataform.v1alpha2.IFetchFileGitStatusesRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.dataform.v1alpha2.IFetchFileGitStatusesResponse,
          | protos.google.cloud.dataform.v1alpha2.IFetchFileGitStatusesRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.dataform.v1alpha2.IFetchFileGitStatusesResponse,
      | protos.google.cloud.dataform.v1alpha2.IFetchFileGitStatusesRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IFetchFileGitStatusesResponse,
      (
        | protos.google.cloud.dataform.v1alpha2.IFetchFileGitStatusesRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.fetchFileGitStatuses(request, options, callback);
  }
  /**
   * Fetches Git ahead/behind against a remote branch.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The workspace's name.
   * @param {string} [request.remoteBranch]
   *   Optional. The name of the branch in the Git remote against which this workspace
   *   should be compared. If left unset, the repository's default branch name
   *   will be used.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.cloud.dataform.v1alpha2.FetchGitAheadBehindResponse | FetchGitAheadBehindResponse}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1alpha2/dataform.fetch_git_ahead_behind.js</caption>
   * region_tag:dataform_v1alpha2_generated_Dataform_FetchGitAheadBehind_async
   */
  fetchGitAheadBehind(
    request?: protos.google.cloud.dataform.v1alpha2.IFetchGitAheadBehindRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IFetchGitAheadBehindResponse,
      (
        | protos.google.cloud.dataform.v1alpha2.IFetchGitAheadBehindRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  fetchGitAheadBehind(
    request: protos.google.cloud.dataform.v1alpha2.IFetchGitAheadBehindRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.IFetchGitAheadBehindResponse,
      | protos.google.cloud.dataform.v1alpha2.IFetchGitAheadBehindRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  fetchGitAheadBehind(
    request: protos.google.cloud.dataform.v1alpha2.IFetchGitAheadBehindRequest,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.IFetchGitAheadBehindResponse,
      | protos.google.cloud.dataform.v1alpha2.IFetchGitAheadBehindRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  fetchGitAheadBehind(
    request?: protos.google.cloud.dataform.v1alpha2.IFetchGitAheadBehindRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.dataform.v1alpha2.IFetchGitAheadBehindResponse,
          | protos.google.cloud.dataform.v1alpha2.IFetchGitAheadBehindRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.dataform.v1alpha2.IFetchGitAheadBehindResponse,
      | protos.google.cloud.dataform.v1alpha2.IFetchGitAheadBehindRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IFetchGitAheadBehindResponse,
      (
        | protos.google.cloud.dataform.v1alpha2.IFetchGitAheadBehindRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.fetchGitAheadBehind(request, options, callback);
  }
  /**
   * Applies a Git commit for uncommitted files in a Workspace.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The workspace's name.
   * @param {google.cloud.dataform.v1alpha2.CommitAuthor} request.author
   *   Required. The commit's author.
   * @param {string} [request.commitMessage]
   *   Optional. The commit's message.
   * @param {string[]} [request.paths]
   *   Optional. Full file paths to commit including filename, rooted at workspace root. If
   *   left empty, all files will be committed.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.protobuf.Empty | Empty}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1alpha2/dataform.commit_workspace_changes.js</caption>
   * region_tag:dataform_v1alpha2_generated_Dataform_CommitWorkspaceChanges_async
   */
  commitWorkspaceChanges(
    request?: protos.google.cloud.dataform.v1alpha2.ICommitWorkspaceChangesRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.dataform.v1alpha2.ICommitWorkspaceChangesRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  commitWorkspaceChanges(
    request: protos.google.cloud.dataform.v1alpha2.ICommitWorkspaceChangesRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.dataform.v1alpha2.ICommitWorkspaceChangesRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  commitWorkspaceChanges(
    request: protos.google.cloud.dataform.v1alpha2.ICommitWorkspaceChangesRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.dataform.v1alpha2.ICommitWorkspaceChangesRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  commitWorkspaceChanges(
    request?: protos.google.cloud.dataform.v1alpha2.ICommitWorkspaceChangesRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.cloud.dataform.v1alpha2.ICommitWorkspaceChangesRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.dataform.v1alpha2.ICommitWorkspaceChangesRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.dataform.v1alpha2.ICommitWorkspaceChangesRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.commitWorkspaceChanges(
      request,
      options,
      callback
    );
  }
  /**
   * Performs a Git reset for uncommitted files in a Workspace.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The workspace's name.
   * @param {string[]} [request.paths]
   *   Optional. Full file paths to reset back to their committed state including filename,
   *   rooted at workspace root. If left empty, all files will be reset.
   * @param {boolean} [request.clean]
   *   Optional. If set to true, untracked files will be deleted.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.protobuf.Empty | Empty}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1alpha2/dataform.reset_workspace_changes.js</caption>
   * region_tag:dataform_v1alpha2_generated_Dataform_ResetWorkspaceChanges_async
   */
  resetWorkspaceChanges(
    request?: protos.google.cloud.dataform.v1alpha2.IResetWorkspaceChangesRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.dataform.v1alpha2.IResetWorkspaceChangesRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  resetWorkspaceChanges(
    request: protos.google.cloud.dataform.v1alpha2.IResetWorkspaceChangesRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.dataform.v1alpha2.IResetWorkspaceChangesRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  resetWorkspaceChanges(
    request: protos.google.cloud.dataform.v1alpha2.IResetWorkspaceChangesRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.dataform.v1alpha2.IResetWorkspaceChangesRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  resetWorkspaceChanges(
    request?: protos.google.cloud.dataform.v1alpha2.IResetWorkspaceChangesRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.cloud.dataform.v1alpha2.IResetWorkspaceChangesRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.dataform.v1alpha2.IResetWorkspaceChangesRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.dataform.v1alpha2.IResetWorkspaceChangesRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.resetWorkspaceChanges(request, options, callback);
  }
  /**
   * Fetches Git diff for an uncommitted file in a Workspace.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.workspace
   *   Required. The workspace's name.
   * @param {string} request.path
   *   Required. The file's full path including filename, relative to the workspace root.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.cloud.dataform.v1alpha2.FetchFileDiffResponse | FetchFileDiffResponse}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1alpha2/dataform.fetch_file_diff.js</caption>
   * region_tag:dataform_v1alpha2_generated_Dataform_FetchFileDiff_async
   */
  fetchFileDiff(
    request?: protos.google.cloud.dataform.v1alpha2.IFetchFileDiffRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IFetchFileDiffResponse,
      protos.google.cloud.dataform.v1alpha2.IFetchFileDiffRequest | undefined,
      {} | undefined
    ]
  >;
  fetchFileDiff(
    request: protos.google.cloud.dataform.v1alpha2.IFetchFileDiffRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.IFetchFileDiffResponse,
      | protos.google.cloud.dataform.v1alpha2.IFetchFileDiffRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  fetchFileDiff(
    request: protos.google.cloud.dataform.v1alpha2.IFetchFileDiffRequest,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.IFetchFileDiffResponse,
      | protos.google.cloud.dataform.v1alpha2.IFetchFileDiffRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  fetchFileDiff(
    request?: protos.google.cloud.dataform.v1alpha2.IFetchFileDiffRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.dataform.v1alpha2.IFetchFileDiffResponse,
          | protos.google.cloud.dataform.v1alpha2.IFetchFileDiffRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.dataform.v1alpha2.IFetchFileDiffResponse,
      | protos.google.cloud.dataform.v1alpha2.IFetchFileDiffRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IFetchFileDiffResponse,
      protos.google.cloud.dataform.v1alpha2.IFetchFileDiffRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        workspace: request.workspace ?? '',
      });
    this.initialize();
    return this.innerApiCalls.fetchFileDiff(request, options, callback);
  }
  /**
   * Creates a directory inside a Workspace.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.workspace
   *   Required. The workspace's name.
   * @param {string} request.path
   *   Required. The directory's full path including directory name, relative to the
   *   workspace root.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.cloud.dataform.v1alpha2.MakeDirectoryResponse | MakeDirectoryResponse}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1alpha2/dataform.make_directory.js</caption>
   * region_tag:dataform_v1alpha2_generated_Dataform_MakeDirectory_async
   */
  makeDirectory(
    request?: protos.google.cloud.dataform.v1alpha2.IMakeDirectoryRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IMakeDirectoryResponse,
      protos.google.cloud.dataform.v1alpha2.IMakeDirectoryRequest | undefined,
      {} | undefined
    ]
  >;
  makeDirectory(
    request: protos.google.cloud.dataform.v1alpha2.IMakeDirectoryRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.IMakeDirectoryResponse,
      | protos.google.cloud.dataform.v1alpha2.IMakeDirectoryRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  makeDirectory(
    request: protos.google.cloud.dataform.v1alpha2.IMakeDirectoryRequest,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.IMakeDirectoryResponse,
      | protos.google.cloud.dataform.v1alpha2.IMakeDirectoryRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  makeDirectory(
    request?: protos.google.cloud.dataform.v1alpha2.IMakeDirectoryRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.dataform.v1alpha2.IMakeDirectoryResponse,
          | protos.google.cloud.dataform.v1alpha2.IMakeDirectoryRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.dataform.v1alpha2.IMakeDirectoryResponse,
      | protos.google.cloud.dataform.v1alpha2.IMakeDirectoryRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IMakeDirectoryResponse,
      protos.google.cloud.dataform.v1alpha2.IMakeDirectoryRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        workspace: request.workspace ?? '',
      });
    this.initialize();
    return this.innerApiCalls.makeDirectory(request, options, callback);
  }
  /**
   * Deletes a directory (inside a Workspace) and all of its contents.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.workspace
   *   Required. The workspace's name.
   * @param {string} request.path
   *   Required. The directory's full path including directory name, relative to the
   *   workspace root.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.protobuf.Empty | Empty}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1alpha2/dataform.remove_directory.js</caption>
   * region_tag:dataform_v1alpha2_generated_Dataform_RemoveDirectory_async
   */
  removeDirectory(
    request?: protos.google.cloud.dataform.v1alpha2.IRemoveDirectoryRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      protos.google.cloud.dataform.v1alpha2.IRemoveDirectoryRequest | undefined,
      {} | undefined
    ]
  >;
  removeDirectory(
    request: protos.google.cloud.dataform.v1alpha2.IRemoveDirectoryRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.dataform.v1alpha2.IRemoveDirectoryRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  removeDirectory(
    request: protos.google.cloud.dataform.v1alpha2.IRemoveDirectoryRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.dataform.v1alpha2.IRemoveDirectoryRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  removeDirectory(
    request?: protos.google.cloud.dataform.v1alpha2.IRemoveDirectoryRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.cloud.dataform.v1alpha2.IRemoveDirectoryRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.dataform.v1alpha2.IRemoveDirectoryRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      protos.google.cloud.dataform.v1alpha2.IRemoveDirectoryRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        workspace: request.workspace ?? '',
      });
    this.initialize();
    return this.innerApiCalls.removeDirectory(request, options, callback);
  }
  /**
   * Moves a directory (inside a Workspace), and all of its contents, to a new
   * location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.workspace
   *   Required. The workspace's name.
   * @param {string} request.path
   *   Required. The directory's full path including directory name, relative to the
   *   workspace root.
   * @param {string} request.newPath
   *   Required. The new path for the directory including directory name, rooted at
   *   workspace root.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.cloud.dataform.v1alpha2.MoveDirectoryResponse | MoveDirectoryResponse}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1alpha2/dataform.move_directory.js</caption>
   * region_tag:dataform_v1alpha2_generated_Dataform_MoveDirectory_async
   */
  moveDirectory(
    request?: protos.google.cloud.dataform.v1alpha2.IMoveDirectoryRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IMoveDirectoryResponse,
      protos.google.cloud.dataform.v1alpha2.IMoveDirectoryRequest | undefined,
      {} | undefined
    ]
  >;
  moveDirectory(
    request: protos.google.cloud.dataform.v1alpha2.IMoveDirectoryRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.IMoveDirectoryResponse,
      | protos.google.cloud.dataform.v1alpha2.IMoveDirectoryRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  moveDirectory(
    request: protos.google.cloud.dataform.v1alpha2.IMoveDirectoryRequest,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.IMoveDirectoryResponse,
      | protos.google.cloud.dataform.v1alpha2.IMoveDirectoryRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  moveDirectory(
    request?: protos.google.cloud.dataform.v1alpha2.IMoveDirectoryRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.dataform.v1alpha2.IMoveDirectoryResponse,
          | protos.google.cloud.dataform.v1alpha2.IMoveDirectoryRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.dataform.v1alpha2.IMoveDirectoryResponse,
      | protos.google.cloud.dataform.v1alpha2.IMoveDirectoryRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IMoveDirectoryResponse,
      protos.google.cloud.dataform.v1alpha2.IMoveDirectoryRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        workspace: request.workspace ?? '',
      });
    this.initialize();
    return this.innerApiCalls.moveDirectory(request, options, callback);
  }
  /**
   * Returns the contents of a file (inside a Workspace).
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.workspace
   *   Required. The workspace's name.
   * @param {string} request.path
   *   Required. The file's full path including filename, relative to the workspace root.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.cloud.dataform.v1alpha2.ReadFileResponse | ReadFileResponse}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1alpha2/dataform.read_file.js</caption>
   * region_tag:dataform_v1alpha2_generated_Dataform_ReadFile_async
   */
  readFile(
    request?: protos.google.cloud.dataform.v1alpha2.IReadFileRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IReadFileResponse,
      protos.google.cloud.dataform.v1alpha2.IReadFileRequest | undefined,
      {} | undefined
    ]
  >;
  readFile(
    request: protos.google.cloud.dataform.v1alpha2.IReadFileRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.IReadFileResponse,
      protos.google.cloud.dataform.v1alpha2.IReadFileRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  readFile(
    request: protos.google.cloud.dataform.v1alpha2.IReadFileRequest,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.IReadFileResponse,
      protos.google.cloud.dataform.v1alpha2.IReadFileRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  readFile(
    request?: protos.google.cloud.dataform.v1alpha2.IReadFileRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.dataform.v1alpha2.IReadFileResponse,
          | protos.google.cloud.dataform.v1alpha2.IReadFileRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.dataform.v1alpha2.IReadFileResponse,
      protos.google.cloud.dataform.v1alpha2.IReadFileRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IReadFileResponse,
      protos.google.cloud.dataform.v1alpha2.IReadFileRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        workspace: request.workspace ?? '',
      });
    this.initialize();
    return this.innerApiCalls.readFile(request, options, callback);
  }
  /**
   * Deletes a file (inside a Workspace).
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.workspace
   *   Required. The workspace's name.
   * @param {string} request.path
   *   Required. The file's full path including filename, relative to the workspace root.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.protobuf.Empty | Empty}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1alpha2/dataform.remove_file.js</caption>
   * region_tag:dataform_v1alpha2_generated_Dataform_RemoveFile_async
   */
  removeFile(
    request?: protos.google.cloud.dataform.v1alpha2.IRemoveFileRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      protos.google.cloud.dataform.v1alpha2.IRemoveFileRequest | undefined,
      {} | undefined
    ]
  >;
  removeFile(
    request: protos.google.cloud.dataform.v1alpha2.IRemoveFileRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.dataform.v1alpha2.IRemoveFileRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  removeFile(
    request: protos.google.cloud.dataform.v1alpha2.IRemoveFileRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.dataform.v1alpha2.IRemoveFileRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  removeFile(
    request?: protos.google.cloud.dataform.v1alpha2.IRemoveFileRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.cloud.dataform.v1alpha2.IRemoveFileRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.dataform.v1alpha2.IRemoveFileRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      protos.google.cloud.dataform.v1alpha2.IRemoveFileRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        workspace: request.workspace ?? '',
      });
    this.initialize();
    return this.innerApiCalls.removeFile(request, options, callback);
  }
  /**
   * Moves a file (inside a Workspace) to a new location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.workspace
   *   Required. The workspace's name.
   * @param {string} request.path
   *   Required. The file's full path including filename, relative to the workspace root.
   * @param {string} request.newPath
   *   Required. The file's new path including filename, relative to the workspace root.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.cloud.dataform.v1alpha2.MoveFileResponse | MoveFileResponse}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1alpha2/dataform.move_file.js</caption>
   * region_tag:dataform_v1alpha2_generated_Dataform_MoveFile_async
   */
  moveFile(
    request?: protos.google.cloud.dataform.v1alpha2.IMoveFileRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IMoveFileResponse,
      protos.google.cloud.dataform.v1alpha2.IMoveFileRequest | undefined,
      {} | undefined
    ]
  >;
  moveFile(
    request: protos.google.cloud.dataform.v1alpha2.IMoveFileRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.IMoveFileResponse,
      protos.google.cloud.dataform.v1alpha2.IMoveFileRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  moveFile(
    request: protos.google.cloud.dataform.v1alpha2.IMoveFileRequest,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.IMoveFileResponse,
      protos.google.cloud.dataform.v1alpha2.IMoveFileRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  moveFile(
    request?: protos.google.cloud.dataform.v1alpha2.IMoveFileRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.dataform.v1alpha2.IMoveFileResponse,
          | protos.google.cloud.dataform.v1alpha2.IMoveFileRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.dataform.v1alpha2.IMoveFileResponse,
      protos.google.cloud.dataform.v1alpha2.IMoveFileRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IMoveFileResponse,
      protos.google.cloud.dataform.v1alpha2.IMoveFileRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        workspace: request.workspace ?? '',
      });
    this.initialize();
    return this.innerApiCalls.moveFile(request, options, callback);
  }
  /**
   * Writes to a file (inside a Workspace).
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.workspace
   *   Required. The workspace's name.
   * @param {string} request.path
   *   Required. The file.
   * @param {Buffer} request.contents
   *   Required. The file's contents.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.cloud.dataform.v1alpha2.WriteFileResponse | WriteFileResponse}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1alpha2/dataform.write_file.js</caption>
   * region_tag:dataform_v1alpha2_generated_Dataform_WriteFile_async
   */
  writeFile(
    request?: protos.google.cloud.dataform.v1alpha2.IWriteFileRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IWriteFileResponse,
      protos.google.cloud.dataform.v1alpha2.IWriteFileRequest | undefined,
      {} | undefined
    ]
  >;
  writeFile(
    request: protos.google.cloud.dataform.v1alpha2.IWriteFileRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.IWriteFileResponse,
      | protos.google.cloud.dataform.v1alpha2.IWriteFileRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  writeFile(
    request: protos.google.cloud.dataform.v1alpha2.IWriteFileRequest,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.IWriteFileResponse,
      | protos.google.cloud.dataform.v1alpha2.IWriteFileRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  writeFile(
    request?: protos.google.cloud.dataform.v1alpha2.IWriteFileRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.dataform.v1alpha2.IWriteFileResponse,
          | protos.google.cloud.dataform.v1alpha2.IWriteFileRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.dataform.v1alpha2.IWriteFileResponse,
      | protos.google.cloud.dataform.v1alpha2.IWriteFileRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IWriteFileResponse,
      protos.google.cloud.dataform.v1alpha2.IWriteFileRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        workspace: request.workspace ?? '',
      });
    this.initialize();
    return this.innerApiCalls.writeFile(request, options, callback);
  }
  /**
   * Fetches a single CompilationResult.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The compilation result's name.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.cloud.dataform.v1alpha2.CompilationResult | CompilationResult}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1alpha2/dataform.get_compilation_result.js</caption>
   * region_tag:dataform_v1alpha2_generated_Dataform_GetCompilationResult_async
   */
  getCompilationResult(
    request?: protos.google.cloud.dataform.v1alpha2.IGetCompilationResultRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.ICompilationResult,
      (
        | protos.google.cloud.dataform.v1alpha2.IGetCompilationResultRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  getCompilationResult(
    request: protos.google.cloud.dataform.v1alpha2.IGetCompilationResultRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.ICompilationResult,
      | protos.google.cloud.dataform.v1alpha2.IGetCompilationResultRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getCompilationResult(
    request: protos.google.cloud.dataform.v1alpha2.IGetCompilationResultRequest,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.ICompilationResult,
      | protos.google.cloud.dataform.v1alpha2.IGetCompilationResultRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getCompilationResult(
    request?: protos.google.cloud.dataform.v1alpha2.IGetCompilationResultRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.dataform.v1alpha2.ICompilationResult,
          | protos.google.cloud.dataform.v1alpha2.IGetCompilationResultRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.dataform.v1alpha2.ICompilationResult,
      | protos.google.cloud.dataform.v1alpha2.IGetCompilationResultRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.ICompilationResult,
      (
        | protos.google.cloud.dataform.v1alpha2.IGetCompilationResultRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getCompilationResult(request, options, callback);
  }
  /**
   * Creates a new CompilationResult in a given project and location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The repository in which to create the compilation result. Must be in the
   *   format `projects/* /locations/* /repositories/*`.
   * @param {google.cloud.dataform.v1alpha2.CompilationResult} request.compilationResult
   *   Required. The compilation result to create.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.cloud.dataform.v1alpha2.CompilationResult | CompilationResult}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1alpha2/dataform.create_compilation_result.js</caption>
   * region_tag:dataform_v1alpha2_generated_Dataform_CreateCompilationResult_async
   */
  createCompilationResult(
    request?: protos.google.cloud.dataform.v1alpha2.ICreateCompilationResultRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.ICompilationResult,
      (
        | protos.google.cloud.dataform.v1alpha2.ICreateCompilationResultRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  createCompilationResult(
    request: protos.google.cloud.dataform.v1alpha2.ICreateCompilationResultRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.ICompilationResult,
      | protos.google.cloud.dataform.v1alpha2.ICreateCompilationResultRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createCompilationResult(
    request: protos.google.cloud.dataform.v1alpha2.ICreateCompilationResultRequest,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.ICompilationResult,
      | protos.google.cloud.dataform.v1alpha2.ICreateCompilationResultRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createCompilationResult(
    request?: protos.google.cloud.dataform.v1alpha2.ICreateCompilationResultRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.dataform.v1alpha2.ICompilationResult,
          | protos.google.cloud.dataform.v1alpha2.ICreateCompilationResultRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.dataform.v1alpha2.ICompilationResult,
      | protos.google.cloud.dataform.v1alpha2.ICreateCompilationResultRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.ICompilationResult,
      (
        | protos.google.cloud.dataform.v1alpha2.ICreateCompilationResultRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createCompilationResult(
      request,
      options,
      callback
    );
  }
  /**
   * Fetches a single WorkflowInvocation.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The workflow invocation resource's name.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.cloud.dataform.v1alpha2.WorkflowInvocation | WorkflowInvocation}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1alpha2/dataform.get_workflow_invocation.js</caption>
   * region_tag:dataform_v1alpha2_generated_Dataform_GetWorkflowInvocation_async
   */
  getWorkflowInvocation(
    request?: protos.google.cloud.dataform.v1alpha2.IGetWorkflowInvocationRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IWorkflowInvocation,
      (
        | protos.google.cloud.dataform.v1alpha2.IGetWorkflowInvocationRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  getWorkflowInvocation(
    request: protos.google.cloud.dataform.v1alpha2.IGetWorkflowInvocationRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.IWorkflowInvocation,
      | protos.google.cloud.dataform.v1alpha2.IGetWorkflowInvocationRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getWorkflowInvocation(
    request: protos.google.cloud.dataform.v1alpha2.IGetWorkflowInvocationRequest,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.IWorkflowInvocation,
      | protos.google.cloud.dataform.v1alpha2.IGetWorkflowInvocationRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getWorkflowInvocation(
    request?: protos.google.cloud.dataform.v1alpha2.IGetWorkflowInvocationRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.dataform.v1alpha2.IWorkflowInvocation,
          | protos.google.cloud.dataform.v1alpha2.IGetWorkflowInvocationRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.dataform.v1alpha2.IWorkflowInvocation,
      | protos.google.cloud.dataform.v1alpha2.IGetWorkflowInvocationRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IWorkflowInvocation,
      (
        | protos.google.cloud.dataform.v1alpha2.IGetWorkflowInvocationRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getWorkflowInvocation(request, options, callback);
  }
  /**
   * Creates a new WorkflowInvocation in a given Repository.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent resource of the WorkflowInvocation type.
   * @param {google.cloud.dataform.v1alpha2.WorkflowInvocation} request.workflowInvocation
   *   Required. The workflow invocation resource to create.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.cloud.dataform.v1alpha2.WorkflowInvocation | WorkflowInvocation}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1alpha2/dataform.create_workflow_invocation.js</caption>
   * region_tag:dataform_v1alpha2_generated_Dataform_CreateWorkflowInvocation_async
   */
  createWorkflowInvocation(
    request?: protos.google.cloud.dataform.v1alpha2.ICreateWorkflowInvocationRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IWorkflowInvocation,
      (
        | protos.google.cloud.dataform.v1alpha2.ICreateWorkflowInvocationRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  createWorkflowInvocation(
    request: protos.google.cloud.dataform.v1alpha2.ICreateWorkflowInvocationRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.IWorkflowInvocation,
      | protos.google.cloud.dataform.v1alpha2.ICreateWorkflowInvocationRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createWorkflowInvocation(
    request: protos.google.cloud.dataform.v1alpha2.ICreateWorkflowInvocationRequest,
    callback: Callback<
      protos.google.cloud.dataform.v1alpha2.IWorkflowInvocation,
      | protos.google.cloud.dataform.v1alpha2.ICreateWorkflowInvocationRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createWorkflowInvocation(
    request?: protos.google.cloud.dataform.v1alpha2.ICreateWorkflowInvocationRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.dataform.v1alpha2.IWorkflowInvocation,
          | protos.google.cloud.dataform.v1alpha2.ICreateWorkflowInvocationRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.dataform.v1alpha2.IWorkflowInvocation,
      | protos.google.cloud.dataform.v1alpha2.ICreateWorkflowInvocationRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IWorkflowInvocation,
      (
        | protos.google.cloud.dataform.v1alpha2.ICreateWorkflowInvocationRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createWorkflowInvocation(
      request,
      options,
      callback
    );
  }
  /**
   * Deletes a single WorkflowInvocation.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The workflow invocation resource's name.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.protobuf.Empty | Empty}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1alpha2/dataform.delete_workflow_invocation.js</caption>
   * region_tag:dataform_v1alpha2_generated_Dataform_DeleteWorkflowInvocation_async
   */
  deleteWorkflowInvocation(
    request?: protos.google.cloud.dataform.v1alpha2.IDeleteWorkflowInvocationRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.dataform.v1alpha2.IDeleteWorkflowInvocationRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  deleteWorkflowInvocation(
    request: protos.google.cloud.dataform.v1alpha2.IDeleteWorkflowInvocationRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.dataform.v1alpha2.IDeleteWorkflowInvocationRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteWorkflowInvocation(
    request: protos.google.cloud.dataform.v1alpha2.IDeleteWorkflowInvocationRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.dataform.v1alpha2.IDeleteWorkflowInvocationRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteWorkflowInvocation(
    request?: protos.google.cloud.dataform.v1alpha2.IDeleteWorkflowInvocationRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.cloud.dataform.v1alpha2.IDeleteWorkflowInvocationRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.dataform.v1alpha2.IDeleteWorkflowInvocationRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.dataform.v1alpha2.IDeleteWorkflowInvocationRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deleteWorkflowInvocation(
      request,
      options,
      callback
    );
  }
  /**
   * Requests cancellation of a running WorkflowInvocation.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The workflow invocation resource's name.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.protobuf.Empty | Empty}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1alpha2/dataform.cancel_workflow_invocation.js</caption>
   * region_tag:dataform_v1alpha2_generated_Dataform_CancelWorkflowInvocation_async
   */
  cancelWorkflowInvocation(
    request?: protos.google.cloud.dataform.v1alpha2.ICancelWorkflowInvocationRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.dataform.v1alpha2.ICancelWorkflowInvocationRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  cancelWorkflowInvocation(
    request: protos.google.cloud.dataform.v1alpha2.ICancelWorkflowInvocationRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.dataform.v1alpha2.ICancelWorkflowInvocationRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  cancelWorkflowInvocation(
    request: protos.google.cloud.dataform.v1alpha2.ICancelWorkflowInvocationRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.dataform.v1alpha2.ICancelWorkflowInvocationRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  cancelWorkflowInvocation(
    request?: protos.google.cloud.dataform.v1alpha2.ICancelWorkflowInvocationRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.cloud.dataform.v1alpha2.ICancelWorkflowInvocationRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.dataform.v1alpha2.ICancelWorkflowInvocationRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.dataform.v1alpha2.ICancelWorkflowInvocationRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.cancelWorkflowInvocation(
      request,
      options,
      callback
    );
  }

  /**
   * Lists Repositories in a given project and location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The location in which to list repositories. Must be in the format
   *   `projects/* /locations/*`.
   * @param {number} [request.pageSize]
   *   Optional. Maximum number of repositories to return. The server may return fewer
   *   items than requested. If unspecified, the server will pick an appropriate
   *   default.
   * @param {string} [request.pageToken]
   *   Optional. Page token received from a previous `ListRepositories` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to `ListRepositories`
   *   must match the call that provided the page token.
   * @param {string} [request.orderBy]
   *   Optional. This field only supports ordering by `name`. If unspecified, the server
   *   will choose the ordering. If specified, the default order is ascending for
   *   the `name` field.
   * @param {string} [request.filter]
   *   Optional. Filter for the returned list.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link google.cloud.dataform.v1alpha2.Repository | Repository}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listRepositoriesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listRepositories(
    request?: protos.google.cloud.dataform.v1alpha2.IListRepositoriesRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IRepository[],
      protos.google.cloud.dataform.v1alpha2.IListRepositoriesRequest | null,
      protos.google.cloud.dataform.v1alpha2.IListRepositoriesResponse
    ]
  >;
  listRepositories(
    request: protos.google.cloud.dataform.v1alpha2.IListRepositoriesRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.dataform.v1alpha2.IListRepositoriesRequest,
      | protos.google.cloud.dataform.v1alpha2.IListRepositoriesResponse
      | null
      | undefined,
      protos.google.cloud.dataform.v1alpha2.IRepository
    >
  ): void;
  listRepositories(
    request: protos.google.cloud.dataform.v1alpha2.IListRepositoriesRequest,
    callback: PaginationCallback<
      protos.google.cloud.dataform.v1alpha2.IListRepositoriesRequest,
      | protos.google.cloud.dataform.v1alpha2.IListRepositoriesResponse
      | null
      | undefined,
      protos.google.cloud.dataform.v1alpha2.IRepository
    >
  ): void;
  listRepositories(
    request?: protos.google.cloud.dataform.v1alpha2.IListRepositoriesRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.dataform.v1alpha2.IListRepositoriesRequest,
          | protos.google.cloud.dataform.v1alpha2.IListRepositoriesResponse
          | null
          | undefined,
          protos.google.cloud.dataform.v1alpha2.IRepository
        >,
    callback?: PaginationCallback<
      protos.google.cloud.dataform.v1alpha2.IListRepositoriesRequest,
      | protos.google.cloud.dataform.v1alpha2.IListRepositoriesResponse
      | null
      | undefined,
      protos.google.cloud.dataform.v1alpha2.IRepository
    >
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IRepository[],
      protos.google.cloud.dataform.v1alpha2.IListRepositoriesRequest | null,
      protos.google.cloud.dataform.v1alpha2.IListRepositoriesResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listRepositories(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The location in which to list repositories. Must be in the format
   *   `projects/* /locations/*`.
   * @param {number} [request.pageSize]
   *   Optional. Maximum number of repositories to return. The server may return fewer
   *   items than requested. If unspecified, the server will pick an appropriate
   *   default.
   * @param {string} [request.pageToken]
   *   Optional. Page token received from a previous `ListRepositories` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to `ListRepositories`
   *   must match the call that provided the page token.
   * @param {string} [request.orderBy]
   *   Optional. This field only supports ordering by `name`. If unspecified, the server
   *   will choose the ordering. If specified, the default order is ascending for
   *   the `name` field.
   * @param {string} [request.filter]
   *   Optional. Filter for the returned list.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link google.cloud.dataform.v1alpha2.Repository | Repository} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listRepositoriesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listRepositoriesStream(
    request?: protos.google.cloud.dataform.v1alpha2.IListRepositoriesRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listRepositories'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listRepositories.createStream(
      this.innerApiCalls.listRepositories as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listRepositories`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The location in which to list repositories. Must be in the format
   *   `projects/* /locations/*`.
   * @param {number} [request.pageSize]
   *   Optional. Maximum number of repositories to return. The server may return fewer
   *   items than requested. If unspecified, the server will pick an appropriate
   *   default.
   * @param {string} [request.pageToken]
   *   Optional. Page token received from a previous `ListRepositories` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to `ListRepositories`
   *   must match the call that provided the page token.
   * @param {string} [request.orderBy]
   *   Optional. This field only supports ordering by `name`. If unspecified, the server
   *   will choose the ordering. If specified, the default order is ascending for
   *   the `name` field.
   * @param {string} [request.filter]
   *   Optional. Filter for the returned list.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link google.cloud.dataform.v1alpha2.Repository | Repository}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1alpha2/dataform.list_repositories.js</caption>
   * region_tag:dataform_v1alpha2_generated_Dataform_ListRepositories_async
   */
  listRepositoriesAsync(
    request?: protos.google.cloud.dataform.v1alpha2.IListRepositoriesRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.dataform.v1alpha2.IRepository> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listRepositories'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listRepositories.asyncIterate(
      this.innerApiCalls['listRepositories'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.dataform.v1alpha2.IRepository>;
  }
  /**
   * Lists Workspaces in a given Repository.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The repository in which to list workspaces. Must be in the
   *   format `projects/* /locations/* /repositories/*`.
   * @param {number} [request.pageSize]
   *   Optional. Maximum number of workspaces to return. The server may return fewer
   *   items than requested. If unspecified, the server will pick an appropriate
   *   default.
   * @param {string} [request.pageToken]
   *   Optional. Page token received from a previous `ListWorkspaces` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to `ListWorkspaces`
   *   must match the call that provided the page token.
   * @param {string} [request.orderBy]
   *   Optional. This field only supports ordering by `name`. If unspecified, the server
   *   will choose the ordering. If specified, the default order is ascending for
   *   the `name` field.
   * @param {string} [request.filter]
   *   Optional. Filter for the returned list.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link google.cloud.dataform.v1alpha2.Workspace | Workspace}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listWorkspacesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listWorkspaces(
    request?: protos.google.cloud.dataform.v1alpha2.IListWorkspacesRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IWorkspace[],
      protos.google.cloud.dataform.v1alpha2.IListWorkspacesRequest | null,
      protos.google.cloud.dataform.v1alpha2.IListWorkspacesResponse
    ]
  >;
  listWorkspaces(
    request: protos.google.cloud.dataform.v1alpha2.IListWorkspacesRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.dataform.v1alpha2.IListWorkspacesRequest,
      | protos.google.cloud.dataform.v1alpha2.IListWorkspacesResponse
      | null
      | undefined,
      protos.google.cloud.dataform.v1alpha2.IWorkspace
    >
  ): void;
  listWorkspaces(
    request: protos.google.cloud.dataform.v1alpha2.IListWorkspacesRequest,
    callback: PaginationCallback<
      protos.google.cloud.dataform.v1alpha2.IListWorkspacesRequest,
      | protos.google.cloud.dataform.v1alpha2.IListWorkspacesResponse
      | null
      | undefined,
      protos.google.cloud.dataform.v1alpha2.IWorkspace
    >
  ): void;
  listWorkspaces(
    request?: protos.google.cloud.dataform.v1alpha2.IListWorkspacesRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.dataform.v1alpha2.IListWorkspacesRequest,
          | protos.google.cloud.dataform.v1alpha2.IListWorkspacesResponse
          | null
          | undefined,
          protos.google.cloud.dataform.v1alpha2.IWorkspace
        >,
    callback?: PaginationCallback<
      protos.google.cloud.dataform.v1alpha2.IListWorkspacesRequest,
      | protos.google.cloud.dataform.v1alpha2.IListWorkspacesResponse
      | null
      | undefined,
      protos.google.cloud.dataform.v1alpha2.IWorkspace
    >
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IWorkspace[],
      protos.google.cloud.dataform.v1alpha2.IListWorkspacesRequest | null,
      protos.google.cloud.dataform.v1alpha2.IListWorkspacesResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listWorkspaces(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The repository in which to list workspaces. Must be in the
   *   format `projects/* /locations/* /repositories/*`.
   * @param {number} [request.pageSize]
   *   Optional. Maximum number of workspaces to return. The server may return fewer
   *   items than requested. If unspecified, the server will pick an appropriate
   *   default.
   * @param {string} [request.pageToken]
   *   Optional. Page token received from a previous `ListWorkspaces` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to `ListWorkspaces`
   *   must match the call that provided the page token.
   * @param {string} [request.orderBy]
   *   Optional. This field only supports ordering by `name`. If unspecified, the server
   *   will choose the ordering. If specified, the default order is ascending for
   *   the `name` field.
   * @param {string} [request.filter]
   *   Optional. Filter for the returned list.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link google.cloud.dataform.v1alpha2.Workspace | Workspace} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listWorkspacesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listWorkspacesStream(
    request?: protos.google.cloud.dataform.v1alpha2.IListWorkspacesRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listWorkspaces'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listWorkspaces.createStream(
      this.innerApiCalls.listWorkspaces as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listWorkspaces`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The repository in which to list workspaces. Must be in the
   *   format `projects/* /locations/* /repositories/*`.
   * @param {number} [request.pageSize]
   *   Optional. Maximum number of workspaces to return. The server may return fewer
   *   items than requested. If unspecified, the server will pick an appropriate
   *   default.
   * @param {string} [request.pageToken]
   *   Optional. Page token received from a previous `ListWorkspaces` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to `ListWorkspaces`
   *   must match the call that provided the page token.
   * @param {string} [request.orderBy]
   *   Optional. This field only supports ordering by `name`. If unspecified, the server
   *   will choose the ordering. If specified, the default order is ascending for
   *   the `name` field.
   * @param {string} [request.filter]
   *   Optional. Filter for the returned list.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link google.cloud.dataform.v1alpha2.Workspace | Workspace}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1alpha2/dataform.list_workspaces.js</caption>
   * region_tag:dataform_v1alpha2_generated_Dataform_ListWorkspaces_async
   */
  listWorkspacesAsync(
    request?: protos.google.cloud.dataform.v1alpha2.IListWorkspacesRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.dataform.v1alpha2.IWorkspace> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listWorkspaces'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listWorkspaces.asyncIterate(
      this.innerApiCalls['listWorkspaces'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.dataform.v1alpha2.IWorkspace>;
  }
  /**
   * Returns the contents of a given Workspace directory.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.workspace
   *   Required. The workspace's name.
   * @param {string} [request.path]
   *   Optional. The directory's full path including directory name, relative to the
   *   workspace root. If left unset, the workspace root is used.
   * @param {number} [request.pageSize]
   *   Optional. Maximum number of paths to return. The server may return fewer
   *   items than requested. If unspecified, the server will pick an appropriate
   *   default.
   * @param {string} [request.pageToken]
   *   Optional. Page token received from a previous `QueryDirectoryContents` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `QueryDirectoryContents` must match the call that provided the page
   *   token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link google.cloud.dataform.v1alpha2.QueryDirectoryContentsResponse.DirectoryEntry | DirectoryEntry}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `queryDirectoryContentsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  queryDirectoryContents(
    request?: protos.google.cloud.dataform.v1alpha2.IQueryDirectoryContentsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.QueryDirectoryContentsResponse.IDirectoryEntry[],
      protos.google.cloud.dataform.v1alpha2.IQueryDirectoryContentsRequest | null,
      protos.google.cloud.dataform.v1alpha2.IQueryDirectoryContentsResponse
    ]
  >;
  queryDirectoryContents(
    request: protos.google.cloud.dataform.v1alpha2.IQueryDirectoryContentsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.dataform.v1alpha2.IQueryDirectoryContentsRequest,
      | protos.google.cloud.dataform.v1alpha2.IQueryDirectoryContentsResponse
      | null
      | undefined,
      protos.google.cloud.dataform.v1alpha2.QueryDirectoryContentsResponse.IDirectoryEntry
    >
  ): void;
  queryDirectoryContents(
    request: protos.google.cloud.dataform.v1alpha2.IQueryDirectoryContentsRequest,
    callback: PaginationCallback<
      protos.google.cloud.dataform.v1alpha2.IQueryDirectoryContentsRequest,
      | protos.google.cloud.dataform.v1alpha2.IQueryDirectoryContentsResponse
      | null
      | undefined,
      protos.google.cloud.dataform.v1alpha2.QueryDirectoryContentsResponse.IDirectoryEntry
    >
  ): void;
  queryDirectoryContents(
    request?: protos.google.cloud.dataform.v1alpha2.IQueryDirectoryContentsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.dataform.v1alpha2.IQueryDirectoryContentsRequest,
          | protos.google.cloud.dataform.v1alpha2.IQueryDirectoryContentsResponse
          | null
          | undefined,
          protos.google.cloud.dataform.v1alpha2.QueryDirectoryContentsResponse.IDirectoryEntry
        >,
    callback?: PaginationCallback<
      protos.google.cloud.dataform.v1alpha2.IQueryDirectoryContentsRequest,
      | protos.google.cloud.dataform.v1alpha2.IQueryDirectoryContentsResponse
      | null
      | undefined,
      protos.google.cloud.dataform.v1alpha2.QueryDirectoryContentsResponse.IDirectoryEntry
    >
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.QueryDirectoryContentsResponse.IDirectoryEntry[],
      protos.google.cloud.dataform.v1alpha2.IQueryDirectoryContentsRequest | null,
      protos.google.cloud.dataform.v1alpha2.IQueryDirectoryContentsResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        workspace: request.workspace ?? '',
      });
    this.initialize();
    return this.innerApiCalls.queryDirectoryContents(
      request,
      options,
      callback
    );
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.workspace
   *   Required. The workspace's name.
   * @param {string} [request.path]
   *   Optional. The directory's full path including directory name, relative to the
   *   workspace root. If left unset, the workspace root is used.
   * @param {number} [request.pageSize]
   *   Optional. Maximum number of paths to return. The server may return fewer
   *   items than requested. If unspecified, the server will pick an appropriate
   *   default.
   * @param {string} [request.pageToken]
   *   Optional. Page token received from a previous `QueryDirectoryContents` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `QueryDirectoryContents` must match the call that provided the page
   *   token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link google.cloud.dataform.v1alpha2.QueryDirectoryContentsResponse.DirectoryEntry | DirectoryEntry} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `queryDirectoryContentsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  queryDirectoryContentsStream(
    request?: protos.google.cloud.dataform.v1alpha2.IQueryDirectoryContentsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        workspace: request.workspace ?? '',
      });
    const defaultCallSettings = this._defaults['queryDirectoryContents'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.queryDirectoryContents.createStream(
      this.innerApiCalls.queryDirectoryContents as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `queryDirectoryContents`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.workspace
   *   Required. The workspace's name.
   * @param {string} [request.path]
   *   Optional. The directory's full path including directory name, relative to the
   *   workspace root. If left unset, the workspace root is used.
   * @param {number} [request.pageSize]
   *   Optional. Maximum number of paths to return. The server may return fewer
   *   items than requested. If unspecified, the server will pick an appropriate
   *   default.
   * @param {string} [request.pageToken]
   *   Optional. Page token received from a previous `QueryDirectoryContents` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `QueryDirectoryContents` must match the call that provided the page
   *   token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link google.cloud.dataform.v1alpha2.QueryDirectoryContentsResponse.DirectoryEntry | DirectoryEntry}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1alpha2/dataform.query_directory_contents.js</caption>
   * region_tag:dataform_v1alpha2_generated_Dataform_QueryDirectoryContents_async
   */
  queryDirectoryContentsAsync(
    request?: protos.google.cloud.dataform.v1alpha2.IQueryDirectoryContentsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.dataform.v1alpha2.QueryDirectoryContentsResponse.IDirectoryEntry> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        workspace: request.workspace ?? '',
      });
    const defaultCallSettings = this._defaults['queryDirectoryContents'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.queryDirectoryContents.asyncIterate(
      this.innerApiCalls['queryDirectoryContents'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.dataform.v1alpha2.QueryDirectoryContentsResponse.IDirectoryEntry>;
  }
  /**
   * Lists CompilationResults in a given Repository.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The repository in which to list compilation results. Must be in the
   *   format `projects/* /locations/* /repositories/*`.
   * @param {number} [request.pageSize]
   *   Optional. Maximum number of compilation results to return. The server may return
   *   fewer items than requested. If unspecified, the server will pick an
   *   appropriate default.
   * @param {string} [request.pageToken]
   *   Optional. Page token received from a previous `ListCompilationResults` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to `ListCompilationResults`
   *   must match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link google.cloud.dataform.v1alpha2.CompilationResult | CompilationResult}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listCompilationResultsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listCompilationResults(
    request?: protos.google.cloud.dataform.v1alpha2.IListCompilationResultsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.ICompilationResult[],
      protos.google.cloud.dataform.v1alpha2.IListCompilationResultsRequest | null,
      protos.google.cloud.dataform.v1alpha2.IListCompilationResultsResponse
    ]
  >;
  listCompilationResults(
    request: protos.google.cloud.dataform.v1alpha2.IListCompilationResultsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.dataform.v1alpha2.IListCompilationResultsRequest,
      | protos.google.cloud.dataform.v1alpha2.IListCompilationResultsResponse
      | null
      | undefined,
      protos.google.cloud.dataform.v1alpha2.ICompilationResult
    >
  ): void;
  listCompilationResults(
    request: protos.google.cloud.dataform.v1alpha2.IListCompilationResultsRequest,
    callback: PaginationCallback<
      protos.google.cloud.dataform.v1alpha2.IListCompilationResultsRequest,
      | protos.google.cloud.dataform.v1alpha2.IListCompilationResultsResponse
      | null
      | undefined,
      protos.google.cloud.dataform.v1alpha2.ICompilationResult
    >
  ): void;
  listCompilationResults(
    request?: protos.google.cloud.dataform.v1alpha2.IListCompilationResultsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.dataform.v1alpha2.IListCompilationResultsRequest,
          | protos.google.cloud.dataform.v1alpha2.IListCompilationResultsResponse
          | null
          | undefined,
          protos.google.cloud.dataform.v1alpha2.ICompilationResult
        >,
    callback?: PaginationCallback<
      protos.google.cloud.dataform.v1alpha2.IListCompilationResultsRequest,
      | protos.google.cloud.dataform.v1alpha2.IListCompilationResultsResponse
      | null
      | undefined,
      protos.google.cloud.dataform.v1alpha2.ICompilationResult
    >
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.ICompilationResult[],
      protos.google.cloud.dataform.v1alpha2.IListCompilationResultsRequest | null,
      protos.google.cloud.dataform.v1alpha2.IListCompilationResultsResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listCompilationResults(
      request,
      options,
      callback
    );
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The repository in which to list compilation results. Must be in the
   *   format `projects/* /locations/* /repositories/*`.
   * @param {number} [request.pageSize]
   *   Optional. Maximum number of compilation results to return. The server may return
   *   fewer items than requested. If unspecified, the server will pick an
   *   appropriate default.
   * @param {string} [request.pageToken]
   *   Optional. Page token received from a previous `ListCompilationResults` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to `ListCompilationResults`
   *   must match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link google.cloud.dataform.v1alpha2.CompilationResult | CompilationResult} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listCompilationResultsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listCompilationResultsStream(
    request?: protos.google.cloud.dataform.v1alpha2.IListCompilationResultsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listCompilationResults'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listCompilationResults.createStream(
      this.innerApiCalls.listCompilationResults as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listCompilationResults`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The repository in which to list compilation results. Must be in the
   *   format `projects/* /locations/* /repositories/*`.
   * @param {number} [request.pageSize]
   *   Optional. Maximum number of compilation results to return. The server may return
   *   fewer items than requested. If unspecified, the server will pick an
   *   appropriate default.
   * @param {string} [request.pageToken]
   *   Optional. Page token received from a previous `ListCompilationResults` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to `ListCompilationResults`
   *   must match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link google.cloud.dataform.v1alpha2.CompilationResult | CompilationResult}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1alpha2/dataform.list_compilation_results.js</caption>
   * region_tag:dataform_v1alpha2_generated_Dataform_ListCompilationResults_async
   */
  listCompilationResultsAsync(
    request?: protos.google.cloud.dataform.v1alpha2.IListCompilationResultsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.dataform.v1alpha2.ICompilationResult> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listCompilationResults'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listCompilationResults.asyncIterate(
      this.innerApiCalls['listCompilationResults'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.dataform.v1alpha2.ICompilationResult>;
  }
  /**
   * Returns CompilationResultActions in a given CompilationResult.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The compilation result's name.
   * @param {number} [request.pageSize]
   *   Optional. Maximum number of compilation results to return. The server may return
   *   fewer items than requested. If unspecified, the server will pick an
   *   appropriate default.
   * @param {string} [request.pageToken]
   *   Optional. Page token received from a previous `QueryCompilationResultActions` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `QueryCompilationResultActions` must match the call that provided the page
   *   token.
   * @param {string} [request.filter]
   *   Optional. Optional filter for the returned list. Filtering is only currently
   *   supported on the `file_path` field.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link google.cloud.dataform.v1alpha2.CompilationResultAction | CompilationResultAction}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `queryCompilationResultActionsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  queryCompilationResultActions(
    request?: protos.google.cloud.dataform.v1alpha2.IQueryCompilationResultActionsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.ICompilationResultAction[],
      protos.google.cloud.dataform.v1alpha2.IQueryCompilationResultActionsRequest | null,
      protos.google.cloud.dataform.v1alpha2.IQueryCompilationResultActionsResponse
    ]
  >;
  queryCompilationResultActions(
    request: protos.google.cloud.dataform.v1alpha2.IQueryCompilationResultActionsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.dataform.v1alpha2.IQueryCompilationResultActionsRequest,
      | protos.google.cloud.dataform.v1alpha2.IQueryCompilationResultActionsResponse
      | null
      | undefined,
      protos.google.cloud.dataform.v1alpha2.ICompilationResultAction
    >
  ): void;
  queryCompilationResultActions(
    request: protos.google.cloud.dataform.v1alpha2.IQueryCompilationResultActionsRequest,
    callback: PaginationCallback<
      protos.google.cloud.dataform.v1alpha2.IQueryCompilationResultActionsRequest,
      | protos.google.cloud.dataform.v1alpha2.IQueryCompilationResultActionsResponse
      | null
      | undefined,
      protos.google.cloud.dataform.v1alpha2.ICompilationResultAction
    >
  ): void;
  queryCompilationResultActions(
    request?: protos.google.cloud.dataform.v1alpha2.IQueryCompilationResultActionsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.dataform.v1alpha2.IQueryCompilationResultActionsRequest,
          | protos.google.cloud.dataform.v1alpha2.IQueryCompilationResultActionsResponse
          | null
          | undefined,
          protos.google.cloud.dataform.v1alpha2.ICompilationResultAction
        >,
    callback?: PaginationCallback<
      protos.google.cloud.dataform.v1alpha2.IQueryCompilationResultActionsRequest,
      | protos.google.cloud.dataform.v1alpha2.IQueryCompilationResultActionsResponse
      | null
      | undefined,
      protos.google.cloud.dataform.v1alpha2.ICompilationResultAction
    >
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.ICompilationResultAction[],
      protos.google.cloud.dataform.v1alpha2.IQueryCompilationResultActionsRequest | null,
      protos.google.cloud.dataform.v1alpha2.IQueryCompilationResultActionsResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.queryCompilationResultActions(
      request,
      options,
      callback
    );
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The compilation result's name.
   * @param {number} [request.pageSize]
   *   Optional. Maximum number of compilation results to return. The server may return
   *   fewer items than requested. If unspecified, the server will pick an
   *   appropriate default.
   * @param {string} [request.pageToken]
   *   Optional. Page token received from a previous `QueryCompilationResultActions` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `QueryCompilationResultActions` must match the call that provided the page
   *   token.
   * @param {string} [request.filter]
   *   Optional. Optional filter for the returned list. Filtering is only currently
   *   supported on the `file_path` field.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link google.cloud.dataform.v1alpha2.CompilationResultAction | CompilationResultAction} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `queryCompilationResultActionsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  queryCompilationResultActionsStream(
    request?: protos.google.cloud.dataform.v1alpha2.IQueryCompilationResultActionsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    const defaultCallSettings = this._defaults['queryCompilationResultActions'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.queryCompilationResultActions.createStream(
      this.innerApiCalls.queryCompilationResultActions as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `queryCompilationResultActions`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The compilation result's name.
   * @param {number} [request.pageSize]
   *   Optional. Maximum number of compilation results to return. The server may return
   *   fewer items than requested. If unspecified, the server will pick an
   *   appropriate default.
   * @param {string} [request.pageToken]
   *   Optional. Page token received from a previous `QueryCompilationResultActions` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `QueryCompilationResultActions` must match the call that provided the page
   *   token.
   * @param {string} [request.filter]
   *   Optional. Optional filter for the returned list. Filtering is only currently
   *   supported on the `file_path` field.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link google.cloud.dataform.v1alpha2.CompilationResultAction | CompilationResultAction}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1alpha2/dataform.query_compilation_result_actions.js</caption>
   * region_tag:dataform_v1alpha2_generated_Dataform_QueryCompilationResultActions_async
   */
  queryCompilationResultActionsAsync(
    request?: protos.google.cloud.dataform.v1alpha2.IQueryCompilationResultActionsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.dataform.v1alpha2.ICompilationResultAction> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    const defaultCallSettings = this._defaults['queryCompilationResultActions'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.queryCompilationResultActions.asyncIterate(
      this.innerApiCalls['queryCompilationResultActions'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.dataform.v1alpha2.ICompilationResultAction>;
  }
  /**
   * Lists WorkflowInvocations in a given Repository.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent resource of the WorkflowInvocation type. Must be in the
   *   format `projects/* /locations/* /repositories/*`.
   * @param {number} [request.pageSize]
   *   Optional. Maximum number of workflow invocations to return. The server may return
   *   fewer items than requested. If unspecified, the server will pick an
   *   appropriate default.
   * @param {string} [request.pageToken]
   *   Optional. Page token received from a previous `ListWorkflowInvocations` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to `ListWorkflowInvocations`
   *   must match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link google.cloud.dataform.v1alpha2.WorkflowInvocation | WorkflowInvocation}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listWorkflowInvocationsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listWorkflowInvocations(
    request?: protos.google.cloud.dataform.v1alpha2.IListWorkflowInvocationsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IWorkflowInvocation[],
      protos.google.cloud.dataform.v1alpha2.IListWorkflowInvocationsRequest | null,
      protos.google.cloud.dataform.v1alpha2.IListWorkflowInvocationsResponse
    ]
  >;
  listWorkflowInvocations(
    request: protos.google.cloud.dataform.v1alpha2.IListWorkflowInvocationsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.dataform.v1alpha2.IListWorkflowInvocationsRequest,
      | protos.google.cloud.dataform.v1alpha2.IListWorkflowInvocationsResponse
      | null
      | undefined,
      protos.google.cloud.dataform.v1alpha2.IWorkflowInvocation
    >
  ): void;
  listWorkflowInvocations(
    request: protos.google.cloud.dataform.v1alpha2.IListWorkflowInvocationsRequest,
    callback: PaginationCallback<
      protos.google.cloud.dataform.v1alpha2.IListWorkflowInvocationsRequest,
      | protos.google.cloud.dataform.v1alpha2.IListWorkflowInvocationsResponse
      | null
      | undefined,
      protos.google.cloud.dataform.v1alpha2.IWorkflowInvocation
    >
  ): void;
  listWorkflowInvocations(
    request?: protos.google.cloud.dataform.v1alpha2.IListWorkflowInvocationsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.dataform.v1alpha2.IListWorkflowInvocationsRequest,
          | protos.google.cloud.dataform.v1alpha2.IListWorkflowInvocationsResponse
          | null
          | undefined,
          protos.google.cloud.dataform.v1alpha2.IWorkflowInvocation
        >,
    callback?: PaginationCallback<
      protos.google.cloud.dataform.v1alpha2.IListWorkflowInvocationsRequest,
      | protos.google.cloud.dataform.v1alpha2.IListWorkflowInvocationsResponse
      | null
      | undefined,
      protos.google.cloud.dataform.v1alpha2.IWorkflowInvocation
    >
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IWorkflowInvocation[],
      protos.google.cloud.dataform.v1alpha2.IListWorkflowInvocationsRequest | null,
      protos.google.cloud.dataform.v1alpha2.IListWorkflowInvocationsResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listWorkflowInvocations(
      request,
      options,
      callback
    );
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent resource of the WorkflowInvocation type. Must be in the
   *   format `projects/* /locations/* /repositories/*`.
   * @param {number} [request.pageSize]
   *   Optional. Maximum number of workflow invocations to return. The server may return
   *   fewer items than requested. If unspecified, the server will pick an
   *   appropriate default.
   * @param {string} [request.pageToken]
   *   Optional. Page token received from a previous `ListWorkflowInvocations` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to `ListWorkflowInvocations`
   *   must match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link google.cloud.dataform.v1alpha2.WorkflowInvocation | WorkflowInvocation} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listWorkflowInvocationsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listWorkflowInvocationsStream(
    request?: protos.google.cloud.dataform.v1alpha2.IListWorkflowInvocationsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listWorkflowInvocations'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listWorkflowInvocations.createStream(
      this.innerApiCalls.listWorkflowInvocations as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listWorkflowInvocations`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent resource of the WorkflowInvocation type. Must be in the
   *   format `projects/* /locations/* /repositories/*`.
   * @param {number} [request.pageSize]
   *   Optional. Maximum number of workflow invocations to return. The server may return
   *   fewer items than requested. If unspecified, the server will pick an
   *   appropriate default.
   * @param {string} [request.pageToken]
   *   Optional. Page token received from a previous `ListWorkflowInvocations` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to `ListWorkflowInvocations`
   *   must match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link google.cloud.dataform.v1alpha2.WorkflowInvocation | WorkflowInvocation}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1alpha2/dataform.list_workflow_invocations.js</caption>
   * region_tag:dataform_v1alpha2_generated_Dataform_ListWorkflowInvocations_async
   */
  listWorkflowInvocationsAsync(
    request?: protos.google.cloud.dataform.v1alpha2.IListWorkflowInvocationsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.dataform.v1alpha2.IWorkflowInvocation> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listWorkflowInvocations'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listWorkflowInvocations.asyncIterate(
      this.innerApiCalls['listWorkflowInvocations'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.dataform.v1alpha2.IWorkflowInvocation>;
  }
  /**
   * Returns WorkflowInvocationActions in a given WorkflowInvocation.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The workflow invocation's name.
   * @param {number} [request.pageSize]
   *   Optional. Maximum number of workflow invocations to return. The server may return
   *   fewer items than requested. If unspecified, the server will pick an
   *   appropriate default.
   * @param {string} [request.pageToken]
   *   Optional. Page token received from a previous `QueryWorkflowInvocationActions` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `QueryWorkflowInvocationActions` must match the call that provided the page
   *   token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link google.cloud.dataform.v1alpha2.WorkflowInvocationAction | WorkflowInvocationAction}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `queryWorkflowInvocationActionsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  queryWorkflowInvocationActions(
    request?: protos.google.cloud.dataform.v1alpha2.IQueryWorkflowInvocationActionsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IWorkflowInvocationAction[],
      protos.google.cloud.dataform.v1alpha2.IQueryWorkflowInvocationActionsRequest | null,
      protos.google.cloud.dataform.v1alpha2.IQueryWorkflowInvocationActionsResponse
    ]
  >;
  queryWorkflowInvocationActions(
    request: protos.google.cloud.dataform.v1alpha2.IQueryWorkflowInvocationActionsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.dataform.v1alpha2.IQueryWorkflowInvocationActionsRequest,
      | protos.google.cloud.dataform.v1alpha2.IQueryWorkflowInvocationActionsResponse
      | null
      | undefined,
      protos.google.cloud.dataform.v1alpha2.IWorkflowInvocationAction
    >
  ): void;
  queryWorkflowInvocationActions(
    request: protos.google.cloud.dataform.v1alpha2.IQueryWorkflowInvocationActionsRequest,
    callback: PaginationCallback<
      protos.google.cloud.dataform.v1alpha2.IQueryWorkflowInvocationActionsRequest,
      | protos.google.cloud.dataform.v1alpha2.IQueryWorkflowInvocationActionsResponse
      | null
      | undefined,
      protos.google.cloud.dataform.v1alpha2.IWorkflowInvocationAction
    >
  ): void;
  queryWorkflowInvocationActions(
    request?: protos.google.cloud.dataform.v1alpha2.IQueryWorkflowInvocationActionsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.dataform.v1alpha2.IQueryWorkflowInvocationActionsRequest,
          | protos.google.cloud.dataform.v1alpha2.IQueryWorkflowInvocationActionsResponse
          | null
          | undefined,
          protos.google.cloud.dataform.v1alpha2.IWorkflowInvocationAction
        >,
    callback?: PaginationCallback<
      protos.google.cloud.dataform.v1alpha2.IQueryWorkflowInvocationActionsRequest,
      | protos.google.cloud.dataform.v1alpha2.IQueryWorkflowInvocationActionsResponse
      | null
      | undefined,
      protos.google.cloud.dataform.v1alpha2.IWorkflowInvocationAction
    >
  ): Promise<
    [
      protos.google.cloud.dataform.v1alpha2.IWorkflowInvocationAction[],
      protos.google.cloud.dataform.v1alpha2.IQueryWorkflowInvocationActionsRequest | null,
      protos.google.cloud.dataform.v1alpha2.IQueryWorkflowInvocationActionsResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.queryWorkflowInvocationActions(
      request,
      options,
      callback
    );
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The workflow invocation's name.
   * @param {number} [request.pageSize]
   *   Optional. Maximum number of workflow invocations to return. The server may return
   *   fewer items than requested. If unspecified, the server will pick an
   *   appropriate default.
   * @param {string} [request.pageToken]
   *   Optional. Page token received from a previous `QueryWorkflowInvocationActions` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `QueryWorkflowInvocationActions` must match the call that provided the page
   *   token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link google.cloud.dataform.v1alpha2.WorkflowInvocationAction | WorkflowInvocationAction} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `queryWorkflowInvocationActionsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  queryWorkflowInvocationActionsStream(
    request?: protos.google.cloud.dataform.v1alpha2.IQueryWorkflowInvocationActionsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    const defaultCallSettings =
      this._defaults['queryWorkflowInvocationActions'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.queryWorkflowInvocationActions.createStream(
      this.innerApiCalls.queryWorkflowInvocationActions as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `queryWorkflowInvocationActions`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The workflow invocation's name.
   * @param {number} [request.pageSize]
   *   Optional. Maximum number of workflow invocations to return. The server may return
   *   fewer items than requested. If unspecified, the server will pick an
   *   appropriate default.
   * @param {string} [request.pageToken]
   *   Optional. Page token received from a previous `QueryWorkflowInvocationActions` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `QueryWorkflowInvocationActions` must match the call that provided the page
   *   token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link google.cloud.dataform.v1alpha2.WorkflowInvocationAction | WorkflowInvocationAction}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1alpha2/dataform.query_workflow_invocation_actions.js</caption>
   * region_tag:dataform_v1alpha2_generated_Dataform_QueryWorkflowInvocationActions_async
   */
  queryWorkflowInvocationActionsAsync(
    request?: protos.google.cloud.dataform.v1alpha2.IQueryWorkflowInvocationActionsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.dataform.v1alpha2.IWorkflowInvocationAction> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    const defaultCallSettings =
      this._defaults['queryWorkflowInvocationActions'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.queryWorkflowInvocationActions.asyncIterate(
      this.innerApiCalls['queryWorkflowInvocationActions'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.dataform.v1alpha2.IWorkflowInvocationAction>;
  }
  /**
   * Gets the access control policy for a resource. Returns an empty policy
   * if the resource exists and does not have a policy set.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.resource
   *   REQUIRED: The resource for which the policy is being requested.
   *   See the operation documentation for the appropriate value for this field.
   * @param {Object} [request.options]
   *   OPTIONAL: A `GetPolicyOptions` object for specifying options to
   *   `GetIamPolicy`. This field is only used by Cloud IAM.
   *
   *   This object should have the same structure as {@link google.iam.v1.GetPolicyOptions | GetPolicyOptions}.
   * @param {Object} [options]
   *   Optional parameters. You can override the default settings for this call, e.g, timeout,
   *   retries, paginations, etc. See {@link https://googleapis.github.io/gax-nodejs/interfaces/CallOptions.html | gax.CallOptions} for the details.
   * @param {function(?Error, ?Object)} [callback]
   *   The function which will be called with the result of the API call.
   *
   *   The second parameter to the callback is an object representing {@link google.iam.v1.Policy | Policy}.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.iam.v1.Policy | Policy}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  getIamPolicy(
    request: IamProtos.google.iam.v1.GetIamPolicyRequest,
    options?:
      | gax.CallOptions
      | Callback<
          IamProtos.google.iam.v1.Policy,
          IamProtos.google.iam.v1.GetIamPolicyRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      IamProtos.google.iam.v1.Policy,
      IamProtos.google.iam.v1.GetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<IamProtos.google.iam.v1.Policy> {
    return this.iamClient.getIamPolicy(request, options, callback);
  }

  /**
   * Returns permissions that a caller has on the specified resource. If the
   * resource does not exist, this will return an empty set of
   * permissions, not a NOT_FOUND error.
   *
   * Note: This operation is designed to be used for building
   * permission-aware UIs and command-line tools, not for authorization
   * checking. This operation may "fail open" without warning.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.resource
   *   REQUIRED: The resource for which the policy detail is being requested.
   *   See the operation documentation for the appropriate value for this field.
   * @param {string[]} request.permissions
   *   The set of permissions to check for the `resource`. Permissions with
   *   wildcards (such as '*' or 'storage.*') are not allowed. For more
   *   information see
   *   [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
   * @param {Object} [options]
   *   Optional parameters. You can override the default settings for this call, e.g, timeout,
   *   retries, paginations, etc. See {@link https://googleapis.github.io/gax-nodejs/interfaces/CallOptions.html | gax.CallOptions} for the details.
   * @param {function(?Error, ?Object)} [callback]
   *   The function which will be called with the result of the API call.
   *
   *   The second parameter to the callback is an object representing {@link google.iam.v1.TestIamPermissionsResponse | TestIamPermissionsResponse}.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.iam.v1.TestIamPermissionsResponse | TestIamPermissionsResponse}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  setIamPolicy(
    request: IamProtos.google.iam.v1.SetIamPolicyRequest,
    options?:
      | gax.CallOptions
      | Callback<
          IamProtos.google.iam.v1.Policy,
          IamProtos.google.iam.v1.SetIamPolicyRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      IamProtos.google.iam.v1.Policy,
      IamProtos.google.iam.v1.SetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<IamProtos.google.iam.v1.Policy> {
    return this.iamClient.setIamPolicy(request, options, callback);
  }

  /**
   * Returns permissions that a caller has on the specified resource. If the
   * resource does not exist, this will return an empty set of
   * permissions, not a NOT_FOUND error.
   *
   * Note: This operation is designed to be used for building
   * permission-aware UIs and command-line tools, not for authorization
   * checking. This operation may "fail open" without warning.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.resource
   *   REQUIRED: The resource for which the policy detail is being requested.
   *   See the operation documentation for the appropriate value for this field.
   * @param {string[]} request.permissions
   *   The set of permissions to check for the `resource`. Permissions with
   *   wildcards (such as '*' or 'storage.*') are not allowed. For more
   *   information see
   *   [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
   * @param {Object} [options]
   *   Optional parameters. You can override the default settings for this call, e.g, timeout,
   *   retries, paginations, etc. See {@link https://googleapis.github.io/gax-nodejs/interfaces/CallOptions.html | gax.CallOptions} for the details.
   * @param {function(?Error, ?Object)} [callback]
   *   The function which will be called with the result of the API call.
   *
   *   The second parameter to the callback is an object representing {@link google.iam.v1.TestIamPermissionsResponse | TestIamPermissionsResponse}.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.iam.v1.TestIamPermissionsResponse | TestIamPermissionsResponse}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   *
   */
  testIamPermissions(
    request: IamProtos.google.iam.v1.TestIamPermissionsRequest,
    options?:
      | gax.CallOptions
      | Callback<
          IamProtos.google.iam.v1.TestIamPermissionsResponse,
          IamProtos.google.iam.v1.TestIamPermissionsRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      IamProtos.google.iam.v1.TestIamPermissionsResponse,
      IamProtos.google.iam.v1.TestIamPermissionsRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<IamProtos.google.iam.v1.TestIamPermissionsResponse> {
    return this.iamClient.testIamPermissions(request, options, callback);
  }

  /**
   * Gets information about a location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Resource name for the location.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html | CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.cloud.location.Location | Location}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example
   * ```
   * const [response] = await client.getLocation(request);
   * ```
   */
  getLocation(
    request: LocationProtos.google.cloud.location.IGetLocationRequest,
    options?:
      | gax.CallOptions
      | Callback<
          LocationProtos.google.cloud.location.ILocation,
          | LocationProtos.google.cloud.location.IGetLocationRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LocationProtos.google.cloud.location.ILocation,
      | LocationProtos.google.cloud.location.IGetLocationRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<LocationProtos.google.cloud.location.ILocation> {
    return this.locationsClient.getLocation(request, options, callback);
  }

  /**
   * Lists information about the supported locations for this service. Returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   The resource that owns the locations collection, if applicable.
   * @param {string} request.filter
   *   The standard list filter.
   * @param {number} request.pageSize
   *   The standard list page size.
   * @param {string} request.pageToken
   *   The standard list page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link google.cloud.location.Location | Location}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example
   * ```
   * const iterable = client.listLocationsAsync(request);
   * for await (const response of iterable) {
   *   // process response
   * }
   * ```
   */
  listLocationsAsync(
    request: LocationProtos.google.cloud.location.IListLocationsRequest,
    options?: CallOptions
  ): AsyncIterable<LocationProtos.google.cloud.location.ILocation> {
    return this.locationsClient.listLocationsAsync(request, options);
  }

  // --------------------
  // -- Path templates --
  // --------------------

  /**
   * Return a fully-qualified compilationResult resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} repository
   * @param {string} compilation_result
   * @returns {string} Resource name string.
   */
  compilationResultPath(
    project: string,
    location: string,
    repository: string,
    compilationResult: string
  ) {
    return this.pathTemplates.compilationResultPathTemplate.render({
      project: project,
      location: location,
      repository: repository,
      compilation_result: compilationResult,
    });
  }

  /**
   * Parse the project from CompilationResult resource.
   *
   * @param {string} compilationResultName
   *   A fully-qualified path representing CompilationResult resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromCompilationResultName(compilationResultName: string) {
    return this.pathTemplates.compilationResultPathTemplate.match(
      compilationResultName
    ).project;
  }

  /**
   * Parse the location from CompilationResult resource.
   *
   * @param {string} compilationResultName
   *   A fully-qualified path representing CompilationResult resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromCompilationResultName(compilationResultName: string) {
    return this.pathTemplates.compilationResultPathTemplate.match(
      compilationResultName
    ).location;
  }

  /**
   * Parse the repository from CompilationResult resource.
   *
   * @param {string} compilationResultName
   *   A fully-qualified path representing CompilationResult resource.
   * @returns {string} A string representing the repository.
   */
  matchRepositoryFromCompilationResultName(compilationResultName: string) {
    return this.pathTemplates.compilationResultPathTemplate.match(
      compilationResultName
    ).repository;
  }

  /**
   * Parse the compilation_result from CompilationResult resource.
   *
   * @param {string} compilationResultName
   *   A fully-qualified path representing CompilationResult resource.
   * @returns {string} A string representing the compilation_result.
   */
  matchCompilationResultFromCompilationResultName(
    compilationResultName: string
  ) {
    return this.pathTemplates.compilationResultPathTemplate.match(
      compilationResultName
    ).compilation_result;
  }

  /**
   * Return a fully-qualified location resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @returns {string} Resource name string.
   */
  locationPath(project: string, location: string) {
    return this.pathTemplates.locationPathTemplate.render({
      project: project,
      location: location,
    });
  }

  /**
   * Parse the project from Location resource.
   *
   * @param {string} locationName
   *   A fully-qualified path representing Location resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromLocationName(locationName: string) {
    return this.pathTemplates.locationPathTemplate.match(locationName).project;
  }

  /**
   * Parse the location from Location resource.
   *
   * @param {string} locationName
   *   A fully-qualified path representing Location resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromLocationName(locationName: string) {
    return this.pathTemplates.locationPathTemplate.match(locationName).location;
  }

  /**
   * Return a fully-qualified repository resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} repository
   * @returns {string} Resource name string.
   */
  repositoryPath(project: string, location: string, repository: string) {
    return this.pathTemplates.repositoryPathTemplate.render({
      project: project,
      location: location,
      repository: repository,
    });
  }

  /**
   * Parse the project from Repository resource.
   *
   * @param {string} repositoryName
   *   A fully-qualified path representing Repository resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromRepositoryName(repositoryName: string) {
    return this.pathTemplates.repositoryPathTemplate.match(repositoryName)
      .project;
  }

  /**
   * Parse the location from Repository resource.
   *
   * @param {string} repositoryName
   *   A fully-qualified path representing Repository resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromRepositoryName(repositoryName: string) {
    return this.pathTemplates.repositoryPathTemplate.match(repositoryName)
      .location;
  }

  /**
   * Parse the repository from Repository resource.
   *
   * @param {string} repositoryName
   *   A fully-qualified path representing Repository resource.
   * @returns {string} A string representing the repository.
   */
  matchRepositoryFromRepositoryName(repositoryName: string) {
    return this.pathTemplates.repositoryPathTemplate.match(repositoryName)
      .repository;
  }

  /**
   * Return a fully-qualified workflowInvocation resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} repository
   * @param {string} workflow_invocation
   * @returns {string} Resource name string.
   */
  workflowInvocationPath(
    project: string,
    location: string,
    repository: string,
    workflowInvocation: string
  ) {
    return this.pathTemplates.workflowInvocationPathTemplate.render({
      project: project,
      location: location,
      repository: repository,
      workflow_invocation: workflowInvocation,
    });
  }

  /**
   * Parse the project from WorkflowInvocation resource.
   *
   * @param {string} workflowInvocationName
   *   A fully-qualified path representing WorkflowInvocation resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromWorkflowInvocationName(workflowInvocationName: string) {
    return this.pathTemplates.workflowInvocationPathTemplate.match(
      workflowInvocationName
    ).project;
  }

  /**
   * Parse the location from WorkflowInvocation resource.
   *
   * @param {string} workflowInvocationName
   *   A fully-qualified path representing WorkflowInvocation resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromWorkflowInvocationName(workflowInvocationName: string) {
    return this.pathTemplates.workflowInvocationPathTemplate.match(
      workflowInvocationName
    ).location;
  }

  /**
   * Parse the repository from WorkflowInvocation resource.
   *
   * @param {string} workflowInvocationName
   *   A fully-qualified path representing WorkflowInvocation resource.
   * @returns {string} A string representing the repository.
   */
  matchRepositoryFromWorkflowInvocationName(workflowInvocationName: string) {
    return this.pathTemplates.workflowInvocationPathTemplate.match(
      workflowInvocationName
    ).repository;
  }

  /**
   * Parse the workflow_invocation from WorkflowInvocation resource.
   *
   * @param {string} workflowInvocationName
   *   A fully-qualified path representing WorkflowInvocation resource.
   * @returns {string} A string representing the workflow_invocation.
   */
  matchWorkflowInvocationFromWorkflowInvocationName(
    workflowInvocationName: string
  ) {
    return this.pathTemplates.workflowInvocationPathTemplate.match(
      workflowInvocationName
    ).workflow_invocation;
  }

  /**
   * Return a fully-qualified workspace resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} repository
   * @param {string} workspace
   * @returns {string} Resource name string.
   */
  workspacePath(
    project: string,
    location: string,
    repository: string,
    workspace: string
  ) {
    return this.pathTemplates.workspacePathTemplate.render({
      project: project,
      location: location,
      repository: repository,
      workspace: workspace,
    });
  }

  /**
   * Parse the project from Workspace resource.
   *
   * @param {string} workspaceName
   *   A fully-qualified path representing Workspace resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromWorkspaceName(workspaceName: string) {
    return this.pathTemplates.workspacePathTemplate.match(workspaceName)
      .project;
  }

  /**
   * Parse the location from Workspace resource.
   *
   * @param {string} workspaceName
   *   A fully-qualified path representing Workspace resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromWorkspaceName(workspaceName: string) {
    return this.pathTemplates.workspacePathTemplate.match(workspaceName)
      .location;
  }

  /**
   * Parse the repository from Workspace resource.
   *
   * @param {string} workspaceName
   *   A fully-qualified path representing Workspace resource.
   * @returns {string} A string representing the repository.
   */
  matchRepositoryFromWorkspaceName(workspaceName: string) {
    return this.pathTemplates.workspacePathTemplate.match(workspaceName)
      .repository;
  }

  /**
   * Parse the workspace from Workspace resource.
   *
   * @param {string} workspaceName
   *   A fully-qualified path representing Workspace resource.
   * @returns {string} A string representing the workspace.
   */
  matchWorkspaceFromWorkspaceName(workspaceName: string) {
    return this.pathTemplates.workspacePathTemplate.match(workspaceName)
      .workspace;
  }

  /**
   * Terminate the gRPC channel and close the client.
   *
   * The client will no longer be usable and all future behavior is undefined.
   * @returns {Promise} A promise that resolves when the client is closed.
   */
  close(): Promise<void> {
    if (this.dataformStub && !this._terminated) {
      return this.dataformStub.then(stub => {
        this._terminated = true;
        stub.close();
        this.iamClient.close();
        this.locationsClient.close();
      });
    }
    return Promise.resolve();
  }
}
