// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(parent) {
  // [START config_v1_generated_Config_ListDeployments_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The parent in whose context the Deployments are listed. The
   *  parent value is in the format:
   *  'projects/{project_id}/locations/{location}'.
   */
  // const parent = 'abc123'
  /**
   *  When requesting a page of resources, 'page_size' specifies number of
   *  resources to return. If unspecified or set to 0, all resources will be
   *  returned.
   */
  // const pageSize = 1234
  /**
   *  Token returned by previous call to 'ListDeployments' which specifies the
   *  position in the list from where to continue listing the resources.
   */
  // const pageToken = 'abc123'
  /**
   *  Lists the Deployments that match the filter expression. A filter
   *  expression filters the resources listed in the response. The expression
   *  must be of the form '{field} {operator} {value}' where operators: '<', '>',
   *  '<=', '>=', '!=', '=', ':' are supported (colon ':' represents a HAS
   *  operator which is roughly synonymous with equality). {field} can refer to a
   *  proto or JSON field, or a synthetic field. Field names can be camelCase or
   *  snake_case.
   *  Examples:
   *  - Filter by name:
   *    name = "projects/foo/locations/us-central1/deployments/bar
   *  - Filter by labels:
   *    - Resources that have a key called 'foo'
   *      labels.foo:*
   *    - Resources that have a key called 'foo' whose value is 'bar'
   *      labels.foo = bar
   *  - Filter by state:
   *    - Deployments in CREATING state.
   *      state=CREATING
   */
  // const filter = 'abc123'
  /**
   *  Field to use to sort the list.
   */
  // const orderBy = 'abc123'

  // Imports the Config library
  const {ConfigClient} = require('@google-cloud/config').v1;

  // Instantiates a client
  const configClient = new ConfigClient();

  async function callListDeployments() {
    // Construct request
    const request = {
      parent,
    };

    // Run request
    const iterable = await configClient.listDeploymentsAsync(request);
    for await (const response of iterable) {
        console.log(response);
    }
  }

  callListDeployments();
  // [END config_v1_generated_Config_ListDeployments_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
