// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(parent, promotion, dataSource) {
  // [START merchantapi_v1beta_generated_PromotionsService_InsertPromotion_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The account where the promotion will be inserted.
   *  Format: accounts/{account}
   */
  // const parent = 'abc123'
  /**
   *  Required. The promotion to insert.
   */
  // const promotion = {}
  /**
   *  Required. The data source of the
   *  promotion (https://support.google.com/merchants/answer/6396268?sjid=5155774230887277618-NC)
   *  Format:
   *  `accounts/{account}/dataSources/{datasource}`.
   */
  // const dataSource = 'abc123'

  // Imports the Promotions library
  const {PromotionsServiceClient} = require('@google-shopping/promotions').v1beta;

  // Instantiates a client
  const promotionsClient = new PromotionsServiceClient();

  async function callInsertPromotion() {
    // Construct request
    const request = {
      parent,
      promotion,
      dataSource,
    };

    // Run request
    const response = await promotionsClient.insertPromotion(request);
    console.log(response);
  }

  callInsertPromotion();
  // [END merchantapi_v1beta_generated_PromotionsService_InsertPromotion_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
