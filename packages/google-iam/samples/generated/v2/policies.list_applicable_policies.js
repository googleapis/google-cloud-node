// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(attachmentPoint) {
  // [START iam_v2_generated_Policies_ListApplicablePolicies_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The Cloud resource at which the applicable policies are to be
   *  retrieved. Format: `{attachment-point}` Use the URL-encoded full resource
   *  name, which means that the forward-slash character, `/`, must be written as
   *  `%2F`. For example,
   *  `cloudresourcemanager.googleapis.com%2Fprojects%2Fmy-project`.
   */
  // const attachmentPoint = 'abc123'
  /**
   *  Filtering currently only supports the kind of policies to return, and
   *  must be in the format “kind:policyKind1  OR kind:policyKind2 ”.  New
   *  policy kinds may be added in the future without notice.
   *  Example value: “kind:denyPolicies”
   */
  // const filter = 'abc123'
  /**
   *  If present, then retrieve the batch of results following the results from
   *  the preceding call to this method.  `page_token` must be the value of
   *  `next_page_token`
   *  ListApplicablePoliciesResponse.next_page_token google.iam.v2.ListApplicablePoliciesResponse.next_page_token 
   *  from the previous response.  The values of other method parameters should
   *  be identical to those in the previous call.
   */
  // const pageToken = 'abc123'
  /**
   *  Limit on the number of policies to include in the response.
   *  Further policies can subsequently be obtained by including the
   *  ListApplicablePoliciesResponse.next_page_token google.iam.admin.v1.ListApplicablePoliciesResponse.next_page_token 
   *  in a subsequent request.
   *  The minimum is 25, and the maximum is 100.
   */
  // const pageSize = 1234

  // Imports the Iam library
  const {PoliciesClient} = require('@google-cloud/iam').v2;

  // Instantiates a client
  const iamClient = new PoliciesClient();

  async function callListApplicablePolicies() {
    // Construct request
    const request = {
      attachmentPoint,
    };

    // Run request
    const iterable = await iamClient.listApplicablePoliciesAsync(request);
    for await (const response of iterable) {
        console.log(response);
    }
  }

  callListApplicablePolicies();
  // [END iam_v2_generated_Policies_ListApplicablePolicies_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
