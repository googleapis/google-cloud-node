{
  "nested": {
    "google": {
      "nested": {
        "protobuf": {
          "options": {
            "go_package": "google.golang.org/protobuf/types/descriptorpb",
            "java_package": "com.google.protobuf",
            "java_outer_classname": "DescriptorProtos",
            "csharp_namespace": "Google.Protobuf.Reflection",
            "objc_class_prefix": "GPB",
            "cc_enable_arenas": true,
            "optimize_for": "SPEED"
          },
          "nested": {
            "Timestamp": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "FileDescriptorSet": {
              "fields": {
                "file": {
                  "rule": "repeated",
                  "type": "FileDescriptorProto",
                  "id": 1
                }
              }
            },
            "FileDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "package": {
                  "type": "string",
                  "id": 2
                },
                "dependency": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 3
                },
                "publicDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 10,
                  "options": {
                    "packed": false
                  }
                },
                "weakDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 11,
                  "options": {
                    "packed": false
                  }
                },
                "messageType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 4
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 5
                },
                "service": {
                  "rule": "repeated",
                  "type": "ServiceDescriptorProto",
                  "id": 6
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 7
                },
                "options": {
                  "type": "FileOptions",
                  "id": 8
                },
                "sourceCodeInfo": {
                  "type": "SourceCodeInfo",
                  "id": 9
                },
                "syntax": {
                  "type": "string",
                  "id": 12
                },
                "edition": {
                  "type": "string",
                  "id": 13
                }
              }
            },
            "DescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "field": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 2
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 6
                },
                "nestedType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 3
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 4
                },
                "extensionRange": {
                  "rule": "repeated",
                  "type": "ExtensionRange",
                  "id": 5
                },
                "oneofDecl": {
                  "rule": "repeated",
                  "type": "OneofDescriptorProto",
                  "id": 8
                },
                "options": {
                  "type": "MessageOptions",
                  "id": 7
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "ReservedRange",
                  "id": 9
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 10
                }
              },
              "nested": {
                "ExtensionRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    },
                    "options": {
                      "type": "ExtensionRangeOptions",
                      "id": 3
                    }
                  }
                },
                "ReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "ExtensionRangeOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "FieldDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 3
                },
                "label": {
                  "type": "Label",
                  "id": 4
                },
                "type": {
                  "type": "Type",
                  "id": 5
                },
                "typeName": {
                  "type": "string",
                  "id": 6
                },
                "extendee": {
                  "type": "string",
                  "id": 2
                },
                "defaultValue": {
                  "type": "string",
                  "id": 7
                },
                "oneofIndex": {
                  "type": "int32",
                  "id": 9
                },
                "jsonName": {
                  "type": "string",
                  "id": 10
                },
                "options": {
                  "type": "FieldOptions",
                  "id": 8
                },
                "proto3Optional": {
                  "type": "bool",
                  "id": 17
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_DOUBLE": 1,
                    "TYPE_FLOAT": 2,
                    "TYPE_INT64": 3,
                    "TYPE_UINT64": 4,
                    "TYPE_INT32": 5,
                    "TYPE_FIXED64": 6,
                    "TYPE_FIXED32": 7,
                    "TYPE_BOOL": 8,
                    "TYPE_STRING": 9,
                    "TYPE_GROUP": 10,
                    "TYPE_MESSAGE": 11,
                    "TYPE_BYTES": 12,
                    "TYPE_UINT32": 13,
                    "TYPE_ENUM": 14,
                    "TYPE_SFIXED32": 15,
                    "TYPE_SFIXED64": 16,
                    "TYPE_SINT32": 17,
                    "TYPE_SINT64": 18
                  }
                },
                "Label": {
                  "values": {
                    "LABEL_OPTIONAL": 1,
                    "LABEL_REQUIRED": 2,
                    "LABEL_REPEATED": 3
                  }
                }
              }
            },
            "OneofDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "options": {
                  "type": "OneofOptions",
                  "id": 2
                }
              }
            },
            "EnumDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "rule": "repeated",
                  "type": "EnumValueDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "EnumOptions",
                  "id": 3
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "EnumReservedRange",
                  "id": 4
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 5
                }
              },
              "nested": {
                "EnumReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "EnumValueDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 2
                },
                "options": {
                  "type": "EnumValueOptions",
                  "id": 3
                }
              }
            },
            "ServiceDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "method": {
                  "rule": "repeated",
                  "type": "MethodDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "ServiceOptions",
                  "id": 3
                }
              }
            },
            "MethodDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "inputType": {
                  "type": "string",
                  "id": 2
                },
                "outputType": {
                  "type": "string",
                  "id": 3
                },
                "options": {
                  "type": "MethodOptions",
                  "id": 4
                },
                "clientStreaming": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "serverStreaming": {
                  "type": "bool",
                  "id": 6,
                  "options": {
                    "default": false
                  }
                }
              }
            },
            "FileOptions": {
              "fields": {
                "javaPackage": {
                  "type": "string",
                  "id": 1
                },
                "javaOuterClassname": {
                  "type": "string",
                  "id": 8
                },
                "javaMultipleFiles": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "javaGenerateEqualsAndHash": {
                  "type": "bool",
                  "id": 20,
                  "options": {
                    "deprecated": true
                  }
                },
                "javaStringCheckUtf8": {
                  "type": "bool",
                  "id": 27,
                  "options": {
                    "default": false
                  }
                },
                "optimizeFor": {
                  "type": "OptimizeMode",
                  "id": 9,
                  "options": {
                    "default": "SPEED"
                  }
                },
                "goPackage": {
                  "type": "string",
                  "id": 11
                },
                "ccGenericServices": {
                  "type": "bool",
                  "id": 16,
                  "options": {
                    "default": false
                  }
                },
                "javaGenericServices": {
                  "type": "bool",
                  "id": 17,
                  "options": {
                    "default": false
                  }
                },
                "pyGenericServices": {
                  "type": "bool",
                  "id": 18,
                  "options": {
                    "default": false
                  }
                },
                "phpGenericServices": {
                  "type": "bool",
                  "id": 42,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 23,
                  "options": {
                    "default": false
                  }
                },
                "ccEnableArenas": {
                  "type": "bool",
                  "id": 31,
                  "options": {
                    "default": true
                  }
                },
                "objcClassPrefix": {
                  "type": "string",
                  "id": 36
                },
                "csharpNamespace": {
                  "type": "string",
                  "id": 37
                },
                "swiftPrefix": {
                  "type": "string",
                  "id": 39
                },
                "phpClassPrefix": {
                  "type": "string",
                  "id": 40
                },
                "phpNamespace": {
                  "type": "string",
                  "id": 41
                },
                "phpMetadataNamespace": {
                  "type": "string",
                  "id": 44
                },
                "rubyPackage": {
                  "type": "string",
                  "id": 45
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  38,
                  38
                ]
              ],
              "nested": {
                "OptimizeMode": {
                  "values": {
                    "SPEED": 1,
                    "CODE_SIZE": 2,
                    "LITE_RUNTIME": 3
                  }
                }
              }
            },
            "MessageOptions": {
              "fields": {
                "messageSetWireFormat": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "noStandardDescriptorAccessor": {
                  "type": "bool",
                  "id": 2,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "mapEntry": {
                  "type": "bool",
                  "id": 7
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ],
                [
                  5,
                  5
                ],
                [
                  6,
                  6
                ],
                [
                  8,
                  8
                ],
                [
                  9,
                  9
                ]
              ]
            },
            "FieldOptions": {
              "fields": {
                "ctype": {
                  "type": "CType",
                  "id": 1,
                  "options": {
                    "default": "STRING"
                  }
                },
                "packed": {
                  "type": "bool",
                  "id": 2
                },
                "jstype": {
                  "type": "JSType",
                  "id": 6,
                  "options": {
                    "default": "JS_NORMAL"
                  }
                },
                "lazy": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "unverifiedLazy": {
                  "type": "bool",
                  "id": 15,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "weak": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ]
              ],
              "nested": {
                "CType": {
                  "values": {
                    "STRING": 0,
                    "CORD": 1,
                    "STRING_PIECE": 2
                  }
                },
                "JSType": {
                  "values": {
                    "JS_NORMAL": 0,
                    "JS_STRING": 1,
                    "JS_NUMBER": 2
                  }
                }
              }
            },
            "OneofOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "EnumOptions": {
              "fields": {
                "allowAlias": {
                  "type": "bool",
                  "id": 2
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  5,
                  5
                ]
              ]
            },
            "EnumValueOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "ServiceOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "MethodOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "idempotencyLevel": {
                  "type": "IdempotencyLevel",
                  "id": 34,
                  "options": {
                    "default": "IDEMPOTENCY_UNKNOWN"
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "nested": {
                "IdempotencyLevel": {
                  "values": {
                    "IDEMPOTENCY_UNKNOWN": 0,
                    "NO_SIDE_EFFECTS": 1,
                    "IDEMPOTENT": 2
                  }
                }
              }
            },
            "UninterpretedOption": {
              "fields": {
                "name": {
                  "rule": "repeated",
                  "type": "NamePart",
                  "id": 2
                },
                "identifierValue": {
                  "type": "string",
                  "id": 3
                },
                "positiveIntValue": {
                  "type": "uint64",
                  "id": 4
                },
                "negativeIntValue": {
                  "type": "int64",
                  "id": 5
                },
                "doubleValue": {
                  "type": "double",
                  "id": 6
                },
                "stringValue": {
                  "type": "bytes",
                  "id": 7
                },
                "aggregateValue": {
                  "type": "string",
                  "id": 8
                }
              },
              "nested": {
                "NamePart": {
                  "fields": {
                    "namePart": {
                      "rule": "required",
                      "type": "string",
                      "id": 1
                    },
                    "isExtension": {
                      "rule": "required",
                      "type": "bool",
                      "id": 2
                    }
                  }
                }
              }
            },
            "SourceCodeInfo": {
              "fields": {
                "location": {
                  "rule": "repeated",
                  "type": "Location",
                  "id": 1
                }
              },
              "nested": {
                "Location": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "span": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 2
                    },
                    "leadingComments": {
                      "type": "string",
                      "id": 3
                    },
                    "trailingComments": {
                      "type": "string",
                      "id": 4
                    },
                    "leadingDetachedComments": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 6
                    }
                  }
                }
              }
            },
            "GeneratedCodeInfo": {
              "fields": {
                "annotation": {
                  "rule": "repeated",
                  "type": "Annotation",
                  "id": 1
                }
              },
              "nested": {
                "Annotation": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "sourceFile": {
                      "type": "string",
                      "id": 2
                    },
                    "begin": {
                      "type": "int32",
                      "id": 3
                    },
                    "end": {
                      "type": "int32",
                      "id": 4
                    },
                    "semantic": {
                      "type": "Semantic",
                      "id": 5
                    }
                  },
                  "nested": {
                    "Semantic": {
                      "values": {
                        "NONE": 0,
                        "SET": 1,
                        "ALIAS": 2
                      }
                    }
                  }
                }
              }
            },
            "Duration": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "Any": {
              "fields": {
                "type_url": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "type": "bytes",
                  "id": 2
                }
              }
            },
            "Empty": {
              "fields": {}
            },
            "FieldMask": {
              "fields": {
                "paths": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 1
                }
              }
            }
          }
        },
        "cloud": {
          "nested": {
            "run": {
              "nested": {
                "v2": {
                  "options": {
                    "go_package": "google.golang.org/genproto/googleapis/cloud/run/v2;run",
                    "java_multiple_files": true,
                    "java_outer_classname": "TaskProto",
                    "java_package": "com.google.cloud.run.v2",
                    "(google.api.resource_definition).type": "vpcaccess.googleapis.com/Connector",
                    "(google.api.resource_definition).pattern": "projects/{project}/locations/{location}/connectors/{connector}"
                  },
                  "nested": {
                    "Condition": {
                      "oneofs": {
                        "reasons": {
                          "oneof": [
                            "reason",
                            "revisionReason",
                            "executionReason"
                          ]
                        }
                      },
                      "fields": {
                        "type": {
                          "type": "string",
                          "id": 1
                        },
                        "state": {
                          "type": "State",
                          "id": 2
                        },
                        "message": {
                          "type": "string",
                          "id": 3
                        },
                        "lastTransitionTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4
                        },
                        "severity": {
                          "type": "Severity",
                          "id": 5
                        },
                        "reason": {
                          "type": "CommonReason",
                          "id": 6
                        },
                        "revisionReason": {
                          "type": "RevisionReason",
                          "id": 9
                        },
                        "executionReason": {
                          "type": "ExecutionReason",
                          "id": 11
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "CONDITION_PENDING": 1,
                            "CONDITION_RECONCILING": 2,
                            "CONDITION_FAILED": 3,
                            "CONDITION_SUCCEEDED": 4
                          }
                        },
                        "Severity": {
                          "values": {
                            "SEVERITY_UNSPECIFIED": 0,
                            "ERROR": 1,
                            "WARNING": 2,
                            "INFO": 3
                          }
                        },
                        "CommonReason": {
                          "values": {
                            "COMMON_REASON_UNDEFINED": 0,
                            "UNKNOWN": 1,
                            "REVISION_FAILED": 3,
                            "PROGRESS_DEADLINE_EXCEEDED": 4,
                            "CONTAINER_MISSING": 6,
                            "CONTAINER_PERMISSION_DENIED": 7,
                            "CONTAINER_IMAGE_UNAUTHORIZED": 8,
                            "CONTAINER_IMAGE_AUTHORIZATION_CHECK_FAILED": 9,
                            "ENCRYPTION_KEY_PERMISSION_DENIED": 10,
                            "ENCRYPTION_KEY_CHECK_FAILED": 11,
                            "SECRETS_ACCESS_CHECK_FAILED": 12,
                            "WAITING_FOR_OPERATION": 13,
                            "IMMEDIATE_RETRY": 14,
                            "POSTPONED_RETRY": 15,
                            "INTERNAL": 16
                          }
                        },
                        "RevisionReason": {
                          "values": {
                            "REVISION_REASON_UNDEFINED": 0,
                            "PENDING": 1,
                            "RESERVE": 2,
                            "RETIRED": 3,
                            "RETIRING": 4,
                            "RECREATING": 5,
                            "HEALTH_CHECK_CONTAINER_ERROR": 6,
                            "CUSTOMIZED_PATH_RESPONSE_PENDING": 7,
                            "MIN_INSTANCES_NOT_PROVISIONED": 8,
                            "ACTIVE_REVISION_LIMIT_REACHED": 9,
                            "NO_DEPLOYMENT": 10,
                            "HEALTH_CHECK_SKIPPED": 11
                          }
                        },
                        "ExecutionReason": {
                          "values": {
                            "EXECUTION_REASON_UNDEFINED": 0,
                            "JOB_STATUS_SERVICE_POLLING_ERROR": 1,
                            "NON_ZERO_EXIT_CODE": 2,
                            "CANCELLED": 3
                          }
                        }
                      }
                    },
                    "Executions": {
                      "options": {
                        "(google.api.default_host)": "run.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "GetExecution": {
                          "requestType": "GetExecutionRequest",
                          "responseType": "Execution",
                          "options": {
                            "(google.api.http).get": "/v2/{name=projects/*/locations/*/jobs/*/executions/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{name=projects/*/locations/*/jobs/*/executions/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListExecutions": {
                          "requestType": "ListExecutionsRequest",
                          "responseType": "ListExecutionsResponse",
                          "options": {
                            "(google.api.http).get": "/v2/{parent=projects/*/locations/*/jobs/*}/executions",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{parent=projects/*/locations/*/jobs/*}/executions"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteExecution": {
                          "requestType": "DeleteExecutionRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v2/{name=projects/*/locations/*/jobs/*/executions/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "Execution",
                            "(google.longrunning.operation_info).metadata_type": "Execution"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v2/{name=projects/*/locations/*/jobs/*/executions/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Execution",
                                "metadata_type": "Execution"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "GetExecutionRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "run.googleapis.com/Execution"
                          }
                        }
                      }
                    },
                    "ListExecutionsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "run.googleapis.com/Execution"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "showDeleted": {
                          "type": "bool",
                          "id": 4
                        }
                      }
                    },
                    "ListExecutionsResponse": {
                      "fields": {
                        "executions": {
                          "rule": "repeated",
                          "type": "Execution",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteExecutionRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "run.googleapis.com/Execution"
                          }
                        },
                        "validateOnly": {
                          "type": "bool",
                          "id": 2
                        },
                        "etag": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "Execution": {
                      "options": {
                        "(google.api.resource).type": "run.googleapis.com/Execution",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/jobs/{job}/executions/{execution}",
                        "(google.api.resource).style": "DECLARATIVE_FRIENDLY"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "uid": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "generation": {
                          "type": "int64",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 4
                        },
                        "annotations": {
                          "keyType": "string",
                          "type": "string",
                          "id": 5
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 22,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "completionTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "deleteTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "expireTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "launchStage": {
                          "type": "google.api.LaunchStage",
                          "id": 11
                        },
                        "job": {
                          "type": "string",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "run.googleapis.com/Job"
                          }
                        },
                        "parallelism": {
                          "type": "int32",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "taskCount": {
                          "type": "int32",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "template": {
                          "type": "TaskTemplate",
                          "id": 15,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "reconciling": {
                          "type": "bool",
                          "id": 16,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "conditions": {
                          "rule": "repeated",
                          "type": "Condition",
                          "id": 17,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "observedGeneration": {
                          "type": "int64",
                          "id": 18,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "runningCount": {
                          "type": "int32",
                          "id": 19,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "succeededCount": {
                          "type": "int32",
                          "id": 20,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "failedCount": {
                          "type": "int32",
                          "id": 21,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 99,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "TaskTemplate": {
                      "oneofs": {
                        "retries": {
                          "oneof": [
                            "maxRetries"
                          ]
                        }
                      },
                      "fields": {
                        "containers": {
                          "rule": "repeated",
                          "type": "Container",
                          "id": 1
                        },
                        "volumes": {
                          "rule": "repeated",
                          "type": "Volume",
                          "id": 2
                        },
                        "maxRetries": {
                          "type": "int32",
                          "id": 3
                        },
                        "timeout": {
                          "type": "google.protobuf.Duration",
                          "id": 4
                        },
                        "serviceAccount": {
                          "type": "string",
                          "id": 5
                        },
                        "executionEnvironment": {
                          "type": "ExecutionEnvironment",
                          "id": 6
                        },
                        "encryptionKey": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.resource_reference).type": "cloudkms.googleapis.com/CryptoKey"
                          }
                        },
                        "vpcAccess": {
                          "type": "VpcAccess",
                          "id": 8
                        }
                      }
                    },
                    "Container": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "image": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "command": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        },
                        "args": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 4
                        },
                        "env": {
                          "rule": "repeated",
                          "type": "EnvVar",
                          "id": 5
                        },
                        "resources": {
                          "type": "ResourceRequirements",
                          "id": 6
                        },
                        "ports": {
                          "rule": "repeated",
                          "type": "ContainerPort",
                          "id": 7
                        },
                        "volumeMounts": {
                          "rule": "repeated",
                          "type": "VolumeMount",
                          "id": 8
                        },
                        "workingDir": {
                          "type": "string",
                          "id": 9
                        },
                        "livenessProbe": {
                          "type": "Probe",
                          "id": 10
                        },
                        "startupProbe": {
                          "type": "Probe",
                          "id": 11
                        }
                      }
                    },
                    "ResourceRequirements": {
                      "fields": {
                        "limits": {
                          "keyType": "string",
                          "type": "string",
                          "id": 1
                        },
                        "cpuIdle": {
                          "type": "bool",
                          "id": 2
                        }
                      }
                    },
                    "EnvVar": {
                      "oneofs": {
                        "values": {
                          "oneof": [
                            "value",
                            "valueSource"
                          ]
                        }
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "value": {
                          "type": "string",
                          "id": 2
                        },
                        "valueSource": {
                          "type": "EnvVarSource",
                          "id": 3
                        }
                      }
                    },
                    "EnvVarSource": {
                      "fields": {
                        "secretKeyRef": {
                          "type": "SecretKeySelector",
                          "id": 1
                        }
                      }
                    },
                    "SecretKeySelector": {
                      "fields": {
                        "secret": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "secretmanager.googleapis.com/Secret"
                          }
                        },
                        "version": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.resource_reference).type": "secretmanager.googleapis.com/SecretVersion"
                          }
                        }
                      }
                    },
                    "ContainerPort": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "containerPort": {
                          "type": "int32",
                          "id": 3
                        }
                      }
                    },
                    "VolumeMount": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "mountPath": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "Volume": {
                      "oneofs": {
                        "volumeType": {
                          "oneof": [
                            "secret",
                            "cloudSqlInstance"
                          ]
                        }
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "secret": {
                          "type": "SecretVolumeSource",
                          "id": 2
                        },
                        "cloudSqlInstance": {
                          "type": "CloudSqlInstance",
                          "id": 3
                        }
                      }
                    },
                    "SecretVolumeSource": {
                      "fields": {
                        "secret": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "items": {
                          "rule": "repeated",
                          "type": "VersionToPath",
                          "id": 2
                        },
                        "defaultMode": {
                          "type": "int32",
                          "id": 3
                        }
                      }
                    },
                    "VersionToPath": {
                      "fields": {
                        "path": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "version": {
                          "type": "string",
                          "id": 2
                        },
                        "mode": {
                          "type": "int32",
                          "id": 3
                        }
                      }
                    },
                    "CloudSqlInstance": {
                      "fields": {
                        "instances": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "Probe": {
                      "oneofs": {
                        "probeType": {
                          "oneof": [
                            "httpGet",
                            "tcpSocket",
                            "grpc"
                          ]
                        }
                      },
                      "fields": {
                        "initialDelaySeconds": {
                          "type": "int32",
                          "id": 1
                        },
                        "timeoutSeconds": {
                          "type": "int32",
                          "id": 2
                        },
                        "periodSeconds": {
                          "type": "int32",
                          "id": 3
                        },
                        "failureThreshold": {
                          "type": "int32",
                          "id": 4
                        },
                        "httpGet": {
                          "type": "HTTPGetAction",
                          "id": 5
                        },
                        "tcpSocket": {
                          "type": "TCPSocketAction",
                          "id": 6
                        },
                        "grpc": {
                          "type": "GRPCAction",
                          "id": 7
                        }
                      }
                    },
                    "HTTPGetAction": {
                      "fields": {
                        "path": {
                          "type": "string",
                          "id": 1
                        },
                        "httpHeaders": {
                          "rule": "repeated",
                          "type": "HTTPHeader",
                          "id": 4
                        }
                      }
                    },
                    "HTTPHeader": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "value": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "TCPSocketAction": {
                      "fields": {
                        "port": {
                          "type": "int32",
                          "id": 1
                        }
                      }
                    },
                    "GRPCAction": {
                      "fields": {
                        "port": {
                          "type": "int32",
                          "id": 1
                        },
                        "service": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "VpcAccess": {
                      "fields": {
                        "connector": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.resource_reference).type": "vpcaccess.googleapis.com/Connector"
                          }
                        },
                        "egress": {
                          "type": "VpcEgress",
                          "id": 2
                        }
                      },
                      "nested": {
                        "VpcEgress": {
                          "values": {
                            "VPC_EGRESS_UNSPECIFIED": 0,
                            "ALL_TRAFFIC": 1,
                            "PRIVATE_RANGES_ONLY": 2
                          }
                        }
                      }
                    },
                    "BinaryAuthorization": {
                      "oneofs": {
                        "binauthzMethod": {
                          "oneof": [
                            "useDefault"
                          ]
                        }
                      },
                      "fields": {
                        "useDefault": {
                          "type": "bool",
                          "id": 1
                        },
                        "breakglassJustification": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "RevisionScaling": {
                      "fields": {
                        "minInstanceCount": {
                          "type": "int32",
                          "id": 1
                        },
                        "maxInstanceCount": {
                          "type": "int32",
                          "id": 2
                        }
                      }
                    },
                    "IngressTraffic": {
                      "values": {
                        "INGRESS_TRAFFIC_UNSPECIFIED": 0,
                        "INGRESS_TRAFFIC_ALL": 1,
                        "INGRESS_TRAFFIC_INTERNAL_ONLY": 2,
                        "INGRESS_TRAFFIC_INTERNAL_LOAD_BALANCER": 3
                      }
                    },
                    "ExecutionEnvironment": {
                      "values": {
                        "EXECUTION_ENVIRONMENT_UNSPECIFIED": 0,
                        "EXECUTION_ENVIRONMENT_GEN1": 1,
                        "EXECUTION_ENVIRONMENT_GEN2": 2
                      }
                    },
                    "ExecutionTemplate": {
                      "fields": {
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 1
                        },
                        "annotations": {
                          "keyType": "string",
                          "type": "string",
                          "id": 2
                        },
                        "parallelism": {
                          "type": "int32",
                          "id": 3
                        },
                        "taskCount": {
                          "type": "int32",
                          "id": 4
                        },
                        "template": {
                          "type": "TaskTemplate",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "Jobs": {
                      "options": {
                        "(google.api.default_host)": "run.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateJob": {
                          "requestType": "CreateJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v2/{parent=projects/*/locations/*}/jobs",
                            "(google.api.http).body": "job",
                            "(google.api.method_signature)": "parent,job,job_id",
                            "(google.longrunning.operation_info).response_type": "Job",
                            "(google.longrunning.operation_info).metadata_type": "Job"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{parent=projects/*/locations/*}/jobs",
                                "body": "job"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,job,job_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Job",
                                "metadata_type": "Job"
                              }
                            }
                          ]
                        },
                        "GetJob": {
                          "requestType": "GetJobRequest",
                          "responseType": "Job",
                          "options": {
                            "(google.api.http).get": "/v2/{name=projects/*/locations/*/jobs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{name=projects/*/locations/*/jobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListJobs": {
                          "requestType": "ListJobsRequest",
                          "responseType": "ListJobsResponse",
                          "options": {
                            "(google.api.http).get": "/v2/{parent=projects/*/locations/*}/jobs",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{parent=projects/*/locations/*}/jobs"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "UpdateJob": {
                          "requestType": "UpdateJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v2/{job.name=projects/*/locations/*/jobs/*}",
                            "(google.api.http).body": "job",
                            "(google.api.method_signature)": "job",
                            "(google.longrunning.operation_info).response_type": "Job",
                            "(google.longrunning.operation_info).metadata_type": "Job"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v2/{job.name=projects/*/locations/*/jobs/*}",
                                "body": "job"
                              }
                            },
                            {
                              "(google.api.method_signature)": "job"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Job",
                                "metadata_type": "Job"
                              }
                            }
                          ]
                        },
                        "DeleteJob": {
                          "requestType": "DeleteJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v2/{name=projects/*/locations/*/jobs/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "Job",
                            "(google.longrunning.operation_info).metadata_type": "Job"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v2/{name=projects/*/locations/*/jobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Job",
                                "metadata_type": "Job"
                              }
                            }
                          ]
                        },
                        "RunJob": {
                          "requestType": "RunJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v2/{name=projects/*/locations/*/jobs/*}:run",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "Execution",
                            "(google.longrunning.operation_info).metadata_type": "Execution"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{name=projects/*/locations/*/jobs/*}:run",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Execution",
                                "metadata_type": "Execution"
                              }
                            }
                          ]
                        },
                        "GetIamPolicy": {
                          "requestType": "google.iam.v1.GetIamPolicyRequest",
                          "responseType": "google.iam.v1.Policy",
                          "options": {
                            "(google.api.http).get": "/v2/{resource=projects/*/locations/*/jobs/*}:getIamPolicy"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{resource=projects/*/locations/*/jobs/*}:getIamPolicy"
                              }
                            }
                          ]
                        },
                        "SetIamPolicy": {
                          "requestType": "google.iam.v1.SetIamPolicyRequest",
                          "responseType": "google.iam.v1.Policy",
                          "options": {
                            "(google.api.http).post": "/v2/{resource=projects/*/locations/*/jobs/*}:setIamPolicy",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{resource=projects/*/locations/*/jobs/*}:setIamPolicy",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "TestIamPermissions": {
                          "requestType": "google.iam.v1.TestIamPermissionsRequest",
                          "responseType": "google.iam.v1.TestIamPermissionsResponse",
                          "options": {
                            "(google.api.http).post": "/v2/{resource=projects/*/locations/*/jobs/*}:testIamPermissions",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{resource=projects/*/locations/*/jobs/*}:testIamPermissions",
                                "body": "*"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "CreateJobRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "run.googleapis.com/Job"
                          }
                        },
                        "job": {
                          "type": "Job",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "jobId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "validateOnly": {
                          "type": "bool",
                          "id": 4
                        }
                      }
                    },
                    "GetJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "run.googleapis.com/Job"
                          }
                        }
                      }
                    },
                    "UpdateJobRequest": {
                      "fields": {
                        "job": {
                          "type": "Job",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "validateOnly": {
                          "type": "bool",
                          "id": 3
                        },
                        "allowMissing": {
                          "type": "bool",
                          "id": 4
                        }
                      }
                    },
                    "ListJobsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "run.googleapis.com/Job"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "showDeleted": {
                          "type": "bool",
                          "id": 4
                        }
                      }
                    },
                    "ListJobsResponse": {
                      "fields": {
                        "jobs": {
                          "rule": "repeated",
                          "type": "Job",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "run.googleapis.com/Job"
                          }
                        },
                        "validateOnly": {
                          "type": "bool",
                          "id": 3
                        },
                        "etag": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "RunJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "run.googleapis.com/Job"
                          }
                        },
                        "validateOnly": {
                          "type": "bool",
                          "id": 2
                        },
                        "etag": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "Job": {
                      "options": {
                        "(google.api.resource).type": "run.googleapis.com/Job",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/jobs/{job}",
                        "(google.api.resource).style": "DECLARATIVE_FRIENDLY"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "uid": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "generation": {
                          "type": "int64",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 4
                        },
                        "annotations": {
                          "keyType": "string",
                          "type": "string",
                          "id": 5
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "deleteTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "expireTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "creator": {
                          "type": "string",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "lastModifier": {
                          "type": "string",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "client": {
                          "type": "string",
                          "id": 12
                        },
                        "clientVersion": {
                          "type": "string",
                          "id": 13
                        },
                        "launchStage": {
                          "type": "google.api.LaunchStage",
                          "id": 14
                        },
                        "binaryAuthorization": {
                          "type": "BinaryAuthorization",
                          "id": 15
                        },
                        "template": {
                          "type": "ExecutionTemplate",
                          "id": 16,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "observedGeneration": {
                          "type": "int64",
                          "id": 17,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "terminalCondition": {
                          "type": "Condition",
                          "id": 18,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "conditions": {
                          "rule": "repeated",
                          "type": "Condition",
                          "id": 19,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "executionCount": {
                          "type": "int32",
                          "id": 20,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "latestCreatedExecution": {
                          "type": "ExecutionReference",
                          "id": 22,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "reconciling": {
                          "type": "bool",
                          "id": 23,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 99,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "ExecutionReference": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.resource_reference).type": "run.googleapis.com/Execution"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2
                        },
                        "completionTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3
                        }
                      }
                    },
                    "Revisions": {
                      "options": {
                        "(google.api.default_host)": "run.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "GetRevision": {
                          "requestType": "GetRevisionRequest",
                          "responseType": "Revision",
                          "options": {
                            "(google.api.http).get": "/v2/{name=projects/*/locations/*/services/*/revisions/*}",
                            "(google.api.routing).routing_parameters.field": "name",
                            "(google.api.routing).routing_parameters.path_template": "projects/*/locations/{location=*}/**",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{name=projects/*/locations/*/services/*/revisions/*}"
                              }
                            },
                            {
                              "(google.api.routing)": {
                                "routing_parameters": {
                                  "field": "name",
                                  "path_template": "projects/*/locations/{location=*}/**"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListRevisions": {
                          "requestType": "ListRevisionsRequest",
                          "responseType": "ListRevisionsResponse",
                          "options": {
                            "(google.api.http).get": "/v2/{parent=projects/*/locations/*/services/*}/revisions",
                            "(google.api.routing).routing_parameters.field": "parent",
                            "(google.api.routing).routing_parameters.path_template": "projects/*/locations/{location=*}/**",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{parent=projects/*/locations/*/services/*}/revisions"
                              }
                            },
                            {
                              "(google.api.routing)": {
                                "routing_parameters": {
                                  "field": "parent",
                                  "path_template": "projects/*/locations/{location=*}/**"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteRevision": {
                          "requestType": "DeleteRevisionRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v2/{name=projects/*/locations/*/services/*/revisions/*}",
                            "(google.api.routing).routing_parameters.field": "name",
                            "(google.api.routing).routing_parameters.path_template": "projects/*/locations/{location=*}/**",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "Revision",
                            "(google.longrunning.operation_info).metadata_type": "Revision"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v2/{name=projects/*/locations/*/services/*/revisions/*}"
                              }
                            },
                            {
                              "(google.api.routing)": {
                                "routing_parameters": {
                                  "field": "name",
                                  "path_template": "projects/*/locations/{location=*}/**"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Revision",
                                "metadata_type": "Revision"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "GetRevisionRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "run.googleapis.com/Revision"
                          }
                        }
                      }
                    },
                    "ListRevisionsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "run.googleapis.com/Revision"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "showDeleted": {
                          "type": "bool",
                          "id": 4
                        }
                      }
                    },
                    "ListRevisionsResponse": {
                      "fields": {
                        "revisions": {
                          "rule": "repeated",
                          "type": "Revision",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteRevisionRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "run.googleapis.com/Revision"
                          }
                        },
                        "validateOnly": {
                          "type": "bool",
                          "id": 2
                        },
                        "etag": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "Revision": {
                      "options": {
                        "(google.api.resource).type": "run.googleapis.com/Revision",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/services/{service}/revisions/{revision}",
                        "(google.api.resource).style": "DECLARATIVE_FRIENDLY"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "uid": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "generation": {
                          "type": "int64",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 4
                        },
                        "annotations": {
                          "keyType": "string",
                          "type": "string",
                          "id": 5
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "deleteTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "expireTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "launchStage": {
                          "type": "google.api.LaunchStage",
                          "id": 10
                        },
                        "service": {
                          "type": "string",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "run.googleapis.com/Service"
                          }
                        },
                        "scaling": {
                          "type": "RevisionScaling",
                          "id": 12
                        },
                        "vpcAccess": {
                          "type": "VpcAccess",
                          "id": 13
                        },
                        "maxInstanceRequestConcurrency": {
                          "type": "int32",
                          "id": 34
                        },
                        "timeout": {
                          "type": "google.protobuf.Duration",
                          "id": 15
                        },
                        "serviceAccount": {
                          "type": "string",
                          "id": 16
                        },
                        "containers": {
                          "rule": "repeated",
                          "type": "Container",
                          "id": 17
                        },
                        "volumes": {
                          "rule": "repeated",
                          "type": "Volume",
                          "id": 18
                        },
                        "executionEnvironment": {
                          "type": "ExecutionEnvironment",
                          "id": 20
                        },
                        "encryptionKey": {
                          "type": "string",
                          "id": 21,
                          "options": {
                            "(google.api.resource_reference).type": "cloudkms.googleapis.com/CryptoKey"
                          }
                        },
                        "reconciling": {
                          "type": "bool",
                          "id": 30,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "conditions": {
                          "rule": "repeated",
                          "type": "Condition",
                          "id": 31,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "observedGeneration": {
                          "type": "int64",
                          "id": 32,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "logUri": {
                          "type": "string",
                          "id": 33,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 99,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "RevisionTemplate": {
                      "fields": {
                        "revision": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.resource_reference).type": "run.googleapis.com/Revision"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 2
                        },
                        "annotations": {
                          "keyType": "string",
                          "type": "string",
                          "id": 3
                        },
                        "scaling": {
                          "type": "RevisionScaling",
                          "id": 4
                        },
                        "vpcAccess": {
                          "type": "VpcAccess",
                          "id": 6
                        },
                        "timeout": {
                          "type": "google.protobuf.Duration",
                          "id": 8
                        },
                        "serviceAccount": {
                          "type": "string",
                          "id": 9
                        },
                        "containers": {
                          "rule": "repeated",
                          "type": "Container",
                          "id": 10
                        },
                        "volumes": {
                          "rule": "repeated",
                          "type": "Volume",
                          "id": 11
                        },
                        "executionEnvironment": {
                          "type": "ExecutionEnvironment",
                          "id": 13
                        },
                        "encryptionKey": {
                          "type": "string",
                          "id": 14,
                          "options": {
                            "(google.api.resource_reference).type": "cloudkms.googleapis.com/CryptoKey"
                          }
                        },
                        "maxInstanceRequestConcurrency": {
                          "type": "int32",
                          "id": 15
                        }
                      }
                    },
                    "Services": {
                      "options": {
                        "(google.api.default_host)": "run.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateService": {
                          "requestType": "CreateServiceRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v2/{parent=projects/*/locations/*}/services",
                            "(google.api.http).body": "service",
                            "(google.api.routing).routing_parameters.field": "parent",
                            "(google.api.routing).routing_parameters.path_template": "projects/*/locations/{location=*}",
                            "(google.api.method_signature)": "parent,service,service_id",
                            "(google.longrunning.operation_info).response_type": "Service",
                            "(google.longrunning.operation_info).metadata_type": "Service"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{parent=projects/*/locations/*}/services",
                                "body": "service"
                              }
                            },
                            {
                              "(google.api.routing)": {
                                "routing_parameters": {
                                  "field": "parent",
                                  "path_template": "projects/*/locations/{location=*}"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,service,service_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Service",
                                "metadata_type": "Service"
                              }
                            }
                          ]
                        },
                        "GetService": {
                          "requestType": "GetServiceRequest",
                          "responseType": "Service",
                          "options": {
                            "(google.api.http).get": "/v2/{name=projects/*/locations/*/services/*}",
                            "(google.api.routing).routing_parameters.field": "name",
                            "(google.api.routing).routing_parameters.path_template": "projects/*/locations/{location=*}/**",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{name=projects/*/locations/*/services/*}"
                              }
                            },
                            {
                              "(google.api.routing)": {
                                "routing_parameters": {
                                  "field": "name",
                                  "path_template": "projects/*/locations/{location=*}/**"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListServices": {
                          "requestType": "ListServicesRequest",
                          "responseType": "ListServicesResponse",
                          "options": {
                            "(google.api.http).get": "/v2/{parent=projects/*/locations/*}/services",
                            "(google.api.routing).routing_parameters.field": "parent",
                            "(google.api.routing).routing_parameters.path_template": "projects/*/locations/{location=*}",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{parent=projects/*/locations/*}/services"
                              }
                            },
                            {
                              "(google.api.routing)": {
                                "routing_parameters": {
                                  "field": "parent",
                                  "path_template": "projects/*/locations/{location=*}"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "UpdateService": {
                          "requestType": "UpdateServiceRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v2/{service.name=projects/*/locations/*/services/*}",
                            "(google.api.http).body": "service",
                            "(google.api.routing).routing_parameters.field": "service.name",
                            "(google.api.routing).routing_parameters.path_template": "projects/*/locations/{location=*}/**",
                            "(google.api.method_signature)": "service",
                            "(google.longrunning.operation_info).response_type": "Service",
                            "(google.longrunning.operation_info).metadata_type": "Service"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v2/{service.name=projects/*/locations/*/services/*}",
                                "body": "service"
                              }
                            },
                            {
                              "(google.api.routing)": {
                                "routing_parameters": {
                                  "field": "service.name",
                                  "path_template": "projects/*/locations/{location=*}/**"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "service"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Service",
                                "metadata_type": "Service"
                              }
                            }
                          ]
                        },
                        "DeleteService": {
                          "requestType": "DeleteServiceRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v2/{name=projects/*/locations/*/services/*}",
                            "(google.api.routing).routing_parameters.field": "name",
                            "(google.api.routing).routing_parameters.path_template": "projects/*/locations/{location=*}/**",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "Service",
                            "(google.longrunning.operation_info).metadata_type": "Service"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v2/{name=projects/*/locations/*/services/*}"
                              }
                            },
                            {
                              "(google.api.routing)": {
                                "routing_parameters": {
                                  "field": "name",
                                  "path_template": "projects/*/locations/{location=*}/**"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Service",
                                "metadata_type": "Service"
                              }
                            }
                          ]
                        },
                        "GetIamPolicy": {
                          "requestType": "google.iam.v1.GetIamPolicyRequest",
                          "responseType": "google.iam.v1.Policy",
                          "options": {
                            "(google.api.http).get": "/v2/{resource=projects/*/locations/*/services/*}:getIamPolicy"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{resource=projects/*/locations/*/services/*}:getIamPolicy"
                              }
                            }
                          ]
                        },
                        "SetIamPolicy": {
                          "requestType": "google.iam.v1.SetIamPolicyRequest",
                          "responseType": "google.iam.v1.Policy",
                          "options": {
                            "(google.api.http).post": "/v2/{resource=projects/*/locations/*/services/*}:setIamPolicy",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{resource=projects/*/locations/*/services/*}:setIamPolicy",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "TestIamPermissions": {
                          "requestType": "google.iam.v1.TestIamPermissionsRequest",
                          "responseType": "google.iam.v1.TestIamPermissionsResponse",
                          "options": {
                            "(google.api.http).post": "/v2/{resource=projects/*/locations/*/services/*}:testIamPermissions",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{resource=projects/*/locations/*/services/*}:testIamPermissions",
                                "body": "*"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "CreateServiceRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "run.googleapis.com/Service"
                          }
                        },
                        "service": {
                          "type": "Service",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "serviceId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "validateOnly": {
                          "type": "bool",
                          "id": 4
                        }
                      }
                    },
                    "UpdateServiceRequest": {
                      "fields": {
                        "service": {
                          "type": "Service",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "validateOnly": {
                          "type": "bool",
                          "id": 3
                        },
                        "allowMissing": {
                          "type": "bool",
                          "id": 4
                        }
                      }
                    },
                    "ListServicesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "run.googleapis.com/Service"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "showDeleted": {
                          "type": "bool",
                          "id": 4
                        }
                      }
                    },
                    "ListServicesResponse": {
                      "fields": {
                        "services": {
                          "rule": "repeated",
                          "type": "Service",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GetServiceRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "run.googleapis.com/Service"
                          }
                        }
                      }
                    },
                    "DeleteServiceRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "run.googleapis.com/Service"
                          }
                        },
                        "validateOnly": {
                          "type": "bool",
                          "id": 2
                        },
                        "etag": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "Service": {
                      "options": {
                        "(google.api.resource).type": "run.googleapis.com/Service",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/services/{service}",
                        "(google.api.resource).style": "DECLARATIVE_FRIENDLY"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "description": {
                          "type": "string",
                          "id": 2
                        },
                        "uid": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "generation": {
                          "type": "int64",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 5
                        },
                        "annotations": {
                          "keyType": "string",
                          "type": "string",
                          "id": 6
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "deleteTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "expireTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "creator": {
                          "type": "string",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "lastModifier": {
                          "type": "string",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "client": {
                          "type": "string",
                          "id": 13
                        },
                        "clientVersion": {
                          "type": "string",
                          "id": 14
                        },
                        "ingress": {
                          "type": "IngressTraffic",
                          "id": 15
                        },
                        "launchStage": {
                          "type": "google.api.LaunchStage",
                          "id": 16
                        },
                        "binaryAuthorization": {
                          "type": "BinaryAuthorization",
                          "id": 17
                        },
                        "template": {
                          "type": "RevisionTemplate",
                          "id": 18,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "traffic": {
                          "rule": "repeated",
                          "type": "TrafficTarget",
                          "id": 19
                        },
                        "observedGeneration": {
                          "type": "int64",
                          "id": 30,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "terminalCondition": {
                          "type": "Condition",
                          "id": 31,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "conditions": {
                          "rule": "repeated",
                          "type": "Condition",
                          "id": 32,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "latestReadyRevision": {
                          "type": "string",
                          "id": 33,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "run.googleapis.com/Revision"
                          }
                        },
                        "latestCreatedRevision": {
                          "type": "string",
                          "id": 34,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "run.googleapis.com/Revision"
                          }
                        },
                        "trafficStatuses": {
                          "rule": "repeated",
                          "type": "TrafficTargetStatus",
                          "id": 35,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "uri": {
                          "type": "string",
                          "id": 36,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "reconciling": {
                          "type": "bool",
                          "id": 98,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 99,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "TrafficTarget": {
                      "fields": {
                        "type": {
                          "type": "TrafficTargetAllocationType",
                          "id": 1
                        },
                        "revision": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.resource_reference).type": "run.googleapis.com/Revision"
                          }
                        },
                        "percent": {
                          "type": "int32",
                          "id": 3
                        },
                        "tag": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "TrafficTargetStatus": {
                      "fields": {
                        "type": {
                          "type": "TrafficTargetAllocationType",
                          "id": 1
                        },
                        "revision": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.resource_reference).type": "run.googleapis.com/Revision"
                          }
                        },
                        "percent": {
                          "type": "int32",
                          "id": 3
                        },
                        "tag": {
                          "type": "string",
                          "id": 4
                        },
                        "uri": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "TrafficTargetAllocationType": {
                      "values": {
                        "TRAFFIC_TARGET_ALLOCATION_TYPE_UNSPECIFIED": 0,
                        "TRAFFIC_TARGET_ALLOCATION_TYPE_LATEST": 1,
                        "TRAFFIC_TARGET_ALLOCATION_TYPE_REVISION": 2
                      }
                    },
                    "Tasks": {
                      "options": {
                        "(google.api.default_host)": "run.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "GetTask": {
                          "requestType": "GetTaskRequest",
                          "responseType": "Task",
                          "options": {
                            "(google.api.http).get": "/v2/{name=projects/*/locations/*/jobs/*/executions/*/tasks/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{name=projects/*/locations/*/jobs/*/executions/*/tasks/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListTasks": {
                          "requestType": "ListTasksRequest",
                          "responseType": "ListTasksResponse",
                          "options": {
                            "(google.api.http).get": "/v2/{parent=projects/*/locations/*/jobs/*/executions/*}/tasks",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{parent=projects/*/locations/*/jobs/*/executions/*}/tasks"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        }
                      }
                    },
                    "GetTaskRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "run.googleapis.com/Task"
                          }
                        }
                      }
                    },
                    "ListTasksRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "run.googleapis.com/Task"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "showDeleted": {
                          "type": "bool",
                          "id": 4
                        }
                      }
                    },
                    "ListTasksResponse": {
                      "fields": {
                        "tasks": {
                          "rule": "repeated",
                          "type": "Task",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "Task": {
                      "options": {
                        "(google.api.resource).type": "run.googleapis.com/Task",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/jobs/{job}/executions/{execution}/tasks/{task}",
                        "(google.api.resource).style": "DECLARATIVE_FRIENDLY"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "uid": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "generation": {
                          "type": "int64",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 4
                        },
                        "annotations": {
                          "keyType": "string",
                          "type": "string",
                          "id": 5
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 27,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "completionTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "deleteTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "expireTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "job": {
                          "type": "string",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "run.googleapis.com/Job"
                          }
                        },
                        "execution": {
                          "type": "string",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "run.googleapis.com/Execution"
                          }
                        },
                        "containers": {
                          "rule": "repeated",
                          "type": "Container",
                          "id": 14
                        },
                        "volumes": {
                          "rule": "repeated",
                          "type": "Volume",
                          "id": 15
                        },
                        "maxRetries": {
                          "type": "int32",
                          "id": 16
                        },
                        "timeout": {
                          "type": "google.protobuf.Duration",
                          "id": 17
                        },
                        "serviceAccount": {
                          "type": "string",
                          "id": 18
                        },
                        "executionEnvironment": {
                          "type": "ExecutionEnvironment",
                          "id": 20
                        },
                        "reconciling": {
                          "type": "bool",
                          "id": 21,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "conditions": {
                          "rule": "repeated",
                          "type": "Condition",
                          "id": 22,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "observedGeneration": {
                          "type": "int64",
                          "id": 23,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "index": {
                          "type": "int32",
                          "id": 24,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "retried": {
                          "type": "int32",
                          "id": 25,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "lastAttemptResult": {
                          "type": "TaskAttemptResult",
                          "id": 26,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "encryptionKey": {
                          "type": "string",
                          "id": 28,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "cloudkms.googleapis.com/CryptoKey"
                          }
                        },
                        "vpcAccess": {
                          "type": "VpcAccess",
                          "id": 29,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 99,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "TaskAttemptResult": {
                      "fields": {
                        "status": {
                          "type": "google.rpc.Status",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "exitCode": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "api": {
          "options": {
            "go_package": "google.golang.org/genproto/googleapis/api/annotations;annotations",
            "java_multiple_files": true,
            "java_outer_classname": "RoutingProto",
            "java_package": "com.google.api",
            "objc_class_prefix": "GAPI",
            "cc_enable_arenas": true
          },
          "nested": {
            "http": {
              "type": "HttpRule",
              "id": 72295728,
              "extend": "google.protobuf.MethodOptions"
            },
            "Http": {
              "fields": {
                "rules": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 1
                },
                "fullyDecodeReservedExpansion": {
                  "type": "bool",
                  "id": 2
                }
              }
            },
            "HttpRule": {
              "oneofs": {
                "pattern": {
                  "oneof": [
                    "get",
                    "put",
                    "post",
                    "delete",
                    "patch",
                    "custom"
                  ]
                }
              },
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "get": {
                  "type": "string",
                  "id": 2
                },
                "put": {
                  "type": "string",
                  "id": 3
                },
                "post": {
                  "type": "string",
                  "id": 4
                },
                "delete": {
                  "type": "string",
                  "id": 5
                },
                "patch": {
                  "type": "string",
                  "id": 6
                },
                "custom": {
                  "type": "CustomHttpPattern",
                  "id": 8
                },
                "body": {
                  "type": "string",
                  "id": 7
                },
                "responseBody": {
                  "type": "string",
                  "id": 12
                },
                "additionalBindings": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 11
                }
              }
            },
            "CustomHttpPattern": {
              "fields": {
                "kind": {
                  "type": "string",
                  "id": 1
                },
                "path": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "methodSignature": {
              "rule": "repeated",
              "type": "string",
              "id": 1051,
              "extend": "google.protobuf.MethodOptions"
            },
            "defaultHost": {
              "type": "string",
              "id": 1049,
              "extend": "google.protobuf.ServiceOptions"
            },
            "oauthScopes": {
              "type": "string",
              "id": 1050,
              "extend": "google.protobuf.ServiceOptions"
            },
            "fieldBehavior": {
              "rule": "repeated",
              "type": "google.api.FieldBehavior",
              "id": 1052,
              "extend": "google.protobuf.FieldOptions"
            },
            "FieldBehavior": {
              "values": {
                "FIELD_BEHAVIOR_UNSPECIFIED": 0,
                "OPTIONAL": 1,
                "REQUIRED": 2,
                "OUTPUT_ONLY": 3,
                "INPUT_ONLY": 4,
                "IMMUTABLE": 5,
                "UNORDERED_LIST": 6,
                "NON_EMPTY_DEFAULT": 7
              }
            },
            "LaunchStage": {
              "values": {
                "LAUNCH_STAGE_UNSPECIFIED": 0,
                "UNIMPLEMENTED": 6,
                "PRELAUNCH": 7,
                "EARLY_ACCESS": 1,
                "ALPHA": 2,
                "BETA": 3,
                "GA": 4,
                "DEPRECATED": 5
              }
            },
            "resourceReference": {
              "type": "google.api.ResourceReference",
              "id": 1055,
              "extend": "google.protobuf.FieldOptions"
            },
            "resourceDefinition": {
              "rule": "repeated",
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.FileOptions"
            },
            "resource": {
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.MessageOptions"
            },
            "ResourceDescriptor": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "pattern": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 2
                },
                "nameField": {
                  "type": "string",
                  "id": 3
                },
                "history": {
                  "type": "History",
                  "id": 4
                },
                "plural": {
                  "type": "string",
                  "id": 5
                },
                "singular": {
                  "type": "string",
                  "id": 6
                },
                "style": {
                  "rule": "repeated",
                  "type": "Style",
                  "id": 10
                }
              },
              "nested": {
                "History": {
                  "values": {
                    "HISTORY_UNSPECIFIED": 0,
                    "ORIGINALLY_SINGLE_PATTERN": 1,
                    "FUTURE_MULTI_PATTERN": 2
                  }
                },
                "Style": {
                  "values": {
                    "STYLE_UNSPECIFIED": 0,
                    "DECLARATIVE_FRIENDLY": 1
                  }
                }
              }
            },
            "ResourceReference": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "childType": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "routing": {
              "type": "google.api.RoutingRule",
              "id": 72295729,
              "extend": "google.protobuf.MethodOptions"
            },
            "RoutingRule": {
              "fields": {
                "routingParameters": {
                  "rule": "repeated",
                  "type": "RoutingParameter",
                  "id": 2
                }
              }
            },
            "RoutingParameter": {
              "fields": {
                "field": {
                  "type": "string",
                  "id": 1
                },
                "pathTemplate": {
                  "type": "string",
                  "id": 2
                }
              }
            }
          }
        },
        "longrunning": {
          "options": {
            "cc_enable_arenas": true,
            "csharp_namespace": "Google.LongRunning",
            "go_package": "google.golang.org/genproto/googleapis/longrunning;longrunning",
            "java_multiple_files": true,
            "java_outer_classname": "OperationsProto",
            "java_package": "com.google.longrunning",
            "php_namespace": "Google\\LongRunning"
          },
          "nested": {
            "operationInfo": {
              "type": "google.longrunning.OperationInfo",
              "id": 1049,
              "extend": "google.protobuf.MethodOptions"
            },
            "Operations": {
              "options": {
                "(google.api.default_host)": "longrunning.googleapis.com"
              },
              "methods": {
                "ListOperations": {
                  "requestType": "ListOperationsRequest",
                  "responseType": "ListOperationsResponse",
                  "options": {
                    "(google.api.http).get": "/v1/{name=operations}",
                    "(google.api.method_signature)": "name,filter"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "get": "/v1/{name=operations}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name,filter"
                    }
                  ]
                },
                "GetOperation": {
                  "requestType": "GetOperationRequest",
                  "responseType": "Operation",
                  "options": {
                    "(google.api.http).get": "/v1/{name=operations/**}",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "get": "/v1/{name=operations/**}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "DeleteOperation": {
                  "requestType": "DeleteOperationRequest",
                  "responseType": "google.protobuf.Empty",
                  "options": {
                    "(google.api.http).delete": "/v1/{name=operations/**}",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "delete": "/v1/{name=operations/**}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "CancelOperation": {
                  "requestType": "CancelOperationRequest",
                  "responseType": "google.protobuf.Empty",
                  "options": {
                    "(google.api.http).post": "/v1/{name=operations/**}:cancel",
                    "(google.api.http).body": "*",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "post": "/v1/{name=operations/**}:cancel",
                        "body": "*"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "WaitOperation": {
                  "requestType": "WaitOperationRequest",
                  "responseType": "Operation"
                }
              }
            },
            "Operation": {
              "oneofs": {
                "result": {
                  "oneof": [
                    "error",
                    "response"
                  ]
                }
              },
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "metadata": {
                  "type": "google.protobuf.Any",
                  "id": 2
                },
                "done": {
                  "type": "bool",
                  "id": 3
                },
                "error": {
                  "type": "google.rpc.Status",
                  "id": 4
                },
                "response": {
                  "type": "google.protobuf.Any",
                  "id": 5
                }
              }
            },
            "GetOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "ListOperationsRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 4
                },
                "filter": {
                  "type": "string",
                  "id": 1
                },
                "pageSize": {
                  "type": "int32",
                  "id": 2
                },
                "pageToken": {
                  "type": "string",
                  "id": 3
                }
              }
            },
            "ListOperationsResponse": {
              "fields": {
                "operations": {
                  "rule": "repeated",
                  "type": "Operation",
                  "id": 1
                },
                "nextPageToken": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "CancelOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "DeleteOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "WaitOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "timeout": {
                  "type": "google.protobuf.Duration",
                  "id": 2
                }
              }
            },
            "OperationInfo": {
              "fields": {
                "responseType": {
                  "type": "string",
                  "id": 1
                },
                "metadataType": {
                  "type": "string",
                  "id": 2
                }
              }
            }
          }
        },
        "rpc": {
          "options": {
            "cc_enable_arenas": true,
            "go_package": "google.golang.org/genproto/googleapis/rpc/status;status",
            "java_multiple_files": true,
            "java_outer_classname": "StatusProto",
            "java_package": "com.google.rpc",
            "objc_class_prefix": "RPC"
          },
          "nested": {
            "Status": {
              "fields": {
                "code": {
                  "type": "int32",
                  "id": 1
                },
                "message": {
                  "type": "string",
                  "id": 2
                },
                "details": {
                  "rule": "repeated",
                  "type": "google.protobuf.Any",
                  "id": 3
                }
              }
            }
          }
        },
        "iam": {
          "nested": {
            "v1": {
              "options": {
                "cc_enable_arenas": true,
                "csharp_namespace": "Google.Cloud.Iam.V1",
                "go_package": "google.golang.org/genproto/googleapis/iam/v1;iam",
                "java_multiple_files": true,
                "java_outer_classname": "PolicyProto",
                "java_package": "com.google.iam.v1",
                "php_namespace": "Google\\Cloud\\Iam\\V1"
              },
              "nested": {
                "IAMPolicy": {
                  "options": {
                    "(google.api.default_host)": "iam-meta-api.googleapis.com"
                  },
                  "methods": {
                    "SetIamPolicy": {
                      "requestType": "SetIamPolicyRequest",
                      "responseType": "Policy",
                      "options": {
                        "(google.api.http).post": "/v1/{resource=**}:setIamPolicy",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{resource=**}:setIamPolicy",
                            "body": "*"
                          }
                        }
                      ]
                    },
                    "GetIamPolicy": {
                      "requestType": "GetIamPolicyRequest",
                      "responseType": "Policy",
                      "options": {
                        "(google.api.http).post": "/v1/{resource=**}:getIamPolicy",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{resource=**}:getIamPolicy",
                            "body": "*"
                          }
                        }
                      ]
                    },
                    "TestIamPermissions": {
                      "requestType": "TestIamPermissionsRequest",
                      "responseType": "TestIamPermissionsResponse",
                      "options": {
                        "(google.api.http).post": "/v1/{resource=**}:testIamPermissions",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{resource=**}:testIamPermissions",
                            "body": "*"
                          }
                        }
                      ]
                    }
                  }
                },
                "SetIamPolicyRequest": {
                  "fields": {
                    "resource": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "*"
                      }
                    },
                    "policy": {
                      "type": "Policy",
                      "id": 2,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    },
                    "updateMask": {
                      "type": "google.protobuf.FieldMask",
                      "id": 3
                    }
                  }
                },
                "GetIamPolicyRequest": {
                  "fields": {
                    "resource": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "*"
                      }
                    },
                    "options": {
                      "type": "GetPolicyOptions",
                      "id": 2
                    }
                  }
                },
                "TestIamPermissionsRequest": {
                  "fields": {
                    "resource": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "*"
                      }
                    },
                    "permissions": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 2,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    }
                  }
                },
                "TestIamPermissionsResponse": {
                  "fields": {
                    "permissions": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 1
                    }
                  }
                },
                "GetPolicyOptions": {
                  "fields": {
                    "requestedPolicyVersion": {
                      "type": "int32",
                      "id": 1
                    }
                  }
                },
                "Policy": {
                  "fields": {
                    "version": {
                      "type": "int32",
                      "id": 1
                    },
                    "bindings": {
                      "rule": "repeated",
                      "type": "Binding",
                      "id": 4
                    },
                    "auditConfigs": {
                      "rule": "repeated",
                      "type": "AuditConfig",
                      "id": 6
                    },
                    "etag": {
                      "type": "bytes",
                      "id": 3
                    }
                  }
                },
                "Binding": {
                  "fields": {
                    "role": {
                      "type": "string",
                      "id": 1
                    },
                    "members": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 2
                    },
                    "condition": {
                      "type": "google.type.Expr",
                      "id": 3
                    }
                  }
                },
                "AuditConfig": {
                  "fields": {
                    "service": {
                      "type": "string",
                      "id": 1
                    },
                    "auditLogConfigs": {
                      "rule": "repeated",
                      "type": "AuditLogConfig",
                      "id": 3
                    }
                  }
                },
                "AuditLogConfig": {
                  "fields": {
                    "logType": {
                      "type": "LogType",
                      "id": 1
                    },
                    "exemptedMembers": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 2
                    }
                  },
                  "nested": {
                    "LogType": {
                      "values": {
                        "LOG_TYPE_UNSPECIFIED": 0,
                        "ADMIN_READ": 1,
                        "DATA_WRITE": 2,
                        "DATA_READ": 3
                      }
                    }
                  }
                },
                "PolicyDelta": {
                  "fields": {
                    "bindingDeltas": {
                      "rule": "repeated",
                      "type": "BindingDelta",
                      "id": 1
                    },
                    "auditConfigDeltas": {
                      "rule": "repeated",
                      "type": "AuditConfigDelta",
                      "id": 2
                    }
                  }
                },
                "BindingDelta": {
                  "fields": {
                    "action": {
                      "type": "Action",
                      "id": 1
                    },
                    "role": {
                      "type": "string",
                      "id": 2
                    },
                    "member": {
                      "type": "string",
                      "id": 3
                    },
                    "condition": {
                      "type": "google.type.Expr",
                      "id": 4
                    }
                  },
                  "nested": {
                    "Action": {
                      "values": {
                        "ACTION_UNSPECIFIED": 0,
                        "ADD": 1,
                        "REMOVE": 2
                      }
                    }
                  }
                },
                "AuditConfigDelta": {
                  "fields": {
                    "action": {
                      "type": "Action",
                      "id": 1
                    },
                    "service": {
                      "type": "string",
                      "id": 2
                    },
                    "exemptedMember": {
                      "type": "string",
                      "id": 3
                    },
                    "logType": {
                      "type": "string",
                      "id": 4
                    }
                  },
                  "nested": {
                    "Action": {
                      "values": {
                        "ACTION_UNSPECIFIED": 0,
                        "ADD": 1,
                        "REMOVE": 2
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "type": {
          "options": {
            "go_package": "google.golang.org/genproto/googleapis/type/expr;expr",
            "java_multiple_files": true,
            "java_outer_classname": "ExprProto",
            "java_package": "com.google.type",
            "objc_class_prefix": "GTP"
          },
          "nested": {
            "Expr": {
              "fields": {
                "expression": {
                  "type": "string",
                  "id": 1
                },
                "title": {
                  "type": "string",
                  "id": 2
                },
                "description": {
                  "type": "string",
                  "id": 3
                },
                "location": {
                  "type": "string",
                  "id": 4
                }
              }
            }
          }
        }
      }
    }
  }
}